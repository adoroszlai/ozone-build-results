<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210202 15:22:30.936" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:18:25.455" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:18:37.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:18:37.059" level="INFO">${output} = 2021-02-02 15:18:27,279 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-02 15:18:27,428 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210202 15:18:37.059" starttime="20210202 15:18:25.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:18:37.061" level="INFO">2021-02-02 15:18:27,279 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-02 15:18:27,428 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-02 15:18:27,428 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-02 15:18:27,582 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-02 15:18:27,604 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:28,616 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:29,618 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:29,908 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-02 15:18:30,406 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-02 15:18:30,619 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:31,619 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:32,620 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:32,967 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-02 15:18:33,511 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 15:18:33,512 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-0B65F76E139B-&gt;020d22ec-44aa-4158-90a7-4c32cf364610
2021-02-02 15:18:33,512 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 15:18:33,620 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:34,620 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:35,621 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:36,621 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-02 15:18:36,732 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5790.48988, max=5790.48988, mean=5790.48988, stddev=0.0, median=5790.48988, p75=5790.48988, p95=5790.48988, p98=5790.48988, p99=5790.48988, p999=5790.48988, mean_rate=0.16429743351720083, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-02 15:18:36,732 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2021-02-02 15:18:36,732 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-02 15:18:36,732 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210202 15:18:37.061" starttime="20210202 15:18:37.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:18:37.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:18:37.062" starttime="20210202 15:18:37.061"></status>
</kw>
<status status="PASS" endtime="20210202 15:18:37.062" starttime="20210202 15:18:25.449"></status>
</kw>
<msg timestamp="20210202 15:18:37.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:18:37.063" starttime="20210202 15:18:25.448"></status>
</kw>
<msg timestamp="20210202 15:18:37.063" level="INFO">${result} = 2021-02-02 15:18:27,279 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-02 15:18:27,428 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210202 15:18:37.063" starttime="20210202 15:18:25.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210202 15:18:37.064" starttime="20210202 15:18:37.063"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210202 15:18:37.064" critical="yes" starttime="20210202 15:18:25.447"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:18:37.070" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:18:41.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:18:41.771" level="INFO">${output} = 2021-02-02 15:18:38,761 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-02 15:18:38,920 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210202 15:18:41.771" starttime="20210202 15:18:37.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:18:41.772" level="INFO">2021-02-02 15:18:38,761 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-02 15:18:38,920 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-02 15:18:38,920 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-02 15:18:39,090 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-02-02 15:18:39,111 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:40,120 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:41,121 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-02 15:18:41,721 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=234.490339, max=234.490339, mean=234.490339, stddev=0.0, median=234.490339, p75=234.490339, p95=234.490339, p98=234.490339, p99=234.490339, p999=234.490339, mean_rate=0.9699012033804766, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-02 15:18:41,723 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-02 15:18:41,725 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-02 15:18:41,725 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210202 15:18:41.773" starttime="20210202 15:18:41.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:18:41.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:18:41.773" starttime="20210202 15:18:41.773"></status>
</kw>
<status status="PASS" endtime="20210202 15:18:41.774" starttime="20210202 15:18:37.067"></status>
</kw>
<msg timestamp="20210202 15:18:41.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:18:41.774" starttime="20210202 15:18:37.067"></status>
</kw>
<msg timestamp="20210202 15:18:41.774" level="INFO">${result} = 2021-02-02 15:18:38,761 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-02 15:18:38,920 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210202 15:18:41.774" starttime="20210202 15:18:37.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210202 15:18:41.775" starttime="20210202 15:18:41.774"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210202 15:18:41.775" critical="yes" starttime="20210202 15:18:37.065"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:18:41.782" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:18:46.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:18:46.439" level="INFO">${output} = 2021-02-02 15:18:43,612 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-02 15:18:43,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210202 15:18:46.439" starttime="20210202 15:18:41.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:18:46.440" level="INFO">2021-02-02 15:18:43,612 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-02 15:18:43,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-02 15:18:43,748 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-02 15:18:43,915 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-02-02 15:18:43,938 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:44,942 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:45,943 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-02 15:18:46,408 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=77.404196, max=77.404196, mean=77.404196, stddev=0.0, median=77.404196, p75=77.404196, p95=77.404196, p98=77.404196, p99=77.404196, p999=77.404196, mean_rate=0.9559701623854797, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-02 15:18:46,412 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-02 15:18:46,417 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-02 15:18:46,417 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210202 15:18:46.440" starttime="20210202 15:18:46.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:18:46.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:18:46.441" starttime="20210202 15:18:46.440"></status>
</kw>
<status status="PASS" endtime="20210202 15:18:46.441" starttime="20210202 15:18:41.779"></status>
</kw>
<msg timestamp="20210202 15:18:46.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:18:46.441" starttime="20210202 15:18:41.779"></status>
</kw>
<msg timestamp="20210202 15:18:46.442" level="INFO">${result} = 2021-02-02 15:18:43,612 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-02 15:18:43,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210202 15:18:46.442" starttime="20210202 15:18:41.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210202 15:18:46.442" starttime="20210202 15:18:46.442"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210202 15:18:46.442" critical="yes" starttime="20210202 15:18:41.777"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210202 15:18:46.444" starttime="20210202 15:18:25.429"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:18:46.456" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:18:53.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:18:53.183" level="INFO">${output} = 2021-02-02 15:18:48,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-02 15:18:48,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210202 15:18:53.183" starttime="20210202 15:18:46.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:18:53.184" level="INFO">2021-02-02 15:18:48,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-02 15:18:48,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-02 15:18:48,212 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-02 15:18:48,381 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-02 15:18:48,394 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:49,400 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:50,409 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:50,909 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-02 15:18:51,409 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-02 15:18:52,410 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-02 15:18:52,828 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=56.953127, max=56.953127, mean=56.953127, stddev=0.0, median=56.953127, p75=56.953127, p95=56.953127, p98=56.953127, p99=56.953127, p999=56.953127, mean_rate=0.9710287493977219, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-02 15:18:52,829 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-02-02 15:18:52,830 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-02 15:18:52,830 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210202 15:18:53.185" starttime="20210202 15:18:53.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:18:53.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:18:53.186" starttime="20210202 15:18:53.185"></status>
</kw>
<status status="PASS" endtime="20210202 15:18:53.187" starttime="20210202 15:18:46.454"></status>
</kw>
<msg timestamp="20210202 15:18:53.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:18:53.187" starttime="20210202 15:18:46.453"></status>
</kw>
<msg timestamp="20210202 15:18:53.187" level="INFO">${result} = 2021-02-02 15:18:48,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-02 15:18:48,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210202 15:18:53.187" starttime="20210202 15:18:46.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210202 15:18:53.188" starttime="20210202 15:18:53.187"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210202 15:18:53.188" critical="yes" starttime="20210202 15:18:46.452"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210202 15:18:53.189" starttime="20210202 15:18:46.447"></status>
</suite>
<status status="PASS" endtime="20210202 15:18:53.192" starttime="20210202 15:18:25.397"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:18:19.789" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:18:19.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:18:19.792" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:18:19.792" starttime="20210202 15:18:19.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:18:19.793" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:18:19.794" starttime="20210202 15:18:19.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:18:19.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:18:19.794" starttime="20210202 15:18:19.794"></status>
</kw>
<status status="PASS" endtime="20210202 15:18:19.795" starttime="20210202 15:18:19.785"></status>
</kw>
<msg timestamp="20210202 15:18:19.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:18:19.795" starttime="20210202 15:18:19.784"></status>
</kw>
<msg timestamp="20210202 15:18:19.795" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:18:19.795" starttime="20210202 15:18:19.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:18:19.796" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:18:19.796" starttime="20210202 15:18:19.796"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:18:19.801" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:18:19.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:18:19.813" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:18:19.813" starttime="20210202 15:18:19.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:18:19.814" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:18:19.814" starttime="20210202 15:18:19.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:18:19.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:18:19.815" starttime="20210202 15:18:19.814"></status>
</kw>
<status status="PASS" endtime="20210202 15:18:19.815" starttime="20210202 15:18:19.798"></status>
</kw>
<msg timestamp="20210202 15:18:19.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:18:19.815" starttime="20210202 15:18:19.798"></status>
</kw>
<status status="PASS" endtime="20210202 15:18:19.816" starttime="20210202 15:18:19.797"></status>
</kw>
<status status="PASS" endtime="20210202 15:18:19.816" starttime="20210202 15:18:19.797"></status>
</kw>
<status status="PASS" endtime="20210202 15:18:19.816" starttime="20210202 15:18:19.783"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:18:19.816" critical="yes" starttime="20210202 15:18:19.782"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210202 15:18:19.817" starttime="20210202 15:18:19.710"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 15:18:58.966" level="INFO">${random} = 32151</msg>
<status status="PASS" endtime="20210202 15:18:58.967" starttime="20210202 15:18:58.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210202 15:18:58.968" level="INFO">${source} = 32151-source</msg>
<status status="PASS" endtime="20210202 15:18:58.968" starttime="20210202 15:18:58.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210202 15:18:58.969" level="INFO">${target} = 32151-target</msg>
<status status="PASS" endtime="20210202 15:18:58.969" starttime="20210202 15:18:58.968"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:18:58.975" level="INFO">Running command 'ozone sh volume create 32151-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:02.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:02.626" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:19:02.626" starttime="20210202 15:18:58.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:02.627" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:19:02.627" starttime="20210202 15:19:02.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:02.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:02.627" starttime="20210202 15:19:02.627"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:02.628" starttime="20210202 15:18:58.970"></status>
</kw>
<msg timestamp="20210202 15:19:02.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:02.629" starttime="20210202 15:18:58.970"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:02.629" starttime="20210202 15:18:58.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:02.632" level="INFO">Running command 'ozone sh volume create 32151-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:06.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:06.299" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:19:06.299" starttime="20210202 15:19:02.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:06.299" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:19:06.300" starttime="20210202 15:19:06.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:06.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:06.300" starttime="20210202 15:19:06.300"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:06.301" starttime="20210202 15:19:02.630"></status>
</kw>
<msg timestamp="20210202 15:19:06.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:06.301" starttime="20210202 15:19:02.630"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:06.301" starttime="20210202 15:19:02.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:06.305" level="INFO">Running command 'ozone sh bucket create 32151-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:09.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:09.812" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:19:09.812" starttime="20210202 15:19:06.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:09.813" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:19:09.813" starttime="20210202 15:19:09.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:09.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:09.814" starttime="20210202 15:19:09.813"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:09.814" starttime="20210202 15:19:06.303"></status>
</kw>
<msg timestamp="20210202 15:19:09.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:09.814" starttime="20210202 15:19:06.303"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:09.814" starttime="20210202 15:19:06.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:09.818" level="INFO">Running command 'ozone sh key put 32151-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:15.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:15.749" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:19:15.749" starttime="20210202 15:19:09.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:15.750" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:19:15.750" starttime="20210202 15:19:15.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:15.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:15.750" starttime="20210202 15:19:15.750"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:15.751" starttime="20210202 15:19:09.815"></status>
</kw>
<msg timestamp="20210202 15:19:15.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:15.751" starttime="20210202 15:19:09.815"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:15.751" starttime="20210202 15:19:09.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:15.755" level="INFO">Running command 'ozone sh bucket create 32151-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:19.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:19.495" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:19:19.495" starttime="20210202 15:19:15.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:19.496" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:19:19.496" starttime="20210202 15:19:19.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:19.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:19.497" starttime="20210202 15:19:19.496"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:19.497" starttime="20210202 15:19:15.753"></status>
</kw>
<msg timestamp="20210202 15:19:19.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:19.497" starttime="20210202 15:19:15.752"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:19.498" starttime="20210202 15:19:15.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:19.502" level="INFO">Running command 'ozone sh bucket link 32151-source/readable-bucket 32151-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:23.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:23.073" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:19:23.073" starttime="20210202 15:19:19.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:23.075" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:19:23.075" starttime="20210202 15:19:23.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:23.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:23.075" starttime="20210202 15:19:23.075"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:23.076" starttime="20210202 15:19:19.499"></status>
</kw>
<msg timestamp="20210202 15:19:23.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:23.076" starttime="20210202 15:19:19.499"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:23.076" starttime="20210202 15:19:19.498"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:23.079" level="INFO">Running command 'ozone sh bucket link 32151-source/readable-bucket 32151-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:26.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:26.500" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:19:26.500" starttime="20210202 15:19:23.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:26.501" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:19:26.501" starttime="20210202 15:19:26.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:26.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:26.502" starttime="20210202 15:19:26.501"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:26.502" starttime="20210202 15:19:23.077"></status>
</kw>
<msg timestamp="20210202 15:19:26.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:26.502" starttime="20210202 15:19:23.077"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:26.503" starttime="20210202 15:19:23.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:26.506" level="INFO">Running command 'ozone sh bucket link 32151-source/unreadable-bucket 32151-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:30.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:30.047" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:19:30.047" starttime="20210202 15:19:26.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:30.048" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:19:30.048" starttime="20210202 15:19:30.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:30.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:30.049" starttime="20210202 15:19:30.048"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:30.049" starttime="20210202 15:19:26.504"></status>
</kw>
<msg timestamp="20210202 15:19:30.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:30.049" starttime="20210202 15:19:26.503"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:30.049" starttime="20210202 15:19:26.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:30.053" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 32151-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:33.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:33.666" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:19:33.666" starttime="20210202 15:19:30.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:33.667" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:19:33.667" starttime="20210202 15:19:33.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:33.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:33.667" starttime="20210202 15:19:33.667"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:33.668" starttime="20210202 15:19:30.050"></status>
</kw>
<msg timestamp="20210202 15:19:33.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:33.668" starttime="20210202 15:19:30.050"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:33.668" starttime="20210202 15:19:30.050"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:33.672" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 32151-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:37.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:37.304" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:19:37.304" starttime="20210202 15:19:33.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:37.305" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:19:37.305" starttime="20210202 15:19:37.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:37.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:37.306" starttime="20210202 15:19:37.305"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:37.306" starttime="20210202 15:19:33.669"></status>
</kw>
<msg timestamp="20210202 15:19:37.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:37.306" starttime="20210202 15:19:33.669"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:37.306" starttime="20210202 15:19:33.668"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:37.310" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 32151-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:40.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:40.828" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:19:40.828" starttime="20210202 15:19:37.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:40.829" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:19:40.829" starttime="20210202 15:19:40.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:40.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:40.829" starttime="20210202 15:19:40.829"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:40.830" starttime="20210202 15:19:37.308"></status>
</kw>
<msg timestamp="20210202 15:19:40.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:40.830" starttime="20210202 15:19:37.307"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:40.830" starttime="20210202 15:19:37.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:40.833" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 32151-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:44.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:44.525" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:19:44.525" starttime="20210202 15:19:40.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:44.526" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:19:44.526" starttime="20210202 15:19:44.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:44.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:44.527" starttime="20210202 15:19:44.526"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:44.527" starttime="20210202 15:19:40.831"></status>
</kw>
<msg timestamp="20210202 15:19:44.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:44.528" starttime="20210202 15:19:40.831"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:44.528" starttime="20210202 15:19:40.830"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:44.532" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 32151-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:48.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:48.131" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:19:48.131" starttime="20210202 15:19:44.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:48.132" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:19:48.132" starttime="20210202 15:19:48.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:48.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:48.133" starttime="20210202 15:19:48.132"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:48.133" starttime="20210202 15:19:44.529"></status>
</kw>
<msg timestamp="20210202 15:19:48.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:48.133" starttime="20210202 15:19:44.529"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:48.133" starttime="20210202 15:19:44.528"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:48.134" starttime="20210202 15:19:06.302"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:48.134" starttime="20210202 15:19:06.301"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:48.134" starttime="20210202 15:18:58.965"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:48.140" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:48.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:48.143" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:19:48.143" starttime="20210202 15:19:48.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:48.144" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:19:48.144" starttime="20210202 15:19:48.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:48.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:48.145" starttime="20210202 15:19:48.144"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:48.145" starttime="20210202 15:19:48.137"></status>
</kw>
<msg timestamp="20210202 15:19:48.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:48.145" starttime="20210202 15:19:48.137"></status>
</kw>
<msg timestamp="20210202 15:19:48.145" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:19:48.145" starttime="20210202 15:19:48.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:19:48.147" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:19:48.147" starttime="20210202 15:19:48.146"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:48.151" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:48.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:48.203" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:19:48.203" starttime="20210202 15:19:48.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:48.204" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:19:48.205" starttime="20210202 15:19:48.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:48.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:48.205" starttime="20210202 15:19:48.205"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:48.206" starttime="20210202 15:19:48.148"></status>
</kw>
<msg timestamp="20210202 15:19:48.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:48.206" starttime="20210202 15:19:48.148"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:48.206" starttime="20210202 15:19:48.147"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:48.206" starttime="20210202 15:19:48.147"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:48.206" starttime="20210202 15:19:48.135"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:48.206" starttime="20210202 15:19:48.135"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:48.210" level="INFO">Running command 'ozone sh bucket link 32151-source/no-such-bucket 32151-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:51.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:51.663" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:19:51.664" starttime="20210202 15:19:48.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:51.665" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:19:51.665" starttime="20210202 15:19:51.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:51.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:51.666" starttime="20210202 15:19:51.665"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:51.666" starttime="20210202 15:19:48.208"></status>
</kw>
<msg timestamp="20210202 15:19:51.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:51.666" starttime="20210202 15:19:48.207"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:51.666" starttime="20210202 15:19:48.207"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:51.669" level="INFO">Running command 'ozone sh key list 32151-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:54.962" level="INFO">${rc} = 255</msg>
<msg timestamp="20210202 15:19:54.962" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210202 15:19:54.962" starttime="20210202 15:19:51.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:54.963" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210202 15:19:54.963" starttime="20210202 15:19:54.962"></status>
</kw>
<msg timestamp="20210202 15:19:54.963" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210202 15:19:54.963" starttime="20210202 15:19:51.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210202 15:19:54.964" starttime="20210202 15:19:54.964"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:19:54.965" critical="yes" starttime="20210202 15:19:48.134"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:54.971" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:54.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:54.974" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:19:54.974" starttime="20210202 15:19:54.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:54.975" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:19:54.975" starttime="20210202 15:19:54.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:54.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:54.976" starttime="20210202 15:19:54.976"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:54.977" starttime="20210202 15:19:54.969"></status>
</kw>
<msg timestamp="20210202 15:19:54.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:54.977" starttime="20210202 15:19:54.968"></status>
</kw>
<msg timestamp="20210202 15:19:54.977" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:19:54.977" starttime="20210202 15:19:54.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:19:54.978" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:19:54.978" starttime="20210202 15:19:54.977"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:54.983" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:55.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:55.001" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:19:55.001" starttime="20210202 15:19:54.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:55.002" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:19:55.002" starttime="20210202 15:19:55.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:55.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:55.003" starttime="20210202 15:19:55.002"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:55.003" starttime="20210202 15:19:54.980"></status>
</kw>
<msg timestamp="20210202 15:19:55.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:55.004" starttime="20210202 15:19:54.979"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:55.004" starttime="20210202 15:19:54.979"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:55.004" starttime="20210202 15:19:54.978"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:55.004" starttime="20210202 15:19:54.967"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:55.005" starttime="20210202 15:19:54.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:55.008" level="INFO">Running command 'ozone sh bucket link 32151-source/bucket1 32151-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:19:58.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:19:58.730" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:19:58.731" starttime="20210202 15:19:55.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:19:58.732" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:19:58.732" starttime="20210202 15:19:58.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:19:58.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:19:58.733" starttime="20210202 15:19:58.732"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:58.733" starttime="20210202 15:19:55.006"></status>
</kw>
<msg timestamp="20210202 15:19:58.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:19:58.733" starttime="20210202 15:19:55.005"></status>
</kw>
<status status="PASS" endtime="20210202 15:19:58.733" starttime="20210202 15:19:55.005"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:19:58.737" level="INFO">Running command 'ozone sh bucket create 32151-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:02.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:02.217" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:02.217" starttime="20210202 15:19:58.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:02.219" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:02.219" starttime="20210202 15:20:02.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:02.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:02.220" starttime="20210202 15:20:02.219"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:02.220" starttime="20210202 15:19:58.735"></status>
</kw>
<msg timestamp="20210202 15:20:02.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:02.220" starttime="20210202 15:19:58.734"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:02.220" starttime="20210202 15:19:58.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:02.224" level="INFO">Running command 'ozone sh key put 32151-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:08.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:08.186" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:08.186" starttime="20210202 15:20:02.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:08.188" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:08.188" starttime="20210202 15:20:08.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:08.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:08.188" starttime="20210202 15:20:08.188"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:08.189" starttime="20210202 15:20:02.221"></status>
</kw>
<msg timestamp="20210202 15:20:08.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:08.189" starttime="20210202 15:20:02.221"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:08.189" starttime="20210202 15:20:02.220"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210202 15:20:08.191" level="INFO">${postfix} = 00610</msg>
<status status="PASS" endtime="20210202 15:20:08.191" starttime="20210202 15:20:08.191"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210202 15:20:08.192" level="INFO">${tmpfile} = /tmp/tempkey-00610</msg>
<status status="PASS" endtime="20210202 15:20:08.192" starttime="20210202 15:20:08.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:08.195" level="INFO">Running command 'ozone sh key get -f 32151-target/link1/key1 /tmp/tempkey-00610 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:13.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:13.587" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:13.587" starttime="20210202 15:20:08.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:13.588" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:13.589" starttime="20210202 15:20:13.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:13.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:13.589" starttime="20210202 15:20:13.589"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:13.590" starttime="20210202 15:20:08.193"></status>
</kw>
<msg timestamp="20210202 15:20:13.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:13.590" starttime="20210202 15:20:08.193"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:13.591" starttime="20210202 15:20:08.192"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210202 15:20:13.593" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-00610 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:13.596" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210202 15:20:13.596" starttime="20210202 15:20:13.591"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:13.600" level="INFO">Running command 'rm -f /tmp/tempkey-00610 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:13.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:13.603" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:13.603" starttime="20210202 15:20:13.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:13.604" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:13.604" starttime="20210202 15:20:13.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:13.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:13.605" starttime="20210202 15:20:13.604"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:13.605" starttime="20210202 15:20:13.598"></status>
</kw>
<msg timestamp="20210202 15:20:13.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:13.605" starttime="20210202 15:20:13.597"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:13.605" starttime="20210202 15:20:13.596"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:20:13.606" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210202 15:20:13.606" starttime="20210202 15:20:13.606"></status>
</kw>
<msg timestamp="20210202 15:20:13.607" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210202 15:20:13.607" starttime="20210202 15:20:08.190"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:20:13.607" starttime="20210202 15:20:13.607"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:13.607" starttime="20210202 15:20:08.189"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:20:13.608" critical="yes" starttime="20210202 15:19:54.966"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:13.614" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:13.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:13.617" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:20:13.617" starttime="20210202 15:20:13.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:13.618" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:20:13.618" starttime="20210202 15:20:13.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:13.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:13.619" starttime="20210202 15:20:13.618"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:13.619" starttime="20210202 15:20:13.611"></status>
</kw>
<msg timestamp="20210202 15:20:13.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:13.619" starttime="20210202 15:20:13.611"></status>
</kw>
<msg timestamp="20210202 15:20:13.619" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:20:13.619" starttime="20210202 15:20:13.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:20:13.620" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:20:13.620" starttime="20210202 15:20:13.620"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:13.624" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:13.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:13.641" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:13.642" starttime="20210202 15:20:13.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:13.642" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:13.642" starttime="20210202 15:20:13.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:13.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:13.643" starttime="20210202 15:20:13.643"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:13.644" starttime="20210202 15:20:13.622"></status>
</kw>
<msg timestamp="20210202 15:20:13.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:13.644" starttime="20210202 15:20:13.622"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:13.644" starttime="20210202 15:20:13.621"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:13.644" starttime="20210202 15:20:13.620"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:13.644" starttime="20210202 15:20:13.610"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:13.644" starttime="20210202 15:20:13.609"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:13.648" level="INFO">Running command 'ozone sh key put 32151-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:19.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:19.946" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:19.947" starttime="20210202 15:20:13.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:19.948" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:19.948" starttime="20210202 15:20:19.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:19.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:19.949" starttime="20210202 15:20:19.948"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:19.949" starttime="20210202 15:20:13.645"></status>
</kw>
<msg timestamp="20210202 15:20:19.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:19.949" starttime="20210202 15:20:13.645"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:19.950" starttime="20210202 15:20:13.644"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210202 15:20:19.952" level="INFO">${postfix} = 31867</msg>
<status status="PASS" endtime="20210202 15:20:19.952" starttime="20210202 15:20:19.951"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210202 15:20:19.952" level="INFO">${tmpfile} = /tmp/tempkey-31867</msg>
<status status="PASS" endtime="20210202 15:20:19.952" starttime="20210202 15:20:19.952"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:19.956" level="INFO">Running command 'ozone sh key get -f 32151-source/bucket1/key2 /tmp/tempkey-31867 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:25.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:25.471" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:25.471" starttime="20210202 15:20:19.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:25.472" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:25.472" starttime="20210202 15:20:25.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:25.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:25.473" starttime="20210202 15:20:25.472"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:25.473" starttime="20210202 15:20:19.953"></status>
</kw>
<msg timestamp="20210202 15:20:25.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:25.473" starttime="20210202 15:20:19.953"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:25.474" starttime="20210202 15:20:19.952"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210202 15:20:25.476" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-31867 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:25.479" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210202 15:20:25.479" starttime="20210202 15:20:25.474"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:25.483" level="INFO">Running command 'rm -f /tmp/tempkey-31867 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:25.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:25.486" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:25.486" starttime="20210202 15:20:25.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:25.487" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:25.487" starttime="20210202 15:20:25.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:25.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:25.488" starttime="20210202 15:20:25.487"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:25.488" starttime="20210202 15:20:25.481"></status>
</kw>
<msg timestamp="20210202 15:20:25.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:25.489" starttime="20210202 15:20:25.480"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:25.489" starttime="20210202 15:20:25.479"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:20:25.489" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210202 15:20:25.489" starttime="20210202 15:20:25.489"></status>
</kw>
<msg timestamp="20210202 15:20:25.490" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210202 15:20:25.490" starttime="20210202 15:20:19.951"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:20:25.490" starttime="20210202 15:20:25.490"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:25.491" starttime="20210202 15:20:19.950"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:20:25.491" critical="yes" starttime="20210202 15:20:13.608"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:25.497" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:25.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:25.500" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:20:25.500" starttime="20210202 15:20:25.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:25.501" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:20:25.501" starttime="20210202 15:20:25.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:25.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:25.502" starttime="20210202 15:20:25.501"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:25.502" starttime="20210202 15:20:25.495"></status>
</kw>
<msg timestamp="20210202 15:20:25.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:25.502" starttime="20210202 15:20:25.494"></status>
</kw>
<msg timestamp="20210202 15:20:25.502" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:20:25.502" starttime="20210202 15:20:25.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:20:25.503" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:20:25.503" starttime="20210202 15:20:25.503"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:25.507" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:25.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:25.519" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:25.519" starttime="20210202 15:20:25.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:25.520" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:25.520" starttime="20210202 15:20:25.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:25.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:25.521" starttime="20210202 15:20:25.520"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:25.521" starttime="20210202 15:20:25.505"></status>
</kw>
<msg timestamp="20210202 15:20:25.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:25.522" starttime="20210202 15:20:25.505"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:25.522" starttime="20210202 15:20:25.504"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:25.522" starttime="20210202 15:20:25.503"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:25.522" starttime="20210202 15:20:25.493"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:25.522" starttime="20210202 15:20:25.492"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:25.525" level="INFO">Running command 'ozone sh key list 32151-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:29.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:29.194" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210202 15:20:29.194" starttime="20210202 15:20:25.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:29.195" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210202 15:20:29.195" starttime="20210202 15:20:29.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:29.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:29.196" starttime="20210202 15:20:29.195"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:29.196" starttime="20210202 15:20:25.523"></status>
</kw>
<msg timestamp="20210202 15:20:29.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:29.196" starttime="20210202 15:20:25.523"></status>
</kw>
<msg timestamp="20210202 15:20:29.197" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210202 15:20:29.197" starttime="20210202 15:20:25.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:29.201" level="INFO">Running command 'ozone sh key list 32151-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:32.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:32.799" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210202 15:20:32.799" starttime="20210202 15:20:29.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:32.800" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210202 15:20:32.800" starttime="20210202 15:20:32.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:32.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:32.801" starttime="20210202 15:20:32.800"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:32.801" starttime="20210202 15:20:29.198"></status>
</kw>
<msg timestamp="20210202 15:20:32.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:32.801" starttime="20210202 15:20:29.197"></status>
</kw>
<msg timestamp="20210202 15:20:32.802" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210202 15:20:32.802" starttime="20210202 15:20:29.197"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:20:32.803" starttime="20210202 15:20:32.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210202 15:20:32.803" starttime="20210202 15:20:32.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210202 15:20:32.804" starttime="20210202 15:20:32.803"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:20:32.804" critical="yes" starttime="20210202 15:20:25.492"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:32.810" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:32.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:32.813" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:20:32.813" starttime="20210202 15:20:32.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:32.814" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:20:32.814" starttime="20210202 15:20:32.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:32.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:32.814" starttime="20210202 15:20:32.814"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:32.815" starttime="20210202 15:20:32.808"></status>
</kw>
<msg timestamp="20210202 15:20:32.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:32.815" starttime="20210202 15:20:32.807"></status>
</kw>
<msg timestamp="20210202 15:20:32.815" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:20:32.815" starttime="20210202 15:20:32.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:20:32.816" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:20:32.816" starttime="20210202 15:20:32.815"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:32.820" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:32.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:32.831" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:32.831" starttime="20210202 15:20:32.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:32.832" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:32.832" starttime="20210202 15:20:32.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:32.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:32.833" starttime="20210202 15:20:32.832"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:32.833" starttime="20210202 15:20:32.818"></status>
</kw>
<msg timestamp="20210202 15:20:32.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:32.833" starttime="20210202 15:20:32.817"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:32.833" starttime="20210202 15:20:32.817"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:32.833" starttime="20210202 15:20:32.816"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:32.834" starttime="20210202 15:20:32.806"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:32.834" starttime="20210202 15:20:32.806"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:32.838" level="INFO">Running command 'ozone sh key delete 32151-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:36.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:36.548" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:36.548" starttime="20210202 15:20:32.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:36.549" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:36.549" starttime="20210202 15:20:36.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:36.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:36.550" starttime="20210202 15:20:36.549"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:36.550" starttime="20210202 15:20:32.835"></status>
</kw>
<msg timestamp="20210202 15:20:36.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:36.551" starttime="20210202 15:20:32.834"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:36.551" starttime="20210202 15:20:32.834"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:36.559" level="INFO">Running command 'ozone sh key list 32151-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:40.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:40.538" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210202 15:20:40.538" starttime="20210202 15:20:36.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:40.540" level="INFO">key1</msg>
<status status="PASS" endtime="20210202 15:20:40.540" starttime="20210202 15:20:40.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:40.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:40.541" starttime="20210202 15:20:40.540"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:40.541" starttime="20210202 15:20:36.552"></status>
</kw>
<msg timestamp="20210202 15:20:40.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:40.541" starttime="20210202 15:20:36.552"></status>
</kw>
<msg timestamp="20210202 15:20:40.541" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210202 15:20:40.541" starttime="20210202 15:20:36.551"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210202 15:20:40.542" starttime="20210202 15:20:40.541"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:20:40.542" critical="yes" starttime="20210202 15:20:32.805"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:40.549" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:40.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:40.552" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:20:40.552" starttime="20210202 15:20:40.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:40.553" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:20:40.554" starttime="20210202 15:20:40.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:40.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:40.554" starttime="20210202 15:20:40.554"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:40.555" starttime="20210202 15:20:40.546"></status>
</kw>
<msg timestamp="20210202 15:20:40.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:40.555" starttime="20210202 15:20:40.546"></status>
</kw>
<msg timestamp="20210202 15:20:40.555" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:20:40.555" starttime="20210202 15:20:40.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:20:40.556" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:20:40.556" starttime="20210202 15:20:40.556"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:40.561" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:40.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:40.582" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:40.582" starttime="20210202 15:20:40.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:40.583" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:40.583" starttime="20210202 15:20:40.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:40.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:40.584" starttime="20210202 15:20:40.583"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:40.584" starttime="20210202 15:20:40.558"></status>
</kw>
<msg timestamp="20210202 15:20:40.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:40.584" starttime="20210202 15:20:40.558"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:40.584" starttime="20210202 15:20:40.557"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:40.584" starttime="20210202 15:20:40.556"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:40.585" starttime="20210202 15:20:40.545"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:40.585" starttime="20210202 15:20:40.544"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:40.588" level="INFO">Running command 'ozone sh bucket list 32151-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:44.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:44.286" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210202 15:20:44.286" starttime="20210202 15:20:40.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:44.287" level="INFO">{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:19:51.459Z",
  "modificationTime" : "2021-02-02T15:19:51.459Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:19:29.944Z",
  "modificationTime" : "2021-02-02T15:19:47.978Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:19:58.657Z",
  "modificationTime" : "2021-02-02T15:19:58.657Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:19:22.976Z",
  "modificationTime" : "2021-02-02T15:19:44.442Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:19:26.389Z",
  "modificationTime" : "2021-02-02T15:19:26.389Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210202 15:20:44.287" starttime="20210202 15:20:44.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:44.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:44.288" starttime="20210202 15:20:44.287"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:44.288" starttime="20210202 15:20:40.586"></status>
</kw>
<msg timestamp="20210202 15:20:44.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:44.289" starttime="20210202 15:20:40.586"></status>
</kw>
<msg timestamp="20210202 15:20:44.289" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210202 15:20:44.289" starttime="20210202 15:20:40.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210202 15:20:44.290" starttime="20210202 15:20:44.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210202 15:20:44.290" starttime="20210202 15:20:44.290"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:20:44.290" critical="yes" starttime="20210202 15:20:40.543"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:44.297" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:44.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:44.300" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:20:44.300" starttime="20210202 15:20:44.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:44.301" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:20:44.301" starttime="20210202 15:20:44.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:44.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:44.302" starttime="20210202 15:20:44.301"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:44.302" starttime="20210202 15:20:44.294"></status>
</kw>
<msg timestamp="20210202 15:20:44.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:44.302" starttime="20210202 15:20:44.294"></status>
</kw>
<msg timestamp="20210202 15:20:44.303" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:20:44.303" starttime="20210202 15:20:44.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:20:44.303" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:20:44.304" starttime="20210202 15:20:44.303"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:44.308" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:44.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:44.327" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:44.327" starttime="20210202 15:20:44.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:44.328" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:44.328" starttime="20210202 15:20:44.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:44.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:44.329" starttime="20210202 15:20:44.328"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:44.329" starttime="20210202 15:20:44.305"></status>
</kw>
<msg timestamp="20210202 15:20:44.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:44.329" starttime="20210202 15:20:44.305"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:44.329" starttime="20210202 15:20:44.304"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:44.330" starttime="20210202 15:20:44.304"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:44.330" starttime="20210202 15:20:44.293"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:44.330" starttime="20210202 15:20:44.292"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:44.334" level="INFO">Running command 'ozone sh bucket info 32151-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:47.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:47.948" level="INFO">${output} = 32151-source bucket1</msg>
<status status="PASS" endtime="20210202 15:20:47.948" starttime="20210202 15:20:44.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:47.949" level="INFO">32151-source bucket1</msg>
<status status="PASS" endtime="20210202 15:20:47.949" starttime="20210202 15:20:47.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:47.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:47.950" starttime="20210202 15:20:47.949"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:47.950" starttime="20210202 15:20:44.331"></status>
</kw>
<msg timestamp="20210202 15:20:47.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:47.950" starttime="20210202 15:20:44.331"></status>
</kw>
<msg timestamp="20210202 15:20:47.951" level="INFO">${result} = 32151-source bucket1</msg>
<status status="PASS" endtime="20210202 15:20:47.951" starttime="20210202 15:20:44.330"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210202 15:20:47.951" starttime="20210202 15:20:47.951"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:20:47.952" critical="yes" starttime="20210202 15:20:44.291"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:47.957" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:47.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:47.960" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:20:47.960" starttime="20210202 15:20:47.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:47.961" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:20:47.961" starttime="20210202 15:20:47.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:47.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:47.962" starttime="20210202 15:20:47.961"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:47.962" starttime="20210202 15:20:47.955"></status>
</kw>
<msg timestamp="20210202 15:20:47.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:47.963" starttime="20210202 15:20:47.955"></status>
</kw>
<msg timestamp="20210202 15:20:47.963" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:20:47.963" starttime="20210202 15:20:47.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:20:47.964" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:20:47.964" starttime="20210202 15:20:47.963"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:47.968" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:47.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:47.985" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:47.985" starttime="20210202 15:20:47.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:47.986" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:47.986" starttime="20210202 15:20:47.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:47.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:47.987" starttime="20210202 15:20:47.986"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:47.987" starttime="20210202 15:20:47.965"></status>
</kw>
<msg timestamp="20210202 15:20:47.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:47.987" starttime="20210202 15:20:47.965"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:47.988" starttime="20210202 15:20:47.964"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:47.988" starttime="20210202 15:20:47.964"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:47.988" starttime="20210202 15:20:47.954"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:47.988" starttime="20210202 15:20:47.953"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:47.991" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 32151-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:51.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:51.650" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:20:51.650" starttime="20210202 15:20:47.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:51.651" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:20:51.651" starttime="20210202 15:20:51.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:51.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:51.652" starttime="20210202 15:20:51.651"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:51.652" starttime="20210202 15:20:47.989"></status>
</kw>
<msg timestamp="20210202 15:20:51.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:51.653" starttime="20210202 15:20:47.989"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:51.653" starttime="20210202 15:20:47.988"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:51.658" level="INFO">Running command 'ozone sh bucket getacl 32151-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:55.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:55.354" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210202 15:20:55.354" starttime="20210202 15:20:51.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:55.355" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210202 15:20:55.355" starttime="20210202 15:20:55.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:55.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:55.356" starttime="20210202 15:20:55.355"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:55.356" starttime="20210202 15:20:51.655"></status>
</kw>
<msg timestamp="20210202 15:20:55.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:55.357" starttime="20210202 15:20:51.655"></status>
</kw>
<msg timestamp="20210202 15:20:55.357" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210202 15:20:55.357" starttime="20210202 15:20:51.654"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:20:55.358" starttime="20210202 15:20:55.357"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:55.358" starttime="20210202 15:20:51.653"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:55.362" level="INFO">Running command 'ozone sh bucket getacl 32151-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:20:58.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:20:58.836" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:20:58.836" starttime="20210202 15:20:55.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:20:58.838" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:20:58.838" starttime="20210202 15:20:58.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:20:58.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:20:58.838" starttime="20210202 15:20:58.838"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:58.839" starttime="20210202 15:20:55.360"></status>
</kw>
<msg timestamp="20210202 15:20:58.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:20:58.839" starttime="20210202 15:20:55.359"></status>
</kw>
<msg timestamp="20210202 15:20:58.839" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210202 15:20:58.839" starttime="20210202 15:20:55.359"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:20:58.840" starttime="20210202 15:20:58.839"></status>
</kw>
<status status="PASS" endtime="20210202 15:20:58.840" starttime="20210202 15:20:55.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:20:58.844" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 32151-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:02.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:02.251" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:21:02.251" starttime="20210202 15:20:58.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:02.253" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210202 15:21:02.253" starttime="20210202 15:21:02.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:02.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:02.254" starttime="20210202 15:21:02.253"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:02.254" starttime="20210202 15:20:58.842"></status>
</kw>
<msg timestamp="20210202 15:21:02.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:02.254" starttime="20210202 15:20:58.841"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:02.254" starttime="20210202 15:20:58.840"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:02.259" level="INFO">Running command 'ozone sh bucket getacl 32151-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:05.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:05.830" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:05.830" starttime="20210202 15:21:02.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:05.831" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:05.831" starttime="20210202 15:21:05.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:05.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:05.832" starttime="20210202 15:21:05.832"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:05.832" starttime="20210202 15:21:02.256"></status>
</kw>
<msg timestamp="20210202 15:21:05.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:05.833" starttime="20210202 15:21:02.256"></status>
</kw>
<msg timestamp="20210202 15:21:05.833" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210202 15:21:05.833" starttime="20210202 15:21:02.255"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:21:05.833" starttime="20210202 15:21:05.833"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:05.834" starttime="20210202 15:21:02.254"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:05.838" level="INFO">Running command 'ozone sh bucket getacl 32151-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:09.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:09.273" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210202 15:21:09.273" starttime="20210202 15:21:05.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:09.274" level="INFO">READ</msg>
<status status="PASS" endtime="20210202 15:21:09.274" starttime="20210202 15:21:09.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:09.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:09.275" starttime="20210202 15:21:09.275"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:09.276" starttime="20210202 15:21:05.836"></status>
</kw>
<msg timestamp="20210202 15:21:09.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:09.276" starttime="20210202 15:21:05.835"></status>
</kw>
<msg timestamp="20210202 15:21:09.276" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210202 15:21:09.276" starttime="20210202 15:21:05.834"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:21:09.277" starttime="20210202 15:21:09.276"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:09.277" starttime="20210202 15:21:05.834"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:21:09.277" critical="yes" starttime="20210202 15:20:47.952"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:09.284" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:09.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:09.286" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:21:09.286" starttime="20210202 15:21:09.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:09.287" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:21:09.287" starttime="20210202 15:21:09.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:09.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:09.288" starttime="20210202 15:21:09.288"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:09.289" starttime="20210202 15:21:09.281"></status>
</kw>
<msg timestamp="20210202 15:21:09.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:09.289" starttime="20210202 15:21:09.281"></status>
</kw>
<msg timestamp="20210202 15:21:09.289" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:21:09.289" starttime="20210202 15:21:09.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:21:09.290" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:21:09.290" starttime="20210202 15:21:09.289"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:09.294" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:09.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:09.317" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:09.317" starttime="20210202 15:21:09.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:09.318" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:09.318" starttime="20210202 15:21:09.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:09.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:09.318" starttime="20210202 15:21:09.318"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:09.321" starttime="20210202 15:21:09.292"></status>
</kw>
<msg timestamp="20210202 15:21:09.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:09.321" starttime="20210202 15:21:09.291"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:09.321" starttime="20210202 15:21:09.290"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:09.321" starttime="20210202 15:21:09.290"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:09.321" starttime="20210202 15:21:09.280"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:09.322" starttime="20210202 15:21:09.279"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:09.325" level="INFO">Running command 'ozone sh bucket link 32151-source/bucket2 32151-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:13.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:13.297" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:13.297" starttime="20210202 15:21:09.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:13.298" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:13.298" starttime="20210202 15:21:13.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:13.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:13.299" starttime="20210202 15:21:13.299"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:13.299" starttime="20210202 15:21:09.323"></status>
</kw>
<msg timestamp="20210202 15:21:13.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:13.300" starttime="20210202 15:21:09.323"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:13.300" starttime="20210202 15:21:09.322"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:13.303" level="INFO">Running command 'ozone sh bucket create 32151-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:16.818" level="INFO">${rc} = 255</msg>
<msg timestamp="20210202 15:21:16.819" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210202 15:21:16.819" starttime="20210202 15:21:13.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:16.820" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210202 15:21:16.820" starttime="20210202 15:21:16.819"></status>
</kw>
<msg timestamp="20210202 15:21:16.820" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210202 15:21:16.820" starttime="20210202 15:21:13.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210202 15:21:16.821" starttime="20210202 15:21:16.821"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:16.825" level="INFO">Running command 'ozone sh bucket create 32151-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:20.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:20.354" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:20.354" starttime="20210202 15:21:16.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:20.355" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:20.355" starttime="20210202 15:21:20.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:20.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:20.356" starttime="20210202 15:21:20.355"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:20.356" starttime="20210202 15:21:16.822"></status>
</kw>
<msg timestamp="20210202 15:21:20.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:20.357" starttime="20210202 15:21:16.822"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:20.357" starttime="20210202 15:21:16.821"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:20.360" level="INFO">Running command 'ozone sh bucket link 32151-source/bucket1 32151-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:24.415" level="INFO">${rc} = 255</msg>
<msg timestamp="20210202 15:21:24.416" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210202 15:21:24.416" starttime="20210202 15:21:20.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:24.417" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210202 15:21:24.417" starttime="20210202 15:21:24.416"></status>
</kw>
<msg timestamp="20210202 15:21:24.417" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210202 15:21:24.417" starttime="20210202 15:21:20.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210202 15:21:24.418" starttime="20210202 15:21:24.418"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:21:24.418" critical="yes" starttime="20210202 15:21:09.278"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:24.425" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:24.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:24.428" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:21:24.428" starttime="20210202 15:21:24.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:24.429" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:21:24.429" starttime="20210202 15:21:24.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:24.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:24.429" starttime="20210202 15:21:24.429"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.430" starttime="20210202 15:21:24.422"></status>
</kw>
<msg timestamp="20210202 15:21:24.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:24.430" starttime="20210202 15:21:24.422"></status>
</kw>
<msg timestamp="20210202 15:21:24.430" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:21:24.430" starttime="20210202 15:21:24.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:21:24.431" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:21:24.431" starttime="20210202 15:21:24.430"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:24.435" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:24.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:24.447" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:24.447" starttime="20210202 15:21:24.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:24.448" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:24.448" starttime="20210202 15:21:24.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:24.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:24.448" starttime="20210202 15:21:24.448"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.449" starttime="20210202 15:21:24.433"></status>
</kw>
<msg timestamp="20210202 15:21:24.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:24.449" starttime="20210202 15:21:24.433"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.449" starttime="20210202 15:21:24.432"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.449" starttime="20210202 15:21:24.431"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.449" starttime="20210202 15:21:24.421"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.450" starttime="20210202 15:21:24.421"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:24.454" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:24.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:24.458" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:24.458" starttime="20210202 15:21:24.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:24.458" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:24.459" starttime="20210202 15:21:24.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:24.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:24.460" starttime="20210202 15:21:24.459"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.460" starttime="20210202 15:21:24.452"></status>
</kw>
<msg timestamp="20210202 15:21:24.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:24.460" starttime="20210202 15:21:24.452"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.460" starttime="20210202 15:21:24.451"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:24.465" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:24.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:24.468" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:21:24.468" starttime="20210202 15:21:24.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:24.468" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:21:24.468" starttime="20210202 15:21:24.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:24.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:24.469" starttime="20210202 15:21:24.469"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.469" starttime="20210202 15:21:24.462"></status>
</kw>
<msg timestamp="20210202 15:21:24.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:24.470" starttime="20210202 15:21:24.462"></status>
</kw>
<msg timestamp="20210202 15:21:24.470" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:21:24.470" starttime="20210202 15:21:24.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:21:24.471" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:21:24.471" starttime="20210202 15:21:24.470"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:24.475" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:24.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:24.496" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:24.496" starttime="20210202 15:21:24.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:24.497" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:24.497" starttime="20210202 15:21:24.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:24.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:24.498" starttime="20210202 15:21:24.497"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.499" starttime="20210202 15:21:24.473"></status>
</kw>
<msg timestamp="20210202 15:21:24.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:24.499" starttime="20210202 15:21:24.472"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.499" starttime="20210202 15:21:24.471"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.499" starttime="20210202 15:21:24.471"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.500" starttime="20210202 15:21:24.461"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:24.500" starttime="20210202 15:21:24.461"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:24.502" level="INFO">Running command 'ozone sh key list 32151-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:28.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:28.125" level="INFO">${output} = {
  "volumeName" : "32151-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-02T15:19:13.329Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210202 15:21:28.125" starttime="20210202 15:21:24.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:28.126" level="INFO">{
  "volumeName" : "32151-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-02T15:19:13.329Z",
  "modificationTime" : "2021-02-02T15:19:15.177Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210202 15:21:28.127" starttime="20210202 15:21:28.126"></status>
</kw>
<msg timestamp="20210202 15:21:28.127" level="INFO">${result} = {
  "volumeName" : "32151-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-02T15:19:13.329Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210202 15:21:28.127" starttime="20210202 15:21:24.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210202 15:21:28.127" starttime="20210202 15:21:28.127"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.128" starttime="20210202 15:21:24.450"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.128" starttime="20210202 15:21:24.450"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:21:28.128" critical="yes" starttime="20210202 15:21:24.420"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:28.135" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:28.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:28.138" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:21:28.138" starttime="20210202 15:21:28.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:28.139" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:21:28.139" starttime="20210202 15:21:28.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:28.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:28.140" starttime="20210202 15:21:28.139"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.140" starttime="20210202 15:21:28.132"></status>
</kw>
<msg timestamp="20210202 15:21:28.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:28.141" starttime="20210202 15:21:28.132"></status>
</kw>
<msg timestamp="20210202 15:21:28.141" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:21:28.141" starttime="20210202 15:21:28.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:21:28.142" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:21:28.142" starttime="20210202 15:21:28.141"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:28.145" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:28.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:28.160" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:28.160" starttime="20210202 15:21:28.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:28.161" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:28.161" starttime="20210202 15:21:28.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:28.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:28.162" starttime="20210202 15:21:28.161"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.162" starttime="20210202 15:21:28.143"></status>
</kw>
<msg timestamp="20210202 15:21:28.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:28.162" starttime="20210202 15:21:28.143"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.163" starttime="20210202 15:21:28.142"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.163" starttime="20210202 15:21:28.142"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.163" starttime="20210202 15:21:28.130"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.163" starttime="20210202 15:21:28.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:28.167" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:28.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:28.171" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:28.171" starttime="20210202 15:21:28.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:28.172" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:28.172" starttime="20210202 15:21:28.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:28.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:28.172" starttime="20210202 15:21:28.172"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.173" starttime="20210202 15:21:28.165"></status>
</kw>
<msg timestamp="20210202 15:21:28.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:28.173" starttime="20210202 15:21:28.165"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.173" starttime="20210202 15:21:28.164"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:28.177" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:28.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:28.179" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:21:28.179" starttime="20210202 15:21:28.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:28.180" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:21:28.180" starttime="20210202 15:21:28.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:28.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:28.180" starttime="20210202 15:21:28.180"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.181" starttime="20210202 15:21:28.175"></status>
</kw>
<msg timestamp="20210202 15:21:28.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:28.181" starttime="20210202 15:21:28.174"></status>
</kw>
<msg timestamp="20210202 15:21:28.181" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:21:28.181" starttime="20210202 15:21:28.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:21:28.182" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:21:28.182" starttime="20210202 15:21:28.181"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:28.186" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:28.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:28.197" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:28.197" starttime="20210202 15:21:28.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:28.198" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:28.198" starttime="20210202 15:21:28.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:28.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:28.199" starttime="20210202 15:21:28.198"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.199" starttime="20210202 15:21:28.183"></status>
</kw>
<msg timestamp="20210202 15:21:28.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:28.199" starttime="20210202 15:21:28.183"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.200" starttime="20210202 15:21:28.182"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.200" starttime="20210202 15:21:28.182"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.200" starttime="20210202 15:21:28.174"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:28.201" starttime="20210202 15:21:28.173"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:28.203" level="INFO">Running command 'ozone sh key list 32151-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:32.063" level="INFO">${rc} = 255</msg>
<msg timestamp="20210202 15:21:32.063" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 32151-target unreadable-link null</msg>
<status status="PASS" endtime="20210202 15:21:32.063" starttime="20210202 15:21:28.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:32.064" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 32151-target unreadable-link null</msg>
<status status="PASS" endtime="20210202 15:21:32.064" starttime="20210202 15:21:32.063"></status>
</kw>
<msg timestamp="20210202 15:21:32.065" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 32151-target unreadable-link null</msg>
<status status="PASS" endtime="20210202 15:21:32.065" starttime="20210202 15:21:28.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210202 15:21:32.065" starttime="20210202 15:21:32.065"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.066" starttime="20210202 15:21:28.164"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.066" starttime="20210202 15:21:28.163"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:21:32.066" critical="yes" starttime="20210202 15:21:28.129"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:32.074" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:32.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:32.077" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:21:32.077" starttime="20210202 15:21:32.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:32.078" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:21:32.078" starttime="20210202 15:21:32.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:32.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:32.079" starttime="20210202 15:21:32.079"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.079" starttime="20210202 15:21:32.071"></status>
</kw>
<msg timestamp="20210202 15:21:32.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:32.080" starttime="20210202 15:21:32.071"></status>
</kw>
<msg timestamp="20210202 15:21:32.080" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:21:32.080" starttime="20210202 15:21:32.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:21:32.081" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:21:32.081" starttime="20210202 15:21:32.080"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:32.085" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:32.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:32.102" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:32.102" starttime="20210202 15:21:32.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:32.103" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:32.103" starttime="20210202 15:21:32.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:32.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:32.104" starttime="20210202 15:21:32.103"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.105" starttime="20210202 15:21:32.083"></status>
</kw>
<msg timestamp="20210202 15:21:32.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:32.105" starttime="20210202 15:21:32.082"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.105" starttime="20210202 15:21:32.082"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.105" starttime="20210202 15:21:32.081"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.106" starttime="20210202 15:21:32.069"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.106" starttime="20210202 15:21:32.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:32.110" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:32.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:32.114" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:32.114" starttime="20210202 15:21:32.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:32.115" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:32.115" starttime="20210202 15:21:32.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:32.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:32.116" starttime="20210202 15:21:32.115"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.116" starttime="20210202 15:21:32.108"></status>
</kw>
<msg timestamp="20210202 15:21:32.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:32.117" starttime="20210202 15:21:32.107"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.117" starttime="20210202 15:21:32.107"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:32.121" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:32.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:32.124" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:21:32.124" starttime="20210202 15:21:32.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:32.125" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:21:32.126" starttime="20210202 15:21:32.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:32.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:32.127" starttime="20210202 15:21:32.126"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.127" starttime="20210202 15:21:32.119"></status>
</kw>
<msg timestamp="20210202 15:21:32.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:32.128" starttime="20210202 15:21:32.118"></status>
</kw>
<msg timestamp="20210202 15:21:32.128" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:21:32.128" starttime="20210202 15:21:32.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:21:32.129" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:21:32.129" starttime="20210202 15:21:32.128"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:32.133" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:32.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:32.152" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:32.152" starttime="20210202 15:21:32.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:32.153" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:32.153" starttime="20210202 15:21:32.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:32.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:32.154" starttime="20210202 15:21:32.153"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.154" starttime="20210202 15:21:32.131"></status>
</kw>
<msg timestamp="20210202 15:21:32.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:32.154" starttime="20210202 15:21:32.131"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.155" starttime="20210202 15:21:32.130"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.155" starttime="20210202 15:21:32.129"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.155" starttime="20210202 15:21:32.117"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:32.155" starttime="20210202 15:21:32.117"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:32.159" level="INFO">Running command 'ozone sh bucket info 32151-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:35.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:35.941" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210202 15:21:35.941" starttime="20210202 15:21:32.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:35.942" level="INFO">{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:19:29.944Z",
  "modificationTime" : "2021-02-02T15:19:47.978Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210202 15:21:35.943" starttime="20210202 15:21:35.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:35.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:35.943" starttime="20210202 15:21:35.943"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:35.944" starttime="20210202 15:21:32.156"></status>
</kw>
<msg timestamp="20210202 15:21:35.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:35.944" starttime="20210202 15:21:32.156"></status>
</kw>
<msg timestamp="20210202 15:21:35.944" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210202 15:21:35.944" starttime="20210202 15:21:32.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210202 15:21:35.945" starttime="20210202 15:21:35.945"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210202 15:21:35.946" starttime="20210202 15:21:35.945"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:35.948" level="INFO">Running command 'ozone sh key list 32151-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:39.409" level="INFO">${rc} = 255</msg>
<msg timestamp="20210202 15:21:39.409" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 32151-source unreadable-bucket </msg>
<status status="PASS" endtime="20210202 15:21:39.409" starttime="20210202 15:21:35.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:39.410" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 32151-source unreadable-bucket </msg>
<status status="PASS" endtime="20210202 15:21:39.410" starttime="20210202 15:21:39.409"></status>
</kw>
<msg timestamp="20210202 15:21:39.411" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 32151-source unreadable-bucket </msg>
<status status="PASS" endtime="20210202 15:21:39.411" starttime="20210202 15:21:35.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210202 15:21:39.411" starttime="20210202 15:21:39.411"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:39.411" starttime="20210202 15:21:32.107"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:39.412" starttime="20210202 15:21:32.106"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:21:39.412" critical="yes" starttime="20210202 15:21:32.068"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:39.419" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:39.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:39.422" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:21:39.422" starttime="20210202 15:21:39.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:39.423" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:21:39.423" starttime="20210202 15:21:39.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:39.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:39.424" starttime="20210202 15:21:39.423"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:39.425" starttime="20210202 15:21:39.416"></status>
</kw>
<msg timestamp="20210202 15:21:39.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:39.425" starttime="20210202 15:21:39.416"></status>
</kw>
<msg timestamp="20210202 15:21:39.425" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:21:39.425" starttime="20210202 15:21:39.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:21:39.426" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:21:39.426" starttime="20210202 15:21:39.425"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:39.430" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:39.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:39.447" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:39.447" starttime="20210202 15:21:39.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:39.448" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:39.449" starttime="20210202 15:21:39.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:39.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:39.449" starttime="20210202 15:21:39.449"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:39.450" starttime="20210202 15:21:39.427"></status>
</kw>
<msg timestamp="20210202 15:21:39.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:39.450" starttime="20210202 15:21:39.427"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:39.450" starttime="20210202 15:21:39.426"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:39.450" starttime="20210202 15:21:39.426"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:39.450" starttime="20210202 15:21:39.415"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:39.451" starttime="20210202 15:21:39.414"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:39.454" level="INFO">Running command 'ozone sh bucket link 32151-target/loop1 32151-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:43.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:43.129" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:43.129" starttime="20210202 15:21:39.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:43.130" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:43.130" starttime="20210202 15:21:43.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:43.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:43.131" starttime="20210202 15:21:43.131"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:43.132" starttime="20210202 15:21:39.452"></status>
</kw>
<msg timestamp="20210202 15:21:43.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:43.132" starttime="20210202 15:21:39.451"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:43.132" starttime="20210202 15:21:39.451"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:43.136" level="INFO">Running command 'ozone sh bucket link 32151-target/loop2 32151-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:46.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:46.365" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:46.365" starttime="20210202 15:21:43.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:46.366" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:46.367" starttime="20210202 15:21:46.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:46.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:46.368" starttime="20210202 15:21:46.367"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:46.368" starttime="20210202 15:21:43.133"></status>
</kw>
<msg timestamp="20210202 15:21:46.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:46.369" starttime="20210202 15:21:43.133"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:46.369" starttime="20210202 15:21:43.132"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:46.373" level="INFO">Running command 'ozone sh bucket link 32151-target/loop3 32151-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:50.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:50.090" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:50.090" starttime="20210202 15:21:46.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:50.091" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:50.091" starttime="20210202 15:21:50.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:50.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:50.092" starttime="20210202 15:21:50.091"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:50.092" starttime="20210202 15:21:46.370"></status>
</kw>
<msg timestamp="20210202 15:21:50.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:50.093" starttime="20210202 15:21:46.370"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:50.093" starttime="20210202 15:21:46.369"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:50.095" level="INFO">Running command 'ozone sh key list 32151-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:53.459" level="INFO">${rc} = 255</msg>
<msg timestamp="20210202 15:21:53.459" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210202 15:21:53.460" starttime="20210202 15:21:50.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:53.461" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210202 15:21:53.461" starttime="20210202 15:21:53.460"></status>
</kw>
<msg timestamp="20210202 15:21:53.461" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210202 15:21:53.461" starttime="20210202 15:21:50.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210202 15:21:53.462" starttime="20210202 15:21:53.462"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:21:53.462" critical="yes" starttime="20210202 15:21:39.413"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:53.470" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:53.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:53.473" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:21:53.473" starttime="20210202 15:21:53.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:53.474" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:21:53.474" starttime="20210202 15:21:53.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:53.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:53.475" starttime="20210202 15:21:53.474"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:53.475" starttime="20210202 15:21:53.467"></status>
</kw>
<msg timestamp="20210202 15:21:53.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:53.475" starttime="20210202 15:21:53.466"></status>
</kw>
<msg timestamp="20210202 15:21:53.475" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:21:53.475" starttime="20210202 15:21:53.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:21:53.476" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:21:53.476" starttime="20210202 15:21:53.476"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:53.481" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:53.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:53.515" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:53.515" starttime="20210202 15:21:53.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:53.516" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:53.516" starttime="20210202 15:21:53.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:53.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:53.517" starttime="20210202 15:21:53.516"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:53.517" starttime="20210202 15:21:53.478"></status>
</kw>
<msg timestamp="20210202 15:21:53.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:53.517" starttime="20210202 15:21:53.477"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:53.518" starttime="20210202 15:21:53.477"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:53.518" starttime="20210202 15:21:53.476"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:53.518" starttime="20210202 15:21:53.465"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:53.518" starttime="20210202 15:21:53.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:53.521" level="INFO">Running command 'ozone sh bucket link 32151-source/bucket1 32151-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:21:56.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:21:56.864" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:21:56.864" starttime="20210202 15:21:53.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:21:56.865" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:21:56.865" starttime="20210202 15:21:56.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:21:56.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:21:56.866" starttime="20210202 15:21:56.865"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:56.866" starttime="20210202 15:21:53.519"></status>
</kw>
<msg timestamp="20210202 15:21:56.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:21:56.866" starttime="20210202 15:21:53.519"></status>
</kw>
<status status="PASS" endtime="20210202 15:21:56.867" starttime="20210202 15:21:53.518"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:21:56.870" level="INFO">Running command 'ozone sh key put 32151-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:22:04.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:22:04.851" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:22:04.851" starttime="20210202 15:21:56.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:22:04.852" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:22:04.852" starttime="20210202 15:22:04.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:22:04.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:22:04.853" starttime="20210202 15:22:04.852"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:04.853" starttime="20210202 15:21:56.868"></status>
</kw>
<msg timestamp="20210202 15:22:04.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:22:04.853" starttime="20210202 15:21:56.867"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:04.854" starttime="20210202 15:21:56.867"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210202 15:22:04.856" level="INFO">${postfix} = 53289</msg>
<status status="PASS" endtime="20210202 15:22:04.856" starttime="20210202 15:22:04.855"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210202 15:22:04.856" level="INFO">${tmpfile} = /tmp/tempkey-53289</msg>
<status status="PASS" endtime="20210202 15:22:04.856" starttime="20210202 15:22:04.856"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:22:04.860" level="INFO">Running command 'ozone sh key get -f 32151-target/link1/key3 /tmp/tempkey-53289 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:22:10.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:22:10.292" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:22:10.293" starttime="20210202 15:22:04.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:22:10.294" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:22:10.294" starttime="20210202 15:22:10.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:22:10.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:22:10.295" starttime="20210202 15:22:10.294"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:10.295" starttime="20210202 15:22:04.857"></status>
</kw>
<msg timestamp="20210202 15:22:10.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:22:10.295" starttime="20210202 15:22:04.857"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:10.296" starttime="20210202 15:22:04.856"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210202 15:22:10.297" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-53289 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:22:10.300" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210202 15:22:10.300" starttime="20210202 15:22:10.296"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:22:10.303" level="INFO">Running command 'rm -f /tmp/tempkey-53289 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:22:10.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:22:10.306" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:22:10.306" starttime="20210202 15:22:10.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:22:10.306" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:22:10.307" starttime="20210202 15:22:10.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:22:10.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:22:10.307" starttime="20210202 15:22:10.307"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:10.307" starttime="20210202 15:22:10.301"></status>
</kw>
<msg timestamp="20210202 15:22:10.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:22:10.308" starttime="20210202 15:22:10.301"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:10.308" starttime="20210202 15:22:10.300"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:22:10.308" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210202 15:22:10.308" starttime="20210202 15:22:10.308"></status>
</kw>
<msg timestamp="20210202 15:22:10.309" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210202 15:22:10.309" starttime="20210202 15:22:04.854"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:22:10.309" starttime="20210202 15:22:10.309"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:10.310" starttime="20210202 15:22:04.854"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:22:10.310" critical="yes" starttime="20210202 15:21:53.463"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:22:10.316" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:22:10.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:22:10.319" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210202 15:22:10.319" starttime="20210202 15:22:10.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:22:10.320" level="INFO">scm</msg>
<status status="PASS" endtime="20210202 15:22:10.320" starttime="20210202 15:22:10.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:22:10.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:22:10.321" starttime="20210202 15:22:10.320"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:10.321" starttime="20210202 15:22:10.314"></status>
</kw>
<msg timestamp="20210202 15:22:10.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:22:10.322" starttime="20210202 15:22:10.314"></status>
</kw>
<msg timestamp="20210202 15:22:10.322" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210202 15:22:10.322" starttime="20210202 15:22:10.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:22:10.323" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:22:10.323" starttime="20210202 15:22:10.322"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:22:10.327" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:22:10.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:22:10.369" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:22:10.369" starttime="20210202 15:22:10.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:22:10.370" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:22:10.370" starttime="20210202 15:22:10.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:22:10.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:22:10.371" starttime="20210202 15:22:10.371"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:10.372" starttime="20210202 15:22:10.324"></status>
</kw>
<msg timestamp="20210202 15:22:10.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:22:10.372" starttime="20210202 15:22:10.324"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:10.372" starttime="20210202 15:22:10.323"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:10.372" starttime="20210202 15:22:10.323"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:10.372" starttime="20210202 15:22:10.313"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:10.373" starttime="20210202 15:22:10.312"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:22:10.376" level="INFO">Running command 'ozone sh bucket delete 32151-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:22:14.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:22:14.306" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:22:14.306" starttime="20210202 15:22:10.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:22:14.307" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:22:14.307" starttime="20210202 15:22:14.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:22:14.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:22:14.308" starttime="20210202 15:22:14.308"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:14.309" starttime="20210202 15:22:10.374"></status>
</kw>
<msg timestamp="20210202 15:22:14.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:22:14.309" starttime="20210202 15:22:10.373"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:14.309" starttime="20210202 15:22:10.373"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:22:14.313" level="INFO">Running command 'ozone sh bucket list 32151-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:22:18.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:22:18.115" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T...</msg>
<status status="PASS" endtime="20210202 15:22:18.115" starttime="20210202 15:22:14.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:22:18.116" level="INFO">{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:21:20.146Z",
  "modificationTime" : "2021-02-02T15:21:20.146Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:19:51.459Z",
  "modificationTime" : "2021-02-02T15:19:51.459Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:19:29.944Z",
  "modificationTime" : "2021-02-02T15:19:47.978Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:21:13.179Z",
  "modificationTime" : "2021-02-02T15:21:13.179Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:21:56.688Z",
  "modificationTime" : "2021-02-02T15:21:56.688Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:21:49.943Z",
  "modificationTime" : "2021-02-02T15:21:49.943Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:21:42.958Z",
  "modificationTime" : "2021-02-02T15:21:42.958Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:21:46.192Z",
  "modificationTime" : "2021-02-02T15:21:46.192Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:19:22.976Z",
  "modificationTime" : "2021-02-02T15:19:44.442Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:19:26.389Z",
  "modificationTime" : "2021-02-02T15:19:26.389Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32151-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210202 15:22:18.116" starttime="20210202 15:22:18.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:22:18.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:22:18.117" starttime="20210202 15:22:18.117"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:18.117" starttime="20210202 15:22:14.310"></status>
</kw>
<msg timestamp="20210202 15:22:18.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:22:18.118" starttime="20210202 15:22:14.310"></status>
</kw>
<msg timestamp="20210202 15:22:18.118" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "32151-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T...</msg>
<status status="PASS" endtime="20210202 15:22:18.118" starttime="20210202 15:22:14.309"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210202 15:22:18.119" starttime="20210202 15:22:18.118"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:22:18.123" level="INFO">Running command 'ozone sh key list 32151-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:22:22.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:22:22.037" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210202 15:22:22.037" starttime="20210202 15:22:18.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:22:22.038" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210202 15:22:22.038" starttime="20210202 15:22:22.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:22:22.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:22:22.039" starttime="20210202 15:22:22.038"></status>
</kw>
<status status="PASS" endtime="20210202 15:22:22.039" starttime="20210202 15:22:18.120"></status>
</kw>
<msg timestamp="20210202 15:22:22.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:22:22.039" starttime="20210202 15:22:18.119"></status>
</kw>
<msg timestamp="20210202 15:22:22.040" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210202 15:22:22.040" starttime="20210202 15:22:18.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210202 15:22:22.040" starttime="20210202 15:22:22.040"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:22:22.041" critical="yes" starttime="20210202 15:22:10.311"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210202 15:22:22.044" starttime="20210202 15:18:58.899"></status>
</suite>
<status status="PASS" elapsedtime="231047" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
