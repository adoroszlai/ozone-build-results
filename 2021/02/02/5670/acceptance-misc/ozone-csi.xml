<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210202 14:39:03.542" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:43.728" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:43.729" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:43.729" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:43.729" starttime="20210202 14:38:43.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:43.730" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:43.731" starttime="20210202 14:38:43.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:43.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:43.731" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:43.732" starttime="20210202 14:38:43.731"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:43.732" starttime="20210202 14:38:43.722"></status>
</kw>
<msg timestamp="20210202 14:38:43.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:43.732" starttime="20210202 14:38:43.722"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:43.732" starttime="20210202 14:38:43.721"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:43.733" starttime="20210202 14:38:43.721"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:44.740" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:44.741" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:44.744" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:44.744" starttime="20210202 14:38:44.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:44.745" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:44.745" starttime="20210202 14:38:44.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:44.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:44.746" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:44.746" starttime="20210202 14:38:44.745"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:44.746" starttime="20210202 14:38:44.734"></status>
</kw>
<msg timestamp="20210202 14:38:44.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:44.747" starttime="20210202 14:38:44.734"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:44.747" starttime="20210202 14:38:44.734"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:44.747" starttime="20210202 14:38:44.733"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:45.751" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:45.753" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:45.753" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:45.753" starttime="20210202 14:38:45.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:45.754" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:45.754" starttime="20210202 14:38:45.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:45.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:45.755" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:45.755" starttime="20210202 14:38:45.754"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:45.755" starttime="20210202 14:38:45.749"></status>
</kw>
<msg timestamp="20210202 14:38:45.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:45.756" starttime="20210202 14:38:45.749"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:45.756" starttime="20210202 14:38:45.748"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:45.756" starttime="20210202 14:38:45.747"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:46.761" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:46.763" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:46.763" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:46.763" starttime="20210202 14:38:46.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:46.765" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:46.765" starttime="20210202 14:38:46.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:46.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:46.766" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:46.766" starttime="20210202 14:38:46.765"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:46.766" starttime="20210202 14:38:46.758"></status>
</kw>
<msg timestamp="20210202 14:38:46.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:46.766" starttime="20210202 14:38:46.758"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:46.768" starttime="20210202 14:38:46.757"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:46.769" starttime="20210202 14:38:46.757"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:47.773" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:47.775" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:47.775" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:47.775" starttime="20210202 14:38:47.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:47.778" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:47.778" starttime="20210202 14:38:47.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:47.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:47.779" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:47.779" starttime="20210202 14:38:47.778"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:47.779" starttime="20210202 14:38:47.771"></status>
</kw>
<msg timestamp="20210202 14:38:47.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:47.780" starttime="20210202 14:38:47.771"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:47.780" starttime="20210202 14:38:47.770"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:47.780" starttime="20210202 14:38:47.769"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:48.786" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:48.788" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:48.788" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:48.788" starttime="20210202 14:38:48.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:48.789" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:48.789" starttime="20210202 14:38:48.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:48.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:48.790" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:48.790" starttime="20210202 14:38:48.789"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:48.790" starttime="20210202 14:38:48.783"></status>
</kw>
<msg timestamp="20210202 14:38:48.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:48.790" starttime="20210202 14:38:48.783"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:48.791" starttime="20210202 14:38:48.782"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:48.791" starttime="20210202 14:38:48.782"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:49.796" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:49.797" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:49.797" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:49.797" starttime="20210202 14:38:49.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:49.798" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:49.798" starttime="20210202 14:38:49.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:49.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:49.799" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:49.799" starttime="20210202 14:38:49.798"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:49.799" starttime="20210202 14:38:49.793"></status>
</kw>
<msg timestamp="20210202 14:38:49.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:49.800" starttime="20210202 14:38:49.793"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:49.800" starttime="20210202 14:38:49.792"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:49.800" starttime="20210202 14:38:49.792"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:50.805" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:50.806" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:50.806" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:50.806" starttime="20210202 14:38:50.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:50.807" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:50.807" starttime="20210202 14:38:50.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:50.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:50.808" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:50.808" starttime="20210202 14:38:50.807"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:50.808" starttime="20210202 14:38:50.802"></status>
</kw>
<msg timestamp="20210202 14:38:50.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:50.809" starttime="20210202 14:38:50.802"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:50.809" starttime="20210202 14:38:50.801"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:50.809" starttime="20210202 14:38:50.801"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:51.815" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:51.817" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:51.817" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:51.817" starttime="20210202 14:38:51.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:51.818" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:51.818" starttime="20210202 14:38:51.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:51.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:51.819" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:51.819" starttime="20210202 14:38:51.818"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:51.819" starttime="20210202 14:38:51.812"></status>
</kw>
<msg timestamp="20210202 14:38:51.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:51.820" starttime="20210202 14:38:51.811"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:51.820" starttime="20210202 14:38:51.810"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:51.820" starttime="20210202 14:38:51.810"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:52.824" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:52.826" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:52.826" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:52.826" starttime="20210202 14:38:52.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:52.827" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:52.827" starttime="20210202 14:38:52.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:52.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:52.828" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:52.828" starttime="20210202 14:38:52.827"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:52.828" starttime="20210202 14:38:52.822"></status>
</kw>
<msg timestamp="20210202 14:38:52.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:52.828" starttime="20210202 14:38:52.822"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:52.829" starttime="20210202 14:38:52.821"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:52.829" starttime="20210202 14:38:52.821"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:53.834" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:53.835" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:53.835" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:53.835" starttime="20210202 14:38:53.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:53.836" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:53.836" starttime="20210202 14:38:53.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:53.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:53.837" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:53.837" starttime="20210202 14:38:53.837"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:53.838" starttime="20210202 14:38:53.831"></status>
</kw>
<msg timestamp="20210202 14:38:53.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:53.838" starttime="20210202 14:38:53.830"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:53.838" starttime="20210202 14:38:53.830"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:53.838" starttime="20210202 14:38:53.829"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:54.844" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:54.845" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:54.845" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:54.845" starttime="20210202 14:38:54.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:54.846" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:54.846" starttime="20210202 14:38:54.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:54.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:54.847" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:54.847" starttime="20210202 14:38:54.846"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:54.848" starttime="20210202 14:38:54.841"></status>
</kw>
<msg timestamp="20210202 14:38:54.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:54.848" starttime="20210202 14:38:54.840"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:54.848" starttime="20210202 14:38:54.840"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:54.848" starttime="20210202 14:38:54.839"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:55.859" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:55.861" level="INFO">${rc} = 1</msg>
<msg timestamp="20210202 14:38:55.861" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:55.861" starttime="20210202 14:38:55.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:55.862" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:55.862" starttime="20210202 14:38:55.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:55.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210202 14:38:55.863" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210202 14:38:55.863" starttime="20210202 14:38:55.862"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:55.864" starttime="20210202 14:38:55.852"></status>
</kw>
<msg timestamp="20210202 14:38:55.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210202 14:38:55.864" starttime="20210202 14:38:55.851"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:55.864" starttime="20210202 14:38:55.850"></status>
</kw>
<status status="FAIL" endtime="20210202 14:38:55.864" starttime="20210202 14:38:55.849"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:56.869" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:56.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:38:56.870" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:38:56.870" starttime="20210202 14:38:56.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:56.871" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:38:56.871" starttime="20210202 14:38:56.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:56.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:38:56.872" starttime="20210202 14:38:56.871"></status>
</kw>
<status status="PASS" endtime="20210202 14:38:56.872" starttime="20210202 14:38:56.866"></status>
</kw>
<msg timestamp="20210202 14:38:56.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:38:56.873" starttime="20210202 14:38:56.866"></status>
</kw>
<status status="PASS" endtime="20210202 14:38:56.873" starttime="20210202 14:38:56.866"></status>
</kw>
<status status="PASS" endtime="20210202 14:38:56.873" starttime="20210202 14:38:56.865"></status>
</kw>
<status status="PASS" endtime="20210202 14:38:56.873" starttime="20210202 14:38:43.720"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20210202 14:38:56.873" critical="yes" starttime="20210202 14:38:43.720"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:38:56.878" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:38:57.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:38:57.176" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20210202 14:38:57.176" starttime="20210202 14:38:56.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:38:57.178" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20210202 14:38:57.178" starttime="20210202 14:38:57.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:38:57.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:38:57.178" starttime="20210202 14:38:57.178"></status>
</kw>
<status status="PASS" endtime="20210202 14:38:57.179" starttime="20210202 14:38:56.876"></status>
</kw>
<msg timestamp="20210202 14:38:57.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:38:57.179" starttime="20210202 14:38:56.875"></status>
</kw>
<msg timestamp="20210202 14:38:57.179" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20210202 14:38:57.179" starttime="20210202 14:38:56.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20210202 14:38:57.180" starttime="20210202 14:38:57.180"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20210202 14:38:57.181" critical="yes" starttime="20210202 14:38:56.874"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20210202 14:38:57.182" starttime="20210202 14:38:43.657"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
