<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210209 11:45:44.772" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:41:34.882" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:41:39.096" level="INFO">${rc} = 255</msg>
<msg timestamp="20210209 11:41:39.096" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210209 11:41:39.096" starttime="20210209 11:41:34.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:41:39.097" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210209 11:41:39.098" starttime="20210209 11:41:39.097"></status>
</kw>
<msg timestamp="20210209 11:41:39.098" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210209 11:41:39.098" starttime="20210209 11:41:34.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:41:39.104" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:41:42.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:41:42.976" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:41:42.976" starttime="20210209 11:41:39.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:41:42.977" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:41:42.978" starttime="20210209 11:41:42.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:41:42.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:41:42.978" starttime="20210209 11:41:42.978"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:42.979" starttime="20210209 11:41:39.100"></status>
</kw>
<msg timestamp="20210209 11:41:42.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:41:42.979" starttime="20210209 11:41:39.100"></status>
</kw>
<msg timestamp="20210209 11:41:42.980" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210209 11:41:42.980" starttime="20210209 11:41:39.099"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210209 11:41:42.980" starttime="20210209 11:41:42.980"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:42.981" starttime="20210209 11:41:39.099"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:42.981" starttime="20210209 11:41:39.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:41:42.986" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:41:46.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:41:46.553" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:41:46.553" starttime="20210209 11:41:42.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:41:46.554" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:41:46.554" starttime="20210209 11:41:46.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:41:46.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:41:46.555" starttime="20210209 11:41:46.554"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:46.556" starttime="20210209 11:41:42.983"></status>
</kw>
<msg timestamp="20210209 11:41:46.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:41:46.556" starttime="20210209 11:41:42.982"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:46.556" starttime="20210209 11:41:42.982"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:46.556" starttime="20210209 11:41:42.981"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:46.557" starttime="20210209 11:41:42.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210209 11:41:46.557" starttime="20210209 11:41:46.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:41:46.561" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:41:49.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:41:49.821" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:41...</msg>
<status status="PASS" endtime="20210209 11:41:49.821" starttime="20210209 11:41:46.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:41:49.822" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:41:46.337Z",
  "modificationTime" : "2021-02-09T11:41:46.337Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210209 11:41:49.822" starttime="20210209 11:41:49.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:41:49.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:41:49.823" starttime="20210209 11:41:49.823"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:49.823" starttime="20210209 11:41:46.558"></status>
</kw>
<msg timestamp="20210209 11:41:49.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:41:49.824" starttime="20210209 11:41:46.558"></status>
</kw>
<msg timestamp="20210209 11:41:49.824" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:41...</msg>
<status status="PASS" endtime="20210209 11:41:49.824" starttime="20210209 11:41:46.557"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210209 11:41:49.825" starttime="20210209 11:41:49.824"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:41:49.828" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:41:49.828" starttime="20210209 11:41:49.828"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:41:49.829" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:41:49.829" starttime="20210209 11:41:49.829"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:49.829" starttime="20210209 11:41:49.827"></status>
</kw>
<msg timestamp="20210209 11:41:49.829" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:41:49.829" starttime="20210209 11:41:49.827"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:49.830" starttime="20210209 11:41:49.826"></status>
</kw>
<msg timestamp="20210209 11:41:49.830" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210209 11:41:49.830" starttime="20210209 11:41:49.825"></status>
</kw>
<msg timestamp="20210209 11:41:49.830" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210209 11:41:49.830" starttime="20210209 11:41:49.825"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:41:49.833" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:41:53.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:41:53.267" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:41:53.267" starttime="20210209 11:41:49.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:41:53.268" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:41:53.268" starttime="20210209 11:41:53.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:41:53.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:41:53.269" starttime="20210209 11:41:53.268"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:53.269" starttime="20210209 11:41:49.831"></status>
</kw>
<msg timestamp="20210209 11:41:53.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:41:53.269" starttime="20210209 11:41:49.831"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:53.269" starttime="20210209 11:41:49.830"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:41:53.273" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:42:01.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:42:01.966" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:42:01.966" starttime="20210209 11:41:53.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:42:01.968" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:42:01.968" starttime="20210209 11:42:01.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:42:01.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:42:01.968" starttime="20210209 11:42:01.968"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:01.969" starttime="20210209 11:41:53.271"></status>
</kw>
<msg timestamp="20210209 11:42:01.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:42:01.969" starttime="20210209 11:41:53.270"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:01.969" starttime="20210209 11:41:53.270"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:42:01.974" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:42:07.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:42:07.693" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:42:07.693" starttime="20210209 11:42:01.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:42:07.694" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:42:07.695" starttime="20210209 11:42:07.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:42:07.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:42:07.695" starttime="20210209 11:42:07.695"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:07.695" starttime="20210209 11:42:01.971"></status>
</kw>
<msg timestamp="20210209 11:42:07.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:42:07.696" starttime="20210209 11:42:01.970"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:07.696" starttime="20210209 11:42:01.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:42:07.700" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:42:13.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:42:13.171" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:42:13.171" starttime="20210209 11:42:07.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:42:13.172" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:42:13.172" starttime="20210209 11:42:13.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:42:13.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:42:13.173" starttime="20210209 11:42:13.172"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:13.173" starttime="20210209 11:42:07.697"></status>
</kw>
<msg timestamp="20210209 11:42:13.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:42:13.173" starttime="20210209 11:42:07.697"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:13.174" starttime="20210209 11:42:07.696"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:42:13.174" critical="yes" starttime="20210209 11:41:34.877"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:42:13.179" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:42:13.179" starttime="20210209 11:42:13.179"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:42:13.180" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:42:13.180" starttime="20210209 11:42:13.179"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:13.180" starttime="20210209 11:42:13.178"></status>
</kw>
<msg timestamp="20210209 11:42:13.180" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:42:13.180" starttime="20210209 11:42:13.178"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:13.181" starttime="20210209 11:42:13.177"></status>
</kw>
<msg timestamp="20210209 11:42:13.181" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210209 11:42:13.181" starttime="20210209 11:42:13.176"></status>
</kw>
<msg timestamp="20210209 11:42:13.181" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210209 11:42:13.181" starttime="20210209 11:42:13.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:42:13.185" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:42:16.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:42:16.498" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:42:16.498" starttime="20210209 11:42:13.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:42:16.500" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:42:16.500" starttime="20210209 11:42:16.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:42:16.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:42:16.501" starttime="20210209 11:42:16.500"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:16.501" starttime="20210209 11:42:13.182"></status>
</kw>
<msg timestamp="20210209 11:42:16.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:42:16.501" starttime="20210209 11:42:13.182"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:16.501" starttime="20210209 11:42:13.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:42:16.507" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:42:19.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:42:19.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:42:19.848" starttime="20210209 11:42:16.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:42:19.849" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:42:19.849" starttime="20210209 11:42:19.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:42:19.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:42:19.849" starttime="20210209 11:42:19.849"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:19.850" starttime="20210209 11:42:16.503"></status>
</kw>
<msg timestamp="20210209 11:42:19.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:42:19.850" starttime="20210209 11:42:16.502"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:19.850" starttime="20210209 11:42:16.501"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:42:19.850" critical="yes" starttime="20210209 11:42:13.175"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210209 11:42:19.851" starttime="20210209 11:41:34.812"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:44:21.128" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:44:21.128" starttime="20210209 11:44:21.128"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:44:21.129" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:44:21.129" starttime="20210209 11:44:21.128"></status>
</kw>
<status status="PASS" endtime="20210209 11:44:21.129" starttime="20210209 11:44:21.127"></status>
</kw>
<msg timestamp="20210209 11:44:21.129" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:44:21.129" starttime="20210209 11:44:21.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:44:21.130" starttime="20210209 11:44:21.130"></status>
</kw>
<msg timestamp="20210209 11:44:21.130" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210209 11:44:21.130" starttime="20210209 11:44:21.129"></status>
</kw>
<status status="PASS" endtime="20210209 11:44:21.130" starttime="20210209 11:44:21.126"></status>
</kw>
<msg timestamp="20210209 11:44:21.130" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:44:21.131" starttime="20210209 11:44:21.125"></status>
</kw>
<msg timestamp="20210209 11:44:21.131" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:44:21.131" starttime="20210209 11:44:21.124"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:44:21.131" level="INFO">${random} = 63067</msg>
<status status="PASS" endtime="20210209 11:44:21.131" starttime="20210209 11:44:21.131"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:44:21.137" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-63067 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:44:24.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:44:24.929" level="INFO">${output} = 2021-02-09 11:44:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:44:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210209 11:44:24.929" starttime="20210209 11:44:21.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:44:24.930" level="INFO">2021-02-09 11:44:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:44:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:44:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:44:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:44:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-97C484B4092E-&gt;76a14c7c-5b10-44c3-889a-cd4c5fea81f7
2021-02-09 11:44:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210209 11:44:24.930" starttime="20210209 11:44:24.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:44:24.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:44:24.931" starttime="20210209 11:44:24.930"></status>
</kw>
<status status="PASS" endtime="20210209 11:44:24.931" starttime="20210209 11:44:21.132"></status>
</kw>
<msg timestamp="20210209 11:44:24.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:44:24.931" starttime="20210209 11:44:21.132"></status>
</kw>
<msg timestamp="20210209 11:44:24.931" level="INFO">${result} = 2021-02-09 11:44:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:44:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210209 11:44:24.931" starttime="20210209 11:44:21.131"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:44:24.935" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:44:26.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:44:26.970" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:41 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:42 ofs://om/volume1/bucket1/ozone-34178
-rw-...</msg>
<status status="PASS" endtime="20210209 11:44:26.970" starttime="20210209 11:44:24.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:44:26.972" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:41 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:42 ofs://om/volume1/bucket1/ozone-34178
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:44 ofs://om/volume1/bucket1/ozone-63067
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:42 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:43 ofs://om/volume1/bucket1/wordcount-msNpPUCf.txt</msg>
<status status="PASS" endtime="20210209 11:44:26.972" starttime="20210209 11:44:26.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:44:26.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:44:26.973" starttime="20210209 11:44:26.972"></status>
</kw>
<status status="PASS" endtime="20210209 11:44:26.973" starttime="20210209 11:44:24.933"></status>
</kw>
<msg timestamp="20210209 11:44:26.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:44:26.973" starttime="20210209 11:44:24.932"></status>
</kw>
<msg timestamp="20210209 11:44:26.974" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:41 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:42 ofs://om/volume1/bucket1/ozone-34178
-rw-...</msg>
<status status="PASS" endtime="20210209 11:44:26.974" starttime="20210209 11:44:24.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:44:26.974" starttime="20210209 11:44:26.974"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:44:26.975" critical="yes" starttime="20210209 11:44:21.123"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210209 11:44:26.977" starttime="20210209 11:44:21.065"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:42:47.916" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:42:47.916" starttime="20210209 11:42:47.915"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:42:47.916" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:42:47.916" starttime="20210209 11:42:47.916"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:47.917" starttime="20210209 11:42:47.914"></status>
</kw>
<msg timestamp="20210209 11:42:47.917" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:42:47.917" starttime="20210209 11:42:47.914"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:47.917" starttime="20210209 11:42:47.913"></status>
</kw>
<msg timestamp="20210209 11:42:47.917" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:42:47.917" starttime="20210209 11:42:47.912"></status>
</kw>
<msg timestamp="20210209 11:42:47.918" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:42:47.918" starttime="20210209 11:42:47.912"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:42:47.918" level="INFO">${random} = 34178</msg>
<status status="PASS" endtime="20210209 11:42:47.918" starttime="20210209 11:42:47.918"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:42:47.923" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-34178 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:42:52.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:42:52.016" level="INFO">${output} = 2021-02-09 11:42:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:42:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210209 11:42:52.016" starttime="20210209 11:42:47.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:42:52.018" level="INFO">2021-02-09 11:42:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:42:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:42:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:42:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:42:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4A7F3B6EB07A-&gt;76a14c7c-5b10-44c3-889a-cd4c5fea81f7
2021-02-09 11:42:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210209 11:42:52.018" starttime="20210209 11:42:52.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:42:52.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:42:52.018" starttime="20210209 11:42:52.018"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:52.019" starttime="20210209 11:42:47.919"></status>
</kw>
<msg timestamp="20210209 11:42:52.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:42:52.019" starttime="20210209 11:42:47.919"></status>
</kw>
<msg timestamp="20210209 11:42:52.019" level="INFO">${result} = 2021-02-09 11:42:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:42:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210209 11:42:52.019" starttime="20210209 11:42:47.918"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:42:52.023" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:42:53.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:42:53.982" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:41 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:42 o3fs://bucket1.volume1.om/ozone-34178
dr...</msg>
<status status="PASS" endtime="20210209 11:42:53.983" starttime="20210209 11:42:52.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:42:53.984" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:41 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:42 o3fs://bucket1.volume1.om/ozone-34178
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:42 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210209 11:42:53.984" starttime="20210209 11:42:53.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:42:53.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:42:53.985" starttime="20210209 11:42:53.984"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:53.985" starttime="20210209 11:42:52.020"></status>
</kw>
<msg timestamp="20210209 11:42:53.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:42:53.985" starttime="20210209 11:42:52.020"></status>
</kw>
<msg timestamp="20210209 11:42:53.985" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:41 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:42 o3fs://bucket1.volume1.om/ozone-34178
dr...</msg>
<status status="PASS" endtime="20210209 11:42:53.985" starttime="20210209 11:42:52.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:42:53.986" starttime="20210209 11:42:53.986"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:42:53.986" critical="yes" starttime="20210209 11:42:47.911"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210209 11:42:53.988" starttime="20210209 11:42:47.855"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:42:43.278" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:42:43.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:42:43.282" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210209 11:42:43.282" starttime="20210209 11:42:43.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:42:43.283" level="INFO">rm</msg>
<status status="PASS" endtime="20210209 11:42:43.283" starttime="20210209 11:42:43.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:42:43.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:42:43.284" starttime="20210209 11:42:43.283"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:43.284" starttime="20210209 11:42:43.274"></status>
</kw>
<msg timestamp="20210209 11:42:43.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:42:43.284" starttime="20210209 11:42:43.274"></status>
</kw>
<msg timestamp="20210209 11:42:43.284" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210209 11:42:43.284" starttime="20210209 11:42:43.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:42:43.286" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:42:43.286" starttime="20210209 11:42:43.285"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:42:43.291" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:42:43.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:42:43.299" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:42:43.299" starttime="20210209 11:42:43.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:42:43.300" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:42:43.301" starttime="20210209 11:42:43.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:42:43.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:42:43.301" starttime="20210209 11:42:43.301"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:43.302" starttime="20210209 11:42:43.287"></status>
</kw>
<msg timestamp="20210209 11:42:43.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:42:43.302" starttime="20210209 11:42:43.287"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:43.302" starttime="20210209 11:42:43.286"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:43.302" starttime="20210209 11:42:43.286"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:43.302" starttime="20210209 11:42:43.273"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:42:43.303" critical="yes" starttime="20210209 11:42:43.272"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210209 11:42:43.303" starttime="20210209 11:42:43.213"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:41:30.126" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:41:30.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:41:30.129" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210209 11:41:30.129" starttime="20210209 11:41:30.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:41:30.130" level="INFO">om</msg>
<status status="PASS" endtime="20210209 11:41:30.131" starttime="20210209 11:41:30.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:41:30.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:41:30.131" starttime="20210209 11:41:30.131"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:30.132" starttime="20210209 11:41:30.123"></status>
</kw>
<msg timestamp="20210209 11:41:30.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:41:30.132" starttime="20210209 11:41:30.122"></status>
</kw>
<msg timestamp="20210209 11:41:30.132" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210209 11:41:30.132" starttime="20210209 11:41:30.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:41:30.133" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:41:30.133" starttime="20210209 11:41:30.132"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:41:30.136" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:41:30.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:41:30.143" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:41:30.143" starttime="20210209 11:41:30.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:41:30.144" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:41:30.144" starttime="20210209 11:41:30.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:41:30.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:41:30.145" starttime="20210209 11:41:30.144"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:30.145" starttime="20210209 11:41:30.134"></status>
</kw>
<msg timestamp="20210209 11:41:30.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:41:30.145" starttime="20210209 11:41:30.134"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:30.145" starttime="20210209 11:41:30.134"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:30.145" starttime="20210209 11:41:30.133"></status>
</kw>
<status status="PASS" endtime="20210209 11:41:30.146" starttime="20210209 11:41:30.121"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:41:30.146" critical="yes" starttime="20210209 11:41:30.120"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210209 11:41:30.147" starttime="20210209 11:41:30.065"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:44:31.726" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:44:31.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:44:31.732" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:44:31.732" starttime="20210209 11:44:31.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:44:31.733" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:44:31.734" starttime="20210209 11:44:31.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:44:31.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:44:31.734" starttime="20210209 11:44:31.734"></status>
</kw>
<status status="PASS" endtime="20210209 11:44:31.735" starttime="20210209 11:44:31.722"></status>
</kw>
<msg timestamp="20210209 11:44:31.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:44:31.735" starttime="20210209 11:44:31.722"></status>
</kw>
<msg timestamp="20210209 11:44:31.735" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:44:31.735" starttime="20210209 11:44:31.721"></status>
</kw>
<msg timestamp="20210209 11:44:31.735" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:44:31.735" starttime="20210209 11:44:31.721"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:44:31.740" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:44:31.740" starttime="20210209 11:44:31.740"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:44:31.741" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:44:31.741" starttime="20210209 11:44:31.740"></status>
</kw>
<status status="PASS" endtime="20210209 11:44:31.741" starttime="20210209 11:44:31.739"></status>
</kw>
<msg timestamp="20210209 11:44:31.741" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:44:31.741" starttime="20210209 11:44:31.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:44:31.742" starttime="20210209 11:44:31.742"></status>
</kw>
<msg timestamp="20210209 11:44:31.742" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210209 11:44:31.742" starttime="20210209 11:44:31.741"></status>
</kw>
<status status="PASS" endtime="20210209 11:44:31.743" starttime="20210209 11:44:31.738"></status>
</kw>
<msg timestamp="20210209 11:44:31.743" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:44:31.743" starttime="20210209 11:44:31.736"></status>
</kw>
<msg timestamp="20210209 11:44:31.743" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:44:31.743" starttime="20210209 11:44:31.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:44:31.746" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:45:04.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:45:04.024" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:44:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:44:34 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210209 11:45:04.025" starttime="20210209 11:44:31.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:45:04.026" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:44:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:44:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:44:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:44:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:44:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1A93FDC9E8B5-&gt;76a14c7c-5b10-44c3-889a-cd4c5fea81f7
2021-02-09 11:44:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-09 11:44:35 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.9:8032
2021-02-09 11:44:35 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.3:10200
2021-02-09 11:44:36 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612871076079, maxDate=1613475876079, sequenceNumber=3, masterKeyId=2))
2021-02-09 11:44:36 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.6:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f6 90 ee b4 f8 2e 38 f6 98 a0 d5 fa 2e 40 03 48 01 5a 0d 32 31 36 30 33 30 32 36 37 30 31 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-09 11:44:36 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612871076079, maxDate=1613475876079, sequenceNumber=3, masterKeyId=2)
2021-02-09 11:44:36 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-09 11:44:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B2C687DABC86-&gt;740059f4-f9c1-45ef-9abd-9493695f691b
2021-02-09 11:44:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:44:36 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-09 11:44:36 INFO  JobSubmitter:202 - number of splits:3
2021-02-09 11:44:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612870842884_0003
2021-02-09 11:44:36 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612871076079, maxDate=1613475876079, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.6:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f6 90 ee b4 f8 2e 38 f6 98 a0 d5 fa 2e 40 03 48 01 5a 0d 32 31 36 30 33 30 32 36 37 30 31 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-02-09 11:44:37 INFO  Configuration:2795 - resource-types.xml not found
2021-02-09 11:44:37 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-09 11:44:37 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-09 11:44:37 INFO  YarnClientImpl:329 - Submitted application application_1612870842884_0003
2021-02-09 11:44:37 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612870842884_0003/
2021-02-09 11:44:37 INFO  Job:1614 - Running job: job_1612870842884_0003
2021-02-09 11:44:45 INFO  Job:1635 - Job job_1612870842884_0003 running in uber mode : false
2021-02-09 11:44:45 INFO  Job:1642 -  map 0% reduce 0%
2021-02-09 11:44:55 INFO  Job:1642 -  map 33% reduce 0%
2021-02-09 11:44:57 INFO  Job:1642 -  map 100% reduce 0%
2021-02-09 11:45:02 INFO  Job:1642 -  map 100% reduce 100%
2021-02-09 11:45:03 INFO  Job:1653 - Job job_1612870842884_0003 completed successfully
2021-02-09 11:45:03 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1102357
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45996
		Total time spent by all reduces in occupied slots (ms)=7598
		Total time spent by all map tasks (ms)=22998
		Total time spent by all reduce tasks (ms)=3799
		Total vcore-milliseconds taken by all map tasks=22998
		Total vcore-milliseconds taken by all reduce tasks=3799
		Total megabyte-milliseconds taken by all map tasks=47099904
		Total megabyte-milliseconds taken by all reduce tasks=7780352
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1400
		CPU time spent (ms)=7730
		Physical memory (bytes) snapshot=1634455552
		Virtual memory (bytes) snapshot=14026903552
		Total committed heap usage (bytes)=1520435200
		Peak Map Physical memory (bytes)=556642304
		Peak Map Virtual memory (bytes)=3512160256
		Peak Reduce Physical memory (bytes)=321282048
		Peak Reduce Virtual memory (bytes)=3521421312
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 27.917 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210209 11:45:04.026" starttime="20210209 11:45:04.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:45:04.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:45:04.027" starttime="20210209 11:45:04.026"></status>
</kw>
<status status="PASS" endtime="20210209 11:45:04.027" starttime="20210209 11:44:31.744"></status>
</kw>
<msg timestamp="20210209 11:45:04.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:45:04.027" starttime="20210209 11:44:31.744"></status>
</kw>
<msg timestamp="20210209 11:45:04.028" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:44:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:44:34 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210209 11:45:04.028" starttime="20210209 11:44:31.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:45:04.029" starttime="20210209 11:45:04.028"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:45:04.029" critical="yes" starttime="20210209 11:44:31.720"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:45:04.035" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:45:04.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:45:04.040" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:45:04.040" starttime="20210209 11:45:04.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:45:04.041" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:45:04.041" starttime="20210209 11:45:04.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:45:04.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:45:04.042" starttime="20210209 11:45:04.041"></status>
</kw>
<status status="PASS" endtime="20210209 11:45:04.042" starttime="20210209 11:45:04.033"></status>
</kw>
<msg timestamp="20210209 11:45:04.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:45:04.042" starttime="20210209 11:45:04.032"></status>
</kw>
<msg timestamp="20210209 11:45:04.043" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:45:04.043" starttime="20210209 11:45:04.032"></status>
</kw>
<msg timestamp="20210209 11:45:04.043" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:45:04.043" starttime="20210209 11:45:04.031"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:45:04.043" level="INFO">${random} = AAgW5XFZ</msg>
<status status="PASS" endtime="20210209 11:45:04.043" starttime="20210209 11:45:04.043"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:45:04.048" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:45:04.048" starttime="20210209 11:45:04.047"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:45:04.049" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:45:04.049" starttime="20210209 11:45:04.048"></status>
</kw>
<status status="PASS" endtime="20210209 11:45:04.049" starttime="20210209 11:45:04.047"></status>
</kw>
<msg timestamp="20210209 11:45:04.049" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:45:04.049" starttime="20210209 11:45:04.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:45:04.050" starttime="20210209 11:45:04.050"></status>
</kw>
<msg timestamp="20210209 11:45:04.050" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210209 11:45:04.051" starttime="20210209 11:45:04.049"></status>
</kw>
<status status="PASS" endtime="20210209 11:45:04.051" starttime="20210209 11:45:04.045"></status>
</kw>
<msg timestamp="20210209 11:45:04.051" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:45:04.051" starttime="20210209 11:45:04.044"></status>
</kw>
<msg timestamp="20210209 11:45:04.051" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:45:04.051" starttime="20210209 11:45:04.044"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:45:04.055" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:45:04.055" starttime="20210209 11:45:04.055"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:45:04.056" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:45:04.056" starttime="20210209 11:45:04.056"></status>
</kw>
<status status="PASS" endtime="20210209 11:45:04.056" starttime="20210209 11:45:04.054"></status>
</kw>
<msg timestamp="20210209 11:45:04.056" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:45:04.057" starttime="20210209 11:45:04.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:45:04.059" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210209 11:45:04.059" starttime="20210209 11:45:04.058"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:45:04.059" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210209 11:45:04.059" starttime="20210209 11:45:04.059"></status>
</kw>
<status status="PASS" endtime="20210209 11:45:04.060" starttime="20210209 11:45:04.058"></status>
</kw>
<msg timestamp="20210209 11:45:04.060" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210209 11:45:04.060" starttime="20210209 11:45:04.057"></status>
</kw>
<status status="PASS" endtime="20210209 11:45:04.060" starttime="20210209 11:45:04.053"></status>
</kw>
<msg timestamp="20210209 11:45:04.060" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210209 11:45:04.060" starttime="20210209 11:45:04.052"></status>
</kw>
<msg timestamp="20210209 11:45:04.061" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210209 11:45:04.061" starttime="20210209 11:45:04.051"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:45:04.064" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:45:04.064" starttime="20210209 11:45:04.064"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:45:04.065" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:45:04.065" starttime="20210209 11:45:04.064"></status>
</kw>
<status status="PASS" endtime="20210209 11:45:04.065" starttime="20210209 11:45:04.063"></status>
</kw>
<msg timestamp="20210209 11:45:04.065" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:45:04.065" starttime="20210209 11:45:04.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:45:04.067" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210209 11:45:04.067" starttime="20210209 11:45:04.066"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:45:04.067" level="INFO">${result} = /wordcount-AAgW5XFZ.txt</msg>
<status status="PASS" endtime="20210209 11:45:04.067" starttime="20210209 11:45:04.067"></status>
</kw>
<status status="PASS" endtime="20210209 11:45:04.068" starttime="20210209 11:45:04.066"></status>
</kw>
<msg timestamp="20210209 11:45:04.068" level="INFO">${path_with_leading} = /wordcount-AAgW5XFZ.txt</msg>
<status status="PASS" endtime="20210209 11:45:04.068" starttime="20210209 11:45:04.065"></status>
</kw>
<status status="PASS" endtime="20210209 11:45:04.068" starttime="20210209 11:45:04.062"></status>
</kw>
<msg timestamp="20210209 11:45:04.068" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-AAgW5XFZ.txt</msg>
<status status="PASS" endtime="20210209 11:45:04.068" starttime="20210209 11:45:04.061"></status>
</kw>
<msg timestamp="20210209 11:45:04.069" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-AAgW5XFZ.txt</msg>
<status status="PASS" endtime="20210209 11:45:04.069" starttime="20210209 11:45:04.061"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:45:04.073" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-AAgW5XFZ.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:45:37.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:45:37.505" level="INFO">${output} = 2021-02-09 11:45:06 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.9:8032
2021-02-09 11:45:06 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.3:10200
202...</msg>
<status status="PASS" endtime="20210209 11:45:37.505" starttime="20210209 11:45:04.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:45:37.507" level="INFO">2021-02-09 11:45:06 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.9:8032
2021-02-09 11:45:06 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.3:10200
2021-02-09 11:45:06 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612871106362, maxDate=1613475906362, sequenceNumber=4, masterKeyId=2))
2021-02-09 11:45:06 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.6:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d8 fd ef b4 f8 2e 38 d8 85 a2 d5 fa 2e 40 04 48 01 5a 0d 32 31 36 30 33 30 32 36 37 30 31 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-09 11:45:06 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612871106362, maxDate=1613475906362, sequenceNumber=4, masterKeyId=2)
2021-02-09 11:45:06 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-09 11:45:06 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:45:06 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:45:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:45:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:45:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1218441D0731-&gt;740059f4-f9c1-45ef-9abd-9493695f691b
2021-02-09 11:45:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:45:08 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-09 11:45:08 INFO  JobSubmitter:202 - number of splits:3
2021-02-09 11:45:08 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612870842884_0004
2021-02-09 11:45:08 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612871106362, maxDate=1613475906362, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.6:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d8 fd ef b4 f8 2e 38 d8 85 a2 d5 fa 2e 40 04 48 01 5a 0d 32 31 36 30 33 30 32 36 37 30 31 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-02-09 11:45:08 INFO  Configuration:2795 - resource-types.xml not found
2021-02-09 11:45:08 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-09 11:45:08 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-09 11:45:09 INFO  YarnClientImpl:329 - Submitted application application_1612870842884_0004
2021-02-09 11:45:09 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612870842884_0004/
2021-02-09 11:45:09 INFO  Job:1614 - Running job: job_1612870842884_0004
2021-02-09 11:45:16 INFO  Job:1635 - Job job_1612870842884_0004 running in uber mode : false
2021-02-09 11:45:16 INFO  Job:1642 -  map 0% reduce 0%
2021-02-09 11:45:26 INFO  Job:1642 -  map 33% reduce 0%
2021-02-09 11:45:28 INFO  Job:1642 -  map 67% reduce 0%
2021-02-09 11:45:29 INFO  Job:1642 -  map 100% reduce 0%
2021-02-09 11:45:32 INFO  Job:1642 -  map 100% reduce 100%
2021-02-09 11:45:36 INFO  Job:1653 - Job job_1612870842884_0004 completed successfully
2021-02-09 11:45:37 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1165047
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45714
		Total time spent by all reduces in occupied slots (ms)=8332
		Total time spent by all map tasks (ms)=22857
		Total time spent by all reduce tasks (ms)=4166
		Total vcore-milliseconds taken by all map tasks=22857
		Total vcore-milliseconds taken by all reduce tasks=4166
		Total megabyte-milliseconds taken by all map tasks=46811136
		Total megabyte-milliseconds taken by all reduce tasks=8531968
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1134
		CPU time spent (ms)=7870
		Physical memory (bytes) snapshot=1466523648
		Virtual memory (bytes) snapshot=14056468480
		Total committed heap usage (bytes)=1250951168
		Peak Map Physical memory (bytes)=393404416
		Peak Map Virtual memory (bytes)=3510198272
		Peak Reduce Physical memory (bytes)=326500352
		Peak Reduce Virtual memory (bytes)=3526725632
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210209 11:45:37.507" starttime="20210209 11:45:37.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:45:37.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:45:37.507" starttime="20210209 11:45:37.507"></status>
</kw>
<status status="PASS" endtime="20210209 11:45:37.508" starttime="20210209 11:45:04.070"></status>
</kw>
<msg timestamp="20210209 11:45:37.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:45:37.508" starttime="20210209 11:45:04.069"></status>
</kw>
<msg timestamp="20210209 11:45:37.508" level="INFO">${output} = 2021-02-09 11:45:06 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.9:8032
2021-02-09 11:45:06 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.3:10200
202...</msg>
<status status="PASS" endtime="20210209 11:45:37.509" starttime="20210209 11:45:04.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210209 11:45:37.509" starttime="20210209 11:45:37.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:45:37.510" starttime="20210209 11:45:37.509"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:45:37.510" critical="yes" starttime="20210209 11:45:04.031"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210209 11:45:37.514" starttime="20210209 11:44:31.662"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:42:58.602" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:42:58.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:42:58.609" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:42:58.609" starttime="20210209 11:42:58.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:42:58.610" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:42:58.610" starttime="20210209 11:42:58.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:42:58.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:42:58.611" starttime="20210209 11:42:58.610"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:58.611" starttime="20210209 11:42:58.597"></status>
</kw>
<msg timestamp="20210209 11:42:58.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:42:58.611" starttime="20210209 11:42:58.597"></status>
</kw>
<msg timestamp="20210209 11:42:58.611" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:42:58.611" starttime="20210209 11:42:58.596"></status>
</kw>
<msg timestamp="20210209 11:42:58.612" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:42:58.612" starttime="20210209 11:42:58.596"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:42:58.617" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:42:58.617" starttime="20210209 11:42:58.616"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:42:58.618" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:42:58.618" starttime="20210209 11:42:58.617"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:58.618" starttime="20210209 11:42:58.616"></status>
</kw>
<msg timestamp="20210209 11:42:58.618" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:42:58.619" starttime="20210209 11:42:58.615"></status>
</kw>
<status status="PASS" endtime="20210209 11:42:58.619" starttime="20210209 11:42:58.615"></status>
</kw>
<msg timestamp="20210209 11:42:58.619" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:42:58.619" starttime="20210209 11:42:58.613"></status>
</kw>
<msg timestamp="20210209 11:42:58.619" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:42:58.619" starttime="20210209 11:42:58.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:42:58.623" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:43:40.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:43:40.033" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:43:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:43:00 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210209 11:43:40.033" starttime="20210209 11:42:58.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:43:40.034" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:43:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:43:00 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:43:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:43:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:43:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-087F3E6A70EA-&gt;740059f4-f9c1-45ef-9abd-9493695f691b
2021-02-09 11:43:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-09 11:43:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B1221A4979E1-&gt;76a14c7c-5b10-44c3-889a-cd4c5fea81f7
2021-02-09 11:43:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-09 11:43:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.9:8032
2021-02-09 11:43:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.3:10200
2021-02-09 11:43:03 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612870983012, maxDate=1613475783012, sequenceNumber=1, masterKeyId=2))
2021-02-09 11:43:03 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.6:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b9 b8 e8 b4 f8 2e 38 b9 c0 9a d5 fa 2e 40 01 48 01 5a 0d 32 31 36 30 33 30 32 36 37 30 31 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-09 11:43:03 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612870983012, maxDate=1613475783012, sequenceNumber=1, masterKeyId=2)
2021-02-09 11:43:03 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-09 11:43:03 INFO  JobSubmitter:202 - number of splits:3
2021-02-09 11:43:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612870842884_0001
2021-02-09 11:43:03 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612870983012, maxDate=1613475783012, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.6:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b9 b8 e8 b4 f8 2e 38 b9 c0 9a d5 fa 2e 40 01 48 01 5a 0d 32 31 36 30 33 30 32 36 37 30 31 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-02-09 11:43:04 INFO  Configuration:2795 - resource-types.xml not found
2021-02-09 11:43:04 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-09 11:43:04 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-09 11:43:05 INFO  YarnClientImpl:329 - Submitted application application_1612870842884_0001
2021-02-09 11:43:05 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612870842884_0001/
2021-02-09 11:43:05 INFO  Job:1614 - Running job: job_1612870842884_0001
2021-02-09 11:43:16 INFO  Job:1635 - Job job_1612870842884_0001 running in uber mode : false
2021-02-09 11:43:16 INFO  Job:1642 -  map 0% reduce 0%
2021-02-09 11:43:27 INFO  Job:1642 -  map 33% reduce 0%
2021-02-09 11:43:29 INFO  Job:1642 -  map 100% reduce 0%
2021-02-09 11:43:33 INFO  Job:1642 -  map 100% reduce 100%
2021-02-09 11:43:39 INFO  Job:1653 - Job job_1612870842884_0001 completed successfully
2021-02-09 11:43:39 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1102593
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46386
		Total time spent by all reduces in occupied slots (ms)=7922
		Total time spent by all map tasks (ms)=23193
		Total time spent by all reduce tasks (ms)=3961
		Total vcore-milliseconds taken by all map tasks=23193
		Total vcore-milliseconds taken by all reduce tasks=3961
		Total megabyte-milliseconds taken by all map tasks=47499264
		Total megabyte-milliseconds taken by all reduce tasks=8112128
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1070
		CPU time spent (ms)=7130
		Physical memory (bytes) snapshot=1472024576
		Virtual memory (bytes) snapshot=14047612928
		Total committed heap usage (bytes)=1266679808
		Peak Map Physical memory (bytes)=389054464
		Peak Map Virtual memory (bytes)=3512299520
		Peak Reduce Physical memory (bytes)=323559424
		Peak Reduce Virtual memory (bytes)=3523756032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.192 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210209 11:43:40.035" starttime="20210209 11:43:40.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:43:40.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:43:40.035" starttime="20210209 11:43:40.035"></status>
</kw>
<status status="PASS" endtime="20210209 11:43:40.036" starttime="20210209 11:42:58.621"></status>
</kw>
<msg timestamp="20210209 11:43:40.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:43:40.036" starttime="20210209 11:42:58.620"></status>
</kw>
<msg timestamp="20210209 11:43:40.036" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:43:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:43:00 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210209 11:43:40.036" starttime="20210209 11:42:58.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:43:40.037" starttime="20210209 11:43:40.037"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:43:40.037" critical="yes" starttime="20210209 11:42:58.595"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:43:40.043" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:43:40.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:43:40.049" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:43:40.049" starttime="20210209 11:43:40.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:43:40.050" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:43:40.050" starttime="20210209 11:43:40.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:43:40.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:43:40.051" starttime="20210209 11:43:40.050"></status>
</kw>
<status status="PASS" endtime="20210209 11:43:40.051" starttime="20210209 11:43:40.041"></status>
</kw>
<msg timestamp="20210209 11:43:40.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:43:40.051" starttime="20210209 11:43:40.040"></status>
</kw>
<msg timestamp="20210209 11:43:40.051" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:43:40.051" starttime="20210209 11:43:40.040"></status>
</kw>
<msg timestamp="20210209 11:43:40.052" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:43:40.052" starttime="20210209 11:43:40.039"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:43:40.052" level="INFO">${random} = msNpPUCf</msg>
<status status="PASS" endtime="20210209 11:43:40.052" starttime="20210209 11:43:40.052"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:43:40.056" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:43:40.057" starttime="20210209 11:43:40.056"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:43:40.057" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:43:40.057" starttime="20210209 11:43:40.057"></status>
</kw>
<status status="PASS" endtime="20210209 11:43:40.058" starttime="20210209 11:43:40.055"></status>
</kw>
<msg timestamp="20210209 11:43:40.058" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:43:40.058" starttime="20210209 11:43:40.055"></status>
</kw>
<status status="PASS" endtime="20210209 11:43:40.058" starttime="20210209 11:43:40.054"></status>
</kw>
<msg timestamp="20210209 11:43:40.058" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:43:40.058" starttime="20210209 11:43:40.053"></status>
</kw>
<msg timestamp="20210209 11:43:40.058" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:43:40.058" starttime="20210209 11:43:40.052"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:43:40.062" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:43:40.062" starttime="20210209 11:43:40.061"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:43:40.062" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:43:40.063" starttime="20210209 11:43:40.062"></status>
</kw>
<status status="PASS" endtime="20210209 11:43:40.063" starttime="20210209 11:43:40.061"></status>
</kw>
<msg timestamp="20210209 11:43:40.063" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:43:40.063" starttime="20210209 11:43:40.060"></status>
</kw>
<status status="PASS" endtime="20210209 11:43:40.063" starttime="20210209 11:43:40.060"></status>
</kw>
<msg timestamp="20210209 11:43:40.063" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210209 11:43:40.063" starttime="20210209 11:43:40.059"></status>
</kw>
<msg timestamp="20210209 11:43:40.064" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210209 11:43:40.064" starttime="20210209 11:43:40.059"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:43:40.067" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:43:40.067" starttime="20210209 11:43:40.066"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:43:40.067" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:43:40.067" starttime="20210209 11:43:40.067"></status>
</kw>
<status status="PASS" endtime="20210209 11:43:40.068" starttime="20210209 11:43:40.066"></status>
</kw>
<msg timestamp="20210209 11:43:40.068" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:43:40.068" starttime="20210209 11:43:40.066"></status>
</kw>
<status status="PASS" endtime="20210209 11:43:40.068" starttime="20210209 11:43:40.065"></status>
</kw>
<msg timestamp="20210209 11:43:40.068" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-msNpPUCf.txt</msg>
<status status="PASS" endtime="20210209 11:43:40.068" starttime="20210209 11:43:40.064"></status>
</kw>
<msg timestamp="20210209 11:43:40.069" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-msNpPUCf.txt</msg>
<status status="PASS" endtime="20210209 11:43:40.069" starttime="20210209 11:43:40.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:43:40.071" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-msNpPUCf.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:44:15.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:44:15.981" level="INFO">${output} = 2021-02-09 11:43:42 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.9:8032
2021-02-09 11:43:42 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.3:10200
202...</msg>
<status status="PASS" endtime="20210209 11:44:15.981" starttime="20210209 11:43:40.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:44:15.982" level="INFO">2021-02-09 11:43:42 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.9:8032
2021-02-09 11:43:42 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.3:10200
2021-02-09 11:43:42 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612871022466, maxDate=1613475822466, sequenceNumber=2, masterKeyId=2))
2021-02-09 11:43:42 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.6:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 81 ee ea b4 f8 2e 38 81 f6 9c d5 fa 2e 40 02 48 01 5a 0d 32 31 36 30 33 30 32 36 37 30 31 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-09 11:43:42 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612871022466, maxDate=1613475822466, sequenceNumber=2, masterKeyId=2)
2021-02-09 11:43:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-09 11:43:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:43:42 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:43:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:43:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:43:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1F324882C0A3-&gt;740059f4-f9c1-45ef-9abd-9493695f691b
2021-02-09 11:43:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:43:46 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-09 11:43:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F5482F926123-&gt;76a14c7c-5b10-44c3-889a-cd4c5fea81f7
2021-02-09 11:43:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:43:46 INFO  JobSubmitter:202 - number of splits:3
2021-02-09 11:43:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612870842884_0002
2021-02-09 11:43:46 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612871022466, maxDate=1613475822466, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.6:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 81 ee ea b4 f8 2e 38 81 f6 9c d5 fa 2e 40 02 48 01 5a 0d 32 31 36 30 33 30 32 36 37 30 31 36 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-02-09 11:43:47 INFO  Configuration:2795 - resource-types.xml not found
2021-02-09 11:43:47 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-09 11:43:47 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-09 11:43:48 INFO  YarnClientImpl:329 - Submitted application application_1612870842884_0002
2021-02-09 11:43:48 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612870842884_0002/
2021-02-09 11:43:48 INFO  Job:1614 - Running job: job_1612870842884_0002
2021-02-09 11:43:56 INFO  Job:1635 - Job job_1612870842884_0002 running in uber mode : false
2021-02-09 11:43:56 INFO  Job:1642 -  map 0% reduce 0%
2021-02-09 11:44:06 INFO  Job:1642 -  map 33% reduce 0%
2021-02-09 11:44:07 INFO  Job:1642 -  map 67% reduce 0%
2021-02-09 11:44:08 INFO  Job:1642 -  map 100% reduce 0%
2021-02-09 11:44:12 INFO  Job:1642 -  map 100% reduce 100%
2021-02-09 11:44:15 INFO  Job:1653 - Job job_1612870842884_0002 completed successfully
2021-02-09 11:44:15 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1165131
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46072
		Total time spent by all reduces in occupied slots (ms)=7288
		Total time spent by all map tasks (ms)=23036
		Total time spent by all reduce tasks (ms)=3644
		Total vcore-milliseconds taken by all map tasks=23036
		Total vcore-milliseconds taken by all reduce tasks=3644
		Total megabyte-milliseconds taken by all map tasks=47177728
		Total megabyte-milliseconds taken by all reduce tasks=7462912
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=912
		CPU time spent (ms)=7770
		Physical memory (bytes) snapshot=1441091584
		Virtual memory (bytes) snapshot=14055911424
		Total committed heap usage (bytes)=1165492224
		Peak Map Physical memory (bytes)=387694592
		Peak Map Virtual memory (bytes)=3512033280
		Peak Reduce Physical memory (bytes)=328159232
		Peak Reduce Virtual memory (bytes)=3525443584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210209 11:44:15.983" starttime="20210209 11:44:15.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:44:15.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:44:15.983" starttime="20210209 11:44:15.983"></status>
</kw>
<status status="PASS" endtime="20210209 11:44:15.984" starttime="20210209 11:43:40.070"></status>
</kw>
<msg timestamp="20210209 11:44:15.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:44:15.984" starttime="20210209 11:43:40.069"></status>
</kw>
<msg timestamp="20210209 11:44:15.984" level="INFO">${output} = 2021-02-09 11:43:42 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.9:8032
2021-02-09 11:43:42 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.3:10200
202...</msg>
<status status="PASS" endtime="20210209 11:44:15.984" starttime="20210209 11:43:40.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210209 11:44:15.985" starttime="20210209 11:44:15.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:44:15.985" starttime="20210209 11:44:15.985"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:44:15.986" critical="yes" starttime="20210209 11:43:40.038"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210209 11:44:15.987" starttime="20210209 11:42:58.530"></status>
</suite>
<status status="PASS" elapsedtime="200565" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
