<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210209 11:54:59.187" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="restart">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1" name="Generate">
<test id="s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:54:33.705" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:54:38.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:54:38.544" level="INFO">${output} = 2021-02-09 11:54:34,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:34,986 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:54:38.544" starttime="20210209 11:54:33.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:54:38.545" level="INFO">2021-02-09 11:54:34,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:34,986 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:54:34,986 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:54:35,155 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-02-09 11:54:35,173 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:54:36,182 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:54:36,444 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-09 11:54:36,610 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:54:36,610 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-143E9EB9028F-&gt;f5ddbd85-3971-43c3-87b3-9305d9c51bbf
2021-02-09 11:54:36,611 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:54:37,188 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:54:38,188 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:54:38,220 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1961.547409, max=1961.547409, mean=1961.547409, stddev=0.0, median=1961.547409, p75=1961.547409, p95=1961.547409, p98=1961.547409, p99=1961.547409, p999=1961.547409, mean_rate=0.393620168877026, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:54:38,220 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-09 11:54:38,220 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:54:38,220 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:54:38.545" starttime="20210209 11:54:38.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:54:38.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:54:38.546" starttime="20210209 11:54:38.545"></status>
</kw>
<status status="PASS" endtime="20210209 11:54:38.546" starttime="20210209 11:54:33.702"></status>
</kw>
<msg timestamp="20210209 11:54:38.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:54:38.546" starttime="20210209 11:54:33.702"></status>
</kw>
<msg timestamp="20210209 11:54:38.547" level="INFO">${result} = 2021-02-09 11:54:34,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:34,986 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:54:38.547" starttime="20210209 11:54:33.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:54:38.547" starttime="20210209 11:54:38.547"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:54:38.547" critical="yes" starttime="20210209 11:54:33.700"></status>
</test>
<test id="s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:54:38.552" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:54:41.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:54:41.585" level="INFO">${output} = 2021-02-09 11:54:39,715 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:39,825 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:54:41.585" starttime="20210209 11:54:38.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:54:41.586" level="INFO">2021-02-09 11:54:39,715 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:39,825 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:54:39,825 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:54:39,984 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost
2021-02-09 11:54:40,001 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:54:41,005 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:54:41,573 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=105.274082, max=105.274082, mean=105.274082, stddev=0.0, median=105.274082, p75=105.274082, p95=105.274082, p98=105.274082, p99=105.274082, p999=105.274082, mean_rate=0.9876768809908412, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:54:41,576 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-09 11:54:41,577 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:54:41,577 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:54:41.587" starttime="20210209 11:54:41.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:54:41.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:54:41.587" starttime="20210209 11:54:41.587"></status>
</kw>
<status status="PASS" endtime="20210209 11:54:41.588" starttime="20210209 11:54:38.550"></status>
</kw>
<msg timestamp="20210209 11:54:41.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:54:41.588" starttime="20210209 11:54:38.550"></status>
</kw>
<msg timestamp="20210209 11:54:41.588" level="INFO">${result} = 2021-02-09 11:54:39,715 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:39,825 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:54:41.588" starttime="20210209 11:54:38.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:54:41.589" starttime="20210209 11:54:41.588"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:54:41.589" critical="yes" starttime="20210209 11:54:38.548"></status>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:54:41.596" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:54:44.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:54:44.635" level="INFO">${output} = 2021-02-09 11:54:42,789 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:42,908 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:54:44.636" starttime="20210209 11:54:41.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:54:44.637" level="INFO">2021-02-09 11:54:42,789 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:42,908 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:54:42,908 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:54:43,065 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost
2021-02-09 11:54:43,082 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:54:44,093 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:54:44,626 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=21.120374, max=21.120374, mean=21.120374, stddev=0.0, median=21.120374, p75=21.120374, p95=21.120374, p98=21.120374, p99=21.120374, p999=21.120374, mean_rate=0.9824725241316351, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:54:44,627 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-09 11:54:44,627 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:54:44,627 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:54:44.637" starttime="20210209 11:54:44.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:54:44.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:54:44.637" starttime="20210209 11:54:44.637"></status>
</kw>
<status status="PASS" endtime="20210209 11:54:44.638" starttime="20210209 11:54:41.591"></status>
</kw>
<msg timestamp="20210209 11:54:44.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:54:44.638" starttime="20210209 11:54:41.591"></status>
</kw>
<msg timestamp="20210209 11:54:44.638" level="INFO">${result} = 2021-02-09 11:54:42,789 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:42,908 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:54:44.638" starttime="20210209 11:54:41.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:54:44.639" starttime="20210209 11:54:44.639"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:54:44.639" critical="yes" starttime="20210209 11:54:41.589"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210209 11:54:44.641" starttime="20210209 11:54:33.656"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s2" name="Generate">
<test id="s1-s2-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:53:13.246" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:53:19.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:53:19.081" level="INFO">${output} = 2021-02-09 11:53:14,323 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:53:14,471 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:53:19.081" starttime="20210209 11:53:13.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:53:19.083" level="INFO">2021-02-09 11:53:14,323 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:53:14,471 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:53:14,471 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:53:14,593 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-09 11:53:14,602 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:53:15,452 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-09 11:53:15,614 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:53:15,687 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-09 11:53:16,394 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-09 11:53:16,603 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:53:16,603 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-07F1D8BC40E3-&gt;f5ddbd85-3971-43c3-87b3-9305d9c51bbf
2021-02-09 11:53:16,605 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:53:16,614 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:53:17,615 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:53:18,615 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:53:18,753 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=2657.027601, max=2657.027601, mean=2657.027601, stddev=0.0, median=2657.027601, p75=2657.027601, p95=2657.027601, p98=2657.027601, p99=2657.027601, p999=2657.027601, mean_rate=0.32969233177866575, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:53:18,754 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-02-09 11:53:18,758 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:53:18,758 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:53:19.083" starttime="20210209 11:53:19.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:53:19.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:53:19.083" starttime="20210209 11:53:19.083"></status>
</kw>
<status status="PASS" endtime="20210209 11:53:19.084" starttime="20210209 11:53:13.243"></status>
</kw>
<msg timestamp="20210209 11:53:19.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:53:19.084" starttime="20210209 11:53:13.242"></status>
</kw>
<msg timestamp="20210209 11:53:19.084" level="INFO">${result} = 2021-02-09 11:53:14,323 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:53:14,471 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:53:19.084" starttime="20210209 11:53:13.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:53:19.085" starttime="20210209 11:53:19.085"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:53:19.085" critical="yes" starttime="20210209 11:53:13.241"></status>
</test>
<test id="s1-s2-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:53:19.090" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:53:22.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:53:22.356" level="INFO">${output} = 2021-02-09 11:53:20,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:53:20,558 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:53:22.356" starttime="20210209 11:53:19.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:53:22.357" level="INFO">2021-02-09 11:53:20,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:53:20,558 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:53:20,558 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:53:20,770 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre
2021-02-09 11:53:20,790 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:53:21,794 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:53:22,332 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=63.029707, max=63.029707, mean=63.029707, stddev=0.0, median=63.029707, p75=63.029707, p95=63.029707, p98=63.029707, p99=63.029707, p999=63.029707, mean_rate=0.9896076540238145, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:53:22,336 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-09 11:53:22,336 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:53:22,336 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:53:22.357" starttime="20210209 11:53:22.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:53:22.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:53:22.358" starttime="20210209 11:53:22.357"></status>
</kw>
<status status="PASS" endtime="20210209 11:53:22.358" starttime="20210209 11:53:19.088"></status>
</kw>
<msg timestamp="20210209 11:53:22.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:53:22.358" starttime="20210209 11:53:19.088"></status>
</kw>
<msg timestamp="20210209 11:53:22.359" level="INFO">${result} = 2021-02-09 11:53:20,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:53:20,558 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:53:22.359" starttime="20210209 11:53:19.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:53:22.359" starttime="20210209 11:53:22.359"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:53:22.359" critical="yes" starttime="20210209 11:53:19.086"></status>
</test>
<test id="s1-s2-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:53:22.364" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:53:25.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:53:25.275" level="INFO">${output} = 2021-02-09 11:53:23,476 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:53:23,604 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:53:25.275" starttime="20210209 11:53:22.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:53:25.276" level="INFO">2021-02-09 11:53:23,476 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:53:23,604 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:53:23,604 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:53:23,755 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre
2021-02-09 11:53:23,770 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:53:24,788 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:53:25,244 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=16.993854, max=16.993854, mean=16.993854, stddev=0.0, median=16.993854, p75=16.993854, p95=16.993854, p98=16.993854, p99=16.993854, p999=16.993854, mean_rate=0.9777616530540686, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:53:25,245 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2021-02-09 11:53:25,245 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:53:25,245 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:53:25.276" starttime="20210209 11:53:25.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:53:25.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:53:25.277" starttime="20210209 11:53:25.277"></status>
</kw>
<status status="PASS" endtime="20210209 11:53:25.277" starttime="20210209 11:53:22.362"></status>
</kw>
<msg timestamp="20210209 11:53:25.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:53:25.278" starttime="20210209 11:53:22.362"></status>
</kw>
<msg timestamp="20210209 11:53:25.278" level="INFO">${result} = 2021-02-09 11:53:23,476 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:53:23,604 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:53:25.278" starttime="20210209 11:53:22.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:53:25.278" starttime="20210209 11:53:25.278"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:53:25.279" critical="yes" starttime="20210209 11:53:22.360"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210209 11:53:25.280" starttime="20210209 11:53:13.198"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s3" name="Validate">
<test id="s1-s3-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:54:24.222" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:54:29.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:54:29.332" level="INFO">${output} = 2021-02-09 11:54:25,418 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:25,596 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:54:29.332" starttime="20210209 11:54:24.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:54:29.333" level="INFO">2021-02-09 11:54:25,418 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:25,596 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:54:25,596 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:54:25,770 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-09 11:54:25,796 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:54:26,812 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:54:27,398 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-09 11:54:27,812 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:54:28,813 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:54:29,005 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=41.8579, max=41.8579, mean=41.8579, stddev=0.0, median=41.8579, p75=41.8579, p95=41.8579, p98=41.8579, p99=41.8579, p999=41.8579, mean_rate=0.9911939209799293, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:54:29,006 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-09 11:54:29,006 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:54:29,007 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:54:29.334" starttime="20210209 11:54:29.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:54:29.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:54:29.334" starttime="20210209 11:54:29.334"></status>
</kw>
<status status="PASS" endtime="20210209 11:54:29.334" starttime="20210209 11:54:24.219"></status>
</kw>
<msg timestamp="20210209 11:54:29.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:54:29.335" starttime="20210209 11:54:24.218"></status>
</kw>
<msg timestamp="20210209 11:54:29.335" level="INFO">${result} = 2021-02-09 11:54:25,418 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:25,596 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:54:29.335" starttime="20210209 11:54:24.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:54:29.335" starttime="20210209 11:54:29.335"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:54:29.336" critical="yes" starttime="20210209 11:54:24.217"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210209 11:54:29.337" starttime="20210209 11:54:24.173"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s4" name="Validate">
<test id="s1-s4-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:54:48.700" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:54:53.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:54:53.211" level="INFO">${output} = 2021-02-09 11:54:49,838 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:49,959 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:54:53.211" starttime="20210209 11:54:48.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:54:53.212" level="INFO">2021-02-09 11:54:49,838 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:49,959 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:54:49,959 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:54:50,096 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-02-09 11:54:50,119 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:54:51,127 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:54:51,189 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-09 11:54:52,127 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:54:52,883 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=47.259188, max=47.259188, mean=47.259188, stddev=0.0, median=47.259188, p75=47.259188, p95=47.259188, p98=47.259188, p99=47.259188, p999=47.259188, mean_rate=0.9860963880346402, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:54:52,884 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-09 11:54:52,887 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:54:52,887 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:54:53.212" starttime="20210209 11:54:53.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:54:53.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:54:53.213" starttime="20210209 11:54:53.212"></status>
</kw>
<status status="PASS" endtime="20210209 11:54:53.213" starttime="20210209 11:54:48.695"></status>
</kw>
<msg timestamp="20210209 11:54:53.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:54:53.213" starttime="20210209 11:54:48.695"></status>
</kw>
<msg timestamp="20210209 11:54:53.214" level="INFO">${result} = 2021-02-09 11:54:49,838 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:54:49,959 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:54:53.214" starttime="20210209 11:54:48.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:54:53.214" starttime="20210209 11:54:53.214"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:54:53.214" critical="yes" starttime="20210209 11:54:48.693"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210209 11:54:53.215" starttime="20210209 11:54:48.644"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s5" name="Validate">
<test id="s1-s5-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:53:29.302" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:53:33.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:53:33.885" level="INFO">${output} = 2021-02-09 11:53:30,453 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:53:30,559 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:53:33.885" starttime="20210209 11:53:29.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:53:33.886" level="INFO">2021-02-09 11:53:30,453 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:53:30,559 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:53:30,559 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:53:30,703 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-09 11:53:30,718 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:53:31,721 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:53:31,842 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-09 11:53:32,721 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:53:33,558 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=26.445952, max=26.445952, mean=26.445952, stddev=0.0, median=26.445952, p75=26.445952, p95=26.445952, p98=26.445952, p99=26.445952, p999=26.445952, mean_rate=0.989136310951142, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:53:33,559 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-09 11:53:33,560 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:53:33,560 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:53:33.886" starttime="20210209 11:53:33.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:53:33.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:53:33.887" starttime="20210209 11:53:33.886"></status>
</kw>
<status status="PASS" endtime="20210209 11:53:33.887" starttime="20210209 11:53:29.299"></status>
</kw>
<msg timestamp="20210209 11:53:33.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:53:33.887" starttime="20210209 11:53:29.298"></status>
</kw>
<msg timestamp="20210209 11:53:33.888" level="INFO">${result} = 2021-02-09 11:53:30,453 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:53:30,559 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:53:33.888" starttime="20210209 11:53:29.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:53:33.888" starttime="20210209 11:53:33.888"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:53:33.888" critical="yes" starttime="20210209 11:53:29.297"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210209 11:53:33.890" starttime="20210209 11:53:29.244"></status>
</suite>
<status status="PASS" elapsedtime="37448" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="9">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="restart" pass="9">restart</stat>
<stat fail="0" id="s1-s1" name="Generate" pass="3">restart.Generate</stat>
<stat fail="0" id="s1-s2" name="Generate" pass="3">restart.Generate</stat>
<stat fail="0" id="s1-s3" name="Validate" pass="1">restart.Validate</stat>
<stat fail="0" id="s1-s4" name="Validate" pass="1">restart.Validate</stat>
<stat fail="0" id="s1-s5" name="Validate" pass="1">restart.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
