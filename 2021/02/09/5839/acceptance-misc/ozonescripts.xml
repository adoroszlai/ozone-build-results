<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210209 11:39:41.553" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/admincli/pipeline.robot" id="s1" name="ozonescripts">
<test id="s1-t1" name="Create pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline create</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:39:00.804" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:39:03.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:39:03.112" level="INFO">${output} = PipelineID=7233233c-424b-4209-a28b-5489da17b7c2 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210209 11:39:03.112" starttime="20210209 11:39:00.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:39:03.113" level="INFO">PipelineID=7233233c-424b-4209-a28b-5489da17b7c2 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210209 11:39:03.113" starttime="20210209 11:39:03.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:39:03.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:39:03.113" starttime="20210209 11:39:03.113"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:03.114" starttime="20210209 11:39:00.800"></status>
</kw>
<msg timestamp="20210209 11:39:03.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:39:03.114" starttime="20210209 11:39:00.799"></status>
</kw>
<msg timestamp="20210209 11:39:03.114" level="INFO">${output} = PipelineID=7233233c-424b-4209-a28b-5489da17b7c2 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210209 11:39:03.114" starttime="20210209 11:39:00.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is created. Factor: ONE, Type: STAND_ALONE</arg>
</arguments>
<status status="PASS" endtime="20210209 11:39:03.115" starttime="20210209 11:39:03.114"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
</arguments>
<assign>
<var>${pipeline}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:39:03.120" level="INFO">Running command 'echo "PipelineID=7233233c-424b-4209-a28b-5489da17b7c2 is created. Factor: ONE, Type: STAND_ALONE" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:39:03.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:39:03.123" level="INFO">${output} = 7233233c-424b-4209-a28b-5489da17b7c2</msg>
<status status="PASS" endtime="20210209 11:39:03.123" starttime="20210209 11:39:03.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:39:03.124" level="INFO">7233233c-424b-4209-a28b-5489da17b7c2</msg>
<status status="PASS" endtime="20210209 11:39:03.124" starttime="20210209 11:39:03.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:39:03.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:39:03.125" starttime="20210209 11:39:03.124"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:03.125" starttime="20210209 11:39:03.116"></status>
</kw>
<msg timestamp="20210209 11:39:03.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:39:03.125" starttime="20210209 11:39:03.116"></status>
</kw>
<msg timestamp="20210209 11:39:03.126" level="INFO">${pipeline} = 7233233c-424b-4209-a28b-5489da17b7c2</msg>
<status status="PASS" endtime="20210209 11:39:03.126" starttime="20210209 11:39:03.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
</arguments>
<msg timestamp="20210209 11:39:03.126" level="INFO">${PIPELINE} = 7233233c-424b-4209-a28b-5489da17b7c2</msg>
<status status="PASS" endtime="20210209 11:39:03.126" starttime="20210209 11:39:03.126"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:39:03.127" critical="yes" starttime="20210209 11:39:00.798"></status>
</test>
<test id="s1-t2" name="List pipelines">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:39:03.131" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:39:05.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:39:05.033" level="INFO">${output} = Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210209 11:39:05.033" starttime="20210209 11:39:03.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:39:05.034" level="INFO">Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-09T11:39:03.021Z]
Pipeline[ Id: a0f0282a-8e1f-48c2-b8d2-1cdf9ac59b62, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:RATIS, Factor:ONE, State:OPEN, leaderId:46c3caa9-cdae-45cd-b582-5202d4a23a5c, CreationTimestamp2021-02-09T11:38:38.991Z]</msg>
<status status="PASS" endtime="20210209 11:39:05.034" starttime="20210209 11:39:05.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:39:05.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:39:05.035" starttime="20210209 11:39:05.034"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:05.035" starttime="20210209 11:39:03.129"></status>
</kw>
<msg timestamp="20210209 11:39:05.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:39:05.035" starttime="20210209 11:39:03.129"></status>
</kw>
<msg timestamp="20210209 11:39:05.036" level="INFO">${output} = Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210209 11:39:05.036" starttime="20210209 11:39:03.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Factor:ONE</arg>
</arguments>
<status status="PASS" endtime="20210209 11:39:05.036" starttime="20210209 11:39:05.036"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:39:05.036" critical="yes" starttime="20210209 11:39:03.127"></status>
</test>
<test id="s1-t3" name="List pipelines with explicit host">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list --scm scm</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:39:05.042" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:39:06.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:39:06.848" level="INFO">${output} = Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210209 11:39:06.848" starttime="20210209 11:39:05.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:39:06.849" level="INFO">Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-09T11:39:03.021Z]
Pipeline[ Id: a0f0282a-8e1f-48c2-b8d2-1cdf9ac59b62, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:RATIS, Factor:ONE, State:OPEN, leaderId:46c3caa9-cdae-45cd-b582-5202d4a23a5c, CreationTimestamp2021-02-09T11:38:38.991Z]</msg>
<status status="PASS" endtime="20210209 11:39:06.849" starttime="20210209 11:39:06.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:39:06.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:39:06.850" starttime="20210209 11:39:06.849"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:06.850" starttime="20210209 11:39:05.040"></status>
</kw>
<msg timestamp="20210209 11:39:06.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:39:06.850" starttime="20210209 11:39:05.039"></status>
</kw>
<msg timestamp="20210209 11:39:06.851" level="INFO">${output} = Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210209 11:39:06.851" starttime="20210209 11:39:05.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Factor:ONE</arg>
</arguments>
<status status="PASS" endtime="20210209 11:39:06.851" starttime="20210209 11:39:06.851"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:39:06.851" critical="yes" starttime="20210209 11:39:05.038"></status>
</test>
<test id="s1-t4" name="Deactivate pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:39:06.856" level="INFO">Running command 'ozone admin pipeline deactivate "7233233c-424b-4209-a28b-5489da17b7c2" 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:39:08.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:39:08.719" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:39:08.719" starttime="20210209 11:39:06.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:39:08.720" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:39:08.720" starttime="20210209 11:39:08.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:39:08.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:39:08.721" starttime="20210209 11:39:08.720"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:08.721" starttime="20210209 11:39:06.854"></status>
</kw>
<msg timestamp="20210209 11:39:08.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:39:08.721" starttime="20210209 11:39:06.853"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:08.722" starttime="20210209 11:39:06.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:39:08.726" level="INFO">Running command 'ozone admin pipeline list | grep "7233233c-424b-4209-a28b-5489da17b7c2" 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:39:10.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:39:10.518" level="INFO">${output} = Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210209 11:39:10.518" starttime="20210209 11:39:08.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:39:10.519" level="INFO">Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:DORMANT, leaderId:, CreationTimestamp2021-02-09T11:39:03.021Z]</msg>
<status status="PASS" endtime="20210209 11:39:10.519" starttime="20210209 11:39:10.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:39:10.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:39:10.520" starttime="20210209 11:39:10.519"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:10.520" starttime="20210209 11:39:08.723"></status>
</kw>
<msg timestamp="20210209 11:39:10.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:39:10.520" starttime="20210209 11:39:08.723"></status>
</kw>
<msg timestamp="20210209 11:39:10.521" level="INFO">${output} = Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210209 11:39:10.521" starttime="20210209 11:39:08.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>DORMANT</arg>
</arguments>
<status status="PASS" endtime="20210209 11:39:10.521" starttime="20210209 11:39:10.521"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:39:10.521" critical="yes" starttime="20210209 11:39:06.852"></status>
</test>
<test id="s1-t5" name="Activate pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:39:10.527" level="INFO">Running command 'ozone admin pipeline activate "7233233c-424b-4209-a28b-5489da17b7c2" 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:39:12.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:39:12.285" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:39:12.285" starttime="20210209 11:39:10.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:39:12.286" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:39:12.286" starttime="20210209 11:39:12.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:39:12.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:39:12.287" starttime="20210209 11:39:12.286"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:12.287" starttime="20210209 11:39:10.524"></status>
</kw>
<msg timestamp="20210209 11:39:12.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:39:12.287" starttime="20210209 11:39:10.524"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:12.287" starttime="20210209 11:39:10.524"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:39:12.291" level="INFO">Running command 'ozone admin pipeline list | grep "7233233c-424b-4209-a28b-5489da17b7c2" 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:39:13.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:39:13.957" level="INFO">${output} = Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210209 11:39:13.957" starttime="20210209 11:39:12.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:39:13.959" level="INFO">Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-09T11:39:03.021Z]</msg>
<status status="PASS" endtime="20210209 11:39:13.959" starttime="20210209 11:39:13.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:39:13.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:39:13.959" starttime="20210209 11:39:13.959"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:13.960" starttime="20210209 11:39:12.289"></status>
</kw>
<msg timestamp="20210209 11:39:13.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:39:13.960" starttime="20210209 11:39:12.288"></status>
</kw>
<msg timestamp="20210209 11:39:13.961" level="INFO">${output} = Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210209 11:39:13.961" starttime="20210209 11:39:12.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" endtime="20210209 11:39:13.962" starttime="20210209 11:39:13.961"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:39:13.962" critical="yes" starttime="20210209 11:39:10.523"></status>
</test>
<test id="s1-t6" name="Close pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:39:13.966" level="INFO">Running command 'ozone admin pipeline close "7233233c-424b-4209-a28b-5489da17b7c2" 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:39:15.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:39:15.709" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:39:15.709" starttime="20210209 11:39:13.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:39:15.711" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:39:15.711" starttime="20210209 11:39:15.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:39:15.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:39:15.711" starttime="20210209 11:39:15.711"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:15.712" starttime="20210209 11:39:13.964"></status>
</kw>
<msg timestamp="20210209 11:39:15.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:39:15.712" starttime="20210209 11:39:13.964"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:15.712" starttime="20210209 11:39:13.963"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:39:15.716" level="INFO">Running command 'ozone admin pipeline list | grep "7233233c-424b-4209-a28b-5489da17b7c2" 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:39:17.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:39:17.627" level="INFO">${output} = Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210209 11:39:17.627" starttime="20210209 11:39:15.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:39:17.628" level="INFO">Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:CLOSED, leaderId:, CreationTimestamp2021-02-09T11:39:03.021Z]</msg>
<status status="PASS" endtime="20210209 11:39:17.628" starttime="20210209 11:39:17.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:39:17.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:39:17.629" starttime="20210209 11:39:17.628"></status>
</kw>
<status status="PASS" endtime="20210209 11:39:17.629" starttime="20210209 11:39:15.713"></status>
</kw>
<msg timestamp="20210209 11:39:17.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:39:17.629" starttime="20210209 11:39:15.713"></status>
</kw>
<msg timestamp="20210209 11:39:17.630" level="INFO">${output} = Pipeline[ Id: 7233233c-424b-4209-a28b-5489da17b7c2, Nodes: 46c3caa9-cdae-45cd-b582-5202d4a23a5c{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210209 11:39:17.630" starttime="20210209 11:39:15.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>CLOSED</arg>
</arguments>
<status status="PASS" endtime="20210209 11:39:17.630" starttime="20210209 11:39:17.630"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:39:17.631" critical="yes" starttime="20210209 11:39:13.963"></status>
</test>
<test id="s1-t7" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone admin pipeline</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:39:17.635" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:39:18.843" level="INFO">${rc} = 255</msg>
<msg timestamp="20210209 11:39:18.843" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" endtime="20210209 11:39:18.843" starttime="20210209 11:39:17.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:39:18.844" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" endtime="20210209 11:39:18.844" starttime="20210209 11:39:18.844"></status>
</kw>
<msg timestamp="20210209 11:39:18.845" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" endtime="20210209 11:39:18.845" starttime="20210209 11:39:17.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Incomplete command</arg>
</arguments>
<status status="PASS" endtime="20210209 11:39:18.845" starttime="20210209 11:39:18.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>close</arg>
</arguments>
<status status="PASS" endtime="20210209 11:39:18.846" starttime="20210209 11:39:18.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>create</arg>
</arguments>
<status status="PASS" endtime="20210209 11:39:18.846" starttime="20210209 11:39:18.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>deactivate</arg>
</arguments>
<status status="PASS" endtime="20210209 11:39:18.847" starttime="20210209 11:39:18.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>list</arg>
</arguments>
<status status="PASS" endtime="20210209 11:39:18.847" starttime="20210209 11:39:18.847"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:39:18.848" critical="yes" starttime="20210209 11:39:17.631"></status>
</test>
<test id="s1-t8" name="List pipelines on unknown host">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone admin --verbose pipeline list --scm unknown-host</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:39:18.852" level="INFO">Running command 'ozone admin --verbose pipeline list --scm unknown-host 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:39:20.656" level="INFO">${rc} = 255</msg>
<msg timestamp="20210209 11:39:20.657" level="INFO">${output} = java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoo...</msg>
<status status="PASS" endtime="20210209 11:39:20.657" starttime="20210209 11:39:18.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:39:20.658" level="INFO">java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.hadoop.net.NetUtils.wrapWithMessage(NetUtils.java:836)
	at org.apache.hadoop.net.NetUtils.wrapException(NetUtils.java:773)
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1592)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy16.submitRequest(Unknown Source)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRpcRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:136)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:127)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.listPipelines(StorageContainerLocationProtocolClientSideTranslatorPB.java:444)
	at org.apache.hadoop.hdds.scm.cli.ContainerOperationClient.listPipelines(ContainerOperationClient.java:312)
	at org.apache.hadoop.hdds.scm.cli.pipeline.ListPipelinesSubcommand.execute(ListPipelinesSubcommand.java:53)
	at org.apache.hadoop.hdds.scm.cli.ScmSubcommand.call(ScmSubcommand.java:39)
	at org.apache.hadoop.hdds.scm.cli.ScmSubcommand.call(ScmSubcommand.java:29)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.hdds.cli.OzoneAdmin.main(OzoneAdmin.java:65)
Caused by: java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	... 23 more</msg>
<status status="PASS" endtime="20210209 11:39:20.658" starttime="20210209 11:39:20.657"></status>
</kw>
<msg timestamp="20210209 11:39:20.658" level="INFO">${output} = java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoo...</msg>
<status status="PASS" endtime="20210209 11:39:20.658" starttime="20210209 11:39:18.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Invalid host name</arg>
</arguments>
<status status="PASS" endtime="20210209 11:39:20.659" starttime="20210209 11:39:20.658"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:39:20.659" critical="yes" starttime="20210209 11:39:18.849"></status>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" endtime="20210209 11:39:20.661" starttime="20210209 11:39:00.737"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonescripts" pass="8">ozonescripts</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
