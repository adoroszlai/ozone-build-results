<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210209 11:31:10.879" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:17:57.514" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:17:59.630" level="INFO">${rc} = 255</msg>
<msg timestamp="20210209 11:17:59.630" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210209 11:17:59.630" starttime="20210209 11:17:57.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:17:59.631" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210209 11:17:59.631" starttime="20210209 11:17:59.631"></status>
</kw>
<msg timestamp="20210209 11:17:59.632" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210209 11:17:59.632" starttime="20210209 11:17:57.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:17:59.637" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:18:01.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:18:01.714" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:18:01.714" starttime="20210209 11:17:59.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:18:01.715" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:18:01.715" starttime="20210209 11:18:01.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:18:01.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:18:01.716" starttime="20210209 11:18:01.716"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:01.717" starttime="20210209 11:17:59.634"></status>
</kw>
<msg timestamp="20210209 11:18:01.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:18:01.717" starttime="20210209 11:17:59.633"></status>
</kw>
<msg timestamp="20210209 11:18:01.717" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210209 11:18:01.717" starttime="20210209 11:17:59.633"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210209 11:18:01.718" starttime="20210209 11:18:01.717"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:01.718" starttime="20210209 11:17:59.632"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:01.718" starttime="20210209 11:17:59.632"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:18:01.722" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:18:03.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:18:03.753" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:18:03.753" starttime="20210209 11:18:01.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:18:03.755" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:18:03.755" starttime="20210209 11:18:03.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:18:03.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:18:03.755" starttime="20210209 11:18:03.755"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:03.756" starttime="20210209 11:18:01.720"></status>
</kw>
<msg timestamp="20210209 11:18:03.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:18:03.756" starttime="20210209 11:18:01.719"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:03.756" starttime="20210209 11:18:01.719"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:03.756" starttime="20210209 11:18:01.718"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:03.756" starttime="20210209 11:18:01.718"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210209 11:18:03.757" starttime="20210209 11:18:03.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:18:03.760" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:18:06.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:18:06.141" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:18...</msg>
<status status="PASS" endtime="20210209 11:18:06.141" starttime="20210209 11:18:03.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:18:06.142" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:18:03.715Z",
  "modificationTime" : "2021-02-09T11:18:03.715Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210209 11:18:06.142" starttime="20210209 11:18:06.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:18:06.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:18:06.143" starttime="20210209 11:18:06.142"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:06.143" starttime="20210209 11:18:03.758"></status>
</kw>
<msg timestamp="20210209 11:18:06.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:18:06.143" starttime="20210209 11:18:03.757"></status>
</kw>
<msg timestamp="20210209 11:18:06.144" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:18...</msg>
<status status="PASS" endtime="20210209 11:18:06.144" starttime="20210209 11:18:03.757"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210209 11:18:06.144" starttime="20210209 11:18:06.144"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:18:06.148" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:18:06.148" starttime="20210209 11:18:06.148"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:18:06.149" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:18:06.149" starttime="20210209 11:18:06.148"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:06.149" starttime="20210209 11:18:06.147"></status>
</kw>
<msg timestamp="20210209 11:18:06.149" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:18:06.149" starttime="20210209 11:18:06.147"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:06.150" starttime="20210209 11:18:06.146"></status>
</kw>
<msg timestamp="20210209 11:18:06.150" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210209 11:18:06.150" starttime="20210209 11:18:06.145"></status>
</kw>
<msg timestamp="20210209 11:18:06.150" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210209 11:18:06.150" starttime="20210209 11:18:06.144"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:18:06.153" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:18:08.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:18:08.347" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:18:08.347" starttime="20210209 11:18:06.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:18:08.348" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:18:08.348" starttime="20210209 11:18:08.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:18:08.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:18:08.349" starttime="20210209 11:18:08.348"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:08.349" starttime="20210209 11:18:06.151"></status>
</kw>
<msg timestamp="20210209 11:18:08.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:18:08.349" starttime="20210209 11:18:06.151"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:08.349" starttime="20210209 11:18:06.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:18:08.353" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:18:13.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:18:13.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:18:13.147" starttime="20210209 11:18:08.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:18:13.148" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:18:13.148" starttime="20210209 11:18:13.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:18:13.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:18:13.149" starttime="20210209 11:18:13.148"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:13.149" starttime="20210209 11:18:08.351"></status>
</kw>
<msg timestamp="20210209 11:18:13.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:18:13.149" starttime="20210209 11:18:08.350"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:13.149" starttime="20210209 11:18:08.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:18:13.396" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:18:17.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:18:17.366" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:18:17.366" starttime="20210209 11:18:13.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:18:17.367" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:18:17.367" starttime="20210209 11:18:17.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:18:17.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:18:17.368" starttime="20210209 11:18:17.367"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:17.368" starttime="20210209 11:18:13.150"></status>
</kw>
<msg timestamp="20210209 11:18:17.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:18:17.368" starttime="20210209 11:18:13.150"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:17.369" starttime="20210209 11:18:13.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:18:17.373" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:18:21.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:18:21.313" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:18:21.313" starttime="20210209 11:18:17.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:18:21.314" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:18:21.314" starttime="20210209 11:18:21.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:18:21.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:18:21.315" starttime="20210209 11:18:21.314"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:21.315" starttime="20210209 11:18:17.370"></status>
</kw>
<msg timestamp="20210209 11:18:21.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:18:21.316" starttime="20210209 11:18:17.369"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:21.316" starttime="20210209 11:18:17.369"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:18:21.316" critical="yes" starttime="20210209 11:17:57.509"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:18:21.322" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:18:21.322" starttime="20210209 11:18:21.321"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:18:21.322" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:18:21.322" starttime="20210209 11:18:21.322"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:21.323" starttime="20210209 11:18:21.321"></status>
</kw>
<msg timestamp="20210209 11:18:21.323" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:18:21.323" starttime="20210209 11:18:21.320"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:21.323" starttime="20210209 11:18:21.319"></status>
</kw>
<msg timestamp="20210209 11:18:21.323" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210209 11:18:21.323" starttime="20210209 11:18:21.319"></status>
</kw>
<msg timestamp="20210209 11:18:21.323" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210209 11:18:21.323" starttime="20210209 11:18:21.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:18:21.327" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:18:23.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:18:23.352" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:18:23.352" starttime="20210209 11:18:21.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:18:23.353" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:18:23.353" starttime="20210209 11:18:23.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:18:23.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:18:23.354" starttime="20210209 11:18:23.353"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:23.354" starttime="20210209 11:18:21.324"></status>
</kw>
<msg timestamp="20210209 11:18:23.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:18:23.354" starttime="20210209 11:18:21.324"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:23.354" starttime="20210209 11:18:21.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:18:23.357" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:18:25.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:18:25.344" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:18:25.344" starttime="20210209 11:18:23.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:18:25.345" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:18:25.345" starttime="20210209 11:18:25.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:18:25.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:18:25.346" starttime="20210209 11:18:25.345"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:25.347" starttime="20210209 11:18:23.355"></status>
</kw>
<msg timestamp="20210209 11:18:25.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:18:25.347" starttime="20210209 11:18:23.355"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:25.347" starttime="20210209 11:18:23.354"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:18:25.347" critical="yes" starttime="20210209 11:18:21.317"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210209 11:18:25.348" starttime="20210209 11:17:57.442"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:19:54.490" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:19:54.490" starttime="20210209 11:19:54.489"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:19:54.490" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:19:54.490" starttime="20210209 11:19:54.490"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:54.490" starttime="20210209 11:19:54.489"></status>
</kw>
<msg timestamp="20210209 11:19:54.491" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:19:54.491" starttime="20210209 11:19:54.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:19:54.491" starttime="20210209 11:19:54.491"></status>
</kw>
<msg timestamp="20210209 11:19:54.492" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210209 11:19:54.492" starttime="20210209 11:19:54.491"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:54.492" starttime="20210209 11:19:54.487"></status>
</kw>
<msg timestamp="20210209 11:19:54.492" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:19:54.492" starttime="20210209 11:19:54.487"></status>
</kw>
<msg timestamp="20210209 11:19:54.492" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:19:54.492" starttime="20210209 11:19:54.486"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:19:54.493" level="INFO">${random} = 66130</msg>
<status status="PASS" endtime="20210209 11:19:54.493" starttime="20210209 11:19:54.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:19:54.498" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-66130 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:19:57.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:19:57.611" level="INFO">${output} = 2021-02-09 11:19:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:19:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-09 ...</msg>
<status status="PASS" endtime="20210209 11:19:57.611" starttime="20210209 11:19:54.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:19:57.612" level="INFO">2021-02-09 11:19:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:19:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-09 11:19:56 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-09 11:19:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:19:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A310C900CA57-&gt;69aeaf41-ea9f-42b3-b559-96788ce94173
2021-02-09 11:19:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210209 11:19:57.613" starttime="20210209 11:19:57.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:19:57.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:19:57.613" starttime="20210209 11:19:57.613"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:57.613" starttime="20210209 11:19:54.494"></status>
</kw>
<msg timestamp="20210209 11:19:57.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:19:57.614" starttime="20210209 11:19:54.494"></status>
</kw>
<msg timestamp="20210209 11:19:57.614" level="INFO">${result} = 2021-02-09 11:19:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:19:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-09 ...</msg>
<status status="PASS" endtime="20210209 11:19:57.614" starttime="20210209 11:19:54.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:19:57.618" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:19:59.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:19:59.240" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-09 11:18 ofs://om/volume1/bucket1/ozone-22735
-rw-...</msg>
<status status="PASS" endtime="20210209 11:19:59.240" starttime="20210209 11:19:57.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:19:59.242" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-09 11:18 ofs://om/volume1/bucket1/ozone-22735
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-09 11:19 ofs://om/volume1/bucket1/ozone-66130
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:18 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:19 ofs://om/volume1/bucket1/wordcount-kUSlUiTq.txt</msg>
<status status="PASS" endtime="20210209 11:19:59.242" starttime="20210209 11:19:59.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:19:59.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:19:59.242" starttime="20210209 11:19:59.242"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:59.243" starttime="20210209 11:19:57.615"></status>
</kw>
<msg timestamp="20210209 11:19:59.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:19:59.243" starttime="20210209 11:19:57.615"></status>
</kw>
<msg timestamp="20210209 11:19:59.243" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-09 11:18 ofs://om/volume1/bucket1/ozone-22735
-rw-...</msg>
<status status="PASS" endtime="20210209 11:19:59.243" starttime="20210209 11:19:57.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:19:59.244" starttime="20210209 11:19:59.243"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:19:59.244" critical="yes" starttime="20210209 11:19:54.485"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210209 11:19:59.245" starttime="20210209 11:19:54.425"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:18:29.375" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:18:29.375" starttime="20210209 11:18:29.374"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:18:29.375" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:18:29.375" starttime="20210209 11:18:29.375"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:29.376" starttime="20210209 11:18:29.374"></status>
</kw>
<msg timestamp="20210209 11:18:29.376" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:18:29.376" starttime="20210209 11:18:29.373"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:29.376" starttime="20210209 11:18:29.373"></status>
</kw>
<msg timestamp="20210209 11:18:29.376" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:18:29.376" starttime="20210209 11:18:29.372"></status>
</kw>
<msg timestamp="20210209 11:18:29.376" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:18:29.376" starttime="20210209 11:18:29.371"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:18:29.377" level="INFO">${random} = 22735</msg>
<status status="PASS" endtime="20210209 11:18:29.377" starttime="20210209 11:18:29.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:18:29.381" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-22735 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:18:32.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:18:32.861" level="INFO">${output} = 2021-02-09 11:18:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:18:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-09 ...</msg>
<status status="PASS" endtime="20210209 11:18:32.861" starttime="20210209 11:18:29.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:18:32.864" level="INFO">2021-02-09 11:18:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:18:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-09 11:18:31 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-09 11:18:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:18:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BBE26ADBB17F-&gt;69aeaf41-ea9f-42b3-b559-96788ce94173
2021-02-09 11:18:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210209 11:18:32.864" starttime="20210209 11:18:32.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:18:32.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:18:32.865" starttime="20210209 11:18:32.864"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:32.865" starttime="20210209 11:18:29.378"></status>
</kw>
<msg timestamp="20210209 11:18:32.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:18:32.865" starttime="20210209 11:18:29.378"></status>
</kw>
<msg timestamp="20210209 11:18:32.865" level="INFO">${result} = 2021-02-09 11:18:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:18:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-09 ...</msg>
<status status="PASS" endtime="20210209 11:18:32.865" starttime="20210209 11:18:29.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:18:32.869" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:18:34.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:18:34.526" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-09 11:18 o3fs://bucket1.volume1.om/ozone-22735
dr...</msg>
<status status="PASS" endtime="20210209 11:18:34.527" starttime="20210209 11:18:32.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:18:34.528" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-09 11:18 o3fs://bucket1.volume1.om/ozone-22735
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:18 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210209 11:18:34.528" starttime="20210209 11:18:34.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:18:34.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:18:34.528" starttime="20210209 11:18:34.528"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:34.529" starttime="20210209 11:18:32.867"></status>
</kw>
<msg timestamp="20210209 11:18:34.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:18:34.529" starttime="20210209 11:18:32.866"></status>
</kw>
<msg timestamp="20210209 11:18:34.529" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-09 11:18 o3fs://bucket1.volume1.om/ozone-22735
dr...</msg>
<status status="PASS" endtime="20210209 11:18:34.529" starttime="20210209 11:18:32.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:18:34.530" starttime="20210209 11:18:34.530"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:18:34.530" critical="yes" starttime="20210209 11:18:29.371"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210209 11:18:34.531" starttime="20210209 11:18:29.316"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:20:03.392" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:20:03.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:20:03.398" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:20:03.398" starttime="20210209 11:20:03.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:20:03.399" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:20:03.399" starttime="20210209 11:20:03.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:20:03.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:20:03.399" starttime="20210209 11:20:03.399"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:03.400" starttime="20210209 11:20:03.389"></status>
</kw>
<msg timestamp="20210209 11:20:03.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:20:03.400" starttime="20210209 11:20:03.388"></status>
</kw>
<msg timestamp="20210209 11:20:03.400" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:20:03.400" starttime="20210209 11:20:03.388"></status>
</kw>
<msg timestamp="20210209 11:20:03.400" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:20:03.400" starttime="20210209 11:20:03.387"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:20:03.404" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:20:03.404" starttime="20210209 11:20:03.404"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:20:03.405" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:20:03.405" starttime="20210209 11:20:03.404"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:03.405" starttime="20210209 11:20:03.403"></status>
</kw>
<msg timestamp="20210209 11:20:03.405" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:20:03.405" starttime="20210209 11:20:03.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:20:03.406" starttime="20210209 11:20:03.406"></status>
</kw>
<msg timestamp="20210209 11:20:03.406" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210209 11:20:03.406" starttime="20210209 11:20:03.405"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:03.407" starttime="20210209 11:20:03.402"></status>
</kw>
<msg timestamp="20210209 11:20:03.407" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:20:03.407" starttime="20210209 11:20:03.401"></status>
</kw>
<msg timestamp="20210209 11:20:03.407" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:20:03.407" starttime="20210209 11:20:03.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:20:03.410" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:20:38.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:20:38.531" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:20:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:20:05 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210209 11:20:38.531" starttime="20210209 11:20:03.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:20:38.532" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:20:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:20:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-09 11:20:05 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-09 11:20:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:20:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CAEEACD10B2A-&gt;0d4feb9a-1fb7-4a7b-9494-a9dd37705b13
2021-02-09 11:20:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-09 11:20:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-980B0674B2A8-&gt;69aeaf41-ea9f-42b3-b559-96788ce94173
2021-02-09 11:20:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-09 11:20:08 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-09 11:20:09 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-09 11:20:09 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-09 11:20:09 INFO  JobSubmitter:198 - number of splits:3
2021-02-09 11:20:09 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612869432136_0003
2021-02-09 11:20:09 INFO  YarnClientImpl:273 - Submitted application application_1612869432136_0003
2021-02-09 11:20:09 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612869432136_0003/
2021-02-09 11:20:09 INFO  Job:1339 - Running job: job_1612869432136_0003
2021-02-09 11:20:16 INFO  Job:1360 - Job job_1612869432136_0003 running in uber mode : false
2021-02-09 11:20:16 INFO  Job:1367 -  map 0% reduce 0%
2021-02-09 11:20:22 INFO  Job:1367 -  map 33% reduce 0%
2021-02-09 11:20:27 INFO  Job:1367 -  map 67% reduce 0%
2021-02-09 11:20:32 INFO  Job:1367 -  map 100% reduce 0%
2021-02-09 11:20:36 INFO  Job:1367 -  map 100% reduce 100%
2021-02-09 11:20:37 INFO  Job:1378 - Job job_1612869432136_0003 completed successfully
2021-02-09 11:20:38 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=611865
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37456
		Total time spent by all reduces in occupied slots (ms)=13608
		Total time spent by all map tasks (ms)=9364
		Total time spent by all reduce tasks (ms)=3402
		Total vcore-milliseconds taken by all map tasks=9364
		Total vcore-milliseconds taken by all reduce tasks=3402
		Total megabyte-milliseconds taken by all map tasks=38354944
		Total megabyte-milliseconds taken by all reduce tasks=13934592
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=509
		CPU time spent (ms)=6140
		Physical memory (bytes) snapshot=1164521472
		Virtual memory (bytes) snapshot=15780249600
		Total committed heap usage (bytes)=967311360
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.213 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210209 11:20:38.532" starttime="20210209 11:20:38.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:20:38.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:20:38.533" starttime="20210209 11:20:38.532"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:38.533" starttime="20210209 11:20:03.408"></status>
</kw>
<msg timestamp="20210209 11:20:38.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:20:38.533" starttime="20210209 11:20:03.408"></status>
</kw>
<msg timestamp="20210209 11:20:38.534" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:20:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:20:05 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210209 11:20:38.534" starttime="20210209 11:20:03.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:20:38.534" starttime="20210209 11:20:38.534"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:20:38.534" critical="yes" starttime="20210209 11:20:03.387"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:20:38.539" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:20:38.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:20:38.545" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:20:38.545" starttime="20210209 11:20:38.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:20:38.546" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:20:38.546" starttime="20210209 11:20:38.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:20:38.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:20:38.547" starttime="20210209 11:20:38.546"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:38.547" starttime="20210209 11:20:38.537"></status>
</kw>
<msg timestamp="20210209 11:20:38.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:20:38.547" starttime="20210209 11:20:38.537"></status>
</kw>
<msg timestamp="20210209 11:20:38.547" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:20:38.547" starttime="20210209 11:20:38.536"></status>
</kw>
<msg timestamp="20210209 11:20:38.548" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:20:38.548" starttime="20210209 11:20:38.536"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:20:38.548" level="INFO">${random} = cdhjhxpX</msg>
<status status="PASS" endtime="20210209 11:20:38.548" starttime="20210209 11:20:38.548"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:20:38.552" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:20:38.552" starttime="20210209 11:20:38.552"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:20:38.553" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:20:38.553" starttime="20210209 11:20:38.552"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:38.554" starttime="20210209 11:20:38.551"></status>
</kw>
<msg timestamp="20210209 11:20:38.554" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:20:38.554" starttime="20210209 11:20:38.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:20:38.555" starttime="20210209 11:20:38.554"></status>
</kw>
<msg timestamp="20210209 11:20:38.555" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210209 11:20:38.555" starttime="20210209 11:20:38.554"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:38.555" starttime="20210209 11:20:38.550"></status>
</kw>
<msg timestamp="20210209 11:20:38.555" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:20:38.555" starttime="20210209 11:20:38.549"></status>
</kw>
<msg timestamp="20210209 11:20:38.556" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:20:38.556" starttime="20210209 11:20:38.549"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:20:38.559" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:20:38.559" starttime="20210209 11:20:38.559"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:20:38.560" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:20:38.560" starttime="20210209 11:20:38.559"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:38.560" starttime="20210209 11:20:38.558"></status>
</kw>
<msg timestamp="20210209 11:20:38.560" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:20:38.560" starttime="20210209 11:20:38.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:20:38.562" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210209 11:20:38.562" starttime="20210209 11:20:38.561"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:20:38.563" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210209 11:20:38.563" starttime="20210209 11:20:38.562"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:38.563" starttime="20210209 11:20:38.561"></status>
</kw>
<msg timestamp="20210209 11:20:38.563" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210209 11:20:38.563" starttime="20210209 11:20:38.560"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:38.563" starttime="20210209 11:20:38.557"></status>
</kw>
<msg timestamp="20210209 11:20:38.563" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210209 11:20:38.563" starttime="20210209 11:20:38.557"></status>
</kw>
<msg timestamp="20210209 11:20:38.564" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210209 11:20:38.564" starttime="20210209 11:20:38.556"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:20:38.567" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:20:38.567" starttime="20210209 11:20:38.567"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:20:38.568" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:20:38.568" starttime="20210209 11:20:38.567"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:38.568" starttime="20210209 11:20:38.566"></status>
</kw>
<msg timestamp="20210209 11:20:38.568" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:20:38.568" starttime="20210209 11:20:38.566"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:20:38.570" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210209 11:20:38.570" starttime="20210209 11:20:38.569"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:20:38.571" level="INFO">${result} = /wordcount-cdhjhxpX.txt</msg>
<status status="PASS" endtime="20210209 11:20:38.571" starttime="20210209 11:20:38.570"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:38.571" starttime="20210209 11:20:38.569"></status>
</kw>
<msg timestamp="20210209 11:20:38.571" level="INFO">${path_with_leading} = /wordcount-cdhjhxpX.txt</msg>
<status status="PASS" endtime="20210209 11:20:38.571" starttime="20210209 11:20:38.569"></status>
</kw>
<status status="PASS" endtime="20210209 11:20:38.572" starttime="20210209 11:20:38.565"></status>
</kw>
<msg timestamp="20210209 11:20:38.572" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-cdhjhxpX.txt</msg>
<status status="PASS" endtime="20210209 11:20:38.572" starttime="20210209 11:20:38.565"></status>
</kw>
<msg timestamp="20210209 11:20:38.572" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-cdhjhxpX.txt</msg>
<status status="PASS" endtime="20210209 11:20:38.572" starttime="20210209 11:20:38.564"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:20:38.575" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-cdhjhxpX.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:21:14.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:21:14.189" level="INFO">${output} = 2021-02-09 11:20:40 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-09 11:20:40 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210209 11:21:14.189" starttime="20210209 11:20:38.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:21:14.190" level="INFO">2021-02-09 11:20:40 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-09 11:20:40 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-09 11:20:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:20:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-09 11:20:40 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-09 11:20:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:20:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-74C7041B58D1-&gt;0d4feb9a-1fb7-4a7b-9494-a9dd37705b13
2021-02-09 11:20:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:20:41 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-09 11:20:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4C5972C44F2A-&gt;69aeaf41-ea9f-42b3-b559-96788ce94173
2021-02-09 11:20:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:20:41 INFO  JobSubmitter:198 - number of splits:3
2021-02-09 11:20:41 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612869432136_0004
2021-02-09 11:20:42 INFO  YarnClientImpl:273 - Submitted application application_1612869432136_0004
2021-02-09 11:20:42 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612869432136_0004/
2021-02-09 11:20:42 INFO  Job:1339 - Running job: job_1612869432136_0004
2021-02-09 11:20:49 INFO  Job:1360 - Job job_1612869432136_0004 running in uber mode : false
2021-02-09 11:20:49 INFO  Job:1367 -  map 0% reduce 0%
2021-02-09 11:20:55 INFO  Job:1367 -  map 33% reduce 0%
2021-02-09 11:21:00 INFO  Job:1367 -  map 67% reduce 0%
2021-02-09 11:21:05 INFO  Job:1367 -  map 100% reduce 0%
2021-02-09 11:21:10 INFO  Job:1367 -  map 100% reduce 100%
2021-02-09 11:21:13 INFO  Job:1378 - Job job_1612869432136_0004 completed successfully
2021-02-09 11:21:13 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=674635
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38112
		Total time spent by all reduces in occupied slots (ms)=14064
		Total time spent by all map tasks (ms)=9528
		Total time spent by all reduce tasks (ms)=3516
		Total vcore-milliseconds taken by all map tasks=9528
		Total vcore-milliseconds taken by all reduce tasks=3516
		Total megabyte-milliseconds taken by all map tasks=39026688
		Total megabyte-milliseconds taken by all reduce tasks=14401536
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=506
		CPU time spent (ms)=6410
		Physical memory (bytes) snapshot=1130971136
		Virtual memory (bytes) snapshot=15764938752
		Total committed heap usage (bytes)=991952896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210209 11:21:14.190" starttime="20210209 11:21:14.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:21:14.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:21:14.191" starttime="20210209 11:21:14.190"></status>
</kw>
<status status="PASS" endtime="20210209 11:21:14.191" starttime="20210209 11:20:38.573"></status>
</kw>
<msg timestamp="20210209 11:21:14.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:21:14.191" starttime="20210209 11:20:38.573"></status>
</kw>
<msg timestamp="20210209 11:21:14.191" level="INFO">${output} = 2021-02-09 11:20:40 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-09 11:20:40 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210209 11:21:14.191" starttime="20210209 11:20:38.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210209 11:21:14.192" starttime="20210209 11:21:14.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:21:14.192" starttime="20210209 11:21:14.192"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:21:14.193" critical="yes" starttime="20210209 11:20:38.535"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210209 11:21:14.194" starttime="20210209 11:20:03.332"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:18:38.525" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:18:38.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:18:38.530" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:18:38.530" starttime="20210209 11:18:38.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:18:38.531" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:18:38.531" starttime="20210209 11:18:38.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:18:38.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:18:38.531" starttime="20210209 11:18:38.531"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:38.532" starttime="20210209 11:18:38.520"></status>
</kw>
<msg timestamp="20210209 11:18:38.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:18:38.532" starttime="20210209 11:18:38.520"></status>
</kw>
<msg timestamp="20210209 11:18:38.532" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:18:38.532" starttime="20210209 11:18:38.519"></status>
</kw>
<msg timestamp="20210209 11:18:38.532" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:18:38.533" starttime="20210209 11:18:38.519"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:18:38.537" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:18:38.537" starttime="20210209 11:18:38.537"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:18:38.538" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:18:38.538" starttime="20210209 11:18:38.537"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:38.538" starttime="20210209 11:18:38.536"></status>
</kw>
<msg timestamp="20210209 11:18:38.538" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:18:38.538" starttime="20210209 11:18:38.536"></status>
</kw>
<status status="PASS" endtime="20210209 11:18:38.538" starttime="20210209 11:18:38.535"></status>
</kw>
<msg timestamp="20210209 11:18:38.539" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:18:38.539" starttime="20210209 11:18:38.533"></status>
</kw>
<msg timestamp="20210209 11:18:38.539" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:18:38.539" starttime="20210209 11:18:38.533"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:18:38.542" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:19:15.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:19:15.011" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:18:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:18:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210209 11:19:15.011" starttime="20210209 11:18:38.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:19:15.012" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:18:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:18:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-09 11:18:40 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-09 11:18:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:18:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-66936511AB71-&gt;0d4feb9a-1fb7-4a7b-9494-a9dd37705b13
2021-02-09 11:18:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-09 11:18:41 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-09 11:18:42 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-09 11:18:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-95FDC4F70A59-&gt;69aeaf41-ea9f-42b3-b559-96788ce94173
2021-02-09 11:18:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:18:42 INFO  JobSubmitter:198 - number of splits:3
2021-02-09 11:18:42 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612869432136_0001
2021-02-09 11:18:43 INFO  YarnClientImpl:273 - Submitted application application_1612869432136_0001
2021-02-09 11:18:43 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612869432136_0001/
2021-02-09 11:18:43 INFO  Job:1339 - Running job: job_1612869432136_0001
2021-02-09 11:18:53 INFO  Job:1360 - Job job_1612869432136_0001 running in uber mode : false
2021-02-09 11:18:53 INFO  Job:1367 -  map 0% reduce 0%
2021-02-09 11:18:59 INFO  Job:1367 -  map 33% reduce 0%
2021-02-09 11:19:04 INFO  Job:1367 -  map 67% reduce 0%
2021-02-09 11:19:09 INFO  Job:1367 -  map 100% reduce 0%
2021-02-09 11:19:13 INFO  Job:1367 -  map 100% reduce 100%
2021-02-09 11:19:14 INFO  Job:1378 - Job job_1612869432136_0001 completed successfully
2021-02-09 11:19:14 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=612077
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38260
		Total time spent by all reduces in occupied slots (ms)=14632
		Total time spent by all map tasks (ms)=9565
		Total time spent by all reduce tasks (ms)=3658
		Total vcore-milliseconds taken by all map tasks=9565
		Total vcore-milliseconds taken by all reduce tasks=3658
		Total megabyte-milliseconds taken by all map tasks=39178240
		Total megabyte-milliseconds taken by all reduce tasks=14983168
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=552
		CPU time spent (ms)=6040
		Physical memory (bytes) snapshot=1160605696
		Virtual memory (bytes) snapshot=15762382848
		Total committed heap usage (bytes)=1063780352
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.842 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210209 11:19:15.012" starttime="20210209 11:19:15.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:19:15.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:19:15.013" starttime="20210209 11:19:15.012"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:15.013" starttime="20210209 11:18:38.540"></status>
</kw>
<msg timestamp="20210209 11:19:15.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:19:15.013" starttime="20210209 11:18:38.540"></status>
</kw>
<msg timestamp="20210209 11:19:15.014" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:18:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:18:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210209 11:19:15.014" starttime="20210209 11:18:38.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:19:15.014" starttime="20210209 11:19:15.014"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:19:15.015" critical="yes" starttime="20210209 11:18:38.518"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:19:15.020" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:19:15.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:19:15.026" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:19:15.027" starttime="20210209 11:19:15.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:19:15.027" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:19:15.027" starttime="20210209 11:19:15.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:19:15.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:19:15.028" starttime="20210209 11:19:15.028"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:15.028" starttime="20210209 11:19:15.017"></status>
</kw>
<msg timestamp="20210209 11:19:15.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:19:15.029" starttime="20210209 11:19:15.017"></status>
</kw>
<msg timestamp="20210209 11:19:15.029" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:19:15.029" starttime="20210209 11:19:15.016"></status>
</kw>
<msg timestamp="20210209 11:19:15.029" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210209 11:19:15.029" starttime="20210209 11:19:15.016"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:19:15.030" level="INFO">${random} = kUSlUiTq</msg>
<status status="PASS" endtime="20210209 11:19:15.030" starttime="20210209 11:19:15.029"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:19:15.034" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:19:15.034" starttime="20210209 11:19:15.033"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:19:15.034" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:19:15.034" starttime="20210209 11:19:15.034"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:15.034" starttime="20210209 11:19:15.033"></status>
</kw>
<msg timestamp="20210209 11:19:15.035" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:19:15.035" starttime="20210209 11:19:15.032"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:15.035" starttime="20210209 11:19:15.031"></status>
</kw>
<msg timestamp="20210209 11:19:15.035" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:19:15.035" starttime="20210209 11:19:15.031"></status>
</kw>
<msg timestamp="20210209 11:19:15.035" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:19:15.035" starttime="20210209 11:19:15.030"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:19:15.039" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:19:15.039" starttime="20210209 11:19:15.039"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:19:15.040" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:19:15.040" starttime="20210209 11:19:15.039"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:15.040" starttime="20210209 11:19:15.038"></status>
</kw>
<msg timestamp="20210209 11:19:15.040" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:19:15.040" starttime="20210209 11:19:15.038"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:15.040" starttime="20210209 11:19:15.037"></status>
</kw>
<msg timestamp="20210209 11:19:15.041" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210209 11:19:15.041" starttime="20210209 11:19:15.036"></status>
</kw>
<msg timestamp="20210209 11:19:15.041" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210209 11:19:15.041" starttime="20210209 11:19:15.036"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:19:15.045" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:19:15.045" starttime="20210209 11:19:15.044"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:19:15.045" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:19:15.045" starttime="20210209 11:19:15.045"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:15.046" starttime="20210209 11:19:15.044"></status>
</kw>
<msg timestamp="20210209 11:19:15.046" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:19:15.046" starttime="20210209 11:19:15.043"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:15.046" starttime="20210209 11:19:15.042"></status>
</kw>
<msg timestamp="20210209 11:19:15.048" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-kUSlUiTq.txt</msg>
<status status="PASS" endtime="20210209 11:19:15.048" starttime="20210209 11:19:15.042"></status>
</kw>
<msg timestamp="20210209 11:19:15.049" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-kUSlUiTq.txt</msg>
<status status="PASS" endtime="20210209 11:19:15.049" starttime="20210209 11:19:15.041"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:19:15.053" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-kUSlUiTq.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:19:50.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:19:50.098" level="INFO">${output} = 2021-02-09 11:19:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-09 11:19:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210209 11:19:50.098" starttime="20210209 11:19:15.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:19:50.099" level="INFO">2021-02-09 11:19:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-09 11:19:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-09 11:19:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:19:17 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-09 11:19:17 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-09 11:19:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:19:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B9C475462D01-&gt;0d4feb9a-1fb7-4a7b-9494-a9dd37705b13
2021-02-09 11:19:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:19:18 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-09 11:19:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FAA72BD30D95-&gt;69aeaf41-ea9f-42b3-b559-96788ce94173
2021-02-09 11:19:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:19:20 INFO  JobSubmitter:198 - number of splits:3
2021-02-09 11:19:21 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612869432136_0002
2021-02-09 11:19:21 INFO  YarnClientImpl:273 - Submitted application application_1612869432136_0002
2021-02-09 11:19:21 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612869432136_0002/
2021-02-09 11:19:21 INFO  Job:1339 - Running job: job_1612869432136_0002
2021-02-09 11:19:27 INFO  Job:1360 - Job job_1612869432136_0002 running in uber mode : false
2021-02-09 11:19:27 INFO  Job:1367 -  map 0% reduce 0%
2021-02-09 11:19:34 INFO  Job:1367 -  map 33% reduce 0%
2021-02-09 11:19:39 INFO  Job:1367 -  map 67% reduce 0%
2021-02-09 11:19:44 INFO  Job:1367 -  map 100% reduce 0%
2021-02-09 11:19:48 INFO  Job:1367 -  map 100% reduce 100%
2021-02-09 11:19:49 INFO  Job:1378 - Job job_1612869432136_0002 completed successfully
2021-02-09 11:19:49 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=674719
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39248
		Total time spent by all reduces in occupied slots (ms)=14344
		Total time spent by all map tasks (ms)=9812
		Total time spent by all reduce tasks (ms)=3586
		Total vcore-milliseconds taken by all map tasks=9812
		Total vcore-milliseconds taken by all reduce tasks=3586
		Total megabyte-milliseconds taken by all map tasks=40189952
		Total megabyte-milliseconds taken by all reduce tasks=14688256
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=519
		CPU time spent (ms)=7030
		Physical memory (bytes) snapshot=1177108480
		Virtual memory (bytes) snapshot=15799738368
		Total committed heap usage (bytes)=1019740160
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210209 11:19:50.100" starttime="20210209 11:19:50.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:19:50.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:19:50.101" starttime="20210209 11:19:50.100"></status>
</kw>
<status status="PASS" endtime="20210209 11:19:50.101" starttime="20210209 11:19:15.051"></status>
</kw>
<msg timestamp="20210209 11:19:50.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:19:50.101" starttime="20210209 11:19:15.050"></status>
</kw>
<msg timestamp="20210209 11:19:50.102" level="INFO">${output} = 2021-02-09 11:19:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-09 11:19:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210209 11:19:50.102" starttime="20210209 11:19:15.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210209 11:19:50.102" starttime="20210209 11:19:50.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:19:50.103" starttime="20210209 11:19:50.103"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:19:50.103" critical="yes" starttime="20210209 11:19:15.015"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210209 11:19:50.105" starttime="20210209 11:18:38.464"></status>
</suite>
<status status="PASS" elapsedtime="180444" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:22:27.948" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:22:29.961" level="INFO">${rc} = 255</msg>
<msg timestamp="20210209 11:22:29.961" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210209 11:22:29.961" starttime="20210209 11:22:27.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:22:29.962" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210209 11:22:29.963" starttime="20210209 11:22:29.961"></status>
</kw>
<msg timestamp="20210209 11:22:29.963" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210209 11:22:29.963" starttime="20210209 11:22:27.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:22:29.969" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:22:32.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:22:32.687" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:22:32.687" starttime="20210209 11:22:29.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:22:32.688" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:22:32.688" starttime="20210209 11:22:32.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:22:32.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:22:32.689" starttime="20210209 11:22:32.689"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:32.689" starttime="20210209 11:22:29.965"></status>
</kw>
<msg timestamp="20210209 11:22:32.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:22:32.690" starttime="20210209 11:22:29.965"></status>
</kw>
<msg timestamp="20210209 11:22:32.690" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210209 11:22:32.690" starttime="20210209 11:22:29.964"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210209 11:22:32.690" starttime="20210209 11:22:32.690"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:32.690" starttime="20210209 11:22:29.964"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:32.691" starttime="20210209 11:22:29.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:22:32.697" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:22:34.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:22:34.823" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:22:34.823" starttime="20210209 11:22:32.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:22:34.825" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:22:34.825" starttime="20210209 11:22:34.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:22:34.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:22:34.825" starttime="20210209 11:22:34.825"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:34.826" starttime="20210209 11:22:32.692"></status>
</kw>
<msg timestamp="20210209 11:22:34.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:22:34.826" starttime="20210209 11:22:32.692"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:34.826" starttime="20210209 11:22:32.692"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:34.826" starttime="20210209 11:22:32.691"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:34.827" starttime="20210209 11:22:32.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210209 11:22:34.827" starttime="20210209 11:22:34.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:22:34.831" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:22:36.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:22:36.903" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:22...</msg>
<status status="PASS" endtime="20210209 11:22:36.903" starttime="20210209 11:22:34.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:22:36.904" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:22:34.784Z",
  "modificationTime" : "2021-02-09T11:22:34.784Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210209 11:22:36.904" starttime="20210209 11:22:36.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:22:36.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:22:36.905" starttime="20210209 11:22:36.904"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:36.905" starttime="20210209 11:22:34.829"></status>
</kw>
<msg timestamp="20210209 11:22:36.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:22:36.905" starttime="20210209 11:22:34.828"></status>
</kw>
<msg timestamp="20210209 11:22:36.906" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:22...</msg>
<status status="PASS" endtime="20210209 11:22:36.906" starttime="20210209 11:22:34.827"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210209 11:22:36.906" starttime="20210209 11:22:36.906"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:22:36.911" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:22:36.911" starttime="20210209 11:22:36.911"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:22:36.912" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:22:36.912" starttime="20210209 11:22:36.911"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:36.912" starttime="20210209 11:22:36.910"></status>
</kw>
<msg timestamp="20210209 11:22:36.912" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:22:36.912" starttime="20210209 11:22:36.910"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:36.913" starttime="20210209 11:22:36.909"></status>
</kw>
<msg timestamp="20210209 11:22:36.913" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210209 11:22:36.913" starttime="20210209 11:22:36.907"></status>
</kw>
<msg timestamp="20210209 11:22:36.913" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210209 11:22:36.913" starttime="20210209 11:22:36.906"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:22:36.918" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:22:38.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:22:38.936" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:22:38.936" starttime="20210209 11:22:36.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:22:38.937" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:22:38.937" starttime="20210209 11:22:38.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:22:38.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:22:38.938" starttime="20210209 11:22:38.937"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:38.938" starttime="20210209 11:22:36.915"></status>
</kw>
<msg timestamp="20210209 11:22:38.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:22:38.938" starttime="20210209 11:22:36.914"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:38.939" starttime="20210209 11:22:36.913"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:22:38.942" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:22:44.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:22:44.248" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:22:44.248" starttime="20210209 11:22:38.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:22:44.249" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:22:44.249" starttime="20210209 11:22:44.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:22:44.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:22:44.250" starttime="20210209 11:22:44.249"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:44.250" starttime="20210209 11:22:38.940"></status>
</kw>
<msg timestamp="20210209 11:22:44.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:22:44.250" starttime="20210209 11:22:38.940"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:44.251" starttime="20210209 11:22:38.939"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:22:44.254" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:22:50.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:22:50.547" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:22:50.547" starttime="20210209 11:22:44.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:22:50.549" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:22:50.549" starttime="20210209 11:22:50.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:22:50.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:22:50.550" starttime="20210209 11:22:50.549"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:50.550" starttime="20210209 11:22:44.252"></status>
</kw>
<msg timestamp="20210209 11:22:50.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:22:50.550" starttime="20210209 11:22:44.251"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:50.550" starttime="20210209 11:22:44.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:22:50.554" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:22:54.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:22:54.341" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:22:54.341" starttime="20210209 11:22:50.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:22:54.342" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:22:54.342" starttime="20210209 11:22:54.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:22:54.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:22:54.343" starttime="20210209 11:22:54.342"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:54.343" starttime="20210209 11:22:50.551"></status>
</kw>
<msg timestamp="20210209 11:22:54.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:22:54.344" starttime="20210209 11:22:50.551"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:54.344" starttime="20210209 11:22:50.550"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:22:54.344" critical="yes" starttime="20210209 11:22:27.942"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:22:54.349" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:22:54.349" starttime="20210209 11:22:54.348"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:22:54.349" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:22:54.349" starttime="20210209 11:22:54.349"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:54.350" starttime="20210209 11:22:54.348"></status>
</kw>
<msg timestamp="20210209 11:22:54.350" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:22:54.350" starttime="20210209 11:22:54.347"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:54.350" starttime="20210209 11:22:54.346"></status>
</kw>
<msg timestamp="20210209 11:22:54.350" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210209 11:22:54.351" starttime="20210209 11:22:54.346"></status>
</kw>
<msg timestamp="20210209 11:22:54.351" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210209 11:22:54.351" starttime="20210209 11:22:54.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:22:54.361" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:22:56.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:22:56.357" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:22:56.357" starttime="20210209 11:22:54.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:22:56.358" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:22:56.358" starttime="20210209 11:22:56.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:22:56.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:22:56.359" starttime="20210209 11:22:56.358"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:56.359" starttime="20210209 11:22:54.352"></status>
</kw>
<msg timestamp="20210209 11:22:56.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:22:56.359" starttime="20210209 11:22:54.351"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:56.359" starttime="20210209 11:22:54.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:22:56.363" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:22:58.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:22:58.457" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:22:58.457" starttime="20210209 11:22:56.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:22:58.458" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:22:58.458" starttime="20210209 11:22:58.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:22:58.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:22:58.459" starttime="20210209 11:22:58.458"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:58.459" starttime="20210209 11:22:56.360"></status>
</kw>
<msg timestamp="20210209 11:22:58.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:22:58.459" starttime="20210209 11:22:56.360"></status>
</kw>
<status status="PASS" endtime="20210209 11:22:58.460" starttime="20210209 11:22:56.360"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:22:58.460" critical="yes" starttime="20210209 11:22:54.345"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210209 11:22:58.461" starttime="20210209 11:22:27.884"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:24:32.887" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:24:32.887" starttime="20210209 11:24:32.886"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:24:32.888" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:24:32.888" starttime="20210209 11:24:32.887"></status>
</kw>
<status status="PASS" endtime="20210209 11:24:32.888" starttime="20210209 11:24:32.885"></status>
</kw>
<msg timestamp="20210209 11:24:32.888" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:24:32.888" starttime="20210209 11:24:32.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:24:32.889" starttime="20210209 11:24:32.889"></status>
</kw>
<msg timestamp="20210209 11:24:32.889" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210209 11:24:32.889" starttime="20210209 11:24:32.888"></status>
</kw>
<status status="PASS" endtime="20210209 11:24:32.889" starttime="20210209 11:24:32.884"></status>
</kw>
<msg timestamp="20210209 11:24:32.889" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:24:32.890" starttime="20210209 11:24:32.883"></status>
</kw>
<msg timestamp="20210209 11:24:32.890" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:24:32.890" starttime="20210209 11:24:32.883"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:24:32.890" level="INFO">${random} = 86832</msg>
<status status="PASS" endtime="20210209 11:24:32.890" starttime="20210209 11:24:32.890"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:24:32.895" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-86832 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:24:36.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:24:36.383" level="INFO">${output} = 2021-02-09 11:24:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210209 11:24:36.383" starttime="20210209 11:24:32.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:24:36.384" level="INFO">2021-02-09 11:24:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-09 11:24:34 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:24:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:24:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:24:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:24:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-24553B583FD6-&gt;6e251615-b8c2-4319-b8be-b501a39d4d6e
2021-02-09 11:24:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:24:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210209 11:24:36.385" starttime="20210209 11:24:36.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:24:36.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:24:36.385" starttime="20210209 11:24:36.385"></status>
</kw>
<status status="PASS" endtime="20210209 11:24:36.386" starttime="20210209 11:24:32.891"></status>
</kw>
<msg timestamp="20210209 11:24:36.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:24:36.386" starttime="20210209 11:24:32.891"></status>
</kw>
<msg timestamp="20210209 11:24:36.386" level="INFO">${result} = 2021-02-09 11:24:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210209 11:24:36.387" starttime="20210209 11:24:32.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:24:36.390" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:24:38.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:24:38.184" level="INFO">${output} = 2021-02-09 11:24:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210209 11:24:38.184" starttime="20210209 11:24:36.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:24:38.185" level="INFO">2021-02-09 11:24:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:37 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:22 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-09 11:23 ofs://om/volume1/bucket1/ozone-33302
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-09 11:24 ofs://om/volume1/bucket1/ozone-86832
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:22 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:24 ofs://om/volume1/bucket1/wordcount-9b7lpV6U.txt
2021-02-09 11:24:38 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210209 11:24:38.185" starttime="20210209 11:24:38.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:24:38.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:24:38.186" starttime="20210209 11:24:38.185"></status>
</kw>
<status status="PASS" endtime="20210209 11:24:38.186" starttime="20210209 11:24:36.388"></status>
</kw>
<msg timestamp="20210209 11:24:38.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:24:38.187" starttime="20210209 11:24:36.387"></status>
</kw>
<msg timestamp="20210209 11:24:38.187" level="INFO">${result} = 2021-02-09 11:24:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210209 11:24:38.187" starttime="20210209 11:24:36.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:24:38.187" starttime="20210209 11:24:38.187"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:24:38.188" critical="yes" starttime="20210209 11:24:32.882"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210209 11:24:38.189" starttime="20210209 11:24:32.823"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:23:02.535" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:23:02.535" starttime="20210209 11:23:02.535"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:23:02.536" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:23:02.536" starttime="20210209 11:23:02.535"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:02.536" starttime="20210209 11:23:02.534"></status>
</kw>
<msg timestamp="20210209 11:23:02.536" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:23:02.536" starttime="20210209 11:23:02.534"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:02.536" starttime="20210209 11:23:02.533"></status>
</kw>
<msg timestamp="20210209 11:23:02.536" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:23:02.537" starttime="20210209 11:23:02.532"></status>
</kw>
<msg timestamp="20210209 11:23:02.537" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:23:02.537" starttime="20210209 11:23:02.532"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:23:02.537" level="INFO">${random} = 33302</msg>
<status status="PASS" endtime="20210209 11:23:02.537" starttime="20210209 11:23:02.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:23:02.543" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-33302 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:23:05.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:23:05.970" level="INFO">${output} = 2021-02-09 11:23:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210209 11:23:05.970" starttime="20210209 11:23:02.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:23:05.972" level="INFO">2021-02-09 11:23:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:04 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-09 11:23:04 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:23:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:23:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:23:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:23:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-65BB26A16437-&gt;38bbccf7-2ed5-4767-8bd1-cab48bf1e277
2021-02-09 11:23:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:23:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210209 11:23:05.972" starttime="20210209 11:23:05.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:23:05.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:23:05.973" starttime="20210209 11:23:05.972"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:05.973" starttime="20210209 11:23:02.539"></status>
</kw>
<msg timestamp="20210209 11:23:05.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:23:05.973" starttime="20210209 11:23:02.538"></status>
</kw>
<msg timestamp="20210209 11:23:05.974" level="INFO">${result} = 2021-02-09 11:23:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210209 11:23:05.974" starttime="20210209 11:23:02.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:23:05.977" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:23:07.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:23:07.743" level="INFO">${output} = 2021-02-09 11:23:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210209 11:23:07.743" starttime="20210209 11:23:05.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:23:07.744" level="INFO">2021-02-09 11:23:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:07 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:22 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-09 11:23 o3fs://bucket1.volume1.om/ozone-33302
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:22 o3fs://bucket1.volume1.om/user
2021-02-09 11:23:07 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210209 11:23:07.744" starttime="20210209 11:23:07.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:23:07.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:23:07.745" starttime="20210209 11:23:07.744"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:07.745" starttime="20210209 11:23:05.975"></status>
</kw>
<msg timestamp="20210209 11:23:07.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:23:07.745" starttime="20210209 11:23:05.974"></status>
</kw>
<msg timestamp="20210209 11:23:07.746" level="INFO">${result} = 2021-02-09 11:23:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210209 11:23:07.746" starttime="20210209 11:23:05.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:23:07.746" starttime="20210209 11:23:07.746"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:23:07.747" critical="yes" starttime="20210209 11:23:02.531"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210209 11:23:07.747" starttime="20210209 11:23:02.475"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:24:42.405" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:24:42.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:24:42.412" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:24:42.412" starttime="20210209 11:24:42.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:24:42.413" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:24:42.413" starttime="20210209 11:24:42.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:24:42.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:24:42.414" starttime="20210209 11:24:42.414"></status>
</kw>
<status status="PASS" endtime="20210209 11:24:42.414" starttime="20210209 11:24:42.401"></status>
</kw>
<msg timestamp="20210209 11:24:42.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:24:42.415" starttime="20210209 11:24:42.400"></status>
</kw>
<msg timestamp="20210209 11:24:42.415" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:24:42.415" starttime="20210209 11:24:42.400"></status>
</kw>
<msg timestamp="20210209 11:24:42.415" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:24:42.415" starttime="20210209 11:24:42.399"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:24:42.421" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:24:42.421" starttime="20210209 11:24:42.420"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:24:42.422" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:24:42.422" starttime="20210209 11:24:42.421"></status>
</kw>
<status status="PASS" endtime="20210209 11:24:42.422" starttime="20210209 11:24:42.420"></status>
</kw>
<msg timestamp="20210209 11:24:42.422" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:24:42.422" starttime="20210209 11:24:42.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:24:42.423" starttime="20210209 11:24:42.423"></status>
</kw>
<msg timestamp="20210209 11:24:42.423" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210209 11:24:42.423" starttime="20210209 11:24:42.422"></status>
</kw>
<status status="PASS" endtime="20210209 11:24:42.424" starttime="20210209 11:24:42.419"></status>
</kw>
<msg timestamp="20210209 11:24:42.424" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:24:42.424" starttime="20210209 11:24:42.416"></status>
</kw>
<msg timestamp="20210209 11:24:42.424" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:24:42.424" starttime="20210209 11:24:42.415"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:24:42.428" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:25:23.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:25:23.382" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:24:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24...</msg>
<status status="PASS" endtime="20210209 11:25:23.382" starttime="20210209 11:24:42.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:25:23.389" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:24:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:44 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-09 11:24:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:24:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:24:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:24:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:24:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-46553B6C282C-&gt;38bbccf7-2ed5-4767-8bd1-cab48bf1e277
2021-02-09 11:24:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-09 11:24:48 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:48 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:48 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-02-09 11:24:48 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:48 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-09 11:24:48 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B533C175B59B-&gt;6e251615-b8c2-4319-b8be-b501a39d4d6e
2021-02-09 11:24:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:24:48 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-09 11:24:48 INFO  JobSubmitter:202 - number of splits:3
2021-02-09 11:24:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612869715319_0003
2021-02-09 11:24:49 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-09 11:24:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:49 INFO  Configuration:2752 - resource-types.xml not found
2021-02-09 11:24:49 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-09 11:24:49 INFO  YarnClientImpl:324 - Submitted application application_1612869715319_0003
2021-02-09 11:24:49 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612869715319_0003/
2021-02-09 11:24:49 INFO  Job:1619 - Running job: job_1612869715319_0003
2021-02-09 11:24:57 INFO  Job:1640 - Job job_1612869715319_0003 running in uber mode : false
2021-02-09 11:24:57 INFO  Job:1647 -  map 0% reduce 0%
2021-02-09 11:25:04 INFO  Job:1647 -  map 33% reduce 0%
2021-02-09 11:25:09 INFO  Job:1647 -  map 67% reduce 0%
2021-02-09 11:25:14 INFO  Job:1647 -  map 100% reduce 0%
2021-02-09 11:25:19 INFO  Job:1647 -  map 100% reduce 100%
2021-02-09 11:25:22 INFO  Job:1658 - Job job_1612869715319_0003 completed successfully
2021-02-09 11:25:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:22 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1017465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40752
		Total time spent by all reduces in occupied slots (ms)=14712
		Total time spent by all map tasks (ms)=10188
		Total time spent by all reduce tasks (ms)=3678
		Total vcore-milliseconds taken by all map tasks=10188
		Total vcore-milliseconds taken by all reduce tasks=3678
		Total megabyte-milliseconds taken by all map tasks=41730048
		Total megabyte-milliseconds taken by all reduce tasks=15065088
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=582
		CPU time spent (ms)=6460
		Physical memory (bytes) snapshot=1252306944
		Virtual memory (bytes) snapshot=15799382016
		Total committed heap usage (bytes)=1080557568
		Peak Map Physical memory (bytes)=319152128
		Peak Map Virtual memory (bytes)=3948982272
		Peak Reduce Physical memory (bytes)=309358592
		Peak Reduce Virtual memory (bytes)=3965661184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.643 seconds
2021-02-09 11:25:22 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-09 11:25:23 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210209 11:25:23.389" starttime="20210209 11:25:23.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:25:23.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:25:23.390" starttime="20210209 11:25:23.390"></status>
</kw>
<status status="PASS" endtime="20210209 11:25:23.390" starttime="20210209 11:24:42.425"></status>
</kw>
<msg timestamp="20210209 11:25:23.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:25:23.391" starttime="20210209 11:24:42.425"></status>
</kw>
<msg timestamp="20210209 11:25:23.394" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:24:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24...</msg>
<status status="PASS" endtime="20210209 11:25:23.394" starttime="20210209 11:24:42.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:25:23.395" starttime="20210209 11:25:23.394"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:25:23.395" critical="yes" starttime="20210209 11:24:42.398"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:25:23.401" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:25:23.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:25:23.407" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:25:23.407" starttime="20210209 11:25:23.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:25:23.408" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:25:23.408" starttime="20210209 11:25:23.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:25:23.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:25:23.409" starttime="20210209 11:25:23.408"></status>
</kw>
<status status="PASS" endtime="20210209 11:25:23.409" starttime="20210209 11:25:23.399"></status>
</kw>
<msg timestamp="20210209 11:25:23.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:25:23.409" starttime="20210209 11:25:23.398"></status>
</kw>
<msg timestamp="20210209 11:25:23.409" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:25:23.409" starttime="20210209 11:25:23.398"></status>
</kw>
<msg timestamp="20210209 11:25:23.410" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:25:23.410" starttime="20210209 11:25:23.397"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:25:23.411" level="INFO">${random} = ZpsloeEy</msg>
<status status="PASS" endtime="20210209 11:25:23.411" starttime="20210209 11:25:23.410"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:25:23.415" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:25:23.415" starttime="20210209 11:25:23.415"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:25:23.416" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:25:23.416" starttime="20210209 11:25:23.415"></status>
</kw>
<status status="PASS" endtime="20210209 11:25:23.416" starttime="20210209 11:25:23.414"></status>
</kw>
<msg timestamp="20210209 11:25:23.416" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:25:23.416" starttime="20210209 11:25:23.414"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:25:23.417" starttime="20210209 11:25:23.417"></status>
</kw>
<msg timestamp="20210209 11:25:23.417" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210209 11:25:23.417" starttime="20210209 11:25:23.416"></status>
</kw>
<status status="PASS" endtime="20210209 11:25:23.418" starttime="20210209 11:25:23.413"></status>
</kw>
<msg timestamp="20210209 11:25:23.419" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:25:23.419" starttime="20210209 11:25:23.412"></status>
</kw>
<msg timestamp="20210209 11:25:23.419" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:25:23.419" starttime="20210209 11:25:23.411"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:25:23.423" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:25:23.423" starttime="20210209 11:25:23.423"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:25:23.424" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:25:23.424" starttime="20210209 11:25:23.424"></status>
</kw>
<status status="PASS" endtime="20210209 11:25:23.424" starttime="20210209 11:25:23.422"></status>
</kw>
<msg timestamp="20210209 11:25:23.424" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:25:23.424" starttime="20210209 11:25:23.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:25:23.426" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210209 11:25:23.426" starttime="20210209 11:25:23.426"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:25:23.427" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210209 11:25:23.427" starttime="20210209 11:25:23.426"></status>
</kw>
<status status="PASS" endtime="20210209 11:25:23.427" starttime="20210209 11:25:23.425"></status>
</kw>
<msg timestamp="20210209 11:25:23.427" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210209 11:25:23.427" starttime="20210209 11:25:23.425"></status>
</kw>
<status status="PASS" endtime="20210209 11:25:23.427" starttime="20210209 11:25:23.421"></status>
</kw>
<msg timestamp="20210209 11:25:23.428" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210209 11:25:23.428" starttime="20210209 11:25:23.420"></status>
</kw>
<msg timestamp="20210209 11:25:23.428" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210209 11:25:23.428" starttime="20210209 11:25:23.420"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:25:23.432" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:25:23.432" starttime="20210209 11:25:23.431"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:25:23.432" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:25:23.432" starttime="20210209 11:25:23.432"></status>
</kw>
<status status="PASS" endtime="20210209 11:25:23.433" starttime="20210209 11:25:23.431"></status>
</kw>
<msg timestamp="20210209 11:25:23.433" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:25:23.433" starttime="20210209 11:25:23.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:25:23.435" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210209 11:25:23.435" starttime="20210209 11:25:23.434"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:25:23.435" level="INFO">${result} = /wordcount-ZpsloeEy.txt</msg>
<status status="PASS" endtime="20210209 11:25:23.435" starttime="20210209 11:25:23.435"></status>
</kw>
<status status="PASS" endtime="20210209 11:25:23.436" starttime="20210209 11:25:23.434"></status>
</kw>
<msg timestamp="20210209 11:25:23.436" level="INFO">${path_with_leading} = /wordcount-ZpsloeEy.txt</msg>
<status status="PASS" endtime="20210209 11:25:23.436" starttime="20210209 11:25:23.433"></status>
</kw>
<status status="PASS" endtime="20210209 11:25:23.436" starttime="20210209 11:25:23.429"></status>
</kw>
<msg timestamp="20210209 11:25:23.436" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-ZpsloeEy.txt</msg>
<status status="PASS" endtime="20210209 11:25:23.436" starttime="20210209 11:25:23.429"></status>
</kw>
<msg timestamp="20210209 11:25:23.436" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-ZpsloeEy.txt</msg>
<status status="PASS" endtime="20210209 11:25:23.437" starttime="20210209 11:25:23.428"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:25:23.440" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-ZpsloeEy.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:26:02.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:26:02.619" level="INFO">${output} = 2021-02-09 11:25:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210209 11:26:02.619" starttime="20210209 11:25:23.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:26:02.620" level="INFO">2021-02-09 11:25:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-02-09 11:25:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-09 11:25:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:25 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-09 11:25:25 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:25:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:25:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:25:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:25:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-508D15DA0AE2-&gt;6e251615-b8c2-4319-b8be-b501a39d4d6e
2021-02-09 11:25:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:25:26 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-09 11:25:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C07878896108-&gt;38bbccf7-2ed5-4767-8bd1-cab48bf1e277
2021-02-09 11:25:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:25:27 INFO  JobSubmitter:202 - number of splits:3
2021-02-09 11:25:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612869715319_0004
2021-02-09 11:25:27 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-09 11:25:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:27 INFO  Configuration:2752 - resource-types.xml not found
2021-02-09 11:25:27 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-09 11:25:27 INFO  YarnClientImpl:324 - Submitted application application_1612869715319_0004
2021-02-09 11:25:27 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612869715319_0004/
2021-02-09 11:25:27 INFO  Job:1619 - Running job: job_1612869715319_0004
2021-02-09 11:25:35 INFO  Job:1640 - Job job_1612869715319_0004 running in uber mode : false
2021-02-09 11:25:35 INFO  Job:1647 -  map 0% reduce 0%
2021-02-09 11:25:42 INFO  Job:1647 -  map 33% reduce 0%
2021-02-09 11:25:47 INFO  Job:1647 -  map 67% reduce 0%
2021-02-09 11:25:52 INFO  Job:1647 -  map 100% reduce 0%
2021-02-09 11:25:56 INFO  Job:1647 -  map 100% reduce 100%
2021-02-09 11:26:02 INFO  Job:1658 - Job job_1612869715319_0004 completed successfully
2021-02-09 11:26:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:26:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1080147
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39588
		Total time spent by all reduces in occupied slots (ms)=14720
		Total time spent by all map tasks (ms)=9897
		Total time spent by all reduce tasks (ms)=3680
		Total vcore-milliseconds taken by all map tasks=9897
		Total vcore-milliseconds taken by all reduce tasks=3680
		Total megabyte-milliseconds taken by all map tasks=40538112
		Total megabyte-milliseconds taken by all reduce tasks=15073280
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=563
		CPU time spent (ms)=6760
		Physical memory (bytes) snapshot=1267986432
		Virtual memory (bytes) snapshot=15804424192
		Total committed heap usage (bytes)=1066401792
		Peak Map Physical memory (bytes)=319516672
		Peak Map Virtual memory (bytes)=3946483712
		Peak Reduce Physical memory (bytes)=312823808
		Peak Reduce Virtual memory (bytes)=3969122304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-09 11:26:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210209 11:26:02.620" starttime="20210209 11:26:02.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:26:02.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:26:02.621" starttime="20210209 11:26:02.620"></status>
</kw>
<status status="PASS" endtime="20210209 11:26:02.621" starttime="20210209 11:25:23.438"></status>
</kw>
<msg timestamp="20210209 11:26:02.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:26:02.621" starttime="20210209 11:25:23.437"></status>
</kw>
<msg timestamp="20210209 11:26:02.622" level="INFO">${output} = 2021-02-09 11:25:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:25:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210209 11:26:02.622" starttime="20210209 11:25:23.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210209 11:26:02.623" starttime="20210209 11:26:02.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:26:02.623" starttime="20210209 11:26:02.623"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:26:02.623" critical="yes" starttime="20210209 11:25:23.396"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210209 11:26:02.625" starttime="20210209 11:24:42.336"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:23:11.939" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:23:11.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:23:11.945" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:23:11.945" starttime="20210209 11:23:11.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:23:11.946" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:23:11.946" starttime="20210209 11:23:11.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:23:11.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:23:11.946" starttime="20210209 11:23:11.946"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:11.947" starttime="20210209 11:23:11.936"></status>
</kw>
<msg timestamp="20210209 11:23:11.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:23:11.947" starttime="20210209 11:23:11.935"></status>
</kw>
<msg timestamp="20210209 11:23:11.947" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:23:11.947" starttime="20210209 11:23:11.935"></status>
</kw>
<msg timestamp="20210209 11:23:11.948" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:23:11.948" starttime="20210209 11:23:11.935"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:23:11.952" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:23:11.952" starttime="20210209 11:23:11.951"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:23:11.952" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:23:11.953" starttime="20210209 11:23:11.952"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:11.953" starttime="20210209 11:23:11.951"></status>
</kw>
<msg timestamp="20210209 11:23:11.953" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:23:11.953" starttime="20210209 11:23:11.950"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:11.953" starttime="20210209 11:23:11.950"></status>
</kw>
<msg timestamp="20210209 11:23:11.953" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:23:11.953" starttime="20210209 11:23:11.949"></status>
</kw>
<msg timestamp="20210209 11:23:11.954" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:23:11.954" starttime="20210209 11:23:11.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:23:11.956" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:23:54.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:23:54.753" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:23:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23...</msg>
<status status="PASS" endtime="20210209 11:23:54.753" starttime="20210209 11:23:11.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:23:54.754" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:23:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:13 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-09 11:23:13 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:23:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:23:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:23:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:23:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4C63177C8D99-&gt;6e251615-b8c2-4319-b8be-b501a39d4d6e
2021-02-09 11:23:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-09 11:23:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-282525B7DD1B-&gt;38bbccf7-2ed5-4767-8bd1-cab48bf1e277
2021-02-09 11:23:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-09 11:23:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-02-09 11:23:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:20 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-09 11:23:20 INFO  JobSubmitter:202 - number of splits:3
2021-02-09 11:23:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612869715319_0001
2021-02-09 11:23:21 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-09 11:23:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:21 INFO  Configuration:2752 - resource-types.xml not found
2021-02-09 11:23:21 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-09 11:23:21 INFO  YarnClientImpl:324 - Submitted application application_1612869715319_0001
2021-02-09 11:23:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612869715319_0001/
2021-02-09 11:23:21 INFO  Job:1619 - Running job: job_1612869715319_0001
2021-02-09 11:23:30 INFO  Job:1640 - Job job_1612869715319_0001 running in uber mode : false
2021-02-09 11:23:30 INFO  Job:1647 -  map 0% reduce 0%
2021-02-09 11:23:37 INFO  Job:1647 -  map 33% reduce 0%
2021-02-09 11:23:43 INFO  Job:1647 -  map 67% reduce 0%
2021-02-09 11:23:49 INFO  Job:1647 -  map 100% reduce 0%
2021-02-09 11:23:53 INFO  Job:1647 -  map 100% reduce 100%
2021-02-09 11:23:54 INFO  Job:1658 - Job job_1612869715319_0001 completed successfully
2021-02-09 11:23:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1017677
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38988
		Total time spent by all reduces in occupied slots (ms)=14372
		Total time spent by all map tasks (ms)=9747
		Total time spent by all reduce tasks (ms)=3593
		Total vcore-milliseconds taken by all map tasks=9747
		Total vcore-milliseconds taken by all reduce tasks=3593
		Total megabyte-milliseconds taken by all map tasks=39923712
		Total megabyte-milliseconds taken by all reduce tasks=14716928
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=576
		CPU time spent (ms)=6380
		Physical memory (bytes) snapshot=1273499648
		Virtual memory (bytes) snapshot=15808929792
		Total committed heap usage (bytes)=1078460416
		Peak Map Physical memory (bytes)=325816320
		Peak Map Virtual memory (bytes)=3948462080
		Peak Reduce Physical memory (bytes)=310595584
		Peak Reduce Virtual memory (bytes)=3966685184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.977 seconds
2021-02-09 11:23:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:54 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-09 11:23:54 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210209 11:23:54.755" starttime="20210209 11:23:54.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:23:54.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:23:54.755" starttime="20210209 11:23:54.755"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:54.756" starttime="20210209 11:23:11.955"></status>
</kw>
<msg timestamp="20210209 11:23:54.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:23:54.756" starttime="20210209 11:23:11.954"></status>
</kw>
<msg timestamp="20210209 11:23:54.756" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:23:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23...</msg>
<status status="PASS" endtime="20210209 11:23:54.757" starttime="20210209 11:23:11.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:23:54.757" starttime="20210209 11:23:54.757"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:23:54.757" critical="yes" starttime="20210209 11:23:11.934"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:23:54.763" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:23:54.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:23:54.768" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:23:54.768" starttime="20210209 11:23:54.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:23:54.769" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:23:54.769" starttime="20210209 11:23:54.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:23:54.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:23:54.770" starttime="20210209 11:23:54.769"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:54.770" starttime="20210209 11:23:54.761"></status>
</kw>
<msg timestamp="20210209 11:23:54.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:23:54.770" starttime="20210209 11:23:54.760"></status>
</kw>
<msg timestamp="20210209 11:23:54.770" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:23:54.770" starttime="20210209 11:23:54.759"></status>
</kw>
<msg timestamp="20210209 11:23:54.771" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210209 11:23:54.771" starttime="20210209 11:23:54.759"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:23:54.771" level="INFO">${random} = 9b7lpV6U</msg>
<status status="PASS" endtime="20210209 11:23:54.771" starttime="20210209 11:23:54.771"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:23:54.775" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:23:54.775" starttime="20210209 11:23:54.775"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:23:54.776" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:23:54.776" starttime="20210209 11:23:54.775"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:54.776" starttime="20210209 11:23:54.774"></status>
</kw>
<msg timestamp="20210209 11:23:54.776" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:23:54.776" starttime="20210209 11:23:54.774"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:54.777" starttime="20210209 11:23:54.773"></status>
</kw>
<msg timestamp="20210209 11:23:54.777" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:23:54.777" starttime="20210209 11:23:54.772"></status>
</kw>
<msg timestamp="20210209 11:23:54.777" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:23:54.777" starttime="20210209 11:23:54.771"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:23:54.780" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:23:54.780" starttime="20210209 11:23:54.780"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:23:54.781" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:23:54.781" starttime="20210209 11:23:54.780"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:54.781" starttime="20210209 11:23:54.779"></status>
</kw>
<msg timestamp="20210209 11:23:54.781" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:23:54.781" starttime="20210209 11:23:54.779"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:54.782" starttime="20210209 11:23:54.778"></status>
</kw>
<msg timestamp="20210209 11:23:54.782" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210209 11:23:54.782" starttime="20210209 11:23:54.778"></status>
</kw>
<msg timestamp="20210209 11:23:54.782" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210209 11:23:54.782" starttime="20210209 11:23:54.777"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:23:54.785" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:23:54.785" starttime="20210209 11:23:54.785"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:23:54.786" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:23:54.786" starttime="20210209 11:23:54.785"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:54.786" starttime="20210209 11:23:54.784"></status>
</kw>
<msg timestamp="20210209 11:23:54.786" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:23:54.786" starttime="20210209 11:23:54.784"></status>
</kw>
<status status="PASS" endtime="20210209 11:23:54.786" starttime="20210209 11:23:54.783"></status>
</kw>
<msg timestamp="20210209 11:23:54.787" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-9b7lpV6U.txt</msg>
<status status="PASS" endtime="20210209 11:23:54.787" starttime="20210209 11:23:54.783"></status>
</kw>
<msg timestamp="20210209 11:23:54.787" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-9b7lpV6U.txt</msg>
<status status="PASS" endtime="20210209 11:23:54.787" starttime="20210209 11:23:54.782"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:23:54.790" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-9b7lpV6U.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:24:28.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:24:28.759" level="INFO">${output} = 2021-02-09 11:23:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210209 11:24:28.759" starttime="20210209 11:23:54.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:24:28.760" level="INFO">2021-02-09 11:23:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-02-09 11:23:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-09 11:23:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:56 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-09 11:23:56 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-09 11:23:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:23:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:23:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:23:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AB112BCEF240-&gt;6e251615-b8c2-4319-b8be-b501a39d4d6e
2021-02-09 11:23:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:23:58 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-09 11:23:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-58A146323DC0-&gt;38bbccf7-2ed5-4767-8bd1-cab48bf1e277
2021-02-09 11:23:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:23:58 INFO  JobSubmitter:202 - number of splits:3
2021-02-09 11:23:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612869715319_0002
2021-02-09 11:23:58 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-09 11:23:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:58 INFO  Configuration:2752 - resource-types.xml not found
2021-02-09 11:23:58 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-09 11:23:58 INFO  YarnClientImpl:324 - Submitted application application_1612869715319_0002
2021-02-09 11:23:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612869715319_0002/
2021-02-09 11:23:58 INFO  Job:1619 - Running job: job_1612869715319_0002
2021-02-09 11:24:07 INFO  Job:1640 - Job job_1612869715319_0002 running in uber mode : false
2021-02-09 11:24:07 INFO  Job:1647 -  map 0% reduce 0%
2021-02-09 11:24:13 INFO  Job:1647 -  map 33% reduce 0%
2021-02-09 11:24:18 INFO  Job:1647 -  map 67% reduce 0%
2021-02-09 11:24:23 INFO  Job:1647 -  map 100% reduce 0%
2021-02-09 11:24:27 INFO  Job:1647 -  map 100% reduce 100%
2021-02-09 11:24:28 INFO  Job:1658 - Job job_1612869715319_0002 completed successfully
2021-02-09 11:24:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:24:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1080231
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38452
		Total time spent by all reduces in occupied slots (ms)=14384
		Total time spent by all map tasks (ms)=9613
		Total time spent by all reduce tasks (ms)=3596
		Total vcore-milliseconds taken by all map tasks=9613
		Total vcore-milliseconds taken by all reduce tasks=3596
		Total megabyte-milliseconds taken by all map tasks=39374848
		Total megabyte-milliseconds taken by all reduce tasks=14729216
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=532
		CPU time spent (ms)=6290
		Physical memory (bytes) snapshot=1260445696
		Virtual memory (bytes) snapshot=15793119232
		Total committed heap usage (bytes)=1075314688
		Peak Map Physical memory (bytes)=328040448
		Peak Map Virtual memory (bytes)=3950247936
		Peak Reduce Physical memory (bytes)=302546944
		Peak Reduce Virtual memory (bytes)=3964624896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-09 11:24:28 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210209 11:24:28.761" starttime="20210209 11:24:28.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:24:28.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:24:28.762" starttime="20210209 11:24:28.761"></status>
</kw>
<status status="PASS" endtime="20210209 11:24:28.762" starttime="20210209 11:23:54.788"></status>
</kw>
<msg timestamp="20210209 11:24:28.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:24:28.762" starttime="20210209 11:23:54.788"></status>
</kw>
<msg timestamp="20210209 11:24:28.763" level="INFO">${output} = 2021-02-09 11:23:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-09 11:23:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210209 11:24:28.763" starttime="20210209 11:23:54.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210209 11:24:28.763" starttime="20210209 11:24:28.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:24:28.764" starttime="20210209 11:24:28.763"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:24:28.764" critical="yes" starttime="20210209 11:23:54.758"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210209 11:24:28.765" starttime="20210209 11:23:11.880"></status>
</suite>
<status status="PASS" elapsedtime="198389" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:27:15.947" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:27:19.350" level="INFO">${rc} = 255</msg>
<msg timestamp="20210209 11:27:19.350" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210209 11:27:19.350" starttime="20210209 11:27:15.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:27:19.351" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210209 11:27:19.352" starttime="20210209 11:27:19.351"></status>
</kw>
<msg timestamp="20210209 11:27:19.352" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210209 11:27:19.352" starttime="20210209 11:27:15.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:27:19.358" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:27:22.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:27:22.977" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:27:22.977" starttime="20210209 11:27:19.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:27:22.978" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:27:22.978" starttime="20210209 11:27:22.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:27:22.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:27:22.979" starttime="20210209 11:27:22.978"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:22.979" starttime="20210209 11:27:19.354"></status>
</kw>
<msg timestamp="20210209 11:27:22.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:27:22.980" starttime="20210209 11:27:19.354"></status>
</kw>
<msg timestamp="20210209 11:27:22.980" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210209 11:27:22.980" starttime="20210209 11:27:19.353"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210209 11:27:22.981" starttime="20210209 11:27:22.980"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:22.981" starttime="20210209 11:27:19.353"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:22.981" starttime="20210209 11:27:19.352"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:27:22.986" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:27:25.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:27:25.794" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:27:25.794" starttime="20210209 11:27:22.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:27:25.795" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:27:25.795" starttime="20210209 11:27:25.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:27:25.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:27:25.796" starttime="20210209 11:27:25.795"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:25.796" starttime="20210209 11:27:22.983"></status>
</kw>
<msg timestamp="20210209 11:27:25.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:27:25.797" starttime="20210209 11:27:22.983"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:25.797" starttime="20210209 11:27:22.983"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:25.797" starttime="20210209 11:27:22.982"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:25.797" starttime="20210209 11:27:22.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210209 11:27:25.798" starttime="20210209 11:27:25.797"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:27:25.802" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:27:28.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:27:28.702" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:27...</msg>
<status status="PASS" endtime="20210209 11:27:28.702" starttime="20210209 11:27:25.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:27:28.703" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:27:25.652Z",
  "modificationTime" : "2021-02-09T11:27:25.652Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210209 11:27:28.703" starttime="20210209 11:27:28.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:27:28.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:27:28.704" starttime="20210209 11:27:28.703"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:28.704" starttime="20210209 11:27:25.799"></status>
</kw>
<msg timestamp="20210209 11:27:28.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:27:28.704" starttime="20210209 11:27:25.799"></status>
</kw>
<msg timestamp="20210209 11:27:28.705" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:27...</msg>
<status status="PASS" endtime="20210209 11:27:28.705" starttime="20210209 11:27:25.798"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210209 11:27:28.705" starttime="20210209 11:27:28.705"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:27:28.709" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:27:28.709" starttime="20210209 11:27:28.709"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:27:28.710" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:27:28.710" starttime="20210209 11:27:28.709"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:28.710" starttime="20210209 11:27:28.708"></status>
</kw>
<msg timestamp="20210209 11:27:28.710" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:27:28.710" starttime="20210209 11:27:28.708"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:28.711" starttime="20210209 11:27:28.707"></status>
</kw>
<msg timestamp="20210209 11:27:28.711" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210209 11:27:28.711" starttime="20210209 11:27:28.706"></status>
</kw>
<msg timestamp="20210209 11:27:28.711" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210209 11:27:28.711" starttime="20210209 11:27:28.705"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:27:28.714" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:27:31.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:27:31.709" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:27:31.709" starttime="20210209 11:27:28.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:27:31.710" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:27:31.710" starttime="20210209 11:27:31.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:27:31.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:27:31.711" starttime="20210209 11:27:31.710"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:31.711" starttime="20210209 11:27:28.712"></status>
</kw>
<msg timestamp="20210209 11:27:31.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:27:31.711" starttime="20210209 11:27:28.712"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:31.712" starttime="20210209 11:27:28.711"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:27:31.716" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:27:38.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:27:38.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:27:38.839" starttime="20210209 11:27:31.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:27:38.840" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:27:38.840" starttime="20210209 11:27:38.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:27:38.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:27:38.841" starttime="20210209 11:27:38.840"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:38.841" starttime="20210209 11:27:31.713"></status>
</kw>
<msg timestamp="20210209 11:27:38.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:27:38.841" starttime="20210209 11:27:31.713"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:38.841" starttime="20210209 11:27:31.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:27:38.845" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:27:43.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:27:43.890" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:27:43.890" starttime="20210209 11:27:38.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:27:43.891" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:27:43.891" starttime="20210209 11:27:43.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:27:43.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:27:43.892" starttime="20210209 11:27:43.891"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:43.892" starttime="20210209 11:27:38.842"></status>
</kw>
<msg timestamp="20210209 11:27:43.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:27:43.892" starttime="20210209 11:27:38.842"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:43.893" starttime="20210209 11:27:38.841"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:27:43.896" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:27:49.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:27:49.102" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:27:49.102" starttime="20210209 11:27:43.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:27:49.103" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:27:49.104" starttime="20210209 11:27:49.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:27:49.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:27:49.104" starttime="20210209 11:27:49.104"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:49.105" starttime="20210209 11:27:43.894"></status>
</kw>
<msg timestamp="20210209 11:27:49.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:27:49.105" starttime="20210209 11:27:43.893"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:49.105" starttime="20210209 11:27:43.893"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:27:49.105" critical="yes" starttime="20210209 11:27:15.942"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:27:49.111" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:27:49.111" starttime="20210209 11:27:49.110"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:27:49.111" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:27:49.111" starttime="20210209 11:27:49.111"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:49.111" starttime="20210209 11:27:49.110"></status>
</kw>
<msg timestamp="20210209 11:27:49.112" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:27:49.112" starttime="20210209 11:27:49.109"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:49.112" starttime="20210209 11:27:49.108"></status>
</kw>
<msg timestamp="20210209 11:27:49.112" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210209 11:27:49.112" starttime="20210209 11:27:49.107"></status>
</kw>
<msg timestamp="20210209 11:27:49.112" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210209 11:27:49.112" starttime="20210209 11:27:49.107"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:27:49.115" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:27:52.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:27:52.368" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:27:52.368" starttime="20210209 11:27:49.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:27:52.369" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:27:52.369" starttime="20210209 11:27:52.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:27:52.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:27:52.370" starttime="20210209 11:27:52.369"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:52.370" starttime="20210209 11:27:49.113"></status>
</kw>
<msg timestamp="20210209 11:27:52.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:27:52.370" starttime="20210209 11:27:49.113"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:52.370" starttime="20210209 11:27:49.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:27:52.374" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:27:55.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:27:55.641" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:27:55.641" starttime="20210209 11:27:52.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:27:55.642" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:27:55.642" starttime="20210209 11:27:55.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:27:55.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:27:55.643" starttime="20210209 11:27:55.642"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:55.643" starttime="20210209 11:27:52.372"></status>
</kw>
<msg timestamp="20210209 11:27:55.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:27:55.643" starttime="20210209 11:27:52.372"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:55.644" starttime="20210209 11:27:52.371"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:27:55.644" critical="yes" starttime="20210209 11:27:49.106"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210209 11:27:55.645" starttime="20210209 11:27:15.875"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:29:34.992" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:29:34.992" starttime="20210209 11:29:34.992"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:29:34.993" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:29:34.993" starttime="20210209 11:29:34.992"></status>
</kw>
<status status="PASS" endtime="20210209 11:29:34.993" starttime="20210209 11:29:34.991"></status>
</kw>
<msg timestamp="20210209 11:29:34.993" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:29:34.993" starttime="20210209 11:29:34.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:29:34.994" starttime="20210209 11:29:34.994"></status>
</kw>
<msg timestamp="20210209 11:29:34.995" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210209 11:29:34.995" starttime="20210209 11:29:34.994"></status>
</kw>
<status status="PASS" endtime="20210209 11:29:34.995" starttime="20210209 11:29:34.990"></status>
</kw>
<msg timestamp="20210209 11:29:34.995" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:29:34.995" starttime="20210209 11:29:34.989"></status>
</kw>
<msg timestamp="20210209 11:29:34.995" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:29:34.995" starttime="20210209 11:29:34.988"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:29:34.996" level="INFO">${random} = 99561</msg>
<status status="PASS" endtime="20210209 11:29:34.996" starttime="20210209 11:29:34.995"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:29:35.001" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-99561 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:29:38.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:29:38.734" level="INFO">${output} = 2021-02-09 11:29:37 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:29:37 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210209 11:29:38.734" starttime="20210209 11:29:34.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:29:38.735" level="INFO">2021-02-09 11:29:37 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:29:37 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:29:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:29:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:29:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6D28E8F28544-&gt;9a265372-aec1-4706-84aa-bac45e9985cf
2021-02-09 11:29:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210209 11:29:38.735" starttime="20210209 11:29:38.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:29:38.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:29:38.736" starttime="20210209 11:29:38.735"></status>
</kw>
<status status="PASS" endtime="20210209 11:29:38.736" starttime="20210209 11:29:34.997"></status>
</kw>
<msg timestamp="20210209 11:29:38.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:29:38.737" starttime="20210209 11:29:34.997"></status>
</kw>
<msg timestamp="20210209 11:29:38.737" level="INFO">${result} = 2021-02-09 11:29:37 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:29:37 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210209 11:29:38.737" starttime="20210209 11:29:34.996"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:29:38.740" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:29:40.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:29:40.573" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:28 ofs://om/volume1/bucket1/ozone-49337
-rw-...</msg>
<status status="PASS" endtime="20210209 11:29:40.573" starttime="20210209 11:29:38.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:29:40.574" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:28 ofs://om/volume1/bucket1/ozone-49337
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:29 ofs://om/volume1/bucket1/ozone-99561
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:27 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:29 ofs://om/volume1/bucket1/wordcount-tMVIMfYG.txt</msg>
<status status="PASS" endtime="20210209 11:29:40.574" starttime="20210209 11:29:40.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:29:40.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:29:40.575" starttime="20210209 11:29:40.574"></status>
</kw>
<status status="PASS" endtime="20210209 11:29:40.575" starttime="20210209 11:29:38.738"></status>
</kw>
<msg timestamp="20210209 11:29:40.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:29:40.575" starttime="20210209 11:29:38.738"></status>
</kw>
<msg timestamp="20210209 11:29:40.576" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:28 ofs://om/volume1/bucket1/ozone-49337
-rw-...</msg>
<status status="PASS" endtime="20210209 11:29:40.576" starttime="20210209 11:29:38.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:29:40.576" starttime="20210209 11:29:40.576"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:29:40.576" critical="yes" starttime="20210209 11:29:34.987"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210209 11:29:40.578" starttime="20210209 11:29:34.931"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:27:59.843" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:27:59.843" starttime="20210209 11:27:59.843"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:27:59.844" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:27:59.844" starttime="20210209 11:27:59.843"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:59.844" starttime="20210209 11:27:59.842"></status>
</kw>
<msg timestamp="20210209 11:27:59.844" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:27:59.844" starttime="20210209 11:27:59.842"></status>
</kw>
<status status="PASS" endtime="20210209 11:27:59.845" starttime="20210209 11:27:59.841"></status>
</kw>
<msg timestamp="20210209 11:27:59.845" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:27:59.845" starttime="20210209 11:27:59.841"></status>
</kw>
<msg timestamp="20210209 11:27:59.845" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:27:59.845" starttime="20210209 11:27:59.840"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:27:59.846" level="INFO">${random} = 49337</msg>
<status status="PASS" endtime="20210209 11:27:59.846" starttime="20210209 11:27:59.845"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:27:59.850" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-49337 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:28:03.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:28:03.524" level="INFO">${output} = 2021-02-09 11:28:01 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:28:01 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210209 11:28:03.524" starttime="20210209 11:27:59.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:28:03.526" level="INFO">2021-02-09 11:28:01 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:28:01 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:28:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:28:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:28:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B4D4A0C0F2A9-&gt;e008f986-9852-4c41-bf12-9b71301a681d
2021-02-09 11:28:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210209 11:28:03.526" starttime="20210209 11:28:03.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:28:03.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:28:03.528" starttime="20210209 11:28:03.526"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:03.528" starttime="20210209 11:27:59.846"></status>
</kw>
<msg timestamp="20210209 11:28:03.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:28:03.528" starttime="20210209 11:27:59.846"></status>
</kw>
<msg timestamp="20210209 11:28:03.529" level="INFO">${result} = 2021-02-09 11:28:01 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:28:01 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210209 11:28:03.529" starttime="20210209 11:27:59.846"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:28:03.532" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:28:05.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:28:05.323" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:28 o3fs://bucket1.volume1.om/ozone-49337
dr...</msg>
<status status="PASS" endtime="20210209 11:28:05.324" starttime="20210209 11:28:03.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:28:05.325" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:28 o3fs://bucket1.volume1.om/ozone-49337
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:27 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210209 11:28:05.325" starttime="20210209 11:28:05.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:28:05.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:28:05.326" starttime="20210209 11:28:05.325"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:05.326" starttime="20210209 11:28:03.530"></status>
</kw>
<msg timestamp="20210209 11:28:05.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:28:05.326" starttime="20210209 11:28:03.529"></status>
</kw>
<msg timestamp="20210209 11:28:05.326" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-09 11:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-09 11:28 o3fs://bucket1.volume1.om/ozone-49337
dr...</msg>
<status status="PASS" endtime="20210209 11:28:05.327" starttime="20210209 11:28:03.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:28:05.327" starttime="20210209 11:28:05.327"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:28:05.328" critical="yes" starttime="20210209 11:27:59.839"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210209 11:28:05.329" starttime="20210209 11:27:59.785"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:29:44.782" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:29:44.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:29:44.787" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:29:44.787" starttime="20210209 11:29:44.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:29:44.788" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:29:44.788" starttime="20210209 11:29:44.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:29:44.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:29:44.789" starttime="20210209 11:29:44.788"></status>
</kw>
<status status="PASS" endtime="20210209 11:29:44.789" starttime="20210209 11:29:44.778"></status>
</kw>
<msg timestamp="20210209 11:29:44.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:29:44.790" starttime="20210209 11:29:44.778"></status>
</kw>
<msg timestamp="20210209 11:29:44.790" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:29:44.790" starttime="20210209 11:29:44.778"></status>
</kw>
<msg timestamp="20210209 11:29:44.790" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:29:44.790" starttime="20210209 11:29:44.777"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:29:44.795" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:29:44.795" starttime="20210209 11:29:44.795"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:29:44.796" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:29:44.796" starttime="20210209 11:29:44.795"></status>
</kw>
<status status="PASS" endtime="20210209 11:29:44.796" starttime="20210209 11:29:44.794"></status>
</kw>
<msg timestamp="20210209 11:29:44.796" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:29:44.796" starttime="20210209 11:29:44.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:29:44.797" starttime="20210209 11:29:44.797"></status>
</kw>
<msg timestamp="20210209 11:29:44.797" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210209 11:29:44.797" starttime="20210209 11:29:44.796"></status>
</kw>
<status status="PASS" endtime="20210209 11:29:44.798" starttime="20210209 11:29:44.793"></status>
</kw>
<msg timestamp="20210209 11:29:44.798" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:29:44.798" starttime="20210209 11:29:44.791"></status>
</kw>
<msg timestamp="20210209 11:29:44.798" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:29:44.798" starttime="20210209 11:29:44.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:29:44.801" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:30:20.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:30:20.980" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:29:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:29:46 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210209 11:30:20.980" starttime="20210209 11:29:44.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:30:20.981" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:29:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:29:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:29:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:29:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:29:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E92A88DAAE74-&gt;9a265372-aec1-4706-84aa-bac45e9985cf
2021-02-09 11:29:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-09 11:29:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2008439A765A-&gt;e008f986-9852-4c41-bf12-9b71301a681d
2021-02-09 11:29:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-09 11:29:47 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-02-09 11:29:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-09 11:29:48 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-09 11:29:48 INFO  JobSubmitter:202 - number of splits:3
2021-02-09 11:29:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612870006661_0003
2021-02-09 11:29:48 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-09 11:29:48 INFO  Configuration:2795 - resource-types.xml not found
2021-02-09 11:29:48 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-09 11:29:49 INFO  YarnClientImpl:329 - Submitted application application_1612870006661_0003
2021-02-09 11:29:49 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612870006661_0003/
2021-02-09 11:29:49 INFO  Job:1614 - Running job: job_1612870006661_0003
2021-02-09 11:29:57 INFO  Job:1635 - Job job_1612870006661_0003 running in uber mode : false
2021-02-09 11:29:57 INFO  Job:1642 -  map 0% reduce 0%
2021-02-09 11:30:03 INFO  Job:1642 -  map 33% reduce 0%
2021-02-09 11:30:08 INFO  Job:1642 -  map 67% reduce 0%
2021-02-09 11:30:13 INFO  Job:1642 -  map 100% reduce 0%
2021-02-09 11:30:17 INFO  Job:1642 -  map 100% reduce 100%
2021-02-09 11:30:20 INFO  Job:1653 - Job job_1612870006661_0003 completed successfully
2021-02-09 11:30:20 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1092865
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38268
		Total time spent by all reduces in occupied slots (ms)=13968
		Total time spent by all map tasks (ms)=9567
		Total time spent by all reduce tasks (ms)=3492
		Total vcore-milliseconds taken by all map tasks=9567
		Total vcore-milliseconds taken by all reduce tasks=3492
		Total megabyte-milliseconds taken by all map tasks=39186432
		Total megabyte-milliseconds taken by all reduce tasks=14303232
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=699
		CPU time spent (ms)=6170
		Physical memory (bytes) snapshot=1528438784
		Virtual memory (bytes) snapshot=15756292096
		Total committed heap usage (bytes)=1661468672
		Peak Map Physical memory (bytes)=493760512
		Peak Map Virtual memory (bytes)=3943821312
		Peak Reduce Physical memory (bytes)=373370880
		Peak Reduce Virtual memory (bytes)=3952156672
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.593 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210209 11:30:20.982" starttime="20210209 11:30:20.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:30:20.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:30:20.982" starttime="20210209 11:30:20.982"></status>
</kw>
<status status="PASS" endtime="20210209 11:30:20.983" starttime="20210209 11:29:44.799"></status>
</kw>
<msg timestamp="20210209 11:30:20.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:30:20.983" starttime="20210209 11:29:44.799"></status>
</kw>
<msg timestamp="20210209 11:30:20.983" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:29:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:29:46 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210209 11:30:20.983" starttime="20210209 11:29:44.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:30:20.984" starttime="20210209 11:30:20.984"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:30:20.984" critical="yes" starttime="20210209 11:29:44.776"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:30:20.990" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:30:20.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:30:20.995" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:30:20.996" starttime="20210209 11:30:20.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:30:20.997" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:30:20.997" starttime="20210209 11:30:20.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:30:20.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:30:20.998" starttime="20210209 11:30:20.997"></status>
</kw>
<status status="PASS" endtime="20210209 11:30:20.998" starttime="20210209 11:30:20.987"></status>
</kw>
<msg timestamp="20210209 11:30:20.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:30:20.998" starttime="20210209 11:30:20.987"></status>
</kw>
<msg timestamp="20210209 11:30:20.998" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:30:20.998" starttime="20210209 11:30:20.986"></status>
</kw>
<msg timestamp="20210209 11:30:20.999" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:30:20.999" starttime="20210209 11:30:20.986"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:30:20.999" level="INFO">${random} = p8Yhfoca</msg>
<status status="PASS" endtime="20210209 11:30:20.999" starttime="20210209 11:30:20.999"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:30:21.004" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:30:21.004" starttime="20210209 11:30:21.003"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:30:21.005" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:30:21.005" starttime="20210209 11:30:21.004"></status>
</kw>
<status status="PASS" endtime="20210209 11:30:21.005" starttime="20210209 11:30:21.003"></status>
</kw>
<msg timestamp="20210209 11:30:21.005" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:30:21.005" starttime="20210209 11:30:21.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:30:21.006" starttime="20210209 11:30:21.006"></status>
</kw>
<msg timestamp="20210209 11:30:21.006" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210209 11:30:21.006" starttime="20210209 11:30:21.005"></status>
</kw>
<status status="PASS" endtime="20210209 11:30:21.007" starttime="20210209 11:30:21.002"></status>
</kw>
<msg timestamp="20210209 11:30:21.007" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:30:21.007" starttime="20210209 11:30:21.001"></status>
</kw>
<msg timestamp="20210209 11:30:21.007" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210209 11:30:21.007" starttime="20210209 11:30:21.000"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:30:21.011" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:30:21.011" starttime="20210209 11:30:21.010"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:30:21.011" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:30:21.011" starttime="20210209 11:30:21.011"></status>
</kw>
<status status="PASS" endtime="20210209 11:30:21.011" starttime="20210209 11:30:21.010"></status>
</kw>
<msg timestamp="20210209 11:30:21.012" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:30:21.012" starttime="20210209 11:30:21.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:30:21.013" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210209 11:30:21.014" starttime="20210209 11:30:21.013"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:30:21.014" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210209 11:30:21.014" starttime="20210209 11:30:21.014"></status>
</kw>
<status status="PASS" endtime="20210209 11:30:21.014" starttime="20210209 11:30:21.012"></status>
</kw>
<msg timestamp="20210209 11:30:21.015" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210209 11:30:21.015" starttime="20210209 11:30:21.012"></status>
</kw>
<status status="PASS" endtime="20210209 11:30:21.015" starttime="20210209 11:30:21.008"></status>
</kw>
<msg timestamp="20210209 11:30:21.015" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210209 11:30:21.015" starttime="20210209 11:30:21.008"></status>
</kw>
<msg timestamp="20210209 11:30:21.015" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210209 11:30:21.015" starttime="20210209 11:30:21.007"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210209 11:30:21.020" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210209 11:30:21.020" starttime="20210209 11:30:21.019"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:30:21.020" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210209 11:30:21.020" starttime="20210209 11:30:21.020"></status>
</kw>
<status status="PASS" endtime="20210209 11:30:21.021" starttime="20210209 11:30:21.019"></status>
</kw>
<msg timestamp="20210209 11:30:21.021" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210209 11:30:21.021" starttime="20210209 11:30:21.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:30:21.022" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210209 11:30:21.022" starttime="20210209 11:30:21.022"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:30:21.023" level="INFO">${result} = /wordcount-p8Yhfoca.txt</msg>
<status status="PASS" endtime="20210209 11:30:21.023" starttime="20210209 11:30:21.023"></status>
</kw>
<status status="PASS" endtime="20210209 11:30:21.023" starttime="20210209 11:30:21.021"></status>
</kw>
<msg timestamp="20210209 11:30:21.023" level="INFO">${path_with_leading} = /wordcount-p8Yhfoca.txt</msg>
<status status="PASS" endtime="20210209 11:30:21.023" starttime="20210209 11:30:21.021"></status>
</kw>
<status status="PASS" endtime="20210209 11:30:21.024" starttime="20210209 11:30:21.017"></status>
</kw>
<msg timestamp="20210209 11:30:21.024" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-p8Yhfoca.txt</msg>
<status status="PASS" endtime="20210209 11:30:21.024" starttime="20210209 11:30:21.017"></status>
</kw>
<msg timestamp="20210209 11:30:21.025" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-p8Yhfoca.txt</msg>
<status status="PASS" endtime="20210209 11:30:21.025" starttime="20210209 11:30:21.016"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:30:21.028" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-p8Yhfoca.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:31:04.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:31:04.424" level="INFO">${output} = 2021-02-09 11:30:22 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-02-09 11:30:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210209 11:31:04.424" starttime="20210209 11:30:21.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:31:04.425" level="INFO">2021-02-09 11:30:22 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-02-09 11:30:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-09 11:30:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:30:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:30:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:30:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:30:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-73013A04F7E1-&gt;9a265372-aec1-4706-84aa-bac45e9985cf
2021-02-09 11:30:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:30:24 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-09 11:30:27 INFO  JobSubmitter:202 - number of splits:3
2021-02-09 11:30:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A327EE3135B7-&gt;e008f986-9852-4c41-bf12-9b71301a681d
2021-02-09 11:30:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:30:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612870006661_0004
2021-02-09 11:30:27 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-09 11:30:27 INFO  Configuration:2795 - resource-types.xml not found
2021-02-09 11:30:27 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-09 11:30:27 INFO  YarnClientImpl:329 - Submitted application application_1612870006661_0004
2021-02-09 11:30:27 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612870006661_0004/
2021-02-09 11:30:27 INFO  Job:1614 - Running job: job_1612870006661_0004
2021-02-09 11:30:35 INFO  Job:1635 - Job job_1612870006661_0004 running in uber mode : false
2021-02-09 11:30:35 INFO  Job:1642 -  map 0% reduce 0%
2021-02-09 11:30:41 INFO  Job:1642 -  map 33% reduce 0%
2021-02-09 11:30:46 INFO  Job:1642 -  map 67% reduce 0%
2021-02-09 11:30:51 INFO  Job:1642 -  map 100% reduce 0%
2021-02-09 11:30:58 INFO  Job:1642 -  map 100% reduce 100%
2021-02-09 11:31:03 INFO  Job:1653 - Job job_1612870006661_0004 completed successfully
2021-02-09 11:31:04 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1155531
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38500
		Total time spent by all reduces in occupied slots (ms)=24296
		Total time spent by all map tasks (ms)=9625
		Total time spent by all reduce tasks (ms)=6074
		Total vcore-milliseconds taken by all map tasks=9625
		Total vcore-milliseconds taken by all reduce tasks=6074
		Total megabyte-milliseconds taken by all map tasks=39424000
		Total megabyte-milliseconds taken by all reduce tasks=24879104
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=576
		CPU time spent (ms)=7070
		Physical memory (bytes) snapshot=1429573632
		Virtual memory (bytes) snapshot=15797723136
		Total committed heap usage (bytes)=1628438528
		Peak Map Physical memory (bytes)=372580352
		Peak Map Virtual memory (bytes)=3949281280
		Peak Reduce Physical memory (bytes)=380542976
		Peak Reduce Virtual memory (bytes)=3954917376
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210209 11:31:04.425" starttime="20210209 11:31:04.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:31:04.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:31:04.426" starttime="20210209 11:31:04.425"></status>
</kw>
<status status="PASS" endtime="20210209 11:31:04.426" starttime="20210209 11:30:21.026"></status>
</kw>
<msg timestamp="20210209 11:31:04.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:31:04.426" starttime="20210209 11:30:21.025"></status>
</kw>
<msg timestamp="20210209 11:31:04.427" level="INFO">${output} = 2021-02-09 11:30:22 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-02-09 11:30:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210209 11:31:04.427" starttime="20210209 11:30:21.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210209 11:31:04.427" starttime="20210209 11:31:04.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:31:04.428" starttime="20210209 11:31:04.427"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:31:04.428" critical="yes" starttime="20210209 11:30:20.985"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210209 11:31:04.429" starttime="20210209 11:29:44.715"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:28:09.544" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:28:09.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:28:09.551" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:28:09.551" starttime="20210209 11:28:09.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:28:09.552" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:28:09.552" starttime="20210209 11:28:09.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:28:09.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:28:09.552" starttime="20210209 11:28:09.552"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:09.553" starttime="20210209 11:28:09.541"></status>
</kw>
<msg timestamp="20210209 11:28:09.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:28:09.553" starttime="20210209 11:28:09.540"></status>
</kw>
<msg timestamp="20210209 11:28:09.553" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:28:09.553" starttime="20210209 11:28:09.540"></status>
</kw>
<msg timestamp="20210209 11:28:09.554" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:28:09.554" starttime="20210209 11:28:09.539"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:28:09.558" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:28:09.558" starttime="20210209 11:28:09.558"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:28:09.559" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:28:09.559" starttime="20210209 11:28:09.558"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:09.559" starttime="20210209 11:28:09.557"></status>
</kw>
<msg timestamp="20210209 11:28:09.559" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:28:09.559" starttime="20210209 11:28:09.557"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:09.559" starttime="20210209 11:28:09.556"></status>
</kw>
<msg timestamp="20210209 11:28:09.559" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:28:09.560" starttime="20210209 11:28:09.555"></status>
</kw>
<msg timestamp="20210209 11:28:09.560" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:28:09.560" starttime="20210209 11:28:09.554"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:28:09.564" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:28:53.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:28:53.687" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:28:11 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:28:11 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210209 11:28:53.687" starttime="20210209 11:28:09.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:28:53.688" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:28:11 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:28:11 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:28:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:28:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:28:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-31C8969B5785-&gt;e008f986-9852-4c41-bf12-9b71301a681d
2021-02-09 11:28:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-09 11:28:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-025AA15187F5-&gt;9a265372-aec1-4706-84aa-bac45e9985cf
2021-02-09 11:28:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-09 11:28:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-02-09 11:28:18 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-09 11:28:18 INFO  JobSubmitter:202 - number of splits:3
2021-02-09 11:28:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612870006661_0001
2021-02-09 11:28:18 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-09 11:28:19 INFO  Configuration:2795 - resource-types.xml not found
2021-02-09 11:28:19 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-09 11:28:19 INFO  YarnClientImpl:329 - Submitted application application_1612870006661_0001
2021-02-09 11:28:19 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612870006661_0001/
2021-02-09 11:28:19 INFO  Job:1614 - Running job: job_1612870006661_0001
2021-02-09 11:28:29 INFO  Job:1635 - Job job_1612870006661_0001 running in uber mode : false
2021-02-09 11:28:29 INFO  Job:1642 -  map 0% reduce 0%
2021-02-09 11:28:36 INFO  Job:1642 -  map 33% reduce 0%
2021-02-09 11:28:41 INFO  Job:1642 -  map 67% reduce 0%
2021-02-09 11:28:46 INFO  Job:1642 -  map 100% reduce 0%
2021-02-09 11:28:52 INFO  Job:1642 -  map 100% reduce 100%
2021-02-09 11:28:53 INFO  Job:1653 - Job job_1612870006661_0001 completed successfully
2021-02-09 11:28:53 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1093077
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38700
		Total time spent by all reduces in occupied slots (ms)=15328
		Total time spent by all map tasks (ms)=9675
		Total time spent by all reduce tasks (ms)=3832
		Total vcore-milliseconds taken by all map tasks=9675
		Total vcore-milliseconds taken by all reduce tasks=3832
		Total megabyte-milliseconds taken by all map tasks=39628800
		Total megabyte-milliseconds taken by all reduce tasks=15695872
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=561
		CPU time spent (ms)=5990
		Physical memory (bytes) snapshot=1210617856
		Virtual memory (bytes) snapshot=15802736640
		Total committed heap usage (bytes)=1078460416
		Peak Map Physical memory (bytes)=302235648
		Peak Map Virtual memory (bytes)=3945988096
		Peak Reduce Physical memory (bytes)=310845440
		Peak Reduce Virtual memory (bytes)=3971903488
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.831 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210209 11:28:53.688" starttime="20210209 11:28:53.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:28:53.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:28:53.689" starttime="20210209 11:28:53.689"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:53.690" starttime="20210209 11:28:09.561"></status>
</kw>
<msg timestamp="20210209 11:28:53.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:28:53.690" starttime="20210209 11:28:09.561"></status>
</kw>
<msg timestamp="20210209 11:28:53.690" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-09 11:28:11 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:28:11 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210209 11:28:53.690" starttime="20210209 11:28:09.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:28:53.691" starttime="20210209 11:28:53.690"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:28:53.691" critical="yes" starttime="20210209 11:28:09.539"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:28:53.696" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:28:53.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:28:53.702" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:28:53.702" starttime="20210209 11:28:53.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:28:53.703" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:28:53.703" starttime="20210209 11:28:53.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:28:53.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:28:53.704" starttime="20210209 11:28:53.703"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:53.704" starttime="20210209 11:28:53.694"></status>
</kw>
<msg timestamp="20210209 11:28:53.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:28:53.705" starttime="20210209 11:28:53.694"></status>
</kw>
<msg timestamp="20210209 11:28:53.705" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:28:53.705" starttime="20210209 11:28:53.693"></status>
</kw>
<msg timestamp="20210209 11:28:53.705" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210209 11:28:53.705" starttime="20210209 11:28:53.693"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:28:53.706" level="INFO">${random} = tMVIMfYG</msg>
<status status="PASS" endtime="20210209 11:28:53.706" starttime="20210209 11:28:53.705"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:28:53.710" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:28:53.710" starttime="20210209 11:28:53.709"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:28:53.710" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:28:53.711" starttime="20210209 11:28:53.710"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:53.711" starttime="20210209 11:28:53.709"></status>
</kw>
<msg timestamp="20210209 11:28:53.711" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:28:53.711" starttime="20210209 11:28:53.708"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:53.711" starttime="20210209 11:28:53.708"></status>
</kw>
<msg timestamp="20210209 11:28:53.711" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:28:53.711" starttime="20210209 11:28:53.707"></status>
</kw>
<msg timestamp="20210209 11:28:53.712" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210209 11:28:53.712" starttime="20210209 11:28:53.706"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:28:53.715" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:28:53.715" starttime="20210209 11:28:53.715"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:28:53.716" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:28:53.716" starttime="20210209 11:28:53.715"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:53.716" starttime="20210209 11:28:53.714"></status>
</kw>
<msg timestamp="20210209 11:28:53.716" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:28:53.716" starttime="20210209 11:28:53.714"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:53.717" starttime="20210209 11:28:53.713"></status>
</kw>
<msg timestamp="20210209 11:28:53.717" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210209 11:28:53.717" starttime="20210209 11:28:53.713"></status>
</kw>
<msg timestamp="20210209 11:28:53.717" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210209 11:28:53.717" starttime="20210209 11:28:53.712"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210209 11:28:53.721" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210209 11:28:53.721" starttime="20210209 11:28:53.721"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:28:53.722" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210209 11:28:53.722" starttime="20210209 11:28:53.722"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:53.722" starttime="20210209 11:28:53.720"></status>
</kw>
<msg timestamp="20210209 11:28:53.722" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210209 11:28:53.723" starttime="20210209 11:28:53.720"></status>
</kw>
<status status="PASS" endtime="20210209 11:28:53.723" starttime="20210209 11:28:53.719"></status>
</kw>
<msg timestamp="20210209 11:28:53.723" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-tMVIMfYG.txt</msg>
<status status="PASS" endtime="20210209 11:28:53.723" starttime="20210209 11:28:53.718"></status>
</kw>
<msg timestamp="20210209 11:28:53.723" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-tMVIMfYG.txt</msg>
<status status="PASS" endtime="20210209 11:28:53.723" starttime="20210209 11:28:53.717"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:28:53.726" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-tMVIMfYG.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:29:30.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:29:30.775" level="INFO">${output} = 2021-02-09 11:28:55 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-02-09 11:28:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210209 11:29:30.775" starttime="20210209 11:28:53.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:29:30.776" level="INFO">2021-02-09 11:28:55 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-02-09 11:28:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-09 11:28:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-09 11:28:56 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:28:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-09 11:28:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:28:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6C2DB2388910-&gt;9a265372-aec1-4706-84aa-bac45e9985cf
2021-02-09 11:28:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:28:57 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-09 11:28:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-465C66A18ED1-&gt;e008f986-9852-4c41-bf12-9b71301a681d
2021-02-09 11:28:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:28:57 INFO  JobSubmitter:202 - number of splits:3
2021-02-09 11:28:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612870006661_0002
2021-02-09 11:28:57 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-09 11:28:57 INFO  Configuration:2795 - resource-types.xml not found
2021-02-09 11:28:57 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-09 11:28:57 INFO  YarnClientImpl:329 - Submitted application application_1612870006661_0002
2021-02-09 11:28:58 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612870006661_0002/
2021-02-09 11:28:58 INFO  Job:1614 - Running job: job_1612870006661_0002
2021-02-09 11:29:06 INFO  Job:1635 - Job job_1612870006661_0002 running in uber mode : false
2021-02-09 11:29:06 INFO  Job:1642 -  map 0% reduce 0%
2021-02-09 11:29:12 INFO  Job:1642 -  map 33% reduce 0%
2021-02-09 11:29:17 INFO  Job:1642 -  map 67% reduce 0%
2021-02-09 11:29:22 INFO  Job:1642 -  map 100% reduce 0%
2021-02-09 11:29:29 INFO  Job:1642 -  map 100% reduce 100%
2021-02-09 11:29:30 INFO  Job:1653 - Job job_1612870006661_0002 completed successfully
2021-02-09 11:29:30 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1155615
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39452
		Total time spent by all reduces in occupied slots (ms)=24516
		Total time spent by all map tasks (ms)=9863
		Total time spent by all reduce tasks (ms)=6129
		Total vcore-milliseconds taken by all map tasks=9863
		Total vcore-milliseconds taken by all reduce tasks=6129
		Total megabyte-milliseconds taken by all map tasks=40398848
		Total megabyte-milliseconds taken by all reduce tasks=25104384
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=567
		CPU time spent (ms)=6950
		Physical memory (bytes) snapshot=1282273280
		Virtual memory (bytes) snapshot=15805673472
		Total committed heap usage (bytes)=1220542464
		Peak Map Physical memory (bytes)=374079488
		Peak Map Virtual memory (bytes)=3948101632
		Peak Reduce Physical memory (bytes)=298835968
		Peak Reduce Virtual memory (bytes)=3971301376
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210209 11:29:30.777" starttime="20210209 11:29:30.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:29:30.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:29:30.777" starttime="20210209 11:29:30.777"></status>
</kw>
<status status="PASS" endtime="20210209 11:29:30.778" starttime="20210209 11:28:53.724"></status>
</kw>
<msg timestamp="20210209 11:29:30.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:29:30.778" starttime="20210209 11:28:53.724"></status>
</kw>
<msg timestamp="20210209 11:29:30.778" level="INFO">${output} = 2021-02-09 11:28:55 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-02-09 11:28:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210209 11:29:30.779" starttime="20210209 11:28:53.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210209 11:29:30.779" starttime="20210209 11:29:30.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210209 11:29:30.780" starttime="20210209 11:29:30.779"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210209 11:29:30.780" critical="yes" starttime="20210209 11:28:53.692"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210209 11:29:30.782" starttime="20210209 11:28:09.482"></status>
</suite>
<status status="PASS" elapsedtime="211975" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="590808" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
