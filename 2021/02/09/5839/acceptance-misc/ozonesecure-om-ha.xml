<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210209 11:52:16.397" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:48:13.202" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:48:26.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:48:26.923" level="INFO">${output} = 2021-02-09 11:48:15,008 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:48:15,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:48:26.923" starttime="20210209 11:48:13.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:48:26.924" level="INFO">2021-02-09 11:48:15,008 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:48:15,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:48:15,172 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:48:15,310 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-09 11:48:15,325 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:16,326 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:16,705 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-09 11:48:17,259 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-09 11:48:17,327 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:18,327 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:19,380 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:20,380 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:20,574 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-09 11:48:20,936 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-09 11:48:20,937 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-C3D35BC9425C-&gt;2caeea55-b939-4fda-9acd-a49680fc2e58
2021-02-09 11:48:20,937 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-09 11:48:21,381 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:22,381 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:23,381 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:24,382 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:25,382 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:26,383 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:48:26,581 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=8630.953648, max=8630.953648, mean=8630.953648, stddev=0.0, median=8630.953648, p75=8630.953648, p95=8630.953648, p98=8630.953648, p99=8630.953648, p999=8630.953648, mean_rate=0.11035628692215467, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:48:26,582 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2021-02-09 11:48:26,585 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:48:26,585 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:48:26.924" starttime="20210209 11:48:26.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:48:26.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:48:26.925" starttime="20210209 11:48:26.924"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:26.925" starttime="20210209 11:48:13.199"></status>
</kw>
<msg timestamp="20210209 11:48:26.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:48:26.925" starttime="20210209 11:48:13.198"></status>
</kw>
<msg timestamp="20210209 11:48:26.926" level="INFO">${result} = 2021-02-09 11:48:15,008 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:48:15,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:48:26.926" starttime="20210209 11:48:13.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:48:26.926" starttime="20210209 11:48:26.926"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:48:26.926" critical="yes" starttime="20210209 11:48:13.197"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:48:26.932" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:48:31.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:48:31.532" level="INFO">${output} = 2021-02-09 11:48:28,699 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:48:28,796 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:48:31.532" starttime="20210209 11:48:26.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:48:31.533" level="INFO">2021-02-09 11:48:28,699 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:48:28,796 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:48:28,797 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:48:28,980 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-02-09 11:48:29,007 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:30,013 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:31,013 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:48:31,478 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=189.893921, max=189.893921, mean=189.893921, stddev=0.0, median=189.893921, p75=189.893921, p95=189.893921, p98=189.893921, p99=189.893921, p999=189.893921, mean_rate=0.9850147684002987, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:48:31,480 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-09 11:48:31,480 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:48:31,480 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:48:31.533" starttime="20210209 11:48:31.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:48:31.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:48:31.534" starttime="20210209 11:48:31.533"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:31.534" starttime="20210209 11:48:26.930"></status>
</kw>
<msg timestamp="20210209 11:48:31.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:48:31.534" starttime="20210209 11:48:26.929"></status>
</kw>
<msg timestamp="20210209 11:48:31.535" level="INFO">${result} = 2021-02-09 11:48:28,699 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:48:28,796 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:48:31.535" starttime="20210209 11:48:26.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:48:31.535" starttime="20210209 11:48:31.535"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:48:31.536" critical="yes" starttime="20210209 11:48:26.928"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:48:31.540" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:48:36.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:48:36.158" level="INFO">${output} = 2021-02-09 11:48:33,292 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:48:33,409 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:48:36.158" starttime="20210209 11:48:31.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:48:36.159" level="INFO">2021-02-09 11:48:33,292 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:48:33,409 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:48:33,410 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:48:33,556 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-02-09 11:48:33,581 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:34,584 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:35,585 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:48:36,124 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=77.830105, max=77.830105, mean=77.830105, stddev=0.0, median=77.830105, p75=77.830105, p95=77.830105, p98=77.830105, p99=77.830105, p999=77.830105, mean_rate=0.9782719318004217, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:48:36,124 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-09 11:48:36,127 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:48:36,127 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:48:36.159" starttime="20210209 11:48:36.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:48:36.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:48:36.160" starttime="20210209 11:48:36.160"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:36.160" starttime="20210209 11:48:31.538"></status>
</kw>
<msg timestamp="20210209 11:48:36.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:48:36.161" starttime="20210209 11:48:31.538"></status>
</kw>
<msg timestamp="20210209 11:48:36.161" level="INFO">${result} = 2021-02-09 11:48:33,292 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:48:33,409 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:48:36.161" starttime="20210209 11:48:31.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:48:36.161" starttime="20210209 11:48:36.161"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:48:36.162" critical="yes" starttime="20210209 11:48:31.536"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210209 11:48:36.163" starttime="20210209 11:48:13.180"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:48:36.174" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:48:42.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:48:42.921" level="INFO">${output} = 2021-02-09 11:48:37,838 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:48:37,964 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:48:42.921" starttime="20210209 11:48:36.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:48:42.922" level="INFO">2021-02-09 11:48:37,838 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:48:37,964 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-09 11:48:37,964 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-09 11:48:38,122 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-09 11:48:38,142 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:39,162 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:40,187 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:40,694 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-09 11:48:41,187 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-09 11:48:42,188 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-09 11:48:42,529 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=64.840487, max=64.840487, mean=64.840487, stddev=0.0, median=64.840487, p75=64.840487, p95=64.840487, p98=64.840487, p99=64.840487, p999=64.840487, mean_rate=0.9734711567826483, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-09 11:48:42,529 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-02-09 11:48:42,531 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-09 11:48:42,531 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210209 11:48:42.922" starttime="20210209 11:48:42.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:48:42.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:48:42.923" starttime="20210209 11:48:42.922"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:42.923" starttime="20210209 11:48:36.172"></status>
</kw>
<msg timestamp="20210209 11:48:42.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:48:42.923" starttime="20210209 11:48:36.171"></status>
</kw>
<msg timestamp="20210209 11:48:42.924" level="INFO">${result} = 2021-02-09 11:48:37,838 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-09 11:48:37,964 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210209 11:48:42.924" starttime="20210209 11:48:36.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:48:42.924" starttime="20210209 11:48:42.924"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210209 11:48:42.925" critical="yes" starttime="20210209 11:48:36.170"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210209 11:48:42.925" starttime="20210209 11:48:36.166"></status>
</suite>
<status status="PASS" endtime="20210209 11:48:42.928" starttime="20210209 11:48:13.150"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:48:07.849" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:48:07.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:48:07.851" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:48:07.851" starttime="20210209 11:48:07.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:48:07.852" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:48:07.853" starttime="20210209 11:48:07.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:48:07.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:48:07.853" starttime="20210209 11:48:07.853"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:07.853" starttime="20210209 11:48:07.844"></status>
</kw>
<msg timestamp="20210209 11:48:07.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:48:07.854" starttime="20210209 11:48:07.844"></status>
</kw>
<msg timestamp="20210209 11:48:07.854" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:48:07.854" starttime="20210209 11:48:07.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:48:07.855" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:48:07.855" starttime="20210209 11:48:07.854"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:48:07.859" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:48:07.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:48:07.873" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:48:07.873" starttime="20210209 11:48:07.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:48:07.874" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:48:07.874" starttime="20210209 11:48:07.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:48:07.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:48:07.875" starttime="20210209 11:48:07.874"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:07.875" starttime="20210209 11:48:07.857"></status>
</kw>
<msg timestamp="20210209 11:48:07.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:48:07.876" starttime="20210209 11:48:07.856"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:07.876" starttime="20210209 11:48:07.856"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:07.876" starttime="20210209 11:48:07.855"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:07.876" starttime="20210209 11:48:07.843"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:48:07.882" critical="yes" starttime="20210209 11:48:07.841"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210209 11:48:07.885" starttime="20210209 11:48:07.781"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210209 11:48:48.267" level="INFO">${random} = 53533</msg>
<status status="PASS" endtime="20210209 11:48:48.267" starttime="20210209 11:48:48.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210209 11:48:48.269" level="INFO">${source} = 53533-source</msg>
<status status="PASS" endtime="20210209 11:48:48.269" starttime="20210209 11:48:48.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210209 11:48:48.270" level="INFO">${target} = 53533-target</msg>
<status status="PASS" endtime="20210209 11:48:48.270" starttime="20210209 11:48:48.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:48:48.276" level="INFO">Running command 'ozone sh volume create 53533-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:48:51.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:48:51.606" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:48:51.606" starttime="20210209 11:48:48.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:48:51.607" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:48:51.607" starttime="20210209 11:48:51.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:48:51.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:48:51.607" starttime="20210209 11:48:51.607"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:51.608" starttime="20210209 11:48:48.272"></status>
</kw>
<msg timestamp="20210209 11:48:51.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:48:51.608" starttime="20210209 11:48:48.272"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:51.608" starttime="20210209 11:48:48.271"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:48:51.611" level="INFO">Running command 'ozone sh volume create 53533-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:48:55.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:48:55.156" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:48:55.156" starttime="20210209 11:48:51.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:48:55.157" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:48:55.157" starttime="20210209 11:48:55.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:48:55.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:48:55.158" starttime="20210209 11:48:55.157"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:55.158" starttime="20210209 11:48:51.609"></status>
</kw>
<msg timestamp="20210209 11:48:55.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:48:55.158" starttime="20210209 11:48:51.609"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:55.158" starttime="20210209 11:48:51.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:48:55.163" level="INFO">Running command 'ozone sh bucket create 53533-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:48:58.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:48:58.571" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:48:58.571" starttime="20210209 11:48:55.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:48:58.572" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:48:58.572" starttime="20210209 11:48:58.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:48:58.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:48:58.573" starttime="20210209 11:48:58.572"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:58.573" starttime="20210209 11:48:55.160"></status>
</kw>
<msg timestamp="20210209 11:48:58.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:48:58.573" starttime="20210209 11:48:55.160"></status>
</kw>
<status status="PASS" endtime="20210209 11:48:58.574" starttime="20210209 11:48:55.160"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:48:58.578" level="INFO">Running command 'ozone sh key put 53533-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:04.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:04.268" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:49:04.268" starttime="20210209 11:48:58.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:04.269" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:49:04.269" starttime="20210209 11:49:04.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:04.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:04.270" starttime="20210209 11:49:04.269"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:04.270" starttime="20210209 11:48:58.574"></status>
</kw>
<msg timestamp="20210209 11:49:04.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:04.270" starttime="20210209 11:48:58.574"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:04.271" starttime="20210209 11:48:58.574"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:04.274" level="INFO">Running command 'ozone sh bucket create 53533-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:07.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:07.777" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:49:07.777" starttime="20210209 11:49:04.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:07.778" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:49:07.778" starttime="20210209 11:49:07.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:07.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:07.779" starttime="20210209 11:49:07.779"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:07.780" starttime="20210209 11:49:04.272"></status>
</kw>
<msg timestamp="20210209 11:49:07.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:07.780" starttime="20210209 11:49:04.271"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:07.780" starttime="20210209 11:49:04.271"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:07.783" level="INFO">Running command 'ozone sh bucket link 53533-source/readable-bucket 53533-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:11.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:11.343" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:49:11.343" starttime="20210209 11:49:07.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:11.344" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:49:11.344" starttime="20210209 11:49:11.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:11.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:11.345" starttime="20210209 11:49:11.344"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:11.345" starttime="20210209 11:49:07.781"></status>
</kw>
<msg timestamp="20210209 11:49:11.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:11.346" starttime="20210209 11:49:07.781"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:11.346" starttime="20210209 11:49:07.780"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:11.349" level="INFO">Running command 'ozone sh bucket link 53533-source/readable-bucket 53533-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:14.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:14.689" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:49:14.689" starttime="20210209 11:49:11.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:14.690" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:49:14.690" starttime="20210209 11:49:14.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:14.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:14.690" starttime="20210209 11:49:14.690"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:14.691" starttime="20210209 11:49:11.347"></status>
</kw>
<msg timestamp="20210209 11:49:14.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:14.691" starttime="20210209 11:49:11.346"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:14.691" starttime="20210209 11:49:11.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:14.694" level="INFO">Running command 'ozone sh bucket link 53533-source/unreadable-bucket 53533-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:18.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:18.039" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:49:18.039" starttime="20210209 11:49:14.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:18.040" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:49:18.040" starttime="20210209 11:49:18.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:18.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:18.041" starttime="20210209 11:49:18.040"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:18.041" starttime="20210209 11:49:14.692"></status>
</kw>
<msg timestamp="20210209 11:49:18.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:18.041" starttime="20210209 11:49:14.692"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:18.041" starttime="20210209 11:49:14.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:18.045" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 53533-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:21.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:21.273" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:49:21.273" starttime="20210209 11:49:18.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:21.274" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:49:21.274" starttime="20210209 11:49:21.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:21.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:21.275" starttime="20210209 11:49:21.275"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:21.275" starttime="20210209 11:49:18.042"></status>
</kw>
<msg timestamp="20210209 11:49:21.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:21.276" starttime="20210209 11:49:18.042"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:21.276" starttime="20210209 11:49:18.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:21.285" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 53533-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:24.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:24.857" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:49:24.857" starttime="20210209 11:49:21.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:24.858" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:49:24.858" starttime="20210209 11:49:24.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:24.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:24.859" starttime="20210209 11:49:24.858"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:24.859" starttime="20210209 11:49:21.277"></status>
</kw>
<msg timestamp="20210209 11:49:24.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:24.860" starttime="20210209 11:49:21.277"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:24.860" starttime="20210209 11:49:21.276"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:24.863" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 53533-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:28.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:28.688" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:49:28.689" starttime="20210209 11:49:24.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:28.690" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:49:28.690" starttime="20210209 11:49:28.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:28.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:28.690" starttime="20210209 11:49:28.690"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:28.691" starttime="20210209 11:49:24.861"></status>
</kw>
<msg timestamp="20210209 11:49:28.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:28.691" starttime="20210209 11:49:24.861"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:28.691" starttime="20210209 11:49:24.860"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:28.695" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 53533-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:31.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:31.974" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:49:31.975" starttime="20210209 11:49:28.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:31.975" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:49:31.976" starttime="20210209 11:49:31.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:31.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:31.976" starttime="20210209 11:49:31.976"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:31.976" starttime="20210209 11:49:28.692"></status>
</kw>
<msg timestamp="20210209 11:49:31.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:31.977" starttime="20210209 11:49:28.692"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:31.977" starttime="20210209 11:49:28.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:31.980" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 53533-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:35.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:35.704" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:49:35.704" starttime="20210209 11:49:31.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:35.705" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:49:35.705" starttime="20210209 11:49:35.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:35.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:35.706" starttime="20210209 11:49:35.705"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:35.706" starttime="20210209 11:49:31.978"></status>
</kw>
<msg timestamp="20210209 11:49:35.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:35.706" starttime="20210209 11:49:31.977"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:35.706" starttime="20210209 11:49:31.977"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:35.707" starttime="20210209 11:48:55.159"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:35.707" starttime="20210209 11:48:55.158"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:35.707" starttime="20210209 11:48:48.267"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:35.713" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:35.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:35.715" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:49:35.715" starttime="20210209 11:49:35.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:35.716" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:49:35.717" starttime="20210209 11:49:35.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:35.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:35.717" starttime="20210209 11:49:35.717"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:35.718" starttime="20210209 11:49:35.710"></status>
</kw>
<msg timestamp="20210209 11:49:35.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:35.718" starttime="20210209 11:49:35.710"></status>
</kw>
<msg timestamp="20210209 11:49:35.718" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:49:35.718" starttime="20210209 11:49:35.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:49:35.719" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:49:35.720" starttime="20210209 11:49:35.718"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:35.723" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:35.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:35.730" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:49:35.730" starttime="20210209 11:49:35.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:35.731" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:49:35.731" starttime="20210209 11:49:35.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:35.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:35.732" starttime="20210209 11:49:35.731"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:35.732" starttime="20210209 11:49:35.721"></status>
</kw>
<msg timestamp="20210209 11:49:35.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:35.732" starttime="20210209 11:49:35.721"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:35.732" starttime="20210209 11:49:35.720"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:35.732" starttime="20210209 11:49:35.720"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:35.733" starttime="20210209 11:49:35.709"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:35.733" starttime="20210209 11:49:35.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:35.736" level="INFO">Running command 'ozone sh bucket link 53533-source/no-such-bucket 53533-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:39.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:39.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:49:39.266" starttime="20210209 11:49:35.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:39.267" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:49:39.267" starttime="20210209 11:49:39.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:39.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:39.267" starttime="20210209 11:49:39.267"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:39.268" starttime="20210209 11:49:35.734"></status>
</kw>
<msg timestamp="20210209 11:49:39.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:39.268" starttime="20210209 11:49:35.734"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:39.268" starttime="20210209 11:49:35.733"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:39.270" level="INFO">Running command 'ozone sh key list 53533-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:42.583" level="INFO">${rc} = 255</msg>
<msg timestamp="20210209 11:49:42.583" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210209 11:49:42.583" starttime="20210209 11:49:39.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:42.584" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210209 11:49:42.585" starttime="20210209 11:49:42.584"></status>
</kw>
<msg timestamp="20210209 11:49:42.585" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210209 11:49:42.585" starttime="20210209 11:49:39.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210209 11:49:42.586" starttime="20210209 11:49:42.585"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:49:42.586" critical="yes" starttime="20210209 11:49:35.707"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:42.592" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:42.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:42.594" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:49:42.595" starttime="20210209 11:49:42.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:42.595" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:49:42.596" starttime="20210209 11:49:42.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:42.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:42.597" starttime="20210209 11:49:42.596"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:42.597" starttime="20210209 11:49:42.589"></status>
</kw>
<msg timestamp="20210209 11:49:42.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:42.597" starttime="20210209 11:49:42.589"></status>
</kw>
<msg timestamp="20210209 11:49:42.597" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:49:42.597" starttime="20210209 11:49:42.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:49:42.599" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:49:42.599" starttime="20210209 11:49:42.598"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:42.602" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:42.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:42.609" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:49:42.609" starttime="20210209 11:49:42.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:42.610" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:49:42.610" starttime="20210209 11:49:42.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:42.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:42.610" starttime="20210209 11:49:42.610"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:42.611" starttime="20210209 11:49:42.600"></status>
</kw>
<msg timestamp="20210209 11:49:42.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:42.611" starttime="20210209 11:49:42.600"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:42.612" starttime="20210209 11:49:42.599"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:42.612" starttime="20210209 11:49:42.599"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:42.612" starttime="20210209 11:49:42.588"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:42.612" starttime="20210209 11:49:42.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:42.615" level="INFO">Running command 'ozone sh bucket link 53533-source/bucket1 53533-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:46.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:46.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:49:46.147" starttime="20210209 11:49:42.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:46.148" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:49:46.148" starttime="20210209 11:49:46.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:46.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:46.149" starttime="20210209 11:49:46.148"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:46.150" starttime="20210209 11:49:42.613"></status>
</kw>
<msg timestamp="20210209 11:49:46.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:46.150" starttime="20210209 11:49:42.613"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:46.150" starttime="20210209 11:49:42.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:46.153" level="INFO">Running command 'ozone sh bucket create 53533-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:49.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:49.664" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:49:49.664" starttime="20210209 11:49:46.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:49.666" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:49:49.666" starttime="20210209 11:49:49.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:49.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:49.666" starttime="20210209 11:49:49.666"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:49.667" starttime="20210209 11:49:46.151"></status>
</kw>
<msg timestamp="20210209 11:49:49.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:49.667" starttime="20210209 11:49:46.151"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:49.667" starttime="20210209 11:49:46.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:49.672" level="INFO">Running command 'ozone sh key put 53533-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:49:58.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:49:58.040" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:49:58.040" starttime="20210209 11:49:49.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:49:58.041" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:49:58.042" starttime="20210209 11:49:58.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:49:58.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:49:58.042" starttime="20210209 11:49:58.042"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:58.043" starttime="20210209 11:49:49.668"></status>
</kw>
<msg timestamp="20210209 11:49:58.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:49:58.043" starttime="20210209 11:49:49.668"></status>
</kw>
<status status="PASS" endtime="20210209 11:49:58.043" starttime="20210209 11:49:49.667"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210209 11:49:58.046" level="INFO">${postfix} = 92050</msg>
<status status="PASS" endtime="20210209 11:49:58.046" starttime="20210209 11:49:58.045"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210209 11:49:58.046" level="INFO">${tmpfile} = /tmp/tempkey-92050</msg>
<status status="PASS" endtime="20210209 11:49:58.046" starttime="20210209 11:49:58.046"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:49:58.050" level="INFO">Running command 'ozone sh key get 53533-target/link1/key1 /tmp/tempkey-92050 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:03.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:03.278" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:03.278" starttime="20210209 11:49:58.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:03.279" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:03.280" starttime="20210209 11:50:03.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:03.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:03.281" starttime="20210209 11:50:03.280"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:03.281" starttime="20210209 11:49:58.047"></status>
</kw>
<msg timestamp="20210209 11:50:03.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:03.281" starttime="20210209 11:49:58.047"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:03.282" starttime="20210209 11:49:58.047"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210209 11:50:03.284" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-92050 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:03.287" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210209 11:50:03.287" starttime="20210209 11:50:03.282"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:03.291" level="INFO">Running command 'rm -f /tmp/tempkey-92050 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:03.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:03.294" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:03.294" starttime="20210209 11:50:03.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:03.295" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:03.295" starttime="20210209 11:50:03.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:03.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:03.296" starttime="20210209 11:50:03.295"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:03.296" starttime="20210209 11:50:03.289"></status>
</kw>
<msg timestamp="20210209 11:50:03.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:03.297" starttime="20210209 11:50:03.289"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:03.297" starttime="20210209 11:50:03.288"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:50:03.298" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210209 11:50:03.298" starttime="20210209 11:50:03.297"></status>
</kw>
<msg timestamp="20210209 11:50:03.298" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210209 11:50:03.298" starttime="20210209 11:49:58.044"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:50:03.298" starttime="20210209 11:50:03.298"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:03.299" starttime="20210209 11:49:58.043"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:50:03.299" critical="yes" starttime="20210209 11:49:42.587"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:03.304" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:03.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:03.307" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:50:03.307" starttime="20210209 11:50:03.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:03.307" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:50:03.308" starttime="20210209 11:50:03.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:03.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:03.308" starttime="20210209 11:50:03.308"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:03.308" starttime="20210209 11:50:03.302"></status>
</kw>
<msg timestamp="20210209 11:50:03.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:03.309" starttime="20210209 11:50:03.302"></status>
</kw>
<msg timestamp="20210209 11:50:03.309" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:50:03.309" starttime="20210209 11:50:03.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:50:03.310" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:50:03.310" starttime="20210209 11:50:03.309"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:03.314" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:03.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:03.320" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:03.320" starttime="20210209 11:50:03.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:03.321" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:03.322" starttime="20210209 11:50:03.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:03.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:03.322" starttime="20210209 11:50:03.322"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:03.322" starttime="20210209 11:50:03.312"></status>
</kw>
<msg timestamp="20210209 11:50:03.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:03.323" starttime="20210209 11:50:03.311"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:03.323" starttime="20210209 11:50:03.311"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:03.323" starttime="20210209 11:50:03.310"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:03.323" starttime="20210209 11:50:03.301"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:03.323" starttime="20210209 11:50:03.300"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:03.327" level="INFO">Running command 'ozone sh key put 53533-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:11.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:11.200" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:11.200" starttime="20210209 11:50:03.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:11.201" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:11.201" starttime="20210209 11:50:11.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:11.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:11.202" starttime="20210209 11:50:11.202"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:11.203" starttime="20210209 11:50:03.324"></status>
</kw>
<msg timestamp="20210209 11:50:11.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:11.203" starttime="20210209 11:50:03.324"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:11.203" starttime="20210209 11:50:03.324"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210209 11:50:11.205" level="INFO">${postfix} = 06429</msg>
<status status="PASS" endtime="20210209 11:50:11.205" starttime="20210209 11:50:11.204"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210209 11:50:11.205" level="INFO">${tmpfile} = /tmp/tempkey-06429</msg>
<status status="PASS" endtime="20210209 11:50:11.206" starttime="20210209 11:50:11.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:11.210" level="INFO">Running command 'ozone sh key get 53533-source/bucket1/key2 /tmp/tempkey-06429 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:16.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:16.498" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:16.498" starttime="20210209 11:50:11.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:16.499" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:16.499" starttime="20210209 11:50:16.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:16.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:16.500" starttime="20210209 11:50:16.499"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:16.500" starttime="20210209 11:50:11.207"></status>
</kw>
<msg timestamp="20210209 11:50:16.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:16.500" starttime="20210209 11:50:11.206"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:16.501" starttime="20210209 11:50:11.206"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210209 11:50:16.503" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-06429 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:16.505" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210209 11:50:16.505" starttime="20210209 11:50:16.501"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:16.509" level="INFO">Running command 'rm -f /tmp/tempkey-06429 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:16.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:16.511" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:16.511" starttime="20210209 11:50:16.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:16.512" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:16.512" starttime="20210209 11:50:16.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:16.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:16.514" starttime="20210209 11:50:16.513"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:16.514" starttime="20210209 11:50:16.507"></status>
</kw>
<msg timestamp="20210209 11:50:16.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:16.514" starttime="20210209 11:50:16.506"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:16.514" starttime="20210209 11:50:16.506"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:50:16.515" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210209 11:50:16.515" starttime="20210209 11:50:16.514"></status>
</kw>
<msg timestamp="20210209 11:50:16.515" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210209 11:50:16.515" starttime="20210209 11:50:11.204"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:50:16.516" starttime="20210209 11:50:16.515"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:16.516" starttime="20210209 11:50:11.203"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:50:16.516" critical="yes" starttime="20210209 11:50:03.300"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:16.521" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:16.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:16.523" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:50:16.523" starttime="20210209 11:50:16.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:16.524" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:50:16.524" starttime="20210209 11:50:16.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:16.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:16.525" starttime="20210209 11:50:16.524"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:16.525" starttime="20210209 11:50:16.519"></status>
</kw>
<msg timestamp="20210209 11:50:16.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:16.526" starttime="20210209 11:50:16.519"></status>
</kw>
<msg timestamp="20210209 11:50:16.526" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:50:16.526" starttime="20210209 11:50:16.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:50:16.526" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:50:16.527" starttime="20210209 11:50:16.526"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:16.530" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:16.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:16.537" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:16.537" starttime="20210209 11:50:16.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:16.538" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:16.538" starttime="20210209 11:50:16.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:16.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:16.539" starttime="20210209 11:50:16.538"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:16.539" starttime="20210209 11:50:16.528"></status>
</kw>
<msg timestamp="20210209 11:50:16.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:16.539" starttime="20210209 11:50:16.528"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:16.539" starttime="20210209 11:50:16.527"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:16.539" starttime="20210209 11:50:16.527"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:16.539" starttime="20210209 11:50:16.518"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:16.540" starttime="20210209 11:50:16.518"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:16.543" level="INFO">Running command 'ozone sh key list 53533-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:20.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:20.152" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210209 11:50:20.152" starttime="20210209 11:50:16.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:20.154" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210209 11:50:20.154" starttime="20210209 11:50:20.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:20.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:20.155" starttime="20210209 11:50:20.154"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:20.155" starttime="20210209 11:50:16.541"></status>
</kw>
<msg timestamp="20210209 11:50:20.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:20.155" starttime="20210209 11:50:16.540"></status>
</kw>
<msg timestamp="20210209 11:50:20.155" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210209 11:50:20.155" starttime="20210209 11:50:16.540"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:20.159" level="INFO">Running command 'ozone sh key list 53533-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:23.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:23.687" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210209 11:50:23.687" starttime="20210209 11:50:20.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:23.688" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210209 11:50:23.689" starttime="20210209 11:50:23.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:23.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:23.689" starttime="20210209 11:50:23.689"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:23.690" starttime="20210209 11:50:20.157"></status>
</kw>
<msg timestamp="20210209 11:50:23.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:23.690" starttime="20210209 11:50:20.156"></status>
</kw>
<msg timestamp="20210209 11:50:23.690" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210209 11:50:23.690" starttime="20210209 11:50:20.156"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:50:23.691" starttime="20210209 11:50:23.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:50:23.691" starttime="20210209 11:50:23.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210209 11:50:23.692" starttime="20210209 11:50:23.691"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:50:23.692" critical="yes" starttime="20210209 11:50:16.517"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:23.702" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:23.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:23.705" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:50:23.705" starttime="20210209 11:50:23.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:23.706" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:50:23.706" starttime="20210209 11:50:23.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:23.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:23.707" starttime="20210209 11:50:23.706"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:23.707" starttime="20210209 11:50:23.696"></status>
</kw>
<msg timestamp="20210209 11:50:23.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:23.707" starttime="20210209 11:50:23.695"></status>
</kw>
<msg timestamp="20210209 11:50:23.708" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:50:23.708" starttime="20210209 11:50:23.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:50:23.709" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:50:23.709" starttime="20210209 11:50:23.708"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:23.714" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:23.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:23.721" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:23.721" starttime="20210209 11:50:23.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:23.722" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:23.722" starttime="20210209 11:50:23.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:23.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:23.723" starttime="20210209 11:50:23.722"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:23.723" starttime="20210209 11:50:23.710"></status>
</kw>
<msg timestamp="20210209 11:50:23.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:23.723" starttime="20210209 11:50:23.710"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:23.724" starttime="20210209 11:50:23.709"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:23.724" starttime="20210209 11:50:23.709"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:23.724" starttime="20210209 11:50:23.694"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:23.724" starttime="20210209 11:50:23.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:23.727" level="INFO">Running command 'ozone sh key delete 53533-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:27.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:27.728" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:27.728" starttime="20210209 11:50:23.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:27.729" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:27.729" starttime="20210209 11:50:27.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:27.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:27.730" starttime="20210209 11:50:27.729"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:27.730" starttime="20210209 11:50:23.725"></status>
</kw>
<msg timestamp="20210209 11:50:27.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:27.731" starttime="20210209 11:50:23.725"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:27.731" starttime="20210209 11:50:23.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:27.735" level="INFO">Running command 'ozone sh key list 53533-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:31.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:31.293" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210209 11:50:31.293" starttime="20210209 11:50:27.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:31.294" level="INFO">key1</msg>
<status status="PASS" endtime="20210209 11:50:31.294" starttime="20210209 11:50:31.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:31.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:31.295" starttime="20210209 11:50:31.295"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:31.296" starttime="20210209 11:50:27.732"></status>
</kw>
<msg timestamp="20210209 11:50:31.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:31.296" starttime="20210209 11:50:27.732"></status>
</kw>
<msg timestamp="20210209 11:50:31.296" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210209 11:50:31.296" starttime="20210209 11:50:27.731"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210209 11:50:31.297" starttime="20210209 11:50:31.296"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:50:31.297" critical="yes" starttime="20210209 11:50:23.693"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:31.302" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:31.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:31.305" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:50:31.305" starttime="20210209 11:50:31.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:31.306" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:50:31.306" starttime="20210209 11:50:31.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:31.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:31.307" starttime="20210209 11:50:31.306"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:31.307" starttime="20210209 11:50:31.300"></status>
</kw>
<msg timestamp="20210209 11:50:31.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:31.307" starttime="20210209 11:50:31.300"></status>
</kw>
<msg timestamp="20210209 11:50:31.307" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:50:31.307" starttime="20210209 11:50:31.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:50:31.308" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:50:31.308" starttime="20210209 11:50:31.308"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:31.312" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:31.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:31.319" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:31.319" starttime="20210209 11:50:31.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:31.320" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:31.320" starttime="20210209 11:50:31.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:31.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:31.321" starttime="20210209 11:50:31.320"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:31.321" starttime="20210209 11:50:31.310"></status>
</kw>
<msg timestamp="20210209 11:50:31.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:31.321" starttime="20210209 11:50:31.309"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:31.321" starttime="20210209 11:50:31.309"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:31.321" starttime="20210209 11:50:31.308"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:31.321" starttime="20210209 11:50:31.299"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:31.322" starttime="20210209 11:50:31.298"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:31.325" level="INFO">Running command 'ozone sh bucket list 53533-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:35.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:35.084" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210209 11:50:35.084" starttime="20210209 11:50:31.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:35.085" level="INFO">{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:49:39.072Z",
  "modificationTime" : "2021-02-09T11:49:39.072Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:49:17.954Z",
  "modificationTime" : "2021-02-09T11:49:35.500Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:49:46.057Z",
  "modificationTime" : "2021-02-09T11:49:46.057Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:49:11.271Z",
  "modificationTime" : "2021-02-09T11:49:31.782Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:49:14.576Z",
  "modificationTime" : "2021-02-09T11:49:14.576Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210209 11:50:35.085" starttime="20210209 11:50:35.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:35.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:35.086" starttime="20210209 11:50:35.086"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:35.086" starttime="20210209 11:50:31.323"></status>
</kw>
<msg timestamp="20210209 11:50:35.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:35.087" starttime="20210209 11:50:31.322"></status>
</kw>
<msg timestamp="20210209 11:50:35.087" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210209 11:50:35.087" starttime="20210209 11:50:31.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:50:35.087" starttime="20210209 11:50:35.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210209 11:50:35.088" starttime="20210209 11:50:35.088"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:50:35.088" critical="yes" starttime="20210209 11:50:31.297"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:35.094" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:35.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:35.097" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:50:35.097" starttime="20210209 11:50:35.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:35.098" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:50:35.098" starttime="20210209 11:50:35.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:35.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:35.099" starttime="20210209 11:50:35.098"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:35.099" starttime="20210209 11:50:35.091"></status>
</kw>
<msg timestamp="20210209 11:50:35.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:35.099" starttime="20210209 11:50:35.091"></status>
</kw>
<msg timestamp="20210209 11:50:35.100" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:50:35.100" starttime="20210209 11:50:35.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:50:35.100" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:50:35.100" starttime="20210209 11:50:35.100"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:35.104" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:35.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:35.111" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:35.111" starttime="20210209 11:50:35.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:35.112" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:35.112" starttime="20210209 11:50:35.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:35.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:35.113" starttime="20210209 11:50:35.112"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:35.113" starttime="20210209 11:50:35.102"></status>
</kw>
<msg timestamp="20210209 11:50:35.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:35.114" starttime="20210209 11:50:35.102"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:35.114" starttime="20210209 11:50:35.101"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:35.114" starttime="20210209 11:50:35.101"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:35.114" starttime="20210209 11:50:35.090"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:35.114" starttime="20210209 11:50:35.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:35.117" level="INFO">Running command 'ozone sh bucket info 53533-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:38.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:38.807" level="INFO">${output} = 53533-source bucket1</msg>
<status status="PASS" endtime="20210209 11:50:38.807" starttime="20210209 11:50:35.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:38.808" level="INFO">53533-source bucket1</msg>
<status status="PASS" endtime="20210209 11:50:38.809" starttime="20210209 11:50:38.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:38.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:38.809" starttime="20210209 11:50:38.809"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:38.810" starttime="20210209 11:50:35.115"></status>
</kw>
<msg timestamp="20210209 11:50:38.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:38.810" starttime="20210209 11:50:35.115"></status>
</kw>
<msg timestamp="20210209 11:50:38.811" level="INFO">${result} = 53533-source bucket1</msg>
<status status="PASS" endtime="20210209 11:50:38.811" starttime="20210209 11:50:35.114"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:50:38.811" starttime="20210209 11:50:38.811"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:50:38.812" critical="yes" starttime="20210209 11:50:35.089"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:38.818" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:38.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:38.820" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:50:38.820" starttime="20210209 11:50:38.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:38.821" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:50:38.821" starttime="20210209 11:50:38.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:38.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:38.822" starttime="20210209 11:50:38.821"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:38.823" starttime="20210209 11:50:38.815"></status>
</kw>
<msg timestamp="20210209 11:50:38.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:38.823" starttime="20210209 11:50:38.815"></status>
</kw>
<msg timestamp="20210209 11:50:38.823" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:50:38.823" starttime="20210209 11:50:38.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:50:38.824" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:50:38.824" starttime="20210209 11:50:38.823"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:38.828" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:38.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:38.834" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:38.834" starttime="20210209 11:50:38.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:38.835" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:38.836" starttime="20210209 11:50:38.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:38.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:38.836" starttime="20210209 11:50:38.836"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:38.837" starttime="20210209 11:50:38.826"></status>
</kw>
<msg timestamp="20210209 11:50:38.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:38.837" starttime="20210209 11:50:38.825"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:38.837" starttime="20210209 11:50:38.825"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:38.837" starttime="20210209 11:50:38.824"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:38.837" starttime="20210209 11:50:38.814"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:38.838" starttime="20210209 11:50:38.813"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:38.841" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 53533-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:42.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:42.008" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:50:42.009" starttime="20210209 11:50:38.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:42.010" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:50:42.010" starttime="20210209 11:50:42.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:42.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:42.011" starttime="20210209 11:50:42.010"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:42.011" starttime="20210209 11:50:38.839"></status>
</kw>
<msg timestamp="20210209 11:50:42.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:42.011" starttime="20210209 11:50:38.838"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:42.011" starttime="20210209 11:50:38.838"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:42.017" level="INFO">Running command 'ozone sh bucket getacl 53533-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:45.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:45.777" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210209 11:50:45.777" starttime="20210209 11:50:42.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:45.778" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210209 11:50:45.778" starttime="20210209 11:50:45.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:45.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:45.779" starttime="20210209 11:50:45.778"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:45.779" starttime="20210209 11:50:42.015"></status>
</kw>
<msg timestamp="20210209 11:50:45.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:45.780" starttime="20210209 11:50:42.013"></status>
</kw>
<msg timestamp="20210209 11:50:45.780" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210209 11:50:45.780" starttime="20210209 11:50:42.012"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:50:45.781" starttime="20210209 11:50:45.780"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:45.781" starttime="20210209 11:50:42.011"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:45.790" level="INFO">Running command 'ozone sh bucket getacl 53533-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:49.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:49.435" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:49.435" starttime="20210209 11:50:45.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:49.436" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:49.436" starttime="20210209 11:50:49.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:49.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:49.437" starttime="20210209 11:50:49.436"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:49.437" starttime="20210209 11:50:45.783"></status>
</kw>
<msg timestamp="20210209 11:50:49.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:49.437" starttime="20210209 11:50:45.783"></status>
</kw>
<msg timestamp="20210209 11:50:49.438" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210209 11:50:49.438" starttime="20210209 11:50:45.782"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:50:49.438" starttime="20210209 11:50:49.438"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:49.439" starttime="20210209 11:50:45.781"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:49.442" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 53533-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:52.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:52.750" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:50:52.750" starttime="20210209 11:50:49.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:52.751" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210209 11:50:52.751" starttime="20210209 11:50:52.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:52.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:52.752" starttime="20210209 11:50:52.752"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:52.753" starttime="20210209 11:50:49.440"></status>
</kw>
<msg timestamp="20210209 11:50:52.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:52.753" starttime="20210209 11:50:49.439"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:52.753" starttime="20210209 11:50:49.439"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:52.757" level="INFO">Running command 'ozone sh bucket getacl 53533-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:50:56.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:50:56.577" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:50:56.577" starttime="20210209 11:50:52.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:50:56.580" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:50:56.580" starttime="20210209 11:50:56.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:50:56.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:50:56.581" starttime="20210209 11:50:56.580"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:56.581" starttime="20210209 11:50:52.755"></status>
</kw>
<msg timestamp="20210209 11:50:56.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:50:56.581" starttime="20210209 11:50:52.755"></status>
</kw>
<msg timestamp="20210209 11:50:56.581" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210209 11:50:56.582" starttime="20210209 11:50:52.754"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:50:56.582" starttime="20210209 11:50:56.582"></status>
</kw>
<status status="PASS" endtime="20210209 11:50:56.582" starttime="20210209 11:50:52.753"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:50:56.598" level="INFO">Running command 'ozone sh bucket getacl 53533-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:00.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:00.045" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210209 11:51:00.045" starttime="20210209 11:50:56.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:00.046" level="INFO">READ</msg>
<status status="PASS" endtime="20210209 11:51:00.046" starttime="20210209 11:51:00.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:00.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:00.047" starttime="20210209 11:51:00.047"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:00.047" starttime="20210209 11:50:56.587"></status>
</kw>
<msg timestamp="20210209 11:51:00.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:00.048" starttime="20210209 11:50:56.587"></status>
</kw>
<msg timestamp="20210209 11:51:00.048" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210209 11:51:00.048" starttime="20210209 11:50:56.583"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:51:00.049" starttime="20210209 11:51:00.048"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:00.049" starttime="20210209 11:50:56.583"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:51:00.049" critical="yes" starttime="20210209 11:50:38.812"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:00.055" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:00.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:00.058" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:51:00.058" starttime="20210209 11:51:00.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:00.059" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:51:00.059" starttime="20210209 11:51:00.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:00.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:00.060" starttime="20210209 11:51:00.059"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:00.060" starttime="20210209 11:51:00.053"></status>
</kw>
<msg timestamp="20210209 11:51:00.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:00.061" starttime="20210209 11:51:00.052"></status>
</kw>
<msg timestamp="20210209 11:51:00.061" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:51:00.061" starttime="20210209 11:51:00.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:51:00.062" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:51:00.062" starttime="20210209 11:51:00.061"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:00.066" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:00.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:00.073" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:00.073" starttime="20210209 11:51:00.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:00.074" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:00.074" starttime="20210209 11:51:00.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:00.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:00.075" starttime="20210209 11:51:00.074"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:00.075" starttime="20210209 11:51:00.064"></status>
</kw>
<msg timestamp="20210209 11:51:00.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:00.075" starttime="20210209 11:51:00.063"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:00.076" starttime="20210209 11:51:00.062"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:00.076" starttime="20210209 11:51:00.062"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:00.076" starttime="20210209 11:51:00.051"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:00.076" starttime="20210209 11:51:00.051"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:00.080" level="INFO">Running command 'ozone sh bucket link 53533-source/bucket2 53533-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:03.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:03.552" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:03.552" starttime="20210209 11:51:00.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:03.554" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:03.554" starttime="20210209 11:51:03.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:03.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:03.555" starttime="20210209 11:51:03.554"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:03.555" starttime="20210209 11:51:00.078"></status>
</kw>
<msg timestamp="20210209 11:51:03.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:03.555" starttime="20210209 11:51:00.077"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:03.555" starttime="20210209 11:51:00.077"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:03.594" level="INFO">Running command 'ozone sh bucket create 53533-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:07.446" level="INFO">${rc} = 255</msg>
<msg timestamp="20210209 11:51:07.446" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210209 11:51:07.446" starttime="20210209 11:51:03.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:07.447" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210209 11:51:07.447" starttime="20210209 11:51:07.446"></status>
</kw>
<msg timestamp="20210209 11:51:07.448" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210209 11:51:07.448" starttime="20210209 11:51:03.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210209 11:51:07.448" starttime="20210209 11:51:07.448"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:07.461" level="INFO">Running command 'ozone sh bucket create 53533-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:11.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:11.127" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:11.127" starttime="20210209 11:51:07.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:11.128" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:11.128" starttime="20210209 11:51:11.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:11.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:11.129" starttime="20210209 11:51:11.128"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:11.129" starttime="20210209 11:51:07.457"></status>
</kw>
<msg timestamp="20210209 11:51:11.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:11.130" starttime="20210209 11:51:07.451"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:11.130" starttime="20210209 11:51:07.448"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:11.132" level="INFO">Running command 'ozone sh bucket link 53533-source/bucket1 53533-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:14.365" level="INFO">${rc} = 255</msg>
<msg timestamp="20210209 11:51:14.365" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210209 11:51:14.366" starttime="20210209 11:51:11.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:14.367" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210209 11:51:14.367" starttime="20210209 11:51:14.366"></status>
</kw>
<msg timestamp="20210209 11:51:14.367" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210209 11:51:14.367" starttime="20210209 11:51:11.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210209 11:51:14.368" starttime="20210209 11:51:14.367"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:51:14.368" critical="yes" starttime="20210209 11:51:00.050"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:14.374" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:14.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:14.376" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:51:14.376" starttime="20210209 11:51:14.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:14.377" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:51:14.377" starttime="20210209 11:51:14.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:14.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:14.378" starttime="20210209 11:51:14.377"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.378" starttime="20210209 11:51:14.371"></status>
</kw>
<msg timestamp="20210209 11:51:14.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:14.378" starttime="20210209 11:51:14.371"></status>
</kw>
<msg timestamp="20210209 11:51:14.379" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:51:14.379" starttime="20210209 11:51:14.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:51:14.379" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:51:14.379" starttime="20210209 11:51:14.379"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:14.383" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:14.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:14.390" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:14.390" starttime="20210209 11:51:14.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:14.391" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:14.391" starttime="20210209 11:51:14.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:14.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:14.392" starttime="20210209 11:51:14.391"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.392" starttime="20210209 11:51:14.381"></status>
</kw>
<msg timestamp="20210209 11:51:14.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:14.392" starttime="20210209 11:51:14.381"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.392" starttime="20210209 11:51:14.380"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.392" starttime="20210209 11:51:14.380"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.393" starttime="20210209 11:51:14.370"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.393" starttime="20210209 11:51:14.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:14.396" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:14.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:14.400" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:14.400" starttime="20210209 11:51:14.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:14.401" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:14.401" starttime="20210209 11:51:14.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:14.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:14.402" starttime="20210209 11:51:14.401"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.402" starttime="20210209 11:51:14.395"></status>
</kw>
<msg timestamp="20210209 11:51:14.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:14.402" starttime="20210209 11:51:14.394"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.402" starttime="20210209 11:51:14.394"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:14.407" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:14.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:14.409" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:51:14.409" starttime="20210209 11:51:14.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:14.410" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:51:14.410" starttime="20210209 11:51:14.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:14.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:14.411" starttime="20210209 11:51:14.411"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.411" starttime="20210209 11:51:14.405"></status>
</kw>
<msg timestamp="20210209 11:51:14.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:14.412" starttime="20210209 11:51:14.404"></status>
</kw>
<msg timestamp="20210209 11:51:14.412" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:51:14.412" starttime="20210209 11:51:14.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:51:14.413" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:51:14.413" starttime="20210209 11:51:14.412"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:14.417" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:14.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:14.423" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:14.423" starttime="20210209 11:51:14.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:14.424" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:14.424" starttime="20210209 11:51:14.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:14.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:14.425" starttime="20210209 11:51:14.425"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.425" starttime="20210209 11:51:14.414"></status>
</kw>
<msg timestamp="20210209 11:51:14.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:14.426" starttime="20210209 11:51:14.414"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.426" starttime="20210209 11:51:14.413"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.426" starttime="20210209 11:51:14.413"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.426" starttime="20210209 11:51:14.403"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:14.426" starttime="20210209 11:51:14.403"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:14.429" level="INFO">Running command 'ozone sh key list 53533-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:17.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:17.859" level="INFO">${output} = {
  "volumeName" : "53533-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-09T11:49:01.691Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210209 11:51:17.859" starttime="20210209 11:51:14.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:17.860" level="INFO">{
  "volumeName" : "53533-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-09T11:49:01.691Z",
  "modificationTime" : "2021-02-09T11:49:03.727Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210209 11:51:17.860" starttime="20210209 11:51:17.859"></status>
</kw>
<msg timestamp="20210209 11:51:17.860" level="INFO">${result} = {
  "volumeName" : "53533-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-09T11:49:01.691Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210209 11:51:17.860" starttime="20210209 11:51:14.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210209 11:51:17.861" starttime="20210209 11:51:17.860"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.861" starttime="20210209 11:51:14.393"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.861" starttime="20210209 11:51:14.393"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:51:17.862" critical="yes" starttime="20210209 11:51:14.368"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:17.873" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:17.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:17.877" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:51:17.877" starttime="20210209 11:51:17.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:17.878" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:51:17.878" starttime="20210209 11:51:17.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:17.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:17.879" starttime="20210209 11:51:17.878"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.879" starttime="20210209 11:51:17.870"></status>
</kw>
<msg timestamp="20210209 11:51:17.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:17.879" starttime="20210209 11:51:17.869"></status>
</kw>
<msg timestamp="20210209 11:51:17.879" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:51:17.880" starttime="20210209 11:51:17.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:51:17.880" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:51:17.880" starttime="20210209 11:51:17.880"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:17.885" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:17.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:17.892" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:17.892" starttime="20210209 11:51:17.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:17.893" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:17.893" starttime="20210209 11:51:17.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:17.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:17.894" starttime="20210209 11:51:17.893"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.894" starttime="20210209 11:51:17.882"></status>
</kw>
<msg timestamp="20210209 11:51:17.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:17.895" starttime="20210209 11:51:17.882"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.895" starttime="20210209 11:51:17.881"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.895" starttime="20210209 11:51:17.881"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.895" starttime="20210209 11:51:17.864"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.895" starttime="20210209 11:51:17.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:17.899" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:17.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:17.903" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:17.903" starttime="20210209 11:51:17.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:17.904" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:17.904" starttime="20210209 11:51:17.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:17.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:17.905" starttime="20210209 11:51:17.904"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.905" starttime="20210209 11:51:17.897"></status>
</kw>
<msg timestamp="20210209 11:51:17.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:17.906" starttime="20210209 11:51:17.897"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.906" starttime="20210209 11:51:17.896"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:17.910" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:17.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:17.913" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:51:17.913" starttime="20210209 11:51:17.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:17.913" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:51:17.914" starttime="20210209 11:51:17.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:17.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:17.914" starttime="20210209 11:51:17.914"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.915" starttime="20210209 11:51:17.907"></status>
</kw>
<msg timestamp="20210209 11:51:17.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:17.915" starttime="20210209 11:51:17.907"></status>
</kw>
<msg timestamp="20210209 11:51:17.915" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:51:17.915" starttime="20210209 11:51:17.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:51:17.916" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:51:17.916" starttime="20210209 11:51:17.915"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:17.921" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:17.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:17.933" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:17.933" starttime="20210209 11:51:17.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:17.934" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:17.934" starttime="20210209 11:51:17.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:17.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:17.934" starttime="20210209 11:51:17.934"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.935" starttime="20210209 11:51:17.918"></status>
</kw>
<msg timestamp="20210209 11:51:17.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:17.935" starttime="20210209 11:51:17.917"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.935" starttime="20210209 11:51:17.917"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.936" starttime="20210209 11:51:17.916"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.936" starttime="20210209 11:51:17.906"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:17.936" starttime="20210209 11:51:17.906"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:17.938" level="INFO">Running command 'ozone sh key list 53533-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:21.032" level="INFO">${rc} = 255</msg>
<msg timestamp="20210209 11:51:21.032" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 53533-target unreadable-link null</msg>
<status status="PASS" endtime="20210209 11:51:21.032" starttime="20210209 11:51:17.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:21.033" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 53533-target unreadable-link null</msg>
<status status="PASS" endtime="20210209 11:51:21.034" starttime="20210209 11:51:21.033"></status>
</kw>
<msg timestamp="20210209 11:51:21.034" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 53533-target unreadable-link null</msg>
<status status="PASS" endtime="20210209 11:51:21.034" starttime="20210209 11:51:17.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210209 11:51:21.035" starttime="20210209 11:51:21.034"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.035" starttime="20210209 11:51:17.896"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.035" starttime="20210209 11:51:17.895"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:51:21.035" critical="yes" starttime="20210209 11:51:17.862"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:21.042" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:21.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:21.044" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:51:21.044" starttime="20210209 11:51:21.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:21.045" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:51:21.045" starttime="20210209 11:51:21.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:21.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:21.046" starttime="20210209 11:51:21.046"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.046" starttime="20210209 11:51:21.039"></status>
</kw>
<msg timestamp="20210209 11:51:21.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:21.047" starttime="20210209 11:51:21.039"></status>
</kw>
<msg timestamp="20210209 11:51:21.047" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:51:21.047" starttime="20210209 11:51:21.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:51:21.048" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:51:21.048" starttime="20210209 11:51:21.047"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:21.052" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:21.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:21.068" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:21.068" starttime="20210209 11:51:21.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:21.070" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:21.070" starttime="20210209 11:51:21.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:21.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:21.071" starttime="20210209 11:51:21.070"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.071" starttime="20210209 11:51:21.049"></status>
</kw>
<msg timestamp="20210209 11:51:21.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:21.071" starttime="20210209 11:51:21.049"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.071" starttime="20210209 11:51:21.048"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.071" starttime="20210209 11:51:21.048"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.072" starttime="20210209 11:51:21.038"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.072" starttime="20210209 11:51:21.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:21.077" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:21.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:21.080" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:21.080" starttime="20210209 11:51:21.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:21.081" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:21.081" starttime="20210209 11:51:21.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:21.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:21.082" starttime="20210209 11:51:21.081"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.082" starttime="20210209 11:51:21.074"></status>
</kw>
<msg timestamp="20210209 11:51:21.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:21.082" starttime="20210209 11:51:21.073"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.083" starttime="20210209 11:51:21.073"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:21.087" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:21.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:21.089" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:51:21.089" starttime="20210209 11:51:21.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:21.090" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:51:21.091" starttime="20210209 11:51:21.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:21.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:21.091" starttime="20210209 11:51:21.091"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.092" starttime="20210209 11:51:21.084"></status>
</kw>
<msg timestamp="20210209 11:51:21.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:21.092" starttime="20210209 11:51:21.084"></status>
</kw>
<msg timestamp="20210209 11:51:21.092" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:51:21.092" starttime="20210209 11:51:21.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:51:21.093" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:51:21.093" starttime="20210209 11:51:21.092"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:21.099" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:21.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:21.106" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:21.106" starttime="20210209 11:51:21.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:21.107" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:21.107" starttime="20210209 11:51:21.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:21.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:21.109" starttime="20210209 11:51:21.108"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.109" starttime="20210209 11:51:21.095"></status>
</kw>
<msg timestamp="20210209 11:51:21.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:21.109" starttime="20210209 11:51:21.094"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.109" starttime="20210209 11:51:21.094"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.109" starttime="20210209 11:51:21.093"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.110" starttime="20210209 11:51:21.083"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:21.110" starttime="20210209 11:51:21.083"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:21.114" level="INFO">Running command 'ozone sh bucket info 53533-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:24.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:24.639" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210209 11:51:24.639" starttime="20210209 11:51:21.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:24.640" level="INFO">{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:49:17.954Z",
  "modificationTime" : "2021-02-09T11:49:35.500Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210209 11:51:24.640" starttime="20210209 11:51:24.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:24.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:24.641" starttime="20210209 11:51:24.640"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:24.641" starttime="20210209 11:51:21.111"></status>
</kw>
<msg timestamp="20210209 11:51:24.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:24.641" starttime="20210209 11:51:21.111"></status>
</kw>
<msg timestamp="20210209 11:51:24.641" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210209 11:51:24.641" starttime="20210209 11:51:21.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210209 11:51:24.642" starttime="20210209 11:51:24.642"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210209 11:51:24.642" starttime="20210209 11:51:24.642"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:24.645" level="INFO">Running command 'ozone sh key list 53533-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:28.042" level="INFO">${rc} = 255</msg>
<msg timestamp="20210209 11:51:28.042" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 53533-source unreadable-bucket </msg>
<status status="PASS" endtime="20210209 11:51:28.042" starttime="20210209 11:51:24.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:28.043" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 53533-source unreadable-bucket </msg>
<status status="PASS" endtime="20210209 11:51:28.043" starttime="20210209 11:51:28.043"></status>
</kw>
<msg timestamp="20210209 11:51:28.044" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 53533-source unreadable-bucket </msg>
<status status="PASS" endtime="20210209 11:51:28.044" starttime="20210209 11:51:24.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210209 11:51:28.045" starttime="20210209 11:51:28.044"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:28.045" starttime="20210209 11:51:21.072"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:28.045" starttime="20210209 11:51:21.072"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:51:28.045" critical="yes" starttime="20210209 11:51:21.036"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:28.052" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:28.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:28.054" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:51:28.055" starttime="20210209 11:51:28.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:28.056" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:51:28.056" starttime="20210209 11:51:28.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:28.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:28.057" starttime="20210209 11:51:28.056"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:28.057" starttime="20210209 11:51:28.049"></status>
</kw>
<msg timestamp="20210209 11:51:28.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:28.057" starttime="20210209 11:51:28.049"></status>
</kw>
<msg timestamp="20210209 11:51:28.057" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:51:28.057" starttime="20210209 11:51:28.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:51:28.058" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:51:28.058" starttime="20210209 11:51:28.058"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:28.063" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:28.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:28.085" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:28.086" starttime="20210209 11:51:28.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:28.087" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:28.087" starttime="20210209 11:51:28.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:28.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:28.087" starttime="20210209 11:51:28.087"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:28.088" starttime="20210209 11:51:28.060"></status>
</kw>
<msg timestamp="20210209 11:51:28.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:28.088" starttime="20210209 11:51:28.059"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:28.088" starttime="20210209 11:51:28.059"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:28.088" starttime="20210209 11:51:28.058"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:28.089" starttime="20210209 11:51:28.048"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:28.089" starttime="20210209 11:51:28.047"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:28.093" level="INFO">Running command 'ozone sh bucket link 53533-target/loop1 53533-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:31.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:31.382" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:31.383" starttime="20210209 11:51:28.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:31.384" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:31.384" starttime="20210209 11:51:31.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:31.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:31.384" starttime="20210209 11:51:31.384"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:31.385" starttime="20210209 11:51:28.090"></status>
</kw>
<msg timestamp="20210209 11:51:31.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:31.385" starttime="20210209 11:51:28.090"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:31.385" starttime="20210209 11:51:28.089"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:31.388" level="INFO">Running command 'ozone sh bucket link 53533-target/loop2 53533-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:34.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:34.735" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:34.735" starttime="20210209 11:51:31.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:34.736" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:34.736" starttime="20210209 11:51:34.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:34.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:34.737" starttime="20210209 11:51:34.737"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:34.737" starttime="20210209 11:51:31.386"></status>
</kw>
<msg timestamp="20210209 11:51:34.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:34.738" starttime="20210209 11:51:31.386"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:34.738" starttime="20210209 11:51:31.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:34.743" level="INFO">Running command 'ozone sh bucket link 53533-target/loop3 53533-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:38.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:38.058" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:38.058" starttime="20210209 11:51:34.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:38.059" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:38.059" starttime="20210209 11:51:38.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:38.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:38.060" starttime="20210209 11:51:38.059"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:38.060" starttime="20210209 11:51:34.739"></status>
</kw>
<msg timestamp="20210209 11:51:38.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:38.061" starttime="20210209 11:51:34.739"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:38.061" starttime="20210209 11:51:34.738"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:38.064" level="INFO">Running command 'ozone sh key list 53533-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:41.269" level="INFO">${rc} = 255</msg>
<msg timestamp="20210209 11:51:41.269" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210209 11:51:41.269" starttime="20210209 11:51:38.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:41.270" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210209 11:51:41.271" starttime="20210209 11:51:41.269"></status>
</kw>
<msg timestamp="20210209 11:51:41.271" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210209 11:51:41.271" starttime="20210209 11:51:38.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210209 11:51:41.272" starttime="20210209 11:51:41.271"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:51:41.272" critical="yes" starttime="20210209 11:51:28.046"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:41.278" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:41.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:41.281" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:51:41.281" starttime="20210209 11:51:41.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:41.282" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:51:41.282" starttime="20210209 11:51:41.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:41.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:41.283" starttime="20210209 11:51:41.282"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:41.283" starttime="20210209 11:51:41.276"></status>
</kw>
<msg timestamp="20210209 11:51:41.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:41.283" starttime="20210209 11:51:41.275"></status>
</kw>
<msg timestamp="20210209 11:51:41.283" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:51:41.283" starttime="20210209 11:51:41.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:51:41.284" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:51:41.285" starttime="20210209 11:51:41.284"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:41.288" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:41.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:41.311" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:41.311" starttime="20210209 11:51:41.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:41.312" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:41.312" starttime="20210209 11:51:41.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:41.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:41.313" starttime="20210209 11:51:41.312"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:41.313" starttime="20210209 11:51:41.286"></status>
</kw>
<msg timestamp="20210209 11:51:41.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:41.314" starttime="20210209 11:51:41.286"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:41.314" starttime="20210209 11:51:41.285"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:41.314" starttime="20210209 11:51:41.285"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:41.314" starttime="20210209 11:51:41.274"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:41.314" starttime="20210209 11:51:41.274"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:41.318" level="INFO">Running command 'ozone sh bucket link 53533-source/bucket1 53533-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:44.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:44.409" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:44.409" starttime="20210209 11:51:41.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:44.410" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:44.411" starttime="20210209 11:51:44.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:44.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:44.412" starttime="20210209 11:51:44.411"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:44.412" starttime="20210209 11:51:41.315"></status>
</kw>
<msg timestamp="20210209 11:51:44.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:44.412" starttime="20210209 11:51:41.315"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:44.413" starttime="20210209 11:51:41.314"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:44.416" level="INFO">Running command 'ozone sh key put 53533-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:52.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:52.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:52.488" starttime="20210209 11:51:44.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:52.489" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:52.489" starttime="20210209 11:51:52.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:52.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:52.490" starttime="20210209 11:51:52.490"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:52.491" starttime="20210209 11:51:44.414"></status>
</kw>
<msg timestamp="20210209 11:51:52.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:52.491" starttime="20210209 11:51:44.413"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:52.491" starttime="20210209 11:51:44.413"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210209 11:51:52.493" level="INFO">${postfix} = 65176</msg>
<status status="PASS" endtime="20210209 11:51:52.493" starttime="20210209 11:51:52.493"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210209 11:51:52.494" level="INFO">${tmpfile} = /tmp/tempkey-65176</msg>
<status status="PASS" endtime="20210209 11:51:52.494" starttime="20210209 11:51:52.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:52.497" level="INFO">Running command 'ozone sh key get 53533-target/link1/key3 /tmp/tempkey-65176 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:57.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:57.792" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:57.792" starttime="20210209 11:51:52.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:57.793" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:57.793" starttime="20210209 11:51:57.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:57.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:57.794" starttime="20210209 11:51:57.794"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:57.795" starttime="20210209 11:51:52.495"></status>
</kw>
<msg timestamp="20210209 11:51:57.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:57.795" starttime="20210209 11:51:52.495"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:57.795" starttime="20210209 11:51:52.494"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210209 11:51:57.798" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-65176 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:57.800" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210209 11:51:57.800" starttime="20210209 11:51:57.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:57.804" level="INFO">Running command 'rm -f /tmp/tempkey-65176 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:57.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:57.806" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:57.806" starttime="20210209 11:51:57.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:57.807" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:57.807" starttime="20210209 11:51:57.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:57.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:57.809" starttime="20210209 11:51:57.807"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:57.809" starttime="20210209 11:51:57.801"></status>
</kw>
<msg timestamp="20210209 11:51:57.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:57.809" starttime="20210209 11:51:57.801"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:57.809" starttime="20210209 11:51:57.800"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210209 11:51:57.810" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210209 11:51:57.810" starttime="20210209 11:51:57.810"></status>
</kw>
<msg timestamp="20210209 11:51:57.810" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210209 11:51:57.810" starttime="20210209 11:51:52.492"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210209 11:51:57.812" starttime="20210209 11:51:57.811"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:57.812" starttime="20210209 11:51:52.491"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:51:57.812" critical="yes" starttime="20210209 11:51:41.273"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:57.818" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:57.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:57.821" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210209 11:51:57.821" starttime="20210209 11:51:57.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:57.822" level="INFO">scm</msg>
<status status="PASS" endtime="20210209 11:51:57.822" starttime="20210209 11:51:57.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:57.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:57.823" starttime="20210209 11:51:57.822"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:57.823" starttime="20210209 11:51:57.816"></status>
</kw>
<msg timestamp="20210209 11:51:57.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:57.824" starttime="20210209 11:51:57.815"></status>
</kw>
<msg timestamp="20210209 11:51:57.824" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210209 11:51:57.824" starttime="20210209 11:51:57.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210209 11:51:57.825" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210209 11:51:57.825" starttime="20210209 11:51:57.824"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:57.830" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:51:57.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:51:57.836" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:51:57.836" starttime="20210209 11:51:57.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:51:57.837" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:51:57.837" starttime="20210209 11:51:57.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:51:57.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:51:57.838" starttime="20210209 11:51:57.837"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:57.838" starttime="20210209 11:51:57.826"></status>
</kw>
<msg timestamp="20210209 11:51:57.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:51:57.839" starttime="20210209 11:51:57.826"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:57.839" starttime="20210209 11:51:57.825"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:57.839" starttime="20210209 11:51:57.825"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:57.839" starttime="20210209 11:51:57.814"></status>
</kw>
<status status="PASS" endtime="20210209 11:51:57.839" starttime="20210209 11:51:57.814"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:51:57.843" level="INFO">Running command 'ozone sh bucket delete 53533-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:52:01.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:52:01.164" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210209 11:52:01.164" starttime="20210209 11:51:57.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:52:01.165" level="INFO"></msg>
<status status="PASS" endtime="20210209 11:52:01.166" starttime="20210209 11:52:01.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:52:01.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:52:01.167" starttime="20210209 11:52:01.166"></status>
</kw>
<status status="PASS" endtime="20210209 11:52:01.167" starttime="20210209 11:51:57.840"></status>
</kw>
<msg timestamp="20210209 11:52:01.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:52:01.167" starttime="20210209 11:51:57.840"></status>
</kw>
<status status="PASS" endtime="20210209 11:52:01.167" starttime="20210209 11:51:57.840"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:52:01.172" level="INFO">Running command 'ozone sh bucket list 53533-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:52:04.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:52:04.631" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T...</msg>
<status status="PASS" endtime="20210209 11:52:04.631" starttime="20210209 11:52:01.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:52:04.632" level="INFO">{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:51:10.910Z",
  "modificationTime" : "2021-02-09T11:51:10.910Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:49:39.072Z",
  "modificationTime" : "2021-02-09T11:49:39.072Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:49:17.954Z",
  "modificationTime" : "2021-02-09T11:49:35.500Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:51:03.270Z",
  "modificationTime" : "2021-02-09T11:51:03.270Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:51:44.249Z",
  "modificationTime" : "2021-02-09T11:51:44.249Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:51:37.830Z",
  "modificationTime" : "2021-02-09T11:51:37.830Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:51:31.252Z",
  "modificationTime" : "2021-02-09T11:51:31.252Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:51:34.669Z",
  "modificationTime" : "2021-02-09T11:51:34.669Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:49:11.271Z",
  "modificationTime" : "2021-02-09T11:49:31.782Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T11:49:14.576Z",
  "modificationTime" : "2021-02-09T11:49:14.576Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53533-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210209 11:52:04.632" starttime="20210209 11:52:04.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:52:04.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:52:04.633" starttime="20210209 11:52:04.632"></status>
</kw>
<status status="PASS" endtime="20210209 11:52:04.633" starttime="20210209 11:52:01.169"></status>
</kw>
<msg timestamp="20210209 11:52:04.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:52:04.633" starttime="20210209 11:52:01.168"></status>
</kw>
<msg timestamp="20210209 11:52:04.634" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "53533-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-09T...</msg>
<status status="PASS" endtime="20210209 11:52:04.634" starttime="20210209 11:52:01.168"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:52:04.634" starttime="20210209 11:52:04.634"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210209 11:52:04.638" level="INFO">Running command 'ozone sh key list 53533-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210209 11:52:08.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210209 11:52:08.231" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210209 11:52:08.232" starttime="20210209 11:52:04.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210209 11:52:08.233" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210209 11:52:08.233" starttime="20210209 11:52:08.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210209 11:52:08.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210209 11:52:08.234" starttime="20210209 11:52:08.233"></status>
</kw>
<status status="PASS" endtime="20210209 11:52:08.234" starttime="20210209 11:52:04.635"></status>
</kw>
<msg timestamp="20210209 11:52:08.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210209 11:52:08.234" starttime="20210209 11:52:04.635"></status>
</kw>
<msg timestamp="20210209 11:52:08.234" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210209 11:52:08.234" starttime="20210209 11:52:04.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210209 11:52:08.235" starttime="20210209 11:52:08.235"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210209 11:52:08.235" critical="yes" starttime="20210209 11:51:57.813"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210209 11:52:08.238" starttime="20210209 11:48:48.200"></status>
</suite>
<status status="PASS" elapsedtime="229920" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
