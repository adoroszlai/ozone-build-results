<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210108 18:43:44.300" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:29:58.541" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:00.842" level="INFO">${rc} = 255</msg>
<msg timestamp="20210108 18:30:00.842" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210108 18:30:00.842" starttime="20210108 18:29:58.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:00.843" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210108 18:30:00.843" starttime="20210108 18:30:00.842"></status>
</kw>
<msg timestamp="20210108 18:30:00.843" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210108 18:30:00.843" starttime="20210108 18:29:58.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:00.849" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:03.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:30:03.064" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:30:03.064" starttime="20210108 18:30:00.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:03.066" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:30:03.066" starttime="20210108 18:30:03.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:30:03.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:30:03.066" starttime="20210108 18:30:03.066"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:03.067" starttime="20210108 18:30:00.846"></status>
</kw>
<msg timestamp="20210108 18:30:03.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:30:03.067" starttime="20210108 18:30:00.845"></status>
</kw>
<msg timestamp="20210108 18:30:03.067" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210108 18:30:03.067" starttime="20210108 18:30:00.845"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210108 18:30:03.068" starttime="20210108 18:30:03.067"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:03.068" starttime="20210108 18:30:00.844"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:03.068" starttime="20210108 18:30:00.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:03.079" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:05.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:30:05.241" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:30:05.241" starttime="20210108 18:30:03.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:05.242" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:30:05.243" starttime="20210108 18:30:05.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:30:05.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:30:05.243" starttime="20210108 18:30:05.243"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:05.244" starttime="20210108 18:30:03.075"></status>
</kw>
<msg timestamp="20210108 18:30:05.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:30:05.245" starttime="20210108 18:30:03.074"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:05.245" starttime="20210108 18:30:03.074"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:05.245" starttime="20210108 18:30:03.073"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:05.245" starttime="20210108 18:30:03.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210108 18:30:05.245" starttime="20210108 18:30:05.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:05.250" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:07.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:30:07.524" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T18:30...</msg>
<status status="PASS" endtime="20210108 18:30:07.524" starttime="20210108 18:30:05.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:07.526" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T18:30:05.115Z",
  "modificationTime" : "2021-01-08T18:30:05.115Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210108 18:30:07.526" starttime="20210108 18:30:07.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:30:07.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:30:07.527" starttime="20210108 18:30:07.526"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:07.527" starttime="20210108 18:30:05.247"></status>
</kw>
<msg timestamp="20210108 18:30:07.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:30:07.527" starttime="20210108 18:30:05.246"></status>
</kw>
<msg timestamp="20210108 18:30:07.528" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T18:30...</msg>
<status status="PASS" endtime="20210108 18:30:07.528" starttime="20210108 18:30:05.246"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210108 18:30:07.528" starttime="20210108 18:30:07.528"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:30:07.533" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:30:07.533" starttime="20210108 18:30:07.532"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:30:07.534" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:30:07.534" starttime="20210108 18:30:07.533"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:07.534" starttime="20210108 18:30:07.532"></status>
</kw>
<msg timestamp="20210108 18:30:07.534" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:30:07.534" starttime="20210108 18:30:07.531"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:07.535" starttime="20210108 18:30:07.530"></status>
</kw>
<msg timestamp="20210108 18:30:07.535" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210108 18:30:07.535" starttime="20210108 18:30:07.530"></status>
</kw>
<msg timestamp="20210108 18:30:07.535" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210108 18:30:07.535" starttime="20210108 18:30:07.528"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:07.540" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:09.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:30:09.929" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:30:09.929" starttime="20210108 18:30:07.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:09.930" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:30:09.930" starttime="20210108 18:30:09.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:30:09.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:30:09.931" starttime="20210108 18:30:09.930"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:09.931" starttime="20210108 18:30:07.537"></status>
</kw>
<msg timestamp="20210108 18:30:09.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:30:09.932" starttime="20210108 18:30:07.536"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:09.932" starttime="20210108 18:30:07.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:09.935" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:15.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:30:15.931" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:30:15.931" starttime="20210108 18:30:09.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:15.932" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:30:15.932" starttime="20210108 18:30:15.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:30:15.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:30:15.933" starttime="20210108 18:30:15.932"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:15.933" starttime="20210108 18:30:09.933"></status>
</kw>
<msg timestamp="20210108 18:30:15.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:30:15.933" starttime="20210108 18:30:09.933"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:15.934" starttime="20210108 18:30:09.932"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:15.938" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:20.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:30:20.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:30:20.144" starttime="20210108 18:30:15.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:20.145" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:30:20.146" starttime="20210108 18:30:20.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:30:20.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:30:20.146" starttime="20210108 18:30:20.146"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:20.147" starttime="20210108 18:30:15.935"></status>
</kw>
<msg timestamp="20210108 18:30:20.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:30:20.147" starttime="20210108 18:30:15.934"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:20.147" starttime="20210108 18:30:15.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:20.151" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:24.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:30:24.068" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:30:24.068" starttime="20210108 18:30:20.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:24.070" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:30:24.070" starttime="20210108 18:30:24.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:30:24.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:30:24.071" starttime="20210108 18:30:24.070"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:24.071" starttime="20210108 18:30:20.148"></status>
</kw>
<msg timestamp="20210108 18:30:24.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:30:24.071" starttime="20210108 18:30:20.148"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:24.071" starttime="20210108 18:30:20.147"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 18:30:24.072" critical="yes" starttime="20210108 18:29:58.535"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:30:24.077" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:30:24.077" starttime="20210108 18:30:24.076"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:30:24.078" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:30:24.078" starttime="20210108 18:30:24.077"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:24.078" starttime="20210108 18:30:24.076"></status>
</kw>
<msg timestamp="20210108 18:30:24.078" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:30:24.078" starttime="20210108 18:30:24.075"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:24.078" starttime="20210108 18:30:24.074"></status>
</kw>
<msg timestamp="20210108 18:30:24.079" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210108 18:30:24.079" starttime="20210108 18:30:24.074"></status>
</kw>
<msg timestamp="20210108 18:30:24.079" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210108 18:30:24.079" starttime="20210108 18:30:24.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:24.082" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:26.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:30:26.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:30:26.561" starttime="20210108 18:30:24.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:26.562" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:30:26.562" starttime="20210108 18:30:26.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:30:26.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:30:26.563" starttime="20210108 18:30:26.562"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:26.563" starttime="20210108 18:30:24.080"></status>
</kw>
<msg timestamp="20210108 18:30:26.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:30:26.564" starttime="20210108 18:30:24.080"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:26.564" starttime="20210108 18:30:24.079"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:26.567" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:28.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:30:28.763" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:30:28.763" starttime="20210108 18:30:26.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:28.764" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:30:28.764" starttime="20210108 18:30:28.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:30:28.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:30:28.765" starttime="20210108 18:30:28.764"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:28.765" starttime="20210108 18:30:26.565"></status>
</kw>
<msg timestamp="20210108 18:30:28.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:30:28.765" starttime="20210108 18:30:26.565"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:28.766" starttime="20210108 18:30:26.564"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 18:30:28.766" critical="yes" starttime="20210108 18:30:24.072"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210108 18:30:28.768" starttime="20210108 18:29:58.460"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:32:00.874" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:32:00.874" starttime="20210108 18:32:00.874"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:32:00.876" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:32:00.876" starttime="20210108 18:32:00.874"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:00.876" starttime="20210108 18:32:00.873"></status>
</kw>
<msg timestamp="20210108 18:32:00.876" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:32:00.876" starttime="20210108 18:32:00.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:32:00.877" starttime="20210108 18:32:00.877"></status>
</kw>
<msg timestamp="20210108 18:32:00.878" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210108 18:32:00.878" starttime="20210108 18:32:00.877"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:00.878" starttime="20210108 18:32:00.871"></status>
</kw>
<msg timestamp="20210108 18:32:00.878" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:32:00.878" starttime="20210108 18:32:00.871"></status>
</kw>
<msg timestamp="20210108 18:32:00.878" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:32:00.879" starttime="20210108 18:32:00.869"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:32:00.879" level="INFO">${random} = 37742</msg>
<status status="PASS" endtime="20210108 18:32:00.879" starttime="20210108 18:32:00.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:32:00.885" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-37742 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:32:04.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:32:04.381" level="INFO">${output} = 2021-01-08 18:32:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:32:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-08 ...</msg>
<status status="PASS" endtime="20210108 18:32:04.381" starttime="20210108 18:32:00.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:32:04.382" level="INFO">2021-01-08 18:32:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:32:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-08 18:32:02 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-08 18:32:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:32:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8742093B9761-&gt;4d35cc20-2671-4d37-96d0-e98419c54c59
2021-01-08 18:32:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210108 18:32:04.382" starttime="20210108 18:32:04.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:32:04.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:32:04.383" starttime="20210108 18:32:04.382"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:04.383" starttime="20210108 18:32:00.881"></status>
</kw>
<msg timestamp="20210108 18:32:04.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:32:04.383" starttime="20210108 18:32:00.880"></status>
</kw>
<msg timestamp="20210108 18:32:04.383" level="INFO">${result} = 2021-01-08 18:32:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:32:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-08 ...</msg>
<status status="PASS" endtime="20210108 18:32:04.384" starttime="20210108 18:32:00.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:32:04.389" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:32:06.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:32:06.198" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:30 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-08 18:32 ofs://om/volume1/bucket1/ozone-37742
-rw-...</msg>
<status status="PASS" endtime="20210108 18:32:06.198" starttime="20210108 18:32:04.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:32:06.199" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:30 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-08 18:32 ofs://om/volume1/bucket1/ozone-37742
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-08 18:30 ofs://om/volume1/bucket1/ozone-76352
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:30 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:31 ofs://om/volume1/bucket1/wordcount-6lgAnbod.txt</msg>
<status status="PASS" endtime="20210108 18:32:06.199" starttime="20210108 18:32:06.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:32:06.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:32:06.200" starttime="20210108 18:32:06.199"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:06.201" starttime="20210108 18:32:04.386"></status>
</kw>
<msg timestamp="20210108 18:32:06.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:32:06.201" starttime="20210108 18:32:04.386"></status>
</kw>
<msg timestamp="20210108 18:32:06.201" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:30 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-08 18:32 ofs://om/volume1/bucket1/ozone-37742
-rw-...</msg>
<status status="PASS" endtime="20210108 18:32:06.201" starttime="20210108 18:32:04.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:32:06.202" starttime="20210108 18:32:06.201"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:32:06.202" critical="yes" starttime="20210108 18:32:00.868"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210108 18:32:06.205" starttime="20210108 18:32:00.805"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:30:33.802" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:30:33.802" starttime="20210108 18:30:33.801"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:30:33.803" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:30:33.803" starttime="20210108 18:30:33.802"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:33.803" starttime="20210108 18:30:33.801"></status>
</kw>
<msg timestamp="20210108 18:30:33.803" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:30:33.803" starttime="20210108 18:30:33.800"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:33.803" starttime="20210108 18:30:33.799"></status>
</kw>
<msg timestamp="20210108 18:30:33.804" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:30:33.804" starttime="20210108 18:30:33.799"></status>
</kw>
<msg timestamp="20210108 18:30:33.804" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:30:33.804" starttime="20210108 18:30:33.798"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:30:33.804" level="INFO">${random} = 76352</msg>
<status status="PASS" endtime="20210108 18:30:33.804" starttime="20210108 18:30:33.804"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:33.809" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-76352 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:37.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:30:37.419" level="INFO">${output} = 2021-01-08 18:30:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:30:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-08 ...</msg>
<status status="PASS" endtime="20210108 18:30:37.419" starttime="20210108 18:30:33.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:37.420" level="INFO">2021-01-08 18:30:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:30:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-08 18:30:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-08 18:30:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:30:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7CD34130B5B8-&gt;4d35cc20-2671-4d37-96d0-e98419c54c59
2021-01-08 18:30:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210108 18:30:37.421" starttime="20210108 18:30:37.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:30:37.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:30:37.421" starttime="20210108 18:30:37.421"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:37.422" starttime="20210108 18:30:33.805"></status>
</kw>
<msg timestamp="20210108 18:30:37.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:30:37.422" starttime="20210108 18:30:33.805"></status>
</kw>
<msg timestamp="20210108 18:30:37.422" level="INFO">${result} = 2021-01-08 18:30:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:30:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-08 ...</msg>
<status status="PASS" endtime="20210108 18:30:37.422" starttime="20210108 18:30:33.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:37.427" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:39.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:30:39.331" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:30 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-08 18:30 o3fs://bucket1.volume1.om/ozone-76352
dr...</msg>
<status status="PASS" endtime="20210108 18:30:39.331" starttime="20210108 18:30:37.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:39.333" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:30 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-08 18:30 o3fs://bucket1.volume1.om/ozone-76352
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:30 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210108 18:30:39.333" starttime="20210108 18:30:39.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:30:39.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:30:39.334" starttime="20210108 18:30:39.333"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:39.334" starttime="20210108 18:30:37.424"></status>
</kw>
<msg timestamp="20210108 18:30:39.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:30:39.334" starttime="20210108 18:30:37.423"></status>
</kw>
<msg timestamp="20210108 18:30:39.334" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:30 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-08 18:30 o3fs://bucket1.volume1.om/ozone-76352
dr...</msg>
<status status="PASS" endtime="20210108 18:30:39.334" starttime="20210108 18:30:37.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:30:39.335" starttime="20210108 18:30:39.335"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:30:39.335" critical="yes" starttime="20210108 18:30:33.797"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210108 18:30:39.337" starttime="20210108 18:30:33.738"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:32:10.975" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:32:10.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:32:10.981" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:32:10.981" starttime="20210108 18:32:10.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:32:10.982" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:32:10.982" starttime="20210108 18:32:10.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:32:10.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:32:10.983" starttime="20210108 18:32:10.982"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:10.984" starttime="20210108 18:32:10.968"></status>
</kw>
<msg timestamp="20210108 18:32:10.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:32:10.984" starttime="20210108 18:32:10.968"></status>
</kw>
<msg timestamp="20210108 18:32:10.984" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:32:10.984" starttime="20210108 18:32:10.967"></status>
</kw>
<msg timestamp="20210108 18:32:10.985" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:32:10.985" starttime="20210108 18:32:10.967"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:32:10.992" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:32:10.992" starttime="20210108 18:32:10.992"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:32:10.993" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:32:10.993" starttime="20210108 18:32:10.993"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:10.994" starttime="20210108 18:32:10.990"></status>
</kw>
<msg timestamp="20210108 18:32:10.994" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:32:10.994" starttime="20210108 18:32:10.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:32:10.995" starttime="20210108 18:32:10.994"></status>
</kw>
<msg timestamp="20210108 18:32:10.995" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210108 18:32:10.995" starttime="20210108 18:32:10.994"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:10.995" starttime="20210108 18:32:10.987"></status>
</kw>
<msg timestamp="20210108 18:32:10.995" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:32:10.995" starttime="20210108 18:32:10.986"></status>
</kw>
<msg timestamp="20210108 18:32:10.996" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:32:10.996" starttime="20210108 18:32:10.985"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:32:10.999" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:32:48.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:32:48.242" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:32:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:32:13 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210108 18:32:48.242" starttime="20210108 18:32:10.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:32:48.243" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:32:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:32:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-08 18:32:13 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-08 18:32:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:32:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-46AE08AD80E3-&gt;4d35cc20-2671-4d37-96d0-e98419c54c59
2021-01-08 18:32:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-08 18:32:14 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2021-01-08 18:32:14 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-08 18:32:14 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-08 18:32:14 INFO  JobSubmitter:198 - number of splits:3
2021-01-08 18:32:15 INFO  JobSubmitter:287 - Submitting tokens for job: job_1610130527676_0003
2021-01-08 18:32:15 INFO  YarnClientImpl:273 - Submitted application application_1610130527676_0003
2021-01-08 18:32:15 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1610130527676_0003/
2021-01-08 18:32:15 INFO  Job:1339 - Running job: job_1610130527676_0003
2021-01-08 18:32:23 INFO  Job:1360 - Job job_1610130527676_0003 running in uber mode : false
2021-01-08 18:32:23 INFO  Job:1367 -  map 0% reduce 0%
2021-01-08 18:32:29 INFO  Job:1367 -  map 33% reduce 0%
2021-01-08 18:32:34 INFO  Job:1367 -  map 67% reduce 0%
2021-01-08 18:32:39 INFO  Job:1367 -  map 100% reduce 0%
2021-01-08 18:32:46 INFO  Job:1367 -  map 100% reduce 100%
2021-01-08 18:32:47 INFO  Job:1378 - Job job_1610130527676_0003 completed successfully
2021-01-08 18:32:47 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610717
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41856
		Total time spent by all reduces in occupied slots (ms)=25344
		Total time spent by all map tasks (ms)=10464
		Total time spent by all reduce tasks (ms)=6336
		Total vcore-milliseconds taken by all map tasks=10464
		Total vcore-milliseconds taken by all reduce tasks=6336
		Total megabyte-milliseconds taken by all map tasks=42860544
		Total megabyte-milliseconds taken by all reduce tasks=25952256
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=579
		CPU time spent (ms)=7840
		Physical memory (bytes) snapshot=1180606464
		Virtual memory (bytes) snapshot=15788113920
		Total committed heap usage (bytes)=1156055040
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.443 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210108 18:32:48.243" starttime="20210108 18:32:48.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:32:48.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:32:48.244" starttime="20210108 18:32:48.243"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:48.244" starttime="20210108 18:32:10.997"></status>
</kw>
<msg timestamp="20210108 18:32:48.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:32:48.245" starttime="20210108 18:32:10.996"></status>
</kw>
<msg timestamp="20210108 18:32:48.245" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:32:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:32:13 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210108 18:32:48.245" starttime="20210108 18:32:10.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 18:32:48.246" starttime="20210108 18:32:48.245"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 18:32:48.246" critical="yes" starttime="20210108 18:32:10.966"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:32:48.252" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:32:48.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:32:48.257" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:32:48.257" starttime="20210108 18:32:48.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:32:48.258" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:32:48.258" starttime="20210108 18:32:48.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:32:48.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:32:48.258" starttime="20210108 18:32:48.258"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:48.259" starttime="20210108 18:32:48.249"></status>
</kw>
<msg timestamp="20210108 18:32:48.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:32:48.259" starttime="20210108 18:32:48.249"></status>
</kw>
<msg timestamp="20210108 18:32:48.259" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:32:48.259" starttime="20210108 18:32:48.248"></status>
</kw>
<msg timestamp="20210108 18:32:48.260" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:32:48.260" starttime="20210108 18:32:48.248"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:32:48.260" level="INFO">${random} = ED2TM7Mv</msg>
<status status="PASS" endtime="20210108 18:32:48.260" starttime="20210108 18:32:48.260"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:32:48.265" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:32:48.265" starttime="20210108 18:32:48.265"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:32:48.266" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:32:48.266" starttime="20210108 18:32:48.265"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:48.266" starttime="20210108 18:32:48.264"></status>
</kw>
<msg timestamp="20210108 18:32:48.266" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:32:48.266" starttime="20210108 18:32:48.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:32:48.267" starttime="20210108 18:32:48.267"></status>
</kw>
<msg timestamp="20210108 18:32:48.267" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210108 18:32:48.267" starttime="20210108 18:32:48.266"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:48.268" starttime="20210108 18:32:48.262"></status>
</kw>
<msg timestamp="20210108 18:32:48.268" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:32:48.268" starttime="20210108 18:32:48.261"></status>
</kw>
<msg timestamp="20210108 18:32:48.268" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:32:48.268" starttime="20210108 18:32:48.261"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:32:48.272" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:32:48.272" starttime="20210108 18:32:48.271"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:32:48.272" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:32:48.272" starttime="20210108 18:32:48.272"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:48.273" starttime="20210108 18:32:48.271"></status>
</kw>
<msg timestamp="20210108 18:32:48.273" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:32:48.273" starttime="20210108 18:32:48.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:32:48.275" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210108 18:32:48.275" starttime="20210108 18:32:48.274"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:32:48.276" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210108 18:32:48.276" starttime="20210108 18:32:48.275"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:48.276" starttime="20210108 18:32:48.274"></status>
</kw>
<msg timestamp="20210108 18:32:48.276" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210108 18:32:48.276" starttime="20210108 18:32:48.273"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:48.277" starttime="20210108 18:32:48.269"></status>
</kw>
<msg timestamp="20210108 18:32:48.277" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210108 18:32:48.277" starttime="20210108 18:32:48.269"></status>
</kw>
<msg timestamp="20210108 18:32:48.277" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210108 18:32:48.277" starttime="20210108 18:32:48.268"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:32:48.281" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:32:48.281" starttime="20210108 18:32:48.280"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:32:48.282" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:32:48.282" starttime="20210108 18:32:48.281"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:48.282" starttime="20210108 18:32:48.280"></status>
</kw>
<msg timestamp="20210108 18:32:48.282" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:32:48.282" starttime="20210108 18:32:48.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:32:48.284" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210108 18:32:48.284" starttime="20210108 18:32:48.283"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:32:48.284" level="INFO">${result} = /wordcount-ED2TM7Mv.txt</msg>
<status status="PASS" endtime="20210108 18:32:48.284" starttime="20210108 18:32:48.284"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:48.285" starttime="20210108 18:32:48.283"></status>
</kw>
<msg timestamp="20210108 18:32:48.285" level="INFO">${path_with_leading} = /wordcount-ED2TM7Mv.txt</msg>
<status status="PASS" endtime="20210108 18:32:48.285" starttime="20210108 18:32:48.282"></status>
</kw>
<status status="PASS" endtime="20210108 18:32:48.285" starttime="20210108 18:32:48.279"></status>
</kw>
<msg timestamp="20210108 18:32:48.285" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-ED2TM7Mv.txt</msg>
<status status="PASS" endtime="20210108 18:32:48.285" starttime="20210108 18:32:48.278"></status>
</kw>
<msg timestamp="20210108 18:32:48.285" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-ED2TM7Mv.txt</msg>
<status status="PASS" endtime="20210108 18:32:48.285" starttime="20210108 18:32:48.277"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:32:48.289" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-ED2TM7Mv.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:33:21.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:33:21.943" level="INFO">${output} = 2021-01-08 18:32:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2021-01-08 18:32:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210108 18:33:21.943" starttime="20210108 18:32:48.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:33:21.944" level="INFO">2021-01-08 18:32:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2021-01-08 18:32:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-08 18:32:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:32:50 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-08 18:32:50 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-08 18:32:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:32:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E2704B4B2AB1-&gt;4d35cc20-2671-4d37-96d0-e98419c54c59
2021-01-08 18:32:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 18:32:51 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-08 18:32:51 INFO  JobSubmitter:198 - number of splits:3
2021-01-08 18:32:51 INFO  JobSubmitter:287 - Submitting tokens for job: job_1610130527676_0004
2021-01-08 18:32:52 INFO  YarnClientImpl:273 - Submitted application application_1610130527676_0004
2021-01-08 18:32:52 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1610130527676_0004/
2021-01-08 18:32:52 INFO  Job:1339 - Running job: job_1610130527676_0004
2021-01-08 18:33:00 INFO  Job:1360 - Job job_1610130527676_0004 running in uber mode : false
2021-01-08 18:33:00 INFO  Job:1367 -  map 0% reduce 0%
2021-01-08 18:33:06 INFO  Job:1367 -  map 33% reduce 0%
2021-01-08 18:33:11 INFO  Job:1367 -  map 67% reduce 0%
2021-01-08 18:33:16 INFO  Job:1367 -  map 100% reduce 0%
2021-01-08 18:33:20 INFO  Job:1367 -  map 100% reduce 100%
2021-01-08 18:33:21 INFO  Job:1378 - Job job_1610130527676_0004 completed successfully
2021-01-08 18:33:21 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40724
		Total time spent by all reduces in occupied slots (ms)=14976
		Total time spent by all map tasks (ms)=10181
		Total time spent by all reduce tasks (ms)=3744
		Total vcore-milliseconds taken by all map tasks=10181
		Total vcore-milliseconds taken by all reduce tasks=3744
		Total megabyte-milliseconds taken by all map tasks=41701376
		Total megabyte-milliseconds taken by all reduce tasks=15335424
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=535
		CPU time spent (ms)=7430
		Physical memory (bytes) snapshot=1175408640
		Virtual memory (bytes) snapshot=15785861120
		Total committed heap usage (bytes)=961544192
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210108 18:33:21.944" starttime="20210108 18:33:21.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:33:21.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:33:21.945" starttime="20210108 18:33:21.944"></status>
</kw>
<status status="PASS" endtime="20210108 18:33:21.945" starttime="20210108 18:32:48.286"></status>
</kw>
<msg timestamp="20210108 18:33:21.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:33:21.945" starttime="20210108 18:32:48.286"></status>
</kw>
<msg timestamp="20210108 18:33:21.946" level="INFO">${output} = 2021-01-08 18:32:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2021-01-08 18:32:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210108 18:33:21.946" starttime="20210108 18:32:48.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210108 18:33:21.947" starttime="20210108 18:33:21.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 18:33:21.947" starttime="20210108 18:33:21.947"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 18:33:21.948" critical="yes" starttime="20210108 18:32:48.247"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210108 18:33:21.949" starttime="20210108 18:32:10.904"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:44.073" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:30:44.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:30:44.079" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:30:44.080" starttime="20210108 18:30:44.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:30:44.081" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:30:44.081" starttime="20210108 18:30:44.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:30:44.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:30:44.082" starttime="20210108 18:30:44.081"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:44.082" starttime="20210108 18:30:44.069"></status>
</kw>
<msg timestamp="20210108 18:30:44.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:30:44.082" starttime="20210108 18:30:44.069"></status>
</kw>
<msg timestamp="20210108 18:30:44.082" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:30:44.082" starttime="20210108 18:30:44.068"></status>
</kw>
<msg timestamp="20210108 18:30:44.083" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:30:44.083" starttime="20210108 18:30:44.068"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:30:44.088" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:30:44.088" starttime="20210108 18:30:44.087"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:30:44.088" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:30:44.088" starttime="20210108 18:30:44.088"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:44.089" starttime="20210108 18:30:44.086"></status>
</kw>
<msg timestamp="20210108 18:30:44.089" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:30:44.089" starttime="20210108 18:30:44.085"></status>
</kw>
<status status="PASS" endtime="20210108 18:30:44.089" starttime="20210108 18:30:44.085"></status>
</kw>
<msg timestamp="20210108 18:30:44.089" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:30:44.089" starttime="20210108 18:30:44.084"></status>
</kw>
<msg timestamp="20210108 18:30:44.090" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:30:44.090" starttime="20210108 18:30:44.083"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:30:44.093" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:31:22.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:31:22.048" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:30:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:30:46 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210108 18:31:22.048" starttime="20210108 18:30:44.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:31:22.050" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:30:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:30:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-08 18:30:46 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-08 18:30:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:30:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5DC24F36B0A0-&gt;4d35cc20-2671-4d37-96d0-e98419c54c59
2021-01-08 18:30:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-08 18:30:47 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2021-01-08 18:30:48 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-08 18:30:48 INFO  JobSubmitter:198 - number of splits:3
2021-01-08 18:30:48 INFO  JobSubmitter:287 - Submitting tokens for job: job_1610130527676_0001
2021-01-08 18:30:48 INFO  YarnClientImpl:273 - Submitted application application_1610130527676_0001
2021-01-08 18:30:48 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1610130527676_0001/
2021-01-08 18:30:48 INFO  Job:1339 - Running job: job_1610130527676_0001
2021-01-08 18:30:59 INFO  Job:1360 - Job job_1610130527676_0001 running in uber mode : false
2021-01-08 18:30:59 INFO  Job:1367 -  map 0% reduce 0%
2021-01-08 18:31:06 INFO  Job:1367 -  map 33% reduce 0%
2021-01-08 18:31:11 INFO  Job:1367 -  map 67% reduce 0%
2021-01-08 18:31:16 INFO  Job:1367 -  map 100% reduce 0%
2021-01-08 18:31:20 INFO  Job:1367 -  map 100% reduce 100%
2021-01-08 18:31:21 INFO  Job:1378 - Job job_1610130527676_0001 completed successfully
2021-01-08 18:31:21 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610921
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40364
		Total time spent by all reduces in occupied slots (ms)=16032
		Total time spent by all map tasks (ms)=10091
		Total time spent by all reduce tasks (ms)=4008
		Total vcore-milliseconds taken by all map tasks=10091
		Total vcore-milliseconds taken by all reduce tasks=4008
		Total megabyte-milliseconds taken by all map tasks=41332736
		Total megabyte-milliseconds taken by all reduce tasks=16416768
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=541
		CPU time spent (ms)=6380
		Physical memory (bytes) snapshot=1127469056
		Virtual memory (bytes) snapshot=15730749440
		Total committed heap usage (bytes)=1008205824
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.011 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210108 18:31:22.050" starttime="20210108 18:31:22.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:31:22.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:31:22.051" starttime="20210108 18:31:22.050"></status>
</kw>
<status status="PASS" endtime="20210108 18:31:22.051" starttime="20210108 18:30:44.091"></status>
</kw>
<msg timestamp="20210108 18:31:22.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:31:22.051" starttime="20210108 18:30:44.090"></status>
</kw>
<msg timestamp="20210108 18:31:22.052" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:30:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:30:46 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210108 18:31:22.052" starttime="20210108 18:30:44.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 18:31:22.052" starttime="20210108 18:31:22.052"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 18:31:22.053" critical="yes" starttime="20210108 18:30:44.067"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:31:22.058" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:31:22.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:31:22.064" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:31:22.064" starttime="20210108 18:31:22.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:31:22.065" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:31:22.065" starttime="20210108 18:31:22.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:31:22.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:31:22.066" starttime="20210108 18:31:22.065"></status>
</kw>
<status status="PASS" endtime="20210108 18:31:22.066" starttime="20210108 18:31:22.055"></status>
</kw>
<msg timestamp="20210108 18:31:22.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:31:22.067" starttime="20210108 18:31:22.055"></status>
</kw>
<msg timestamp="20210108 18:31:22.067" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:31:22.067" starttime="20210108 18:31:22.055"></status>
</kw>
<msg timestamp="20210108 18:31:22.067" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210108 18:31:22.067" starttime="20210108 18:31:22.054"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:31:22.068" level="INFO">${random} = 6lgAnbod</msg>
<status status="PASS" endtime="20210108 18:31:22.068" starttime="20210108 18:31:22.067"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:31:22.072" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:31:22.072" starttime="20210108 18:31:22.071"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:31:22.073" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:31:22.073" starttime="20210108 18:31:22.072"></status>
</kw>
<status status="PASS" endtime="20210108 18:31:22.073" starttime="20210108 18:31:22.071"></status>
</kw>
<msg timestamp="20210108 18:31:22.073" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:31:22.073" starttime="20210108 18:31:22.070"></status>
</kw>
<status status="PASS" endtime="20210108 18:31:22.073" starttime="20210108 18:31:22.070"></status>
</kw>
<msg timestamp="20210108 18:31:22.074" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:31:22.074" starttime="20210108 18:31:22.069"></status>
</kw>
<msg timestamp="20210108 18:31:22.074" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:31:22.074" starttime="20210108 18:31:22.068"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:31:22.078" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:31:22.078" starttime="20210108 18:31:22.077"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:31:22.078" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:31:22.078" starttime="20210108 18:31:22.078"></status>
</kw>
<status status="PASS" endtime="20210108 18:31:22.079" starttime="20210108 18:31:22.076"></status>
</kw>
<msg timestamp="20210108 18:31:22.079" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:31:22.079" starttime="20210108 18:31:22.076"></status>
</kw>
<status status="PASS" endtime="20210108 18:31:22.079" starttime="20210108 18:31:22.075"></status>
</kw>
<msg timestamp="20210108 18:31:22.079" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210108 18:31:22.079" starttime="20210108 18:31:22.075"></status>
</kw>
<msg timestamp="20210108 18:31:22.079" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210108 18:31:22.079" starttime="20210108 18:31:22.074"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:31:22.083" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:31:22.083" starttime="20210108 18:31:22.083"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:31:22.084" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:31:22.084" starttime="20210108 18:31:22.083"></status>
</kw>
<status status="PASS" endtime="20210108 18:31:22.084" starttime="20210108 18:31:22.082"></status>
</kw>
<msg timestamp="20210108 18:31:22.084" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:31:22.084" starttime="20210108 18:31:22.082"></status>
</kw>
<status status="PASS" endtime="20210108 18:31:22.085" starttime="20210108 18:31:22.081"></status>
</kw>
<msg timestamp="20210108 18:31:22.085" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-6lgAnbod.txt</msg>
<status status="PASS" endtime="20210108 18:31:22.085" starttime="20210108 18:31:22.080"></status>
</kw>
<msg timestamp="20210108 18:31:22.085" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-6lgAnbod.txt</msg>
<status status="PASS" endtime="20210108 18:31:22.085" starttime="20210108 18:31:22.080"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:31:22.088" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-6lgAnbod.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:31:56.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:31:56.052" level="INFO">${output} = 2021-01-08 18:31:23 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2021-01-08 18:31:24 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210108 18:31:56.052" starttime="20210108 18:31:22.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:31:56.053" level="INFO">2021-01-08 18:31:23 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2021-01-08 18:31:24 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-08 18:31:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:31:24 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-08 18:31:24 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-08 18:31:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:31:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7349F0C903FD-&gt;4d35cc20-2671-4d37-96d0-e98419c54c59
2021-01-08 18:31:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 18:31:25 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-08 18:31:25 INFO  JobSubmitter:198 - number of splits:3
2021-01-08 18:31:25 INFO  JobSubmitter:287 - Submitting tokens for job: job_1610130527676_0002
2021-01-08 18:31:26 INFO  YarnClientImpl:273 - Submitted application application_1610130527676_0002
2021-01-08 18:31:26 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1610130527676_0002/
2021-01-08 18:31:26 INFO  Job:1339 - Running job: job_1610130527676_0002
2021-01-08 18:31:34 INFO  Job:1360 - Job job_1610130527676_0002 running in uber mode : false
2021-01-08 18:31:34 INFO  Job:1367 -  map 0% reduce 0%
2021-01-08 18:31:41 INFO  Job:1367 -  map 33% reduce 0%
2021-01-08 18:31:45 INFO  Job:1367 -  map 67% reduce 0%
2021-01-08 18:31:51 INFO  Job:1367 -  map 100% reduce 0%
2021-01-08 18:31:55 INFO  Job:1367 -  map 100% reduce 100%
2021-01-08 18:31:55 INFO  Job:1378 - Job job_1610130527676_0002 completed successfully
2021-01-08 18:31:55 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41752
		Total time spent by all reduces in occupied slots (ms)=14544
		Total time spent by all map tasks (ms)=10438
		Total time spent by all reduce tasks (ms)=3636
		Total vcore-milliseconds taken by all map tasks=10438
		Total vcore-milliseconds taken by all reduce tasks=3636
		Total megabyte-milliseconds taken by all map tasks=42754048
		Total megabyte-milliseconds taken by all reduce tasks=14893056
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=779
		CPU time spent (ms)=6630
		Physical memory (bytes) snapshot=1341333504
		Virtual memory (bytes) snapshot=15743090688
		Total committed heap usage (bytes)=1251999744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210108 18:31:56.054" starttime="20210108 18:31:56.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:31:56.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:31:56.055" starttime="20210108 18:31:56.054"></status>
</kw>
<status status="PASS" endtime="20210108 18:31:56.055" starttime="20210108 18:31:22.086"></status>
</kw>
<msg timestamp="20210108 18:31:56.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:31:56.055" starttime="20210108 18:31:22.086"></status>
</kw>
<msg timestamp="20210108 18:31:56.056" level="INFO">${output} = 2021-01-08 18:31:23 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2021-01-08 18:31:24 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210108 18:31:56.056" starttime="20210108 18:31:22.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210108 18:31:56.057" starttime="20210108 18:31:56.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 18:31:56.057" starttime="20210108 18:31:56.057"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 18:31:56.057" critical="yes" starttime="20210108 18:31:22.053"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210108 18:31:56.060" starttime="20210108 18:30:44.007"></status>
</suite>
<status status="PASS" elapsedtime="184405" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:34:31.209" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:34:34.000" level="INFO">${rc} = 255</msg>
<msg timestamp="20210108 18:34:34.000" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210108 18:34:34.000" starttime="20210108 18:34:31.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:34:34.001" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210108 18:34:34.001" starttime="20210108 18:34:34.001"></status>
</kw>
<msg timestamp="20210108 18:34:34.002" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210108 18:34:34.002" starttime="20210108 18:34:31.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:34:34.008" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:34:36.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:34:36.288" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:34:36.288" starttime="20210108 18:34:34.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:34:36.289" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:34:36.289" starttime="20210108 18:34:36.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:34:36.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:34:36.290" starttime="20210108 18:34:36.290"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:36.290" starttime="20210108 18:34:34.004"></status>
</kw>
<msg timestamp="20210108 18:34:36.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:34:36.291" starttime="20210108 18:34:34.004"></status>
</kw>
<msg timestamp="20210108 18:34:36.291" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210108 18:34:36.291" starttime="20210108 18:34:34.003"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210108 18:34:36.292" starttime="20210108 18:34:36.291"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:36.292" starttime="20210108 18:34:34.003"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:36.292" starttime="20210108 18:34:34.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:34:36.296" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:34:38.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:34:38.405" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:34:38.405" starttime="20210108 18:34:36.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:34:38.406" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:34:38.406" starttime="20210108 18:34:38.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:34:38.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:34:38.407" starttime="20210108 18:34:38.406"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:38.407" starttime="20210108 18:34:36.294"></status>
</kw>
<msg timestamp="20210108 18:34:38.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:34:38.407" starttime="20210108 18:34:36.294"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:38.408" starttime="20210108 18:34:36.293"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:38.408" starttime="20210108 18:34:36.292"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:38.408" starttime="20210108 18:34:36.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210108 18:34:38.409" starttime="20210108 18:34:38.408"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:34:38.413" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:34:40.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:34:40.822" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T18:34...</msg>
<status status="PASS" endtime="20210108 18:34:40.822" starttime="20210108 18:34:38.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:34:40.823" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T18:34:38.371Z",
  "modificationTime" : "2021-01-08T18:34:38.371Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210108 18:34:40.823" starttime="20210108 18:34:40.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:34:40.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:34:40.824" starttime="20210108 18:34:40.824"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:40.825" starttime="20210108 18:34:38.410"></status>
</kw>
<msg timestamp="20210108 18:34:40.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:34:40.825" starttime="20210108 18:34:38.409"></status>
</kw>
<msg timestamp="20210108 18:34:40.825" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T18:34...</msg>
<status status="PASS" endtime="20210108 18:34:40.825" starttime="20210108 18:34:38.409"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210108 18:34:40.826" starttime="20210108 18:34:40.825"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:34:40.830" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:34:40.830" starttime="20210108 18:34:40.829"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:34:40.830" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:34:40.830" starttime="20210108 18:34:40.830"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:40.831" starttime="20210108 18:34:40.829"></status>
</kw>
<msg timestamp="20210108 18:34:40.831" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:34:40.831" starttime="20210108 18:34:40.828"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:40.831" starttime="20210108 18:34:40.828"></status>
</kw>
<msg timestamp="20210108 18:34:40.831" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210108 18:34:40.832" starttime="20210108 18:34:40.827"></status>
</kw>
<msg timestamp="20210108 18:34:40.832" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210108 18:34:40.832" starttime="20210108 18:34:40.826"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:34:40.835" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:34:43.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:34:43.314" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:34:43.314" starttime="20210108 18:34:40.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:34:43.316" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:34:43.316" starttime="20210108 18:34:43.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:34:43.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:34:43.317" starttime="20210108 18:34:43.316"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:43.317" starttime="20210108 18:34:40.833"></status>
</kw>
<msg timestamp="20210108 18:34:43.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:34:43.317" starttime="20210108 18:34:40.832"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:43.317" starttime="20210108 18:34:40.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:34:43.321" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:34:48.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:34:48.837" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:34:48.837" starttime="20210108 18:34:43.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:34:48.838" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:34:48.838" starttime="20210108 18:34:48.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:34:48.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:34:48.839" starttime="20210108 18:34:48.838"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:48.840" starttime="20210108 18:34:43.319"></status>
</kw>
<msg timestamp="20210108 18:34:48.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:34:48.840" starttime="20210108 18:34:43.318"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:48.840" starttime="20210108 18:34:43.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:34:48.844" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:34:52.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:34:52.975" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:34:52.975" starttime="20210108 18:34:48.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:34:52.976" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:34:52.976" starttime="20210108 18:34:52.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:34:52.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:34:52.977" starttime="20210108 18:34:52.976"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:52.977" starttime="20210108 18:34:48.841"></status>
</kw>
<msg timestamp="20210108 18:34:52.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:34:52.977" starttime="20210108 18:34:48.841"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:52.977" starttime="20210108 18:34:48.840"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:34:52.982" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:34:57.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:34:57.219" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:34:57.219" starttime="20210108 18:34:52.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:34:57.220" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:34:57.220" starttime="20210108 18:34:57.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:34:57.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:34:57.221" starttime="20210108 18:34:57.220"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:57.221" starttime="20210108 18:34:52.979"></status>
</kw>
<msg timestamp="20210108 18:34:57.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:34:57.221" starttime="20210108 18:34:52.978"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:57.222" starttime="20210108 18:34:52.978"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 18:34:57.222" critical="yes" starttime="20210108 18:34:31.196"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:34:57.227" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:34:57.227" starttime="20210108 18:34:57.227"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:34:57.228" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:34:57.228" starttime="20210108 18:34:57.227"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:57.228" starttime="20210108 18:34:57.226"></status>
</kw>
<msg timestamp="20210108 18:34:57.228" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:34:57.228" starttime="20210108 18:34:57.225"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:57.229" starttime="20210108 18:34:57.225"></status>
</kw>
<msg timestamp="20210108 18:34:57.229" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210108 18:34:57.229" starttime="20210108 18:34:57.224"></status>
</kw>
<msg timestamp="20210108 18:34:57.229" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210108 18:34:57.229" starttime="20210108 18:34:57.223"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:34:57.234" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:34:59.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:34:59.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:34:59.559" starttime="20210108 18:34:57.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:34:59.560" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:34:59.560" starttime="20210108 18:34:59.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:34:59.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:34:59.561" starttime="20210108 18:34:59.560"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:59.561" starttime="20210108 18:34:57.230"></status>
</kw>
<msg timestamp="20210108 18:34:59.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:34:59.561" starttime="20210108 18:34:57.230"></status>
</kw>
<status status="PASS" endtime="20210108 18:34:59.562" starttime="20210108 18:34:57.229"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:34:59.565" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:35:01.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:35:01.943" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:35:01.943" starttime="20210108 18:34:59.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:35:01.944" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:35:01.944" starttime="20210108 18:35:01.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:35:01.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:35:01.945" starttime="20210108 18:35:01.944"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:01.945" starttime="20210108 18:34:59.563"></status>
</kw>
<msg timestamp="20210108 18:35:01.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:35:01.946" starttime="20210108 18:34:59.563"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:01.946" starttime="20210108 18:34:59.562"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 18:35:01.946" critical="yes" starttime="20210108 18:34:57.222"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210108 18:35:01.947" starttime="20210108 18:34:31.119"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:36:42.010" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:36:42.010" starttime="20210108 18:36:42.010"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:36:42.011" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:36:42.011" starttime="20210108 18:36:42.010"></status>
</kw>
<status status="PASS" endtime="20210108 18:36:42.011" starttime="20210108 18:36:42.009"></status>
</kw>
<msg timestamp="20210108 18:36:42.011" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:36:42.011" starttime="20210108 18:36:42.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:36:42.012" starttime="20210108 18:36:42.012"></status>
</kw>
<msg timestamp="20210108 18:36:42.013" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210108 18:36:42.013" starttime="20210108 18:36:42.012"></status>
</kw>
<status status="PASS" endtime="20210108 18:36:42.013" starttime="20210108 18:36:42.008"></status>
</kw>
<msg timestamp="20210108 18:36:42.013" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:36:42.013" starttime="20210108 18:36:42.007"></status>
</kw>
<msg timestamp="20210108 18:36:42.013" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:36:42.013" starttime="20210108 18:36:42.006"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:36:42.014" level="INFO">${random} = 12432</msg>
<status status="PASS" endtime="20210108 18:36:42.014" starttime="20210108 18:36:42.014"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:36:42.019" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-12432 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:36:45.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:36:45.528" level="INFO">${output} = 2021-01-08 18:36:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210108 18:36:45.528" starttime="20210108 18:36:42.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:36:45.530" level="INFO">2021-01-08 18:36:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:43 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-08 18:36:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:36:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:36:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 18:36:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:36:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-89CD60375498-&gt;45ad08f5-ffa4-412e-bc08-d35c445a51c4
2021-01-08 18:36:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 18:36:45 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210108 18:36:45.530" starttime="20210108 18:36:45.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:36:45.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:36:45.530" starttime="20210108 18:36:45.530"></status>
</kw>
<status status="PASS" endtime="20210108 18:36:45.531" starttime="20210108 18:36:42.015"></status>
</kw>
<msg timestamp="20210108 18:36:45.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:36:45.531" starttime="20210108 18:36:42.015"></status>
</kw>
<msg timestamp="20210108 18:36:45.531" level="INFO">${result} = 2021-01-08 18:36:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210108 18:36:45.531" starttime="20210108 18:36:42.014"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:36:45.536" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:36:47.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:36:47.463" level="INFO">${output} = 2021-01-08 18:36:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:47 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210108 18:36:47.463" starttime="20210108 18:36:45.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:36:47.464" level="INFO">2021-01-08 18:36:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:47 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:34 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-08 18:36 ofs://om/volume1/bucket1/ozone-12432
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-08 18:35 ofs://om/volume1/bucket1/ozone-84316
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:34 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:36 ofs://om/volume1/bucket1/wordcount-9FRYn66L.txt
2021-01-08 18:36:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210108 18:36:47.464" starttime="20210108 18:36:47.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:36:47.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:36:47.465" starttime="20210108 18:36:47.465"></status>
</kw>
<status status="PASS" endtime="20210108 18:36:47.466" starttime="20210108 18:36:45.533"></status>
</kw>
<msg timestamp="20210108 18:36:47.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:36:47.466" starttime="20210108 18:36:45.533"></status>
</kw>
<msg timestamp="20210108 18:36:47.466" level="INFO">${result} = 2021-01-08 18:36:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:47 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210108 18:36:47.466" starttime="20210108 18:36:45.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:36:47.468" starttime="20210108 18:36:47.467"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:36:47.468" critical="yes" starttime="20210108 18:36:42.006"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210108 18:36:47.469" starttime="20210108 18:36:41.944"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:35:06.787" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:35:06.787" starttime="20210108 18:35:06.786"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:35:06.787" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:35:06.787" starttime="20210108 18:35:06.787"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:06.788" starttime="20210108 18:35:06.786"></status>
</kw>
<msg timestamp="20210108 18:35:06.788" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:35:06.788" starttime="20210108 18:35:06.785"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:06.788" starttime="20210108 18:35:06.784"></status>
</kw>
<msg timestamp="20210108 18:35:06.788" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:35:06.788" starttime="20210108 18:35:06.784"></status>
</kw>
<msg timestamp="20210108 18:35:06.789" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:35:06.789" starttime="20210108 18:35:06.783"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:35:06.789" level="INFO">${random} = 84316</msg>
<status status="PASS" endtime="20210108 18:35:06.789" starttime="20210108 18:35:06.789"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:35:06.797" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-84316 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:35:10.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:35:10.474" level="INFO">${output} = 2021-01-08 18:35:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210108 18:35:10.474" starttime="20210108 18:35:06.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:35:10.475" level="INFO">2021-01-08 18:35:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:08 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-08 18:35:08 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:35:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:35:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 18:35:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:35:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-96B1FD975367-&gt;45ad08f5-ffa4-412e-bc08-d35c445a51c4
2021-01-08 18:35:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 18:35:10 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210108 18:35:10.475" starttime="20210108 18:35:10.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:35:10.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:35:10.476" starttime="20210108 18:35:10.475"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:10.476" starttime="20210108 18:35:06.790"></status>
</kw>
<msg timestamp="20210108 18:35:10.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:35:10.477" starttime="20210108 18:35:06.790"></status>
</kw>
<msg timestamp="20210108 18:35:10.477" level="INFO">${result} = 2021-01-08 18:35:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210108 18:35:10.477" starttime="20210108 18:35:06.789"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:35:10.482" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:35:12.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:35:12.408" level="INFO">${output} = 2021-01-08 18:35:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210108 18:35:12.408" starttime="20210108 18:35:10.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:35:12.409" level="INFO">2021-01-08 18:35:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:12 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:34 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-08 18:35 o3fs://bucket1.volume1.om/ozone-84316
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:34 o3fs://bucket1.volume1.om/user
2021-01-08 18:35:12 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210108 18:35:12.409" starttime="20210108 18:35:12.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:35:12.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:35:12.409" starttime="20210108 18:35:12.409"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:12.410" starttime="20210108 18:35:10.479"></status>
</kw>
<msg timestamp="20210108 18:35:12.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:35:12.410" starttime="20210108 18:35:10.478"></status>
</kw>
<msg timestamp="20210108 18:35:12.410" level="INFO">${result} = 2021-01-08 18:35:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210108 18:35:12.410" starttime="20210108 18:35:10.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:35:12.411" starttime="20210108 18:35:12.411"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:35:12.411" critical="yes" starttime="20210108 18:35:06.782"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210108 18:35:12.412" starttime="20210108 18:35:06.717"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:36:52.301" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:36:52.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:36:52.307" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:36:52.307" starttime="20210108 18:36:52.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:36:52.308" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:36:52.308" starttime="20210108 18:36:52.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:36:52.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:36:52.309" starttime="20210108 18:36:52.308"></status>
</kw>
<status status="PASS" endtime="20210108 18:36:52.309" starttime="20210108 18:36:52.297"></status>
</kw>
<msg timestamp="20210108 18:36:52.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:36:52.310" starttime="20210108 18:36:52.296"></status>
</kw>
<msg timestamp="20210108 18:36:52.310" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:36:52.310" starttime="20210108 18:36:52.296"></status>
</kw>
<msg timestamp="20210108 18:36:52.310" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:36:52.310" starttime="20210108 18:36:52.295"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:36:52.315" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:36:52.315" starttime="20210108 18:36:52.315"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:36:52.316" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:36:52.316" starttime="20210108 18:36:52.315"></status>
</kw>
<status status="PASS" endtime="20210108 18:36:52.316" starttime="20210108 18:36:52.313"></status>
</kw>
<msg timestamp="20210108 18:36:52.316" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:36:52.316" starttime="20210108 18:36:52.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:36:52.317" starttime="20210108 18:36:52.317"></status>
</kw>
<msg timestamp="20210108 18:36:52.317" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210108 18:36:52.317" starttime="20210108 18:36:52.316"></status>
</kw>
<status status="PASS" endtime="20210108 18:36:52.318" starttime="20210108 18:36:52.312"></status>
</kw>
<msg timestamp="20210108 18:36:52.318" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:36:52.318" starttime="20210108 18:36:52.311"></status>
</kw>
<msg timestamp="20210108 18:36:52.318" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:36:52.318" starttime="20210108 18:36:52.310"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:36:52.321" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:37:30.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:37:30.319" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:36:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36...</msg>
<status status="PASS" endtime="20210108 18:37:30.319" starttime="20210108 18:36:52.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:37:30.320" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:36:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:54 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-08 18:36:54 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:36:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:36:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 18:36:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:36:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0CCE7152764E-&gt;45ad08f5-ffa4-412e-bc08-d35c445a51c4
2021-01-08 18:36:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-08 18:36:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:55 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-01-08 18:36:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-08 18:36:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:56 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-08 18:36:56 INFO  JobSubmitter:202 - number of splits:3
2021-01-08 18:36:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1610130844194_0003
2021-01-08 18:36:58 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-08 18:36:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:59 INFO  Configuration:2752 - resource-types.xml not found
2021-01-08 18:36:59 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-08 18:36:59 INFO  YarnClientImpl:324 - Submitted application application_1610130844194_0003
2021-01-08 18:36:59 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1610130844194_0003/
2021-01-08 18:36:59 INFO  Job:1619 - Running job: job_1610130844194_0003
2021-01-08 18:37:07 INFO  Job:1640 - Job job_1610130844194_0003 running in uber mode : false
2021-01-08 18:37:07 INFO  Job:1647 -  map 0% reduce 0%
2021-01-08 18:37:13 INFO  Job:1647 -  map 33% reduce 0%
2021-01-08 18:37:19 INFO  Job:1647 -  map 67% reduce 0%
2021-01-08 18:37:24 INFO  Job:1647 -  map 100% reduce 0%
2021-01-08 18:37:28 INFO  Job:1647 -  map 100% reduce 100%
2021-01-08 18:37:29 INFO  Job:1658 - Job job_1610130844194_0003 completed successfully
2021-01-08 18:37:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:29 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016165
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40780
		Total time spent by all reduces in occupied slots (ms)=14912
		Total time spent by all map tasks (ms)=10195
		Total time spent by all reduce tasks (ms)=3728
		Total vcore-milliseconds taken by all map tasks=10195
		Total vcore-milliseconds taken by all reduce tasks=3728
		Total megabyte-milliseconds taken by all map tasks=41758720
		Total megabyte-milliseconds taken by all reduce tasks=15269888
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=560
		CPU time spent (ms)=6450
		Physical memory (bytes) snapshot=1212141568
		Virtual memory (bytes) snapshot=15776919552
		Total committed heap usage (bytes)=1080033280
		Peak Map Physical memory (bytes)=307453952
		Peak Map Virtual memory (bytes)=3942727680
		Peak Reduce Physical memory (bytes)=309284864
		Peak Reduce Virtual memory (bytes)=3965440000
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.228 seconds
2021-01-08 18:37:29 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-08 18:37:29 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210108 18:37:30.320" starttime="20210108 18:37:30.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:37:30.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:37:30.321" starttime="20210108 18:37:30.320"></status>
</kw>
<status status="PASS" endtime="20210108 18:37:30.321" starttime="20210108 18:36:52.319"></status>
</kw>
<msg timestamp="20210108 18:37:30.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:37:30.321" starttime="20210108 18:36:52.319"></status>
</kw>
<msg timestamp="20210108 18:37:30.322" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:36:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36...</msg>
<status status="PASS" endtime="20210108 18:37:30.322" starttime="20210108 18:36:52.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 18:37:30.323" starttime="20210108 18:37:30.322"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 18:37:30.323" critical="yes" starttime="20210108 18:36:52.294"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:37:30.329" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:37:30.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:37:30.335" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:37:30.335" starttime="20210108 18:37:30.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:37:30.336" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:37:30.336" starttime="20210108 18:37:30.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:37:30.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:37:30.337" starttime="20210108 18:37:30.337"></status>
</kw>
<status status="PASS" endtime="20210108 18:37:30.337" starttime="20210108 18:37:30.327"></status>
</kw>
<msg timestamp="20210108 18:37:30.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:37:30.338" starttime="20210108 18:37:30.326"></status>
</kw>
<msg timestamp="20210108 18:37:30.338" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:37:30.338" starttime="20210108 18:37:30.326"></status>
</kw>
<msg timestamp="20210108 18:37:30.338" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:37:30.338" starttime="20210108 18:37:30.326"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:37:30.339" level="INFO">${random} = SMJJKtfn</msg>
<status status="PASS" endtime="20210108 18:37:30.339" starttime="20210108 18:37:30.338"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:37:30.344" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:37:30.344" starttime="20210108 18:37:30.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:37:30.344" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:37:30.344" starttime="20210108 18:37:30.344"></status>
</kw>
<status status="PASS" endtime="20210108 18:37:30.344" starttime="20210108 18:37:30.343"></status>
</kw>
<msg timestamp="20210108 18:37:30.345" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:37:30.345" starttime="20210108 18:37:30.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:37:30.346" starttime="20210108 18:37:30.345"></status>
</kw>
<msg timestamp="20210108 18:37:30.346" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210108 18:37:30.346" starttime="20210108 18:37:30.345"></status>
</kw>
<status status="PASS" endtime="20210108 18:37:30.346" starttime="20210108 18:37:30.341"></status>
</kw>
<msg timestamp="20210108 18:37:30.346" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:37:30.347" starttime="20210108 18:37:30.340"></status>
</kw>
<msg timestamp="20210108 18:37:30.347" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:37:30.347" starttime="20210108 18:37:30.339"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:37:30.350" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:37:30.350" starttime="20210108 18:37:30.350"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:37:30.351" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:37:30.351" starttime="20210108 18:37:30.350"></status>
</kw>
<status status="PASS" endtime="20210108 18:37:30.353" starttime="20210108 18:37:30.349"></status>
</kw>
<msg timestamp="20210108 18:37:30.353" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:37:30.353" starttime="20210108 18:37:30.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:37:30.354" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210108 18:37:30.354" starttime="20210108 18:37:30.354"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:37:30.356" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210108 18:37:30.356" starttime="20210108 18:37:30.355"></status>
</kw>
<status status="PASS" endtime="20210108 18:37:30.357" starttime="20210108 18:37:30.354"></status>
</kw>
<msg timestamp="20210108 18:37:30.357" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210108 18:37:30.357" starttime="20210108 18:37:30.353"></status>
</kw>
<status status="PASS" endtime="20210108 18:37:30.358" starttime="20210108 18:37:30.348"></status>
</kw>
<msg timestamp="20210108 18:37:30.358" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210108 18:37:30.358" starttime="20210108 18:37:30.348"></status>
</kw>
<msg timestamp="20210108 18:37:30.358" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210108 18:37:30.358" starttime="20210108 18:37:30.347"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:37:30.362" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:37:30.362" starttime="20210108 18:37:30.361"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:37:30.362" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:37:30.363" starttime="20210108 18:37:30.362"></status>
</kw>
<status status="PASS" endtime="20210108 18:37:30.363" starttime="20210108 18:37:30.361"></status>
</kw>
<msg timestamp="20210108 18:37:30.363" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:37:30.363" starttime="20210108 18:37:30.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:37:30.364" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210108 18:37:30.364" starttime="20210108 18:37:30.364"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:37:30.365" level="INFO">${result} = /wordcount-SMJJKtfn.txt</msg>
<status status="PASS" endtime="20210108 18:37:30.365" starttime="20210108 18:37:30.365"></status>
</kw>
<status status="PASS" endtime="20210108 18:37:30.365" starttime="20210108 18:37:30.363"></status>
</kw>
<msg timestamp="20210108 18:37:30.366" level="INFO">${path_with_leading} = /wordcount-SMJJKtfn.txt</msg>
<status status="PASS" endtime="20210108 18:37:30.366" starttime="20210108 18:37:30.363"></status>
</kw>
<status status="PASS" endtime="20210108 18:37:30.366" starttime="20210108 18:37:30.360"></status>
</kw>
<msg timestamp="20210108 18:37:30.366" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-SMJJKtfn.txt</msg>
<status status="PASS" endtime="20210108 18:37:30.366" starttime="20210108 18:37:30.359"></status>
</kw>
<msg timestamp="20210108 18:37:30.366" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-SMJJKtfn.txt</msg>
<status status="PASS" endtime="20210108 18:37:30.366" starttime="20210108 18:37:30.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:37:30.370" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-SMJJKtfn.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:38:05.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:38:05.746" level="INFO">${output} = 2021-01-08 18:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210108 18:38:05.747" starttime="20210108 18:37:30.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:38:05.748" level="INFO">2021-01-08 18:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-01-08 18:37:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-08 18:37:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:32 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-08 18:37:32 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:37:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:37:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 18:37:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:37:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A87A59AECBB7-&gt;45ad08f5-ffa4-412e-bc08-d35c445a51c4
2021-01-08 18:37:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 18:37:33 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-08 18:37:34 INFO  JobSubmitter:202 - number of splits:3
2021-01-08 18:37:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1610130844194_0004
2021-01-08 18:37:34 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-08 18:37:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:34 INFO  Configuration:2752 - resource-types.xml not found
2021-01-08 18:37:34 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-08 18:37:34 INFO  YarnClientImpl:324 - Submitted application application_1610130844194_0004
2021-01-08 18:37:34 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1610130844194_0004/
2021-01-08 18:37:34 INFO  Job:1619 - Running job: job_1610130844194_0004
2021-01-08 18:37:43 INFO  Job:1640 - Job job_1610130844194_0004 running in uber mode : false
2021-01-08 18:37:43 INFO  Job:1647 -  map 0% reduce 0%
2021-01-08 18:37:49 INFO  Job:1647 -  map 33% reduce 0%
2021-01-08 18:37:54 INFO  Job:1647 -  map 67% reduce 0%
2021-01-08 18:38:00 INFO  Job:1647 -  map 100% reduce 0%
2021-01-08 18:38:04 INFO  Job:1647 -  map 100% reduce 100%
2021-01-08 18:38:05 INFO  Job:1658 - Job job_1610130844194_0004 completed successfully
2021-01-08 18:38:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:38:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078831
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40876
		Total time spent by all reduces in occupied slots (ms)=14944
		Total time spent by all map tasks (ms)=10219
		Total time spent by all reduce tasks (ms)=3736
		Total vcore-milliseconds taken by all map tasks=10219
		Total vcore-milliseconds taken by all reduce tasks=3736
		Total megabyte-milliseconds taken by all map tasks=41857024
		Total megabyte-milliseconds taken by all reduce tasks=15302656
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=549
		CPU time spent (ms)=6880
		Physical memory (bytes) snapshot=1228632064
		Virtual memory (bytes) snapshot=15791423488
		Total committed heap usage (bytes)=1068498944
		Peak Map Physical memory (bytes)=316542976
		Peak Map Virtual memory (bytes)=3947831296
		Peak Reduce Physical memory (bytes)=313069568
		Peak Reduce Virtual memory (bytes)=3971547136
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-08 18:38:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210108 18:38:05.748" starttime="20210108 18:38:05.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:38:05.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:38:05.749" starttime="20210108 18:38:05.748"></status>
</kw>
<status status="PASS" endtime="20210108 18:38:05.749" starttime="20210108 18:37:30.367"></status>
</kw>
<msg timestamp="20210108 18:38:05.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:38:05.749" starttime="20210108 18:37:30.367"></status>
</kw>
<msg timestamp="20210108 18:38:05.750" level="INFO">${output} = 2021-01-08 18:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:37:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210108 18:38:05.750" starttime="20210108 18:37:30.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210108 18:38:05.750" starttime="20210108 18:38:05.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 18:38:05.751" starttime="20210108 18:38:05.751"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 18:38:05.752" critical="yes" starttime="20210108 18:37:30.325"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210108 18:38:05.753" starttime="20210108 18:36:52.229"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:35:17.253" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:35:17.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:35:17.258" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:35:17.258" starttime="20210108 18:35:17.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:35:17.259" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:35:17.259" starttime="20210108 18:35:17.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:35:17.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:35:17.260" starttime="20210108 18:35:17.259"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:17.260" starttime="20210108 18:35:17.249"></status>
</kw>
<msg timestamp="20210108 18:35:17.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:35:17.260" starttime="20210108 18:35:17.248"></status>
</kw>
<msg timestamp="20210108 18:35:17.261" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:35:17.261" starttime="20210108 18:35:17.248"></status>
</kw>
<msg timestamp="20210108 18:35:17.261" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:35:17.261" starttime="20210108 18:35:17.247"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:35:17.266" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:35:17.266" starttime="20210108 18:35:17.265"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:35:17.266" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:35:17.266" starttime="20210108 18:35:17.266"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:17.266" starttime="20210108 18:35:17.264"></status>
</kw>
<msg timestamp="20210108 18:35:17.267" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:35:17.267" starttime="20210108 18:35:17.263"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:17.267" starttime="20210108 18:35:17.263"></status>
</kw>
<msg timestamp="20210108 18:35:17.267" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:35:17.267" starttime="20210108 18:35:17.262"></status>
</kw>
<msg timestamp="20210108 18:35:17.267" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:35:17.267" starttime="20210108 18:35:17.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:35:17.270" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:35:59.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:35:59.434" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:35:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35...</msg>
<status status="PASS" endtime="20210108 18:35:59.434" starttime="20210108 18:35:17.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:35:59.436" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:35:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:19 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-08 18:35:19 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:35:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:35:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 18:35:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:35:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-16F80BEA6E1D-&gt;45ad08f5-ffa4-412e-bc08-d35c445a51c4
2021-01-08 18:35:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-08 18:35:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:21 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-01-08 18:35:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:21 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-08 18:35:24 INFO  JobSubmitter:202 - number of splits:3
2021-01-08 18:35:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1610130844194_0001
2021-01-08 18:35:24 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-08 18:35:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:24 INFO  Configuration:2752 - resource-types.xml not found
2021-01-08 18:35:24 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-08 18:35:25 INFO  YarnClientImpl:324 - Submitted application application_1610130844194_0001
2021-01-08 18:35:25 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1610130844194_0001/
2021-01-08 18:35:25 INFO  Job:1619 - Running job: job_1610130844194_0001
2021-01-08 18:35:35 INFO  Job:1640 - Job job_1610130844194_0001 running in uber mode : false
2021-01-08 18:35:35 INFO  Job:1647 -  map 0% reduce 0%
2021-01-08 18:35:41 INFO  Job:1647 -  map 33% reduce 0%
2021-01-08 18:35:47 INFO  Job:1647 -  map 67% reduce 0%
2021-01-08 18:35:52 INFO  Job:1647 -  map 100% reduce 0%
2021-01-08 18:35:57 INFO  Job:1647 -  map 100% reduce 100%
2021-01-08 18:35:58 INFO  Job:1658 - Job job_1610130844194_0001 completed successfully
2021-01-08 18:35:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:58 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016369
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42364
		Total time spent by all reduces in occupied slots (ms)=14768
		Total time spent by all map tasks (ms)=10591
		Total time spent by all reduce tasks (ms)=3692
		Total vcore-milliseconds taken by all map tasks=10591
		Total vcore-milliseconds taken by all reduce tasks=3692
		Total megabyte-milliseconds taken by all map tasks=43380736
		Total megabyte-milliseconds taken by all reduce tasks=15122432
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=615
		CPU time spent (ms)=6990
		Physical memory (bytes) snapshot=1430142976
		Virtual memory (bytes) snapshot=15806955520
		Total committed heap usage (bytes)=1174929408
		Peak Map Physical memory (bytes)=397713408
		Peak Map Virtual memory (bytes)=3947323392
		Peak Reduce Physical memory (bytes)=322207744
		Peak Reduce Virtual memory (bytes)=3968110592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.799 seconds
2021-01-08 18:35:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:58 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-08 18:35:59 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210108 18:35:59.436" starttime="20210108 18:35:59.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:35:59.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:35:59.437" starttime="20210108 18:35:59.436"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:59.437" starttime="20210108 18:35:17.268"></status>
</kw>
<msg timestamp="20210108 18:35:59.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:35:59.437" starttime="20210108 18:35:17.268"></status>
</kw>
<msg timestamp="20210108 18:35:59.438" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:35:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:35...</msg>
<status status="PASS" endtime="20210108 18:35:59.438" starttime="20210108 18:35:17.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 18:35:59.438" starttime="20210108 18:35:59.438"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 18:35:59.439" critical="yes" starttime="20210108 18:35:17.246"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:35:59.444" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:35:59.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:35:59.449" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:35:59.449" starttime="20210108 18:35:59.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:35:59.450" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:35:59.450" starttime="20210108 18:35:59.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:35:59.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:35:59.451" starttime="20210108 18:35:59.451"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:59.452" starttime="20210108 18:35:59.441"></status>
</kw>
<msg timestamp="20210108 18:35:59.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:35:59.452" starttime="20210108 18:35:59.441"></status>
</kw>
<msg timestamp="20210108 18:35:59.452" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:35:59.452" starttime="20210108 18:35:59.440"></status>
</kw>
<msg timestamp="20210108 18:35:59.452" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210108 18:35:59.452" starttime="20210108 18:35:59.440"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:35:59.453" level="INFO">${random} = 9FRYn66L</msg>
<status status="PASS" endtime="20210108 18:35:59.453" starttime="20210108 18:35:59.453"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:35:59.457" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:35:59.457" starttime="20210108 18:35:59.457"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:35:59.458" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:35:59.458" starttime="20210108 18:35:59.457"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:59.458" starttime="20210108 18:35:59.456"></status>
</kw>
<msg timestamp="20210108 18:35:59.458" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:35:59.458" starttime="20210108 18:35:59.455"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:59.459" starttime="20210108 18:35:59.455"></status>
</kw>
<msg timestamp="20210108 18:35:59.459" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:35:59.459" starttime="20210108 18:35:59.454"></status>
</kw>
<msg timestamp="20210108 18:35:59.459" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:35:59.459" starttime="20210108 18:35:59.453"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:35:59.463" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:35:59.463" starttime="20210108 18:35:59.463"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:35:59.464" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:35:59.464" starttime="20210108 18:35:59.463"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:59.464" starttime="20210108 18:35:59.462"></status>
</kw>
<msg timestamp="20210108 18:35:59.464" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:35:59.464" starttime="20210108 18:35:59.462"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:59.465" starttime="20210108 18:35:59.461"></status>
</kw>
<msg timestamp="20210108 18:35:59.465" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210108 18:35:59.465" starttime="20210108 18:35:59.460"></status>
</kw>
<msg timestamp="20210108 18:35:59.465" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210108 18:35:59.465" starttime="20210108 18:35:59.459"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:35:59.469" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:35:59.469" starttime="20210108 18:35:59.468"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:35:59.470" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:35:59.470" starttime="20210108 18:35:59.469"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:59.470" starttime="20210108 18:35:59.468"></status>
</kw>
<msg timestamp="20210108 18:35:59.470" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:35:59.470" starttime="20210108 18:35:59.467"></status>
</kw>
<status status="PASS" endtime="20210108 18:35:59.470" starttime="20210108 18:35:59.467"></status>
</kw>
<msg timestamp="20210108 18:35:59.471" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-9FRYn66L.txt</msg>
<status status="PASS" endtime="20210108 18:35:59.471" starttime="20210108 18:35:59.466"></status>
</kw>
<msg timestamp="20210108 18:35:59.471" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-9FRYn66L.txt</msg>
<status status="PASS" endtime="20210108 18:35:59.471" starttime="20210108 18:35:59.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:35:59.474" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-9FRYn66L.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:36:37.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:36:37.109" level="INFO">${output} = 2021-01-08 18:36:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210108 18:36:37.109" starttime="20210108 18:35:59.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:36:37.110" level="INFO">2021-01-08 18:36:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-01-08 18:36:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-08 18:36:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:01 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-08 18:36:01 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-08 18:36:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:36:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 18:36:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:36:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7A1C9E45C211-&gt;45ad08f5-ffa4-412e-bc08-d35c445a51c4
2021-01-08 18:36:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 18:36:03 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-08 18:36:03 INFO  JobSubmitter:202 - number of splits:3
2021-01-08 18:36:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1610130844194_0002
2021-01-08 18:36:05 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-08 18:36:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:06 INFO  Configuration:2752 - resource-types.xml not found
2021-01-08 18:36:06 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-08 18:36:06 INFO  YarnClientImpl:324 - Submitted application application_1610130844194_0002
2021-01-08 18:36:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1610130844194_0002/
2021-01-08 18:36:06 INFO  Job:1619 - Running job: job_1610130844194_0002
2021-01-08 18:36:13 INFO  Job:1640 - Job job_1610130844194_0002 running in uber mode : false
2021-01-08 18:36:13 INFO  Job:1647 -  map 0% reduce 0%
2021-01-08 18:36:20 INFO  Job:1647 -  map 33% reduce 0%
2021-01-08 18:36:26 INFO  Job:1647 -  map 67% reduce 0%
2021-01-08 18:36:31 INFO  Job:1647 -  map 100% reduce 0%
2021-01-08 18:36:35 INFO  Job:1647 -  map 100% reduce 100%
2021-01-08 18:36:36 INFO  Job:1658 - Job job_1610130844194_0002 completed successfully
2021-01-08 18:36:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078915
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40908
		Total time spent by all reduces in occupied slots (ms)=15292
		Total time spent by all map tasks (ms)=10227
		Total time spent by all reduce tasks (ms)=3823
		Total vcore-milliseconds taken by all map tasks=10227
		Total vcore-milliseconds taken by all reduce tasks=3823
		Total megabyte-milliseconds taken by all map tasks=41889792
		Total megabyte-milliseconds taken by all reduce tasks=15659008
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=545
		CPU time spent (ms)=6550
		Physical memory (bytes) snapshot=1234571264
		Virtual memory (bytes) snapshot=15786491904
		Total committed heap usage (bytes)=1067974656
		Peak Map Physical memory (bytes)=316690432
		Peak Map Virtual memory (bytes)=3945947136
		Peak Reduce Physical memory (bytes)=310018048
		Peak Reduce Virtual memory (bytes)=3971153920
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-08 18:36:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210108 18:36:37.110" starttime="20210108 18:36:37.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:36:37.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:36:37.111" starttime="20210108 18:36:37.110"></status>
</kw>
<status status="PASS" endtime="20210108 18:36:37.111" starttime="20210108 18:35:59.472"></status>
</kw>
<msg timestamp="20210108 18:36:37.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:36:37.112" starttime="20210108 18:35:59.472"></status>
</kw>
<msg timestamp="20210108 18:36:37.112" level="INFO">${output} = 2021-01-08 18:36:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-08 18:36:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210108 18:36:37.112" starttime="20210108 18:35:59.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210108 18:36:37.113" starttime="20210108 18:36:37.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 18:36:37.113" starttime="20210108 18:36:37.113"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 18:36:37.113" critical="yes" starttime="20210108 18:35:59.439"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210108 18:36:37.115" starttime="20210108 18:35:17.171"></status>
</suite>
<status status="PASS" elapsedtime="195516" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:39:16.707" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:39:40.804" level="INFO">${rc} = 255</msg>
<msg timestamp="20210108 18:39:40.804" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210108 18:39:40.804" starttime="20210108 18:39:16.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:39:40.805" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210108 18:39:40.805" starttime="20210108 18:39:40.804"></status>
</kw>
<msg timestamp="20210108 18:39:40.805" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210108 18:39:40.805" starttime="20210108 18:39:16.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:39:40.811" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:39:44.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:39:44.430" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:39:44.430" starttime="20210108 18:39:40.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:39:44.431" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:39:44.431" starttime="20210108 18:39:44.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:39:44.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:39:44.432" starttime="20210108 18:39:44.431"></status>
</kw>
<status status="PASS" endtime="20210108 18:39:44.432" starttime="20210108 18:39:40.808"></status>
</kw>
<msg timestamp="20210108 18:39:44.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:39:44.433" starttime="20210108 18:39:40.807"></status>
</kw>
<msg timestamp="20210108 18:39:44.433" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210108 18:39:44.433" starttime="20210108 18:39:40.807"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210108 18:39:44.433" starttime="20210108 18:39:44.433"></status>
</kw>
<status status="PASS" endtime="20210108 18:39:44.434" starttime="20210108 18:39:40.806"></status>
</kw>
<status status="PASS" endtime="20210108 18:39:44.434" starttime="20210108 18:39:40.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:39:44.438" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:39:47.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:39:47.694" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:39:47.694" starttime="20210108 18:39:44.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:39:47.695" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:39:47.695" starttime="20210108 18:39:47.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:39:47.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:39:47.696" starttime="20210108 18:39:47.696"></status>
</kw>
<status status="PASS" endtime="20210108 18:39:47.696" starttime="20210108 18:39:44.436"></status>
</kw>
<msg timestamp="20210108 18:39:47.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:39:47.697" starttime="20210108 18:39:44.435"></status>
</kw>
<status status="PASS" endtime="20210108 18:39:47.697" starttime="20210108 18:39:44.435"></status>
</kw>
<status status="PASS" endtime="20210108 18:39:47.697" starttime="20210108 18:39:44.434"></status>
</kw>
<status status="PASS" endtime="20210108 18:39:47.697" starttime="20210108 18:39:44.434"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210108 18:39:47.698" starttime="20210108 18:39:47.697"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:39:47.702" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:39:51.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:39:51.161" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T18:39...</msg>
<status status="PASS" endtime="20210108 18:39:51.161" starttime="20210108 18:39:47.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:39:51.162" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T18:39:47.413Z",
  "modificationTime" : "2021-01-08T18:39:47.413Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210108 18:39:51.162" starttime="20210108 18:39:51.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:39:51.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:39:51.163" starttime="20210108 18:39:51.162"></status>
</kw>
<status status="PASS" endtime="20210108 18:39:51.163" starttime="20210108 18:39:47.699"></status>
</kw>
<msg timestamp="20210108 18:39:51.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:39:51.163" starttime="20210108 18:39:47.699"></status>
</kw>
<msg timestamp="20210108 18:39:51.164" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T18:39...</msg>
<status status="PASS" endtime="20210108 18:39:51.164" starttime="20210108 18:39:47.698"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210108 18:39:51.164" starttime="20210108 18:39:51.164"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:39:51.169" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:39:51.169" starttime="20210108 18:39:51.168"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:39:51.169" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:39:51.169" starttime="20210108 18:39:51.169"></status>
</kw>
<status status="PASS" endtime="20210108 18:39:51.170" starttime="20210108 18:39:51.167"></status>
</kw>
<msg timestamp="20210108 18:39:51.170" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:39:51.170" starttime="20210108 18:39:51.167"></status>
</kw>
<status status="PASS" endtime="20210108 18:39:51.170" starttime="20210108 18:39:51.166"></status>
</kw>
<msg timestamp="20210108 18:39:51.170" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210108 18:39:51.170" starttime="20210108 18:39:51.165"></status>
</kw>
<msg timestamp="20210108 18:39:51.170" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210108 18:39:51.171" starttime="20210108 18:39:51.164"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:39:51.174" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:39:54.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:39:54.487" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:39:54.487" starttime="20210108 18:39:51.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:39:54.488" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:39:54.489" starttime="20210108 18:39:54.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:39:54.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:39:54.489" starttime="20210108 18:39:54.489"></status>
</kw>
<status status="PASS" endtime="20210108 18:39:54.490" starttime="20210108 18:39:51.171"></status>
</kw>
<msg timestamp="20210108 18:39:54.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:39:54.490" starttime="20210108 18:39:51.171"></status>
</kw>
<status status="PASS" endtime="20210108 18:39:54.490" starttime="20210108 18:39:51.171"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:39:54.494" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:40:02.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:40:02.035" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:40:02.035" starttime="20210108 18:39:54.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:40:02.036" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:40:02.036" starttime="20210108 18:40:02.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:40:02.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:40:02.037" starttime="20210108 18:40:02.036"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:02.038" starttime="20210108 18:39:54.491"></status>
</kw>
<msg timestamp="20210108 18:40:02.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:40:02.038" starttime="20210108 18:39:54.491"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:02.039" starttime="20210108 18:39:54.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:40:02.047" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:40:07.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:40:07.338" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:40:07.338" starttime="20210108 18:40:02.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:40:07.340" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:40:07.340" starttime="20210108 18:40:07.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:40:07.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:40:07.341" starttime="20210108 18:40:07.340"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:07.341" starttime="20210108 18:40:02.043"></status>
</kw>
<msg timestamp="20210108 18:40:07.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:40:07.341" starttime="20210108 18:40:02.042"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:07.342" starttime="20210108 18:40:02.039"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:40:07.345" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:40:12.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:40:12.497" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:40:12.497" starttime="20210108 18:40:07.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:40:12.498" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:40:12.498" starttime="20210108 18:40:12.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:40:12.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:40:12.499" starttime="20210108 18:40:12.498"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:12.499" starttime="20210108 18:40:07.343"></status>
</kw>
<msg timestamp="20210108 18:40:12.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:40:12.499" starttime="20210108 18:40:07.342"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:12.500" starttime="20210108 18:40:07.342"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 18:40:12.501" critical="yes" starttime="20210108 18:39:16.700"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:40:12.506" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:40:12.506" starttime="20210108 18:40:12.506"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:40:12.507" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:40:12.507" starttime="20210108 18:40:12.506"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:12.507" starttime="20210108 18:40:12.505"></status>
</kw>
<msg timestamp="20210108 18:40:12.507" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:40:12.507" starttime="20210108 18:40:12.504"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:12.507" starttime="20210108 18:40:12.504"></status>
</kw>
<msg timestamp="20210108 18:40:12.507" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210108 18:40:12.507" starttime="20210108 18:40:12.503"></status>
</kw>
<msg timestamp="20210108 18:40:12.508" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210108 18:40:12.508" starttime="20210108 18:40:12.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:40:12.511" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:40:15.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:40:15.581" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:40:15.581" starttime="20210108 18:40:12.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:40:15.582" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:40:15.582" starttime="20210108 18:40:15.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:40:15.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:40:15.583" starttime="20210108 18:40:15.582"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:15.583" starttime="20210108 18:40:12.509"></status>
</kw>
<msg timestamp="20210108 18:40:15.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:40:15.584" starttime="20210108 18:40:12.508"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:15.584" starttime="20210108 18:40:12.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:40:15.590" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:40:18.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:40:18.614" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:40:18.614" starttime="20210108 18:40:15.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:40:18.616" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:40:18.616" starttime="20210108 18:40:18.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:40:18.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:40:18.617" starttime="20210108 18:40:18.616"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:18.617" starttime="20210108 18:40:15.587"></status>
</kw>
<msg timestamp="20210108 18:40:18.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:40:18.617" starttime="20210108 18:40:15.585"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:18.618" starttime="20210108 18:40:15.584"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 18:40:18.618" critical="yes" starttime="20210108 18:40:12.501"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210108 18:40:18.619" starttime="20210108 18:39:16.632"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:42:08.198" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:42:08.198" starttime="20210108 18:42:08.197"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:42:08.198" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:42:08.198" starttime="20210108 18:42:08.198"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:08.199" starttime="20210108 18:42:08.197"></status>
</kw>
<msg timestamp="20210108 18:42:08.199" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:42:08.199" starttime="20210108 18:42:08.196"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:42:08.200" starttime="20210108 18:42:08.200"></status>
</kw>
<msg timestamp="20210108 18:42:08.200" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210108 18:42:08.200" starttime="20210108 18:42:08.199"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:08.201" starttime="20210108 18:42:08.195"></status>
</kw>
<msg timestamp="20210108 18:42:08.201" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:42:08.201" starttime="20210108 18:42:08.195"></status>
</kw>
<msg timestamp="20210108 18:42:08.201" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:42:08.201" starttime="20210108 18:42:08.194"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:42:08.201" level="INFO">${random} = 29474</msg>
<status status="PASS" endtime="20210108 18:42:08.202" starttime="20210108 18:42:08.201"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:42:08.206" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-29474 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:42:11.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:42:11.658" level="INFO">${output} = 2021-01-08 18:42:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:42:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210108 18:42:11.658" starttime="20210108 18:42:08.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:42:11.659" level="INFO">2021-01-08 18:42:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:42:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:42:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 18:42:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:42:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7E339041F8FA-&gt;5edfab21-0720-45c1-938c-b9fbe0a8462b
2021-01-08 18:42:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210108 18:42:11.659" starttime="20210108 18:42:11.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:42:11.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:42:11.660" starttime="20210108 18:42:11.659"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:11.660" starttime="20210108 18:42:08.203"></status>
</kw>
<msg timestamp="20210108 18:42:11.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:42:11.661" starttime="20210108 18:42:08.202"></status>
</kw>
<msg timestamp="20210108 18:42:11.661" level="INFO">${result} = 2021-01-08 18:42:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:42:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210108 18:42:11.661" starttime="20210108 18:42:08.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:42:11.665" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:42:13.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:42:13.524" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:39 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 18:42 ofs://om/volume1/bucket1/ozone-29474
-rw-...</msg>
<status status="PASS" endtime="20210108 18:42:13.524" starttime="20210108 18:42:11.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:42:13.525" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:39 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 18:42 ofs://om/volume1/bucket1/ozone-29474
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 18:40 ofs://om/volume1/bucket1/ozone-97449
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:40 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:41 ofs://om/volume1/bucket1/wordcount-xjEj6ZXW.txt</msg>
<status status="PASS" endtime="20210108 18:42:13.525" starttime="20210108 18:42:13.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:42:13.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:42:13.526" starttime="20210108 18:42:13.526"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:13.527" starttime="20210108 18:42:11.663"></status>
</kw>
<msg timestamp="20210108 18:42:13.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:42:13.527" starttime="20210108 18:42:11.663"></status>
</kw>
<msg timestamp="20210108 18:42:13.527" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:39 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 18:42 ofs://om/volume1/bucket1/ozone-29474
-rw-...</msg>
<status status="PASS" endtime="20210108 18:42:13.527" starttime="20210108 18:42:11.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:42:13.528" starttime="20210108 18:42:13.527"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:42:13.528" critical="yes" starttime="20210108 18:42:08.193"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210108 18:42:13.529" starttime="20210108 18:42:08.131"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:40:23.246" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:40:23.246" starttime="20210108 18:40:23.245"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:40:23.247" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:40:23.247" starttime="20210108 18:40:23.246"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:23.247" starttime="20210108 18:40:23.244"></status>
</kw>
<msg timestamp="20210108 18:40:23.247" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:40:23.247" starttime="20210108 18:40:23.244"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:23.247" starttime="20210108 18:40:23.243"></status>
</kw>
<msg timestamp="20210108 18:40:23.247" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:40:23.247" starttime="20210108 18:40:23.242"></status>
</kw>
<msg timestamp="20210108 18:40:23.248" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:40:23.248" starttime="20210108 18:40:23.241"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:40:23.248" level="INFO">${random} = 97449</msg>
<status status="PASS" endtime="20210108 18:40:23.248" starttime="20210108 18:40:23.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:40:23.253" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-97449 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:40:27.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:40:27.162" level="INFO">${output} = 2021-01-08 18:40:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:40:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210108 18:40:27.163" starttime="20210108 18:40:23.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:40:27.164" level="INFO">2021-01-08 18:40:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:40:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:40:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 18:40:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:40:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5227E61D9D8F-&gt;5edfab21-0720-45c1-938c-b9fbe0a8462b
2021-01-08 18:40:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210108 18:40:27.164" starttime="20210108 18:40:27.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:40:27.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:40:27.165" starttime="20210108 18:40:27.164"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:27.165" starttime="20210108 18:40:23.249"></status>
</kw>
<msg timestamp="20210108 18:40:27.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:40:27.165" starttime="20210108 18:40:23.249"></status>
</kw>
<msg timestamp="20210108 18:40:27.165" level="INFO">${result} = 2021-01-08 18:40:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:40:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210108 18:40:27.165" starttime="20210108 18:40:23.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:40:27.171" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:40:28.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:40:28.917" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:39 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 18:40 o3fs://bucket1.volume1.om/ozone-97449
dr...</msg>
<status status="PASS" endtime="20210108 18:40:28.917" starttime="20210108 18:40:27.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:40:28.918" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:39 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 18:40 o3fs://bucket1.volume1.om/ozone-97449
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:40 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210108 18:40:28.919" starttime="20210108 18:40:28.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:40:28.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:40:28.919" starttime="20210108 18:40:28.919"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:28.920" starttime="20210108 18:40:27.168"></status>
</kw>
<msg timestamp="20210108 18:40:28.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:40:28.920" starttime="20210108 18:40:27.167"></status>
</kw>
<msg timestamp="20210108 18:40:28.920" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 18:39 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 18:40 o3fs://bucket1.volume1.om/ozone-97449
dr...</msg>
<status status="PASS" endtime="20210108 18:40:28.920" starttime="20210108 18:40:27.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:40:28.921" starttime="20210108 18:40:28.920"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:40:28.921" critical="yes" starttime="20210108 18:40:23.241"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210108 18:40:28.922" starttime="20210108 18:40:23.172"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:42:18.162" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:42:18.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:42:18.174" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:42:18.174" starttime="20210108 18:42:18.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:42:18.175" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:42:18.175" starttime="20210108 18:42:18.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:42:18.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:42:18.175" starttime="20210108 18:42:18.175"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:18.176" starttime="20210108 18:42:18.159"></status>
</kw>
<msg timestamp="20210108 18:42:18.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:42:18.176" starttime="20210108 18:42:18.158"></status>
</kw>
<msg timestamp="20210108 18:42:18.176" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:42:18.176" starttime="20210108 18:42:18.158"></status>
</kw>
<msg timestamp="20210108 18:42:18.176" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:42:18.176" starttime="20210108 18:42:18.157"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:42:18.182" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:42:18.182" starttime="20210108 18:42:18.181"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:42:18.183" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:42:18.183" starttime="20210108 18:42:18.182"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:18.183" starttime="20210108 18:42:18.180"></status>
</kw>
<msg timestamp="20210108 18:42:18.183" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:42:18.183" starttime="20210108 18:42:18.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:42:18.184" starttime="20210108 18:42:18.184"></status>
</kw>
<msg timestamp="20210108 18:42:18.184" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210108 18:42:18.184" starttime="20210108 18:42:18.183"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:18.185" starttime="20210108 18:42:18.178"></status>
</kw>
<msg timestamp="20210108 18:42:18.185" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:42:18.185" starttime="20210108 18:42:18.177"></status>
</kw>
<msg timestamp="20210108 18:42:18.185" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:42:18.185" starttime="20210108 18:42:18.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:42:18.188" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:42:56.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:42:56.009" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:42:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:42:20 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210108 18:42:56.009" starttime="20210108 18:42:18.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:42:56.011" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:42:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:42:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:42:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 18:42:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:42:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B65230CB29C3-&gt;5edfab21-0720-45c1-938c-b9fbe0a8462b
2021-01-08 18:42:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-08 18:42:21 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-08 18:42:21 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-08 18:42:22 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-08 18:42:22 INFO  JobSubmitter:202 - number of splits:3
2021-01-08 18:42:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1610131130356_0003
2021-01-08 18:42:22 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-08 18:42:22 INFO  Configuration:2795 - resource-types.xml not found
2021-01-08 18:42:22 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-08 18:42:22 INFO  YarnClientImpl:329 - Submitted application application_1610131130356_0003
2021-01-08 18:42:22 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1610131130356_0003/
2021-01-08 18:42:22 INFO  Job:1619 - Running job: job_1610131130356_0003
2021-01-08 18:42:31 INFO  Job:1640 - Job job_1610131130356_0003 running in uber mode : false
2021-01-08 18:42:31 INFO  Job:1647 -  map 0% reduce 0%
2021-01-08 18:42:37 INFO  Job:1647 -  map 33% reduce 0%
2021-01-08 18:42:43 INFO  Job:1647 -  map 67% reduce 0%
2021-01-08 18:42:49 INFO  Job:1647 -  map 100% reduce 0%
2021-01-08 18:42:55 INFO  Job:1647 -  map 100% reduce 100%
2021-01-08 18:42:55 INFO  Job:1658 - Job job_1610131130356_0003 completed successfully
2021-01-08 18:42:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056269
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42644
		Total time spent by all reduces in occupied slots (ms)=19472
		Total time spent by all map tasks (ms)=10661
		Total time spent by all reduce tasks (ms)=4868
		Total vcore-milliseconds taken by all map tasks=10661
		Total vcore-milliseconds taken by all reduce tasks=4868
		Total megabyte-milliseconds taken by all map tasks=43667456
		Total megabyte-milliseconds taken by all reduce tasks=19939328
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=626
		CPU time spent (ms)=7640
		Physical memory (bytes) snapshot=1519632384
		Virtual memory (bytes) snapshot=15806230528
		Total committed heap usage (bytes)=1717043200
		Peak Map Physical memory (bytes)=379195392
		Peak Map Virtual memory (bytes)=3947032576
		Peak Reduce Physical memory (bytes)=392151040
		Peak Reduce Virtual memory (bytes)=3967111168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.836 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210108 18:42:56.011" starttime="20210108 18:42:56.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:42:56.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:42:56.011" starttime="20210108 18:42:56.011"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:56.012" starttime="20210108 18:42:18.186"></status>
</kw>
<msg timestamp="20210108 18:42:56.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:42:56.012" starttime="20210108 18:42:18.186"></status>
</kw>
<msg timestamp="20210108 18:42:56.012" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:42:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:42:20 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210108 18:42:56.012" starttime="20210108 18:42:18.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 18:42:56.013" starttime="20210108 18:42:56.013"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 18:42:56.013" critical="yes" starttime="20210108 18:42:18.157"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:42:56.018" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:42:56.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:42:56.023" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:42:56.023" starttime="20210108 18:42:56.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:42:56.024" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:42:56.024" starttime="20210108 18:42:56.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:42:56.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:42:56.025" starttime="20210108 18:42:56.024"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:56.026" starttime="20210108 18:42:56.016"></status>
</kw>
<msg timestamp="20210108 18:42:56.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:42:56.026" starttime="20210108 18:42:56.016"></status>
</kw>
<msg timestamp="20210108 18:42:56.026" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:42:56.026" starttime="20210108 18:42:56.015"></status>
</kw>
<msg timestamp="20210108 18:42:56.027" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:42:56.027" starttime="20210108 18:42:56.015"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:42:56.027" level="INFO">${random} = pltFzAwi</msg>
<status status="PASS" endtime="20210108 18:42:56.027" starttime="20210108 18:42:56.027"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:42:56.032" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:42:56.032" starttime="20210108 18:42:56.032"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:42:56.033" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:42:56.033" starttime="20210108 18:42:56.032"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:56.033" starttime="20210108 18:42:56.031"></status>
</kw>
<msg timestamp="20210108 18:42:56.033" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:42:56.033" starttime="20210108 18:42:56.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210108 18:42:56.035" starttime="20210108 18:42:56.034"></status>
</kw>
<msg timestamp="20210108 18:42:56.035" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210108 18:42:56.035" starttime="20210108 18:42:56.034"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:56.035" starttime="20210108 18:42:56.029"></status>
</kw>
<msg timestamp="20210108 18:42:56.035" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:42:56.035" starttime="20210108 18:42:56.028"></status>
</kw>
<msg timestamp="20210108 18:42:56.035" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 18:42:56.035" starttime="20210108 18:42:56.027"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:42:56.039" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:42:56.039" starttime="20210108 18:42:56.039"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:42:56.040" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:42:56.040" starttime="20210108 18:42:56.039"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:56.040" starttime="20210108 18:42:56.038"></status>
</kw>
<msg timestamp="20210108 18:42:56.040" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:42:56.040" starttime="20210108 18:42:56.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:42:56.042" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210108 18:42:56.042" starttime="20210108 18:42:56.041"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:42:56.043" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210108 18:42:56.043" starttime="20210108 18:42:56.042"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:56.043" starttime="20210108 18:42:56.041"></status>
</kw>
<msg timestamp="20210108 18:42:56.043" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210108 18:42:56.043" starttime="20210108 18:42:56.040"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:56.043" starttime="20210108 18:42:56.037"></status>
</kw>
<msg timestamp="20210108 18:42:56.044" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210108 18:42:56.044" starttime="20210108 18:42:56.036"></status>
</kw>
<msg timestamp="20210108 18:42:56.044" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210108 18:42:56.044" starttime="20210108 18:42:56.036"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 18:42:56.047" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 18:42:56.047" starttime="20210108 18:42:56.047"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:42:56.048" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 18:42:56.048" starttime="20210108 18:42:56.047"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:56.048" starttime="20210108 18:42:56.046"></status>
</kw>
<msg timestamp="20210108 18:42:56.048" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 18:42:56.048" starttime="20210108 18:42:56.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:42:56.050" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210108 18:42:56.050" starttime="20210108 18:42:56.050"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:42:56.051" level="INFO">${result} = /wordcount-pltFzAwi.txt</msg>
<status status="PASS" endtime="20210108 18:42:56.051" starttime="20210108 18:42:56.050"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:56.051" starttime="20210108 18:42:56.049"></status>
</kw>
<msg timestamp="20210108 18:42:56.051" level="INFO">${path_with_leading} = /wordcount-pltFzAwi.txt</msg>
<status status="PASS" endtime="20210108 18:42:56.051" starttime="20210108 18:42:56.048"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:56.051" starttime="20210108 18:42:56.045"></status>
</kw>
<msg timestamp="20210108 18:42:56.051" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-pltFzAwi.txt</msg>
<status status="PASS" endtime="20210108 18:42:56.051" starttime="20210108 18:42:56.045"></status>
</kw>
<msg timestamp="20210108 18:42:56.052" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-pltFzAwi.txt</msg>
<status status="PASS" endtime="20210108 18:42:56.052" starttime="20210108 18:42:56.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:42:56.055" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-pltFzAwi.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:43:37.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:43:37.050" level="INFO">${output} = 2021-01-08 18:42:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-08 18:42:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210108 18:43:37.050" starttime="20210108 18:42:56.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:43:37.051" level="INFO">2021-01-08 18:42:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-08 18:42:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-08 18:42:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:42:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:42:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 18:42:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:42:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7E547F396DDD-&gt;5edfab21-0720-45c1-938c-b9fbe0a8462b
2021-01-08 18:42:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 18:43:02 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-08 18:43:02 INFO  JobSubmitter:202 - number of splits:3
2021-01-08 18:43:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1610131130356_0004
2021-01-08 18:43:04 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-08 18:43:05 INFO  Configuration:2795 - resource-types.xml not found
2021-01-08 18:43:05 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-08 18:43:05 INFO  YarnClientImpl:329 - Submitted application application_1610131130356_0004
2021-01-08 18:43:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1610131130356_0004/
2021-01-08 18:43:05 INFO  Job:1619 - Running job: job_1610131130356_0004
2021-01-08 18:43:12 INFO  Job:1640 - Job job_1610131130356_0004 running in uber mode : false
2021-01-08 18:43:12 INFO  Job:1647 -  map 0% reduce 0%
2021-01-08 18:43:19 INFO  Job:1647 -  map 33% reduce 0%
2021-01-08 18:43:25 INFO  Job:1647 -  map 67% reduce 0%
2021-01-08 18:43:31 INFO  Job:1647 -  map 100% reduce 0%
2021-01-08 18:43:35 INFO  Job:1647 -  map 100% reduce 100%
2021-01-08 18:43:36 INFO  Job:1658 - Job job_1610131130356_0004 completed successfully
2021-01-08 18:43:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118947
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42080
		Total time spent by all reduces in occupied slots (ms)=15716
		Total time spent by all map tasks (ms)=10520
		Total time spent by all reduce tasks (ms)=3929
		Total vcore-milliseconds taken by all map tasks=10520
		Total vcore-milliseconds taken by all reduce tasks=3929
		Total megabyte-milliseconds taken by all map tasks=43089920
		Total megabyte-milliseconds taken by all reduce tasks=16093184
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=642
		CPU time spent (ms)=8030
		Physical memory (bytes) snapshot=1443377152
		Virtual memory (bytes) snapshot=15780966400
		Total committed heap usage (bytes)=1555562496
		Peak Map Physical memory (bytes)=383807488
		Peak Map Virtual memory (bytes)=3947859968
		Peak Reduce Physical memory (bytes)=391229440
		Peak Reduce Virtual memory (bytes)=3967602688
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210108 18:43:37.052" starttime="20210108 18:43:37.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:43:37.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:43:37.052" starttime="20210108 18:43:37.052"></status>
</kw>
<status status="PASS" endtime="20210108 18:43:37.053" starttime="20210108 18:42:56.053"></status>
</kw>
<msg timestamp="20210108 18:43:37.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:43:37.053" starttime="20210108 18:42:56.052"></status>
</kw>
<msg timestamp="20210108 18:43:37.053" level="INFO">${output} = 2021-01-08 18:42:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-08 18:42:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210108 18:43:37.053" starttime="20210108 18:42:56.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210108 18:43:37.054" starttime="20210108 18:43:37.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 18:43:37.055" starttime="20210108 18:43:37.054"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 18:43:37.055" critical="yes" starttime="20210108 18:42:56.014"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210108 18:43:37.056" starttime="20210108 18:42:18.096"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:40:34.027" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:40:34.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:40:34.033" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:40:34.033" starttime="20210108 18:40:34.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:40:34.034" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:40:34.034" starttime="20210108 18:40:34.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:40:34.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:40:34.034" starttime="20210108 18:40:34.034"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:34.035" starttime="20210108 18:40:34.023"></status>
</kw>
<msg timestamp="20210108 18:40:34.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:40:34.035" starttime="20210108 18:40:34.023"></status>
</kw>
<msg timestamp="20210108 18:40:34.035" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:40:34.035" starttime="20210108 18:40:34.023"></status>
</kw>
<msg timestamp="20210108 18:40:34.035" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:40:34.035" starttime="20210108 18:40:34.022"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:40:34.040" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:40:34.041" starttime="20210108 18:40:34.040"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:40:34.041" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:40:34.041" starttime="20210108 18:40:34.041"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:34.042" starttime="20210108 18:40:34.039"></status>
</kw>
<msg timestamp="20210108 18:40:34.042" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:40:34.042" starttime="20210108 18:40:34.038"></status>
</kw>
<status status="PASS" endtime="20210108 18:40:34.042" starttime="20210108 18:40:34.037"></status>
</kw>
<msg timestamp="20210108 18:40:34.042" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:40:34.042" starttime="20210108 18:40:34.037"></status>
</kw>
<msg timestamp="20210108 18:40:34.043" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:40:34.043" starttime="20210108 18:40:34.036"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:40:34.046" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:41:22.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:41:22.734" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:40:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:40:36 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210108 18:41:22.734" starttime="20210108 18:40:34.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:41:22.735" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:40:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:40:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:40:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 18:40:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:40:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3035AC9F1AE3-&gt;5edfab21-0720-45c1-938c-b9fbe0a8462b
2021-01-08 18:40:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-08 18:40:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-08 18:40:38 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-08 18:40:40 INFO  JobSubmitter:202 - number of splits:3
2021-01-08 18:40:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1610131130356_0001
2021-01-08 18:40:40 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-08 18:40:41 INFO  Configuration:2795 - resource-types.xml not found
2021-01-08 18:40:41 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-08 18:40:41 INFO  YarnClientImpl:329 - Submitted application application_1610131130356_0001
2021-01-08 18:40:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1610131130356_0001/
2021-01-08 18:40:41 INFO  Job:1619 - Running job: job_1610131130356_0001
2021-01-08 18:40:51 INFO  Job:1640 - Job job_1610131130356_0001 running in uber mode : false
2021-01-08 18:40:51 INFO  Job:1647 -  map 0% reduce 0%
2021-01-08 18:40:58 INFO  Job:1647 -  map 33% reduce 0%
2021-01-08 18:41:04 INFO  Job:1647 -  map 67% reduce 0%
2021-01-08 18:41:09 INFO  Job:1647 -  map 100% reduce 0%
2021-01-08 18:41:17 INFO  Job:1647 -  map 100% reduce 100%
2021-01-08 18:41:22 INFO  Job:1658 - Job job_1610131130356_0001 completed successfully
2021-01-08 18:41:22 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056481
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43296
		Total time spent by all reduces in occupied slots (ms)=25800
		Total time spent by all map tasks (ms)=10824
		Total time spent by all reduce tasks (ms)=6450
		Total vcore-milliseconds taken by all map tasks=10824
		Total vcore-milliseconds taken by all reduce tasks=6450
		Total megabyte-milliseconds taken by all map tasks=44335104
		Total megabyte-milliseconds taken by all reduce tasks=26419200
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=723
		CPU time spent (ms)=6490
		Physical memory (bytes) snapshot=1362800640
		Virtual memory (bytes) snapshot=15768883200
		Total committed heap usage (bytes)=1534066688
		Peak Map Physical memory (bytes)=366485504
		Peak Map Virtual memory (bytes)=3942096896
		Peak Reduce Physical memory (bytes)=283066368
		Peak Reduce Virtual memory (bytes)=3950002176
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 44.795 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210108 18:41:22.735" starttime="20210108 18:41:22.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:41:22.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:41:22.736" starttime="20210108 18:41:22.736"></status>
</kw>
<status status="PASS" endtime="20210108 18:41:22.736" starttime="20210108 18:40:34.044"></status>
</kw>
<msg timestamp="20210108 18:41:22.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:41:22.737" starttime="20210108 18:40:34.043"></status>
</kw>
<msg timestamp="20210108 18:41:22.737" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 18:40:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:40:36 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210108 18:41:22.737" starttime="20210108 18:40:34.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 18:41:22.738" starttime="20210108 18:41:22.737"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 18:41:22.738" critical="yes" starttime="20210108 18:40:34.021"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:41:22.743" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:41:22.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:41:22.748" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:41:22.748" starttime="20210108 18:41:22.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:41:22.749" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:41:22.749" starttime="20210108 18:41:22.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:41:22.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:41:22.750" starttime="20210108 18:41:22.749"></status>
</kw>
<status status="PASS" endtime="20210108 18:41:22.750" starttime="20210108 18:41:22.740"></status>
</kw>
<msg timestamp="20210108 18:41:22.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:41:22.750" starttime="20210108 18:41:22.740"></status>
</kw>
<msg timestamp="20210108 18:41:22.751" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:41:22.751" starttime="20210108 18:41:22.739"></status>
</kw>
<msg timestamp="20210108 18:41:22.751" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 18:41:22.751" starttime="20210108 18:41:22.739"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:41:22.751" level="INFO">${random} = xjEj6ZXW</msg>
<status status="PASS" endtime="20210108 18:41:22.751" starttime="20210108 18:41:22.751"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:41:22.756" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:41:22.756" starttime="20210108 18:41:22.755"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:41:22.756" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:41:22.756" starttime="20210108 18:41:22.756"></status>
</kw>
<status status="PASS" endtime="20210108 18:41:22.757" starttime="20210108 18:41:22.755"></status>
</kw>
<msg timestamp="20210108 18:41:22.757" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:41:22.757" starttime="20210108 18:41:22.754"></status>
</kw>
<status status="PASS" endtime="20210108 18:41:22.757" starttime="20210108 18:41:22.753"></status>
</kw>
<msg timestamp="20210108 18:41:22.757" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:41:22.757" starttime="20210108 18:41:22.752"></status>
</kw>
<msg timestamp="20210108 18:41:22.758" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 18:41:22.758" starttime="20210108 18:41:22.752"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:41:22.762" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:41:22.762" starttime="20210108 18:41:22.762"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:41:22.763" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:41:22.763" starttime="20210108 18:41:22.762"></status>
</kw>
<status status="PASS" endtime="20210108 18:41:22.763" starttime="20210108 18:41:22.761"></status>
</kw>
<msg timestamp="20210108 18:41:22.763" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:41:22.763" starttime="20210108 18:41:22.760"></status>
</kw>
<status status="PASS" endtime="20210108 18:41:22.764" starttime="20210108 18:41:22.759"></status>
</kw>
<msg timestamp="20210108 18:41:22.764" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210108 18:41:22.764" starttime="20210108 18:41:22.759"></status>
</kw>
<msg timestamp="20210108 18:41:22.764" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210108 18:41:22.764" starttime="20210108 18:41:22.758"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 18:41:22.769" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 18:41:22.769" starttime="20210108 18:41:22.768"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 18:41:22.769" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 18:41:22.769" starttime="20210108 18:41:22.769"></status>
</kw>
<status status="PASS" endtime="20210108 18:41:22.770" starttime="20210108 18:41:22.768"></status>
</kw>
<msg timestamp="20210108 18:41:22.770" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 18:41:22.770" starttime="20210108 18:41:22.767"></status>
</kw>
<status status="PASS" endtime="20210108 18:41:22.770" starttime="20210108 18:41:22.766"></status>
</kw>
<msg timestamp="20210108 18:41:22.770" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-xjEj6ZXW.txt</msg>
<status status="PASS" endtime="20210108 18:41:22.770" starttime="20210108 18:41:22.765"></status>
</kw>
<msg timestamp="20210108 18:41:22.770" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-xjEj6ZXW.txt</msg>
<status status="PASS" endtime="20210108 18:41:22.770" starttime="20210108 18:41:22.764"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:41:22.773" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-xjEj6ZXW.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:42:03.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:42:03.593" level="INFO">${output} = 2021-01-08 18:41:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-08 18:41:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210108 18:42:03.593" starttime="20210108 18:41:22.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:42:03.594" level="INFO">2021-01-08 18:41:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-08 18:41:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-08 18:41:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 18:41:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:41:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 18:41:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:41:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A90FF17D110B-&gt;5edfab21-0720-45c1-938c-b9fbe0a8462b
2021-01-08 18:41:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 18:41:26 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-08 18:41:29 INFO  JobSubmitter:202 - number of splits:3
2021-01-08 18:41:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1610131130356_0002
2021-01-08 18:41:29 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-08 18:41:29 INFO  Configuration:2795 - resource-types.xml not found
2021-01-08 18:41:29 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-08 18:41:29 INFO  YarnClientImpl:329 - Submitted application application_1610131130356_0002
2021-01-08 18:41:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1610131130356_0002/
2021-01-08 18:41:29 INFO  Job:1619 - Running job: job_1610131130356_0002
2021-01-08 18:41:37 INFO  Job:1640 - Job job_1610131130356_0002 running in uber mode : false
2021-01-08 18:41:37 INFO  Job:1647 -  map 0% reduce 0%
2021-01-08 18:41:44 INFO  Job:1647 -  map 33% reduce 0%
2021-01-08 18:41:51 INFO  Job:1647 -  map 67% reduce 0%
2021-01-08 18:41:56 INFO  Job:1647 -  map 100% reduce 0%
2021-01-08 18:42:02 INFO  Job:1647 -  map 100% reduce 100%
2021-01-08 18:42:03 INFO  Job:1658 - Job job_1610131130356_0002 completed successfully
2021-01-08 18:42:03 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1119035
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42208
		Total time spent by all reduces in occupied slots (ms)=15404
		Total time spent by all map tasks (ms)=10552
		Total time spent by all reduce tasks (ms)=3851
		Total vcore-milliseconds taken by all map tasks=10552
		Total vcore-milliseconds taken by all reduce tasks=3851
		Total megabyte-milliseconds taken by all map tasks=43220992
		Total megabyte-milliseconds taken by all reduce tasks=15773696
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=613
		CPU time spent (ms)=7420
		Physical memory (bytes) snapshot=1446408192
		Virtual memory (bytes) snapshot=15807901696
		Total committed heap usage (bytes)=1565523968
		Peak Map Physical memory (bytes)=383946752
		Peak Map Virtual memory (bytes)=3948806144
		Peak Reduce Physical memory (bytes)=391999488
		Peak Reduce Virtual memory (bytes)=3970293760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210108 18:42:03.594" starttime="20210108 18:42:03.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:42:03.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:42:03.595" starttime="20210108 18:42:03.594"></status>
</kw>
<status status="PASS" endtime="20210108 18:42:03.595" starttime="20210108 18:41:22.771"></status>
</kw>
<msg timestamp="20210108 18:42:03.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:42:03.595" starttime="20210108 18:41:22.771"></status>
</kw>
<msg timestamp="20210108 18:42:03.596" level="INFO">${output} = 2021-01-08 18:41:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-01-08 18:41:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210108 18:42:03.596" starttime="20210108 18:41:22.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210108 18:42:03.596" starttime="20210108 18:42:03.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 18:42:03.597" starttime="20210108 18:42:03.596"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 18:42:03.597" critical="yes" starttime="20210108 18:41:22.738"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210108 18:42:03.599" starttime="20210108 18:40:33.961"></status>
</suite>
<status status="PASS" elapsedtime="241733" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="621654" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
