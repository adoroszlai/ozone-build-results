<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210108 18:55:39.039" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210108 18:51:45.835" starttime="20210108 18:51:45.834"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:51:45.841" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:51:45.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:51:45.944" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 08 Jan 2021 18:51:45 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 08 Jan 2021 18:09:54 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20210108 18:51:45.944" starttime="20210108 18:51:45.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:51:45.957" level="INFO">HTTP/1.1 200 OK
Date: Fri, 08 Jan 2021 18:51:45 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 08 Jan 2021 18:09:54 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210108 18:51:45.959" starttime="20210108 18:51:45.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:51:45.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:51:45.961" starttime="20210108 18:51:45.960"></status>
</kw>
<status status="PASS" endtime="20210108 18:51:45.962" starttime="20210108 18:51:45.836"></status>
</kw>
<msg timestamp="20210108 18:51:45.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:51:45.962" starttime="20210108 18:51:45.836"></status>
</kw>
<msg timestamp="20210108 18:51:45.962" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 08 Jan 2021 18:51:45 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 08 Jan 2021 18:09:54 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20210108 18:51:45.963" starttime="20210108 18:51:45.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20210108 18:51:45.963" starttime="20210108 18:51:45.963"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:51:45.963" critical="yes" starttime="20210108 18:51:45.833"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210108 18:51:45.966" starttime="20210108 18:51:45.965"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:51:45.977" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:53:28.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:53:28.500" level="INFO">${output} = 2021-01-08 18:51:47,830 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 18:51:48,050 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210108 18:53:28.500" starttime="20210108 18:51:45.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:53:28.502" level="INFO">2021-01-08 18:51:47,830 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 18:51:48,050 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-08 18:51:48,050 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-08 18:52:05,870 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2021-01-08 18:52:05,871 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2021-01-08 18:52:05,871 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2021-01-08 18:52:05,871 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2021-01-08 18:52:05,871 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2021-01-08 18:52:05,871 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2021-01-08 18:52:05,871 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2021-01-08 18:52:05,874 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2021-01-08 18:52:05,878 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2021-01-08 18:52:05,898 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-01-08 18:52:05,931 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-38278, with hadoop as owner.
2021-01-08 18:52:06,261 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-32990, with hadoop as owner.
2021-01-08 18:52:06,272 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-30473, with hadoop as owner.
2021-01-08 18:52:06,279 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-89743, with hadoop as owner.
2021-01-08 18:52:06,285 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-53345, with hadoop as owner.
2021-01-08 18:52:06,304 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-38278/bucket-0-89476, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,399 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-32990/bucket-0-99675, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,412 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-30473/bucket-0-71277, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,424 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-89743/bucket-0-20745, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,442 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-53345/bucket-0-13794, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,450 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-38278/bucket-1-38862, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,459 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-32990/bucket-1-77165, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,469 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-30473/bucket-1-87590, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,486 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-89743/bucket-1-95946, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,500 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-53345/bucket-1-13419, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,511 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-38278/bucket-2-15685, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,518 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-32990/bucket-2-75712, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,531 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-30473/bucket-2-21393, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,542 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-89743/bucket-2-30804, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,552 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-53345/bucket-2-10003, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,569 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-38278/bucket-3-58646, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,579 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-32990/bucket-3-85808, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,585 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-30473/bucket-3-94809, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,594 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-89743/bucket-3-03509, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,626 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-53345/bucket-3-79665, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,630 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-38278/bucket-4-68749, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,645 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-32990/bucket-4-45687, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,656 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-30473/bucket-4-15424, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,664 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-89743/bucket-4-62497, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,674 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-53345/bucket-4-72102, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 18:52:06,906 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-01-08 18:52:07,906 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-01-08 18:52:08,261 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-08 18:52:08,621 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 18:52:08,622 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-408751BCA341-&gt;b18e5470-423e-423b-a48e-80c07ed869c8
2021-01-08 18:52:08,623 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 18:52:08,907 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-01-08 18:52:09,907 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-01-08 18:52:10,908 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-01-08 18:52:11,743 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-B7928B8F0F13-&gt;b283a651-fe8f-4883-ab54-6b745c932f31
2021-01-08 18:52:11,743 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 18:52:11,908 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2021-01-08 18:52:12,911 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2021-01-08 18:52:13,921 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2021-01-08 18:52:14,923 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2021-01-08 18:52:15,923 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2021-01-08 18:52:16,926 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2021-01-08 18:52:17,926 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2021-01-08 18:52:18,927 [Thread-7] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2021-01-08 18:52:19,933 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2021-01-08 18:52:20,933 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2021-01-08 18:52:21,934 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2021-01-08 18:52:22,935 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2021-01-08 18:52:23,935 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2021-01-08 18:52:24,935 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2021-01-08 18:52:25,936 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2021-01-08 18:52:26,936 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2021-01-08 18:52:27,937 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2021-01-08 18:52:28,937 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2021-01-08 18:52:29,938 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2021-01-08 18:52:30,939 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2021-01-08 18:52:31,940 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2021-01-08 18:52:32,940 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2021-01-08 18:52:33,941 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2021-01-08 18:52:34,942 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2021-01-08 18:52:35,942 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2021-01-08 18:52:36,943 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2021-01-08 18:52:37,943 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2021-01-08 18:52:38,945 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2021-01-08 18:52:39,946 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2021-01-08 18:52:40,946 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2021-01-08 18:52:41,947 [Thread-7] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2021-01-08 18:52:42,948 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2021-01-08 18:52:43,948 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2021-01-08 18:52:44,948 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2021-01-08 18:52:45,949 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2021-01-08 18:52:46,949 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2021-01-08 18:52:47,950 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2021-01-08 18:52:48,950 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2021-01-08 18:52:49,951 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2021-01-08 18:52:50,957 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2021-01-08 18:52:51,964 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2021-01-08 18:52:52,964 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2021-01-08 18:52:53,965 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2021-01-08 18:52:54,965 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2021-01-08 18:52:55,965 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2021-01-08 18:52:56,967 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2021-01-08 18:52:57,968 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2021-01-08 18:52:58,968 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2021-01-08 18:52:59,968 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2021-01-08 18:53:00,969 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2021-01-08 18:53:01,969 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2021-01-08 18:53:02,970 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2021-01-08 18:53:03,970 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2021-01-08 18:53:04,971 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2021-01-08 18:53:05,971 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2021-01-08 18:53:06,973 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2021-01-08 18:53:07,974 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2021-01-08 18:53:08,974 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2021-01-08 18:53:09,974 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2021-01-08 18:53:10,975 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2021-01-08 18:53:11,980 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2021-01-08 18:53:12,980 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2021-01-08 18:53:13,981 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2021-01-08 18:53:14,981 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2021-01-08 18:53:15,982 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2021-01-08 18:53:16,982 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2021-01-08 18:53:17,983 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2021-01-08 18:53:18,983 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2021-01-08 18:53:19,984 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2021-01-08 18:53:20,984 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2021-01-08 18:53:21,985 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2021-01-08 18:53:22,985 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,367
Average Time spent in bucket creation: 00:00:00,285
Average Time spent in key creation: 00:00:02,224
Average Time spent in key write: 00:00:01,658
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:39,898
***************************************************</msg>
<status status="PASS" endtime="20210108 18:53:28.502" starttime="20210108 18:53:28.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:53:28.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:53:28.503" starttime="20210108 18:53:28.502"></status>
</kw>
<status status="PASS" endtime="20210108 18:53:28.503" starttime="20210108 18:51:45.967"></status>
</kw>
<msg timestamp="20210108 18:53:28.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:53:28.504" starttime="20210108 18:51:45.967"></status>
</kw>
<msg timestamp="20210108 18:53:28.504" level="INFO">${result} = 2021-01-08 18:51:47,830 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 18:51:48,050 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210108 18:53:28.504" starttime="20210108 18:51:45.966"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20210108 18:53:28.505" starttime="20210108 18:53:28.505"></status>
</kw>
<status status="PASS" endtime="20210108 18:53:28.505" starttime="20210108 18:53:28.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20210108 18:53:28.506" starttime="20210108 18:53:28.505"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:53:28.506" critical="yes" starttime="20210108 18:51:45.964"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210108 18:53:28.507" starttime="20210108 18:51:45.776"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:53:33.326" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:53:36.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:53:36.314" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):...</msg>
<status status="PASS" endtime="20210108 18:53:36.314" starttime="20210108 18:53:33.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:53:36.316" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" endtime="20210108 18:53:36.316" starttime="20210108 18:53:36.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:53:36.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:53:36.317" starttime="20210108 18:53:36.316"></status>
</kw>
<status status="PASS" endtime="20210108 18:53:36.317" starttime="20210108 18:53:33.322"></status>
</kw>
<msg timestamp="20210108 18:53:36.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:53:36.317" starttime="20210108 18:53:33.321"></status>
</kw>
<msg timestamp="20210108 18:53:36.318" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):...</msg>
<status status="PASS" endtime="20210108 18:53:36.318" starttime="20210108 18:53:33.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20210108 18:53:36.319" starttime="20210108 18:53:36.318"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:53:36.319" critical="yes" starttime="20210108 18:53:33.320"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:53:36.325" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:53:38.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:53:38.874" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" endtime="20210108 18:53:38.874" starttime="20210108 18:53:36.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:53:38.875" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" endtime="20210108 18:53:38.875" starttime="20210108 18:53:38.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:53:38.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:53:38.876" starttime="20210108 18:53:38.875"></status>
</kw>
<status status="PASS" endtime="20210108 18:53:38.876" starttime="20210108 18:53:36.323"></status>
</kw>
<msg timestamp="20210108 18:53:38.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:53:38.876" starttime="20210108 18:53:36.322"></status>
</kw>
<msg timestamp="20210108 18:53:38.877" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" endtime="20210108 18:53:38.877" starttime="20210108 18:53:36.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20210108 18:53:38.877" starttime="20210108 18:53:38.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
</arguments>
<status status="PASS" endtime="20210108 18:53:38.878" starttime="20210108 18:53:38.878"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:53:38.878" critical="yes" starttime="20210108 18:53:36.320"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210108 18:53:38.879" starttime="20210108 18:53:33.253"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:53:43.537" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:53:46.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:53:46.780" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:53:46.780" starttime="20210108 18:53:43.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:53:46.782" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:53:46.782" starttime="20210108 18:53:46.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:53:46.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:53:46.783" starttime="20210108 18:53:46.782"></status>
</kw>
<status status="PASS" endtime="20210108 18:53:46.783" starttime="20210108 18:53:43.533"></status>
</kw>
<msg timestamp="20210108 18:53:46.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:53:46.784" starttime="20210108 18:53:43.533"></status>
</kw>
<msg timestamp="20210108 18:53:46.784" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:53:46.784" starttime="20210108 18:53:43.532"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210108 18:53:46.784" starttime="20210108 18:53:46.784"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:53:46.788" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:53:49.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:53:49.868" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:53:49.868" starttime="20210108 18:53:46.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:53:49.869" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:53:49.869" starttime="20210108 18:53:49.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:53:49.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:53:49.870" starttime="20210108 18:53:49.869"></status>
</kw>
<status status="PASS" endtime="20210108 18:53:49.870" starttime="20210108 18:53:46.785"></status>
</kw>
<msg timestamp="20210108 18:53:49.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:53:49.871" starttime="20210108 18:53:46.785"></status>
</kw>
<msg timestamp="20210108 18:53:49.871" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:53:49.871" starttime="20210108 18:53:46.785"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210108 18:53:49.872" starttime="20210108 18:53:49.871"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:53:49.876" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:53:55.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:53:55.000" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:53:55.000" starttime="20210108 18:53:49.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:53:55.001" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:53:55.001" starttime="20210108 18:53:55.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:53:55.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:53:55.002" starttime="20210108 18:53:55.001"></status>
</kw>
<status status="PASS" endtime="20210108 18:53:55.002" starttime="20210108 18:53:49.873"></status>
</kw>
<msg timestamp="20210108 18:53:55.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:53:55.002" starttime="20210108 18:53:49.873"></status>
</kw>
<msg timestamp="20210108 18:53:55.003" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:53:55.003" starttime="20210108 18:53:49.872"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210108 18:53:55.003" starttime="20210108 18:53:55.003"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:53:55.003" critical="yes" starttime="20210108 18:53:43.532"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210108 18:53:55.004" starttime="20210108 18:53:43.479"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:54:39.191" level="INFO">${random} = 07004</msg>
<status status="PASS" endtime="20210108 18:54:39.191" starttime="20210108 18:54:39.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:54:39.198" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-07004 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:55:32.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:55:32.535" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:55:32.535" starttime="20210108 18:54:39.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:55:32.536" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:55:32.536" starttime="20210108 18:55:32.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:55:32.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:55:32.537" starttime="20210108 18:55:32.536"></status>
</kw>
<status status="PASS" endtime="20210108 18:55:32.537" starttime="20210108 18:54:39.192"></status>
</kw>
<msg timestamp="20210108 18:55:32.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:55:32.537" starttime="20210108 18:54:39.192"></status>
</kw>
<msg timestamp="20210108 18:55:32.538" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:55:32.538" starttime="20210108 18:54:39.191"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210108 18:55:32.538" starttime="20210108 18:55:32.538"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:55:32.539" critical="yes" starttime="20210108 18:54:39.190"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210108 18:55:32.540" starttime="20210108 18:54:39.127"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 18:54:01.500" level="INFO">${random} = 38666</msg>
<status status="PASS" endtime="20210108 18:54:01.500" starttime="20210108 18:54:01.499"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 18:54:01.504" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-38666 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 18:54:06.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 18:54:06.371" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:54:06.371" starttime="20210108 18:54:01.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 18:54:06.372" level="INFO"></msg>
<status status="PASS" endtime="20210108 18:54:06.372" starttime="20210108 18:54:06.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 18:54:06.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 18:54:06.373" starttime="20210108 18:54:06.372"></status>
</kw>
<status status="PASS" endtime="20210108 18:54:06.373" starttime="20210108 18:54:01.501"></status>
</kw>
<msg timestamp="20210108 18:54:06.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 18:54:06.373" starttime="20210108 18:54:01.500"></status>
</kw>
<msg timestamp="20210108 18:54:06.373" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 18:54:06.373" starttime="20210108 18:54:01.500"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210108 18:54:06.374" starttime="20210108 18:54:06.374"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 18:54:06.374" critical="yes" starttime="20210108 18:54:01.498"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210108 18:54:06.376" starttime="20210108 18:54:01.444"></status>
</suite>
<status status="PASS" elapsedtime="178227" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
