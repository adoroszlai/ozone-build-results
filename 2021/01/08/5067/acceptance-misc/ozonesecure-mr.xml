<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210108 19:05:53.296" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:00:34.266" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:00:39.263" level="INFO">${rc} = 255</msg>
<msg timestamp="20210108 19:00:39.263" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:00:39.263" starttime="20210108 19:00:34.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:00:39.264" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210108 19:00:39.265" starttime="20210108 19:00:39.264"></status>
</kw>
<msg timestamp="20210108 19:00:39.265" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:00:39.265" starttime="20210108 19:00:34.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:00:39.270" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:00:43.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:00:43.086" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:00:43.086" starttime="20210108 19:00:39.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:00:43.087" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:00:43.087" starttime="20210108 19:00:43.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:00:43.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:00:43.088" starttime="20210108 19:00:43.087"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:43.088" starttime="20210108 19:00:39.267"></status>
</kw>
<msg timestamp="20210108 19:00:43.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:00:43.088" starttime="20210108 19:00:39.267"></status>
</kw>
<msg timestamp="20210108 19:00:43.088" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:00:43.089" starttime="20210108 19:00:39.266"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210108 19:00:43.089" starttime="20210108 19:00:43.089"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:43.089" starttime="20210108 19:00:39.266"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:43.089" starttime="20210108 19:00:39.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:00:43.094" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:00:46.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:00:46.900" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:00:46.900" starttime="20210108 19:00:43.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:00:46.902" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:00:46.902" starttime="20210108 19:00:46.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:00:46.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:00:46.902" starttime="20210108 19:00:46.902"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:46.903" starttime="20210108 19:00:43.091"></status>
</kw>
<msg timestamp="20210108 19:00:46.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:00:46.903" starttime="20210108 19:00:43.091"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:46.903" starttime="20210108 19:00:43.090"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:46.903" starttime="20210108 19:00:43.090"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:46.904" starttime="20210108 19:00:43.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210108 19:00:46.904" starttime="20210108 19:00:46.904"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:00:46.908" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:00:50.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:00:50.971" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:00:50.972" starttime="20210108 19:00:46.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:00:50.973" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:00:46.579Z",
  "modificationTime" : "2021-01-08T19:00:46.579Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210108 19:00:50.973" starttime="20210108 19:00:50.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:00:50.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:00:50.975" starttime="20210108 19:00:50.974"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:50.976" starttime="20210108 19:00:46.905"></status>
</kw>
<msg timestamp="20210108 19:00:50.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:00:50.976" starttime="20210108 19:00:46.905"></status>
</kw>
<msg timestamp="20210108 19:00:50.976" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:00:50.976" starttime="20210108 19:00:46.904"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210108 19:00:50.977" starttime="20210108 19:00:50.976"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 19:00:50.982" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 19:00:50.982" starttime="20210108 19:00:50.982"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:00:50.983" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 19:00:50.983" starttime="20210108 19:00:50.983"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:50.984" starttime="20210108 19:00:50.981"></status>
</kw>
<msg timestamp="20210108 19:00:50.984" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 19:00:50.984" starttime="20210108 19:00:50.980"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:50.984" starttime="20210108 19:00:50.979"></status>
</kw>
<msg timestamp="20210108 19:00:50.984" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210108 19:00:50.984" starttime="20210108 19:00:50.978"></status>
</kw>
<msg timestamp="20210108 19:00:50.985" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210108 19:00:50.985" starttime="20210108 19:00:50.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:00:50.989" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:00:54.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:00:54.845" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:00:54.845" starttime="20210108 19:00:50.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:00:54.847" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:00:54.847" starttime="20210108 19:00:54.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:00:54.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:00:54.847" starttime="20210108 19:00:54.847"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:54.848" starttime="20210108 19:00:50.986"></status>
</kw>
<msg timestamp="20210108 19:00:54.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:00:54.848" starttime="20210108 19:00:50.986"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:54.848" starttime="20210108 19:00:50.985"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:00:54.852" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:01:03.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:01:03.517" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:01:03.517" starttime="20210108 19:00:54.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:01:03.518" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:01:03.518" starttime="20210108 19:01:03.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:01:03.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:01:03.519" starttime="20210108 19:01:03.518"></status>
</kw>
<status status="PASS" endtime="20210108 19:01:03.519" starttime="20210108 19:00:54.849"></status>
</kw>
<msg timestamp="20210108 19:01:03.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:01:03.519" starttime="20210108 19:00:54.849"></status>
</kw>
<status status="PASS" endtime="20210108 19:01:03.520" starttime="20210108 19:00:54.848"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:01:03.524" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:01:09.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:01:09.154" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:01:09.154" starttime="20210108 19:01:03.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:01:09.156" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:01:09.156" starttime="20210108 19:01:09.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:01:09.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:01:09.157" starttime="20210108 19:01:09.156"></status>
</kw>
<status status="PASS" endtime="20210108 19:01:09.157" starttime="20210108 19:01:03.521"></status>
</kw>
<msg timestamp="20210108 19:01:09.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:01:09.157" starttime="20210108 19:01:03.521"></status>
</kw>
<status status="PASS" endtime="20210108 19:01:09.158" starttime="20210108 19:01:03.520"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:01:09.163" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:01:15.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:01:15.105" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:01:15.105" starttime="20210108 19:01:09.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:01:15.106" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:01:15.106" starttime="20210108 19:01:15.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:01:15.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:01:15.106" starttime="20210108 19:01:15.106"></status>
</kw>
<status status="PASS" endtime="20210108 19:01:15.107" starttime="20210108 19:01:09.159"></status>
</kw>
<msg timestamp="20210108 19:01:15.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:01:15.107" starttime="20210108 19:01:09.158"></status>
</kw>
<status status="PASS" endtime="20210108 19:01:15.107" starttime="20210108 19:01:09.158"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:01:15.108" critical="yes" starttime="20210108 19:00:34.260"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 19:01:15.113" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 19:01:15.113" starttime="20210108 19:01:15.113"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:01:15.114" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 19:01:15.114" starttime="20210108 19:01:15.114"></status>
</kw>
<status status="PASS" endtime="20210108 19:01:15.114" starttime="20210108 19:01:15.112"></status>
</kw>
<msg timestamp="20210108 19:01:15.115" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 19:01:15.115" starttime="20210108 19:01:15.112"></status>
</kw>
<status status="PASS" endtime="20210108 19:01:15.115" starttime="20210108 19:01:15.111"></status>
</kw>
<msg timestamp="20210108 19:01:15.115" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210108 19:01:15.115" starttime="20210108 19:01:15.110"></status>
</kw>
<msg timestamp="20210108 19:01:15.115" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210108 19:01:15.115" starttime="20210108 19:01:15.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:01:15.120" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:01:19.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:01:19.020" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:01:19.020" starttime="20210108 19:01:15.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:01:19.022" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:01:19.022" starttime="20210108 19:01:19.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:01:19.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:01:19.023" starttime="20210108 19:01:19.022"></status>
</kw>
<status status="PASS" endtime="20210108 19:01:19.023" starttime="20210108 19:01:15.116"></status>
</kw>
<msg timestamp="20210108 19:01:19.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:01:19.023" starttime="20210108 19:01:15.116"></status>
</kw>
<status status="PASS" endtime="20210108 19:01:19.023" starttime="20210108 19:01:15.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:01:19.027" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:01:22.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:01:22.911" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:01:22.911" starttime="20210108 19:01:19.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:01:22.913" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:01:22.913" starttime="20210108 19:01:22.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:01:22.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:01:22.914" starttime="20210108 19:01:22.913"></status>
</kw>
<status status="PASS" endtime="20210108 19:01:22.915" starttime="20210108 19:01:19.025"></status>
</kw>
<msg timestamp="20210108 19:01:22.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:01:22.916" starttime="20210108 19:01:19.024"></status>
</kw>
<status status="PASS" endtime="20210108 19:01:22.916" starttime="20210108 19:01:19.024"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:01:22.916" critical="yes" starttime="20210108 19:01:15.109"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210108 19:01:22.918" starttime="20210108 19:00:34.194"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 19:04:27.352" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 19:04:27.352" starttime="20210108 19:04:27.351"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:04:27.353" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 19:04:27.353" starttime="20210108 19:04:27.352"></status>
</kw>
<status status="PASS" endtime="20210108 19:04:27.353" starttime="20210108 19:04:27.351"></status>
</kw>
<msg timestamp="20210108 19:04:27.353" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 19:04:27.353" starttime="20210108 19:04:27.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:04:27.354" starttime="20210108 19:04:27.354"></status>
</kw>
<msg timestamp="20210108 19:04:27.354" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210108 19:04:27.354" starttime="20210108 19:04:27.353"></status>
</kw>
<status status="PASS" endtime="20210108 19:04:27.355" starttime="20210108 19:04:27.349"></status>
</kw>
<msg timestamp="20210108 19:04:27.355" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 19:04:27.355" starttime="20210108 19:04:27.348"></status>
</kw>
<msg timestamp="20210108 19:04:27.355" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 19:04:27.355" starttime="20210108 19:04:27.347"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 19:04:27.356" level="INFO">${random} = 57902</msg>
<status status="PASS" endtime="20210108 19:04:27.356" starttime="20210108 19:04:27.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:04:27.361" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-57902 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:04:31.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:04:31.345" level="INFO">${output} = 2021-01-08 19:04:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:04:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210108 19:04:31.345" starttime="20210108 19:04:27.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:04:31.346" level="INFO">2021-01-08 19:04:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:04:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 19:04:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 19:04:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 19:04:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B3B1579B7094-&gt;5eaff890-3686-4044-a27f-84ee0a62ba97
2021-01-08 19:04:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210108 19:04:31.346" starttime="20210108 19:04:31.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:04:31.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:04:31.347" starttime="20210108 19:04:31.346"></status>
</kw>
<status status="PASS" endtime="20210108 19:04:31.347" starttime="20210108 19:04:27.357"></status>
</kw>
<msg timestamp="20210108 19:04:31.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:04:31.347" starttime="20210108 19:04:27.356"></status>
</kw>
<msg timestamp="20210108 19:04:31.348" level="INFO">${result} = 2021-01-08 19:04:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:04:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210108 19:04:31.348" starttime="20210108 19:04:27.356"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:04:31.353" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:04:33.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:04:33.559" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 19:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 19:04 ofs://om/volume1/bucket1/ozone-57902
-rw-...</msg>
<status status="PASS" endtime="20210108 19:04:33.560" starttime="20210108 19:04:31.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:04:33.561" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 19:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 19:04 ofs://om/volume1/bucket1/ozone-57902
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 19:02 ofs://om/volume1/bucket1/ozone-62827
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 19:01 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 19:04 ofs://om/volume1/bucket1/wordcount-lFTof8bF.txt</msg>
<status status="PASS" endtime="20210108 19:04:33.561" starttime="20210108 19:04:33.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:04:33.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:04:33.562" starttime="20210108 19:04:33.561"></status>
</kw>
<status status="PASS" endtime="20210108 19:04:33.562" starttime="20210108 19:04:31.350"></status>
</kw>
<msg timestamp="20210108 19:04:33.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:04:33.562" starttime="20210108 19:04:31.350"></status>
</kw>
<msg timestamp="20210108 19:04:33.563" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 19:00 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 19:04 ofs://om/volume1/bucket1/ozone-57902
-rw-...</msg>
<status status="PASS" endtime="20210108 19:04:33.563" starttime="20210108 19:04:31.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:04:33.563" starttime="20210108 19:04:33.563"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 19:04:33.564" critical="yes" starttime="20210108 19:04:27.346"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210108 19:04:33.565" starttime="20210108 19:04:27.279"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 19:02:52.838" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 19:02:52.838" starttime="20210108 19:02:52.838"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:02:52.839" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 19:02:52.839" starttime="20210108 19:02:52.839"></status>
</kw>
<status status="PASS" endtime="20210108 19:02:52.839" starttime="20210108 19:02:52.837"></status>
</kw>
<msg timestamp="20210108 19:02:52.839" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 19:02:52.840" starttime="20210108 19:02:52.837"></status>
</kw>
<status status="PASS" endtime="20210108 19:02:52.840" starttime="20210108 19:02:52.836"></status>
</kw>
<msg timestamp="20210108 19:02:52.840" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 19:02:52.840" starttime="20210108 19:02:52.836"></status>
</kw>
<msg timestamp="20210108 19:02:52.840" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 19:02:52.840" starttime="20210108 19:02:52.834"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 19:02:52.841" level="INFO">${random} = 62827</msg>
<status status="PASS" endtime="20210108 19:02:52.841" starttime="20210108 19:02:52.840"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:02:52.846" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-62827 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:02:56.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:02:56.789" level="INFO">${output} = 2021-01-08 19:02:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:02:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210108 19:02:56.789" starttime="20210108 19:02:52.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:02:56.791" level="INFO">2021-01-08 19:02:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:02:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 19:02:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 19:02:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 19:02:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AFEDB4981060-&gt;5eaff890-3686-4044-a27f-84ee0a62ba97
2021-01-08 19:02:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210108 19:02:56.791" starttime="20210108 19:02:56.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:02:56.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:02:56.792" starttime="20210108 19:02:56.792"></status>
</kw>
<status status="PASS" endtime="20210108 19:02:56.793" starttime="20210108 19:02:52.842"></status>
</kw>
<msg timestamp="20210108 19:02:56.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:02:56.793" starttime="20210108 19:02:52.842"></status>
</kw>
<msg timestamp="20210108 19:02:56.793" level="INFO">${result} = 2021-01-08 19:02:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:02:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210108 19:02:56.794" starttime="20210108 19:02:52.841"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:02:56.800" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:02:59.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:02:59.176" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 19:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 19:02 o3fs://bucket1.volume1.om/ozone-62827
dr...</msg>
<status status="PASS" endtime="20210108 19:02:59.176" starttime="20210108 19:02:56.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:02:59.178" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 19:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 19:02 o3fs://bucket1.volume1.om/ozone-62827
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 19:01 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210108 19:02:59.178" starttime="20210108 19:02:59.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:02:59.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:02:59.178" starttime="20210108 19:02:59.178"></status>
</kw>
<status status="PASS" endtime="20210108 19:02:59.179" starttime="20210108 19:02:56.797"></status>
</kw>
<msg timestamp="20210108 19:02:59.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:02:59.179" starttime="20210108 19:02:56.795"></status>
</kw>
<msg timestamp="20210108 19:02:59.179" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-08 19:00 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-08 19:02 o3fs://bucket1.volume1.om/ozone-62827
dr...</msg>
<status status="PASS" endtime="20210108 19:02:59.179" starttime="20210108 19:02:56.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:02:59.180" starttime="20210108 19:02:59.179"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 19:02:59.180" critical="yes" starttime="20210108 19:02:52.834"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210108 19:02:59.181" starttime="20210108 19:02:52.776"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:02:47.697" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:02:47.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:02:47.700" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210108 19:02:47.700" starttime="20210108 19:02:47.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:02:47.701" level="INFO">rm</msg>
<status status="PASS" endtime="20210108 19:02:47.701" starttime="20210108 19:02:47.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:02:47.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:02:47.702" starttime="20210108 19:02:47.701"></status>
</kw>
<status status="PASS" endtime="20210108 19:02:47.702" starttime="20210108 19:02:47.693"></status>
</kw>
<msg timestamp="20210108 19:02:47.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:02:47.703" starttime="20210108 19:02:47.693"></status>
</kw>
<msg timestamp="20210108 19:02:47.703" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210108 19:02:47.703" starttime="20210108 19:02:47.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:02:47.704" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:02:47.704" starttime="20210108 19:02:47.703"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:02:47.708" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:02:47.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:02:47.721" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:02:47.721" starttime="20210108 19:02:47.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:02:47.722" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:02:47.722" starttime="20210108 19:02:47.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:02:47.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:02:47.722" starttime="20210108 19:02:47.722"></status>
</kw>
<status status="PASS" endtime="20210108 19:02:47.723" starttime="20210108 19:02:47.706"></status>
</kw>
<msg timestamp="20210108 19:02:47.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:02:47.723" starttime="20210108 19:02:47.706"></status>
</kw>
<status status="PASS" endtime="20210108 19:02:47.723" starttime="20210108 19:02:47.705"></status>
</kw>
<status status="PASS" endtime="20210108 19:02:47.723" starttime="20210108 19:02:47.705"></status>
</kw>
<status status="PASS" endtime="20210108 19:02:47.723" starttime="20210108 19:02:47.692"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:02:47.724" critical="yes" starttime="20210108 19:02:47.691"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210108 19:02:47.725" starttime="20210108 19:02:47.634"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:00:28.760" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:00:28.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:00:28.763" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210108 19:00:28.763" starttime="20210108 19:00:28.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:00:28.764" level="INFO">om</msg>
<status status="PASS" endtime="20210108 19:00:28.764" starttime="20210108 19:00:28.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:00:28.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:00:28.766" starttime="20210108 19:00:28.765"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:28.766" starttime="20210108 19:00:28.755"></status>
</kw>
<msg timestamp="20210108 19:00:28.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:00:28.766" starttime="20210108 19:00:28.754"></status>
</kw>
<msg timestamp="20210108 19:00:28.766" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210108 19:00:28.766" starttime="20210108 19:00:28.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:00:28.767" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:00:28.767" starttime="20210108 19:00:28.766"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:00:28.771" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:00:28.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:00:28.789" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:00:28.789" starttime="20210108 19:00:28.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:00:28.790" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:00:28.790" starttime="20210108 19:00:28.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:00:28.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:00:28.790" starttime="20210108 19:00:28.790"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:28.791" starttime="20210108 19:00:28.769"></status>
</kw>
<msg timestamp="20210108 19:00:28.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:00:28.791" starttime="20210108 19:00:28.768"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:28.791" starttime="20210108 19:00:28.768"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:28.791" starttime="20210108 19:00:28.767"></status>
</kw>
<status status="PASS" endtime="20210108 19:00:28.791" starttime="20210108 19:00:28.753"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:00:28.792" critical="yes" starttime="20210108 19:00:28.752"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210108 19:00:28.793" starttime="20210108 19:00:28.694"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:04:39.053" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:04:39.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:04:39.059" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:04:39.059" starttime="20210108 19:04:39.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:04:39.060" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:04:39.060" starttime="20210108 19:04:39.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:04:39.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:04:39.061" starttime="20210108 19:04:39.061"></status>
</kw>
<status status="PASS" endtime="20210108 19:04:39.061" starttime="20210108 19:04:39.049"></status>
</kw>
<msg timestamp="20210108 19:04:39.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:04:39.062" starttime="20210108 19:04:39.048"></status>
</kw>
<msg timestamp="20210108 19:04:39.062" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:04:39.062" starttime="20210108 19:04:39.048"></status>
</kw>
<msg timestamp="20210108 19:04:39.062" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:04:39.062" starttime="20210108 19:04:39.047"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 19:04:39.067" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 19:04:39.067" starttime="20210108 19:04:39.066"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:04:39.068" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 19:04:39.068" starttime="20210108 19:04:39.067"></status>
</kw>
<status status="PASS" endtime="20210108 19:04:39.068" starttime="20210108 19:04:39.065"></status>
</kw>
<msg timestamp="20210108 19:04:39.068" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 19:04:39.068" starttime="20210108 19:04:39.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:04:39.070" starttime="20210108 19:04:39.070"></status>
</kw>
<msg timestamp="20210108 19:04:39.070" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210108 19:04:39.070" starttime="20210108 19:04:39.069"></status>
</kw>
<status status="PASS" endtime="20210108 19:04:39.071" starttime="20210108 19:04:39.064"></status>
</kw>
<msg timestamp="20210108 19:04:39.071" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 19:04:39.071" starttime="20210108 19:04:39.063"></status>
</kw>
<msg timestamp="20210108 19:04:39.071" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 19:04:39.071" starttime="20210108 19:04:39.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:04:39.074" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:05:10.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:05:10.961" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 19:04:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:04:41 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210108 19:05:10.961" starttime="20210108 19:04:39.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:05:10.962" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-08 19:04:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:04:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 19:04:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 19:04:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 19:04:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CD7E5DF6CC58-&gt;5eaff890-3686-4044-a27f-84ee0a62ba97
2021-01-08 19:04:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-08 19:04:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2021-01-08 19:04:42 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2021-01-08 19:04:43 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1610132683072, maxDate=1610737483072, sequenceNumber=3, masterKeyId=2))
2021-01-08 19:04:43 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e4 f1 8b 9b ee 2e 38 e4 f9 bd bb f0 2e 40 03 48 01 5a 0d 32 32 39 30 39 39 39 37 33 37 35 35 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-08 19:04:43 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1610132683072, maxDate=1610737483072, sequenceNumber=3, masterKeyId=2)
2021-01-08 19:04:43 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-08 19:04:43 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-08 19:04:43 INFO  JobSubmitter:202 - number of splits:3
2021-01-08 19:04:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1610132352346_0003
2021-01-08 19:04:43 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e4 f1 8b 9b ee 2e 38 e4 f9 bd bb f0 2e 40 03 48 01 5a 0d 32 32 39 30 39 39 39 37 33 37 35 35 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1610132683072, maxDate=1610737483072, sequenceNumber=3, masterKeyId=2)]
2021-01-08 19:04:44 INFO  Configuration:2795 - resource-types.xml not found
2021-01-08 19:04:44 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-08 19:04:44 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-08 19:04:44 INFO  YarnClientImpl:329 - Submitted application application_1610132352346_0003
2021-01-08 19:04:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1610132352346_0003/
2021-01-08 19:04:44 INFO  Job:1619 - Running job: job_1610132352346_0003
2021-01-08 19:04:52 INFO  Job:1640 - Job job_1610132352346_0003 running in uber mode : false
2021-01-08 19:04:52 INFO  Job:1647 -  map 0% reduce 0%
2021-01-08 19:05:03 INFO  Job:1647 -  map 33% reduce 0%
2021-01-08 19:05:04 INFO  Job:1647 -  map 67% reduce 0%
2021-01-08 19:05:05 INFO  Job:1647 -  map 100% reduce 0%
2021-01-08 19:05:09 INFO  Job:1647 -  map 100% reduce 100%
2021-01-08 19:05:10 INFO  Job:1658 - Job job_1610132352346_0003 completed successfully
2021-01-08 19:05:10 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065789
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47364
		Total time spent by all reduces in occupied slots (ms)=7794
		Total time spent by all map tasks (ms)=23682
		Total time spent by all reduce tasks (ms)=3897
		Total vcore-milliseconds taken by all map tasks=23682
		Total vcore-milliseconds taken by all reduce tasks=3897
		Total megabyte-milliseconds taken by all map tasks=48500736
		Total megabyte-milliseconds taken by all reduce tasks=7981056
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1011
		CPU time spent (ms)=7790
		Physical memory (bytes) snapshot=1556680704
		Virtual memory (bytes) snapshot=14054268928
		Total committed heap usage (bytes)=1421869056
		Peak Map Physical memory (bytes)=396197888
		Peak Map Virtual memory (bytes)=3510845440
		Peak Reduce Physical memory (bytes)=389914624
		Peak Reduce Virtual memory (bytes)=3524390912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 27.779 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210108 19:05:10.962" starttime="20210108 19:05:10.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:05:10.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:05:10.963" starttime="20210108 19:05:10.962"></status>
</kw>
<status status="PASS" endtime="20210108 19:05:10.963" starttime="20210108 19:04:39.072"></status>
</kw>
<msg timestamp="20210108 19:05:10.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:05:10.963" starttime="20210108 19:04:39.072"></status>
</kw>
<msg timestamp="20210108 19:05:10.964" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 19:04:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:04:41 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210108 19:05:10.964" starttime="20210108 19:04:39.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 19:05:10.965" starttime="20210108 19:05:10.964"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 19:05:10.965" critical="yes" starttime="20210108 19:04:39.046"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:05:10.970" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:05:10.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:05:10.980" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:05:10.980" starttime="20210108 19:05:10.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:05:10.981" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:05:10.981" starttime="20210108 19:05:10.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:05:10.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:05:10.982" starttime="20210108 19:05:10.981"></status>
</kw>
<status status="PASS" endtime="20210108 19:05:10.983" starttime="20210108 19:05:10.968"></status>
</kw>
<msg timestamp="20210108 19:05:10.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:05:10.983" starttime="20210108 19:05:10.967"></status>
</kw>
<msg timestamp="20210108 19:05:10.983" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:05:10.984" starttime="20210108 19:05:10.967"></status>
</kw>
<msg timestamp="20210108 19:05:10.984" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:05:10.984" starttime="20210108 19:05:10.966"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 19:05:10.985" level="INFO">${random} = PuNj7Gi0</msg>
<status status="PASS" endtime="20210108 19:05:10.985" starttime="20210108 19:05:10.984"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 19:05:10.991" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 19:05:10.991" starttime="20210108 19:05:10.990"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:05:10.992" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 19:05:10.993" starttime="20210108 19:05:10.992"></status>
</kw>
<status status="PASS" endtime="20210108 19:05:10.993" starttime="20210108 19:05:10.990"></status>
</kw>
<msg timestamp="20210108 19:05:10.994" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 19:05:10.994" starttime="20210108 19:05:10.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:05:10.995" starttime="20210108 19:05:10.995"></status>
</kw>
<msg timestamp="20210108 19:05:10.995" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210108 19:05:10.995" starttime="20210108 19:05:10.994"></status>
</kw>
<status status="PASS" endtime="20210108 19:05:10.996" starttime="20210108 19:05:10.987"></status>
</kw>
<msg timestamp="20210108 19:05:10.996" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 19:05:10.996" starttime="20210108 19:05:10.986"></status>
</kw>
<msg timestamp="20210108 19:05:10.997" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210108 19:05:10.997" starttime="20210108 19:05:10.985"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 19:05:11.000" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 19:05:11.000" starttime="20210108 19:05:10.999"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:05:11.001" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 19:05:11.001" starttime="20210108 19:05:11.000"></status>
</kw>
<status status="PASS" endtime="20210108 19:05:11.001" starttime="20210108 19:05:10.999"></status>
</kw>
<msg timestamp="20210108 19:05:11.001" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 19:05:11.001" starttime="20210108 19:05:10.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 19:05:11.003" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210108 19:05:11.003" starttime="20210108 19:05:11.002"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:05:11.003" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210108 19:05:11.003" starttime="20210108 19:05:11.003"></status>
</kw>
<status status="PASS" endtime="20210108 19:05:11.004" starttime="20210108 19:05:11.002"></status>
</kw>
<msg timestamp="20210108 19:05:11.004" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210108 19:05:11.004" starttime="20210108 19:05:11.001"></status>
</kw>
<status status="PASS" endtime="20210108 19:05:11.004" starttime="20210108 19:05:10.998"></status>
</kw>
<msg timestamp="20210108 19:05:11.004" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210108 19:05:11.004" starttime="20210108 19:05:10.997"></status>
</kw>
<msg timestamp="20210108 19:05:11.004" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210108 19:05:11.005" starttime="20210108 19:05:10.997"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210108 19:05:11.009" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210108 19:05:11.009" starttime="20210108 19:05:11.009"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:05:11.009" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210108 19:05:11.010" starttime="20210108 19:05:11.009"></status>
</kw>
<status status="PASS" endtime="20210108 19:05:11.010" starttime="20210108 19:05:11.008"></status>
</kw>
<msg timestamp="20210108 19:05:11.010" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210108 19:05:11.010" starttime="20210108 19:05:11.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 19:05:11.012" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210108 19:05:11.012" starttime="20210108 19:05:11.011"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:05:11.012" level="INFO">${result} = /wordcount-PuNj7Gi0.txt</msg>
<status status="PASS" endtime="20210108 19:05:11.012" starttime="20210108 19:05:11.012"></status>
</kw>
<status status="PASS" endtime="20210108 19:05:11.013" starttime="20210108 19:05:11.010"></status>
</kw>
<msg timestamp="20210108 19:05:11.013" level="INFO">${path_with_leading} = /wordcount-PuNj7Gi0.txt</msg>
<status status="PASS" endtime="20210108 19:05:11.013" starttime="20210108 19:05:11.010"></status>
</kw>
<status status="PASS" endtime="20210108 19:05:11.013" starttime="20210108 19:05:11.006"></status>
</kw>
<msg timestamp="20210108 19:05:11.014" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-PuNj7Gi0.txt</msg>
<status status="PASS" endtime="20210108 19:05:11.014" starttime="20210108 19:05:11.005"></status>
</kw>
<msg timestamp="20210108 19:05:11.014" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-PuNj7Gi0.txt</msg>
<status status="PASS" endtime="20210108 19:05:11.014" starttime="20210108 19:05:11.005"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:05:11.018" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-PuNj7Gi0.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:05:44.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:05:44.641" level="INFO">${output} = 2021-01-08 19:05:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2021-01-08 19:05:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
20...</msg>
<status status="PASS" endtime="20210108 19:05:44.641" starttime="20210108 19:05:11.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:05:44.642" level="INFO">2021-01-08 19:05:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2021-01-08 19:05:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2021-01-08 19:05:13 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1610132713459, maxDate=1610737513459, sequenceNumber=4, masterKeyId=2))
2021-01-08 19:05:13 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 80 df 8d 9b ee 2e 38 80 e7 bf bb f0 2e 40 04 48 01 5a 0d 32 32 39 30 39 39 39 37 33 37 35 35 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-08 19:05:13 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1610132713459, maxDate=1610737513459, sequenceNumber=4, masterKeyId=2)
2021-01-08 19:05:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-08 19:05:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:05:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 19:05:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 19:05:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 19:05:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8211094EA14E-&gt;5eaff890-3686-4044-a27f-84ee0a62ba97
2021-01-08 19:05:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 19:05:15 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-08 19:05:15 INFO  JobSubmitter:202 - number of splits:3
2021-01-08 19:05:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1610132352346_0004
2021-01-08 19:05:15 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 80 df 8d 9b ee 2e 38 80 e7 bf bb f0 2e 40 04 48 01 5a 0d 32 32 39 30 39 39 39 37 33 37 35 35 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1610132713459, maxDate=1610737513459, sequenceNumber=4, masterKeyId=2)]
2021-01-08 19:05:15 INFO  Configuration:2795 - resource-types.xml not found
2021-01-08 19:05:15 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-08 19:05:15 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-08 19:05:16 INFO  YarnClientImpl:329 - Submitted application application_1610132352346_0004
2021-01-08 19:05:16 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1610132352346_0004/
2021-01-08 19:05:16 INFO  Job:1619 - Running job: job_1610132352346_0004
2021-01-08 19:05:25 INFO  Job:1640 - Job job_1610132352346_0004 running in uber mode : false
2021-01-08 19:05:25 INFO  Job:1647 -  map 0% reduce 0%
2021-01-08 19:05:37 INFO  Job:1647 -  map 33% reduce 0%
2021-01-08 19:05:38 INFO  Job:1647 -  map 67% reduce 0%
2021-01-08 19:05:39 INFO  Job:1647 -  map 100% reduce 0%
2021-01-08 19:05:44 INFO  Job:1647 -  map 100% reduce 100%
2021-01-08 19:05:44 INFO  Job:1658 - Job job_1610132352346_0004 completed successfully
2021-01-08 19:05:44 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128455
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50302
		Total time spent by all reduces in occupied slots (ms)=8094
		Total time spent by all map tasks (ms)=25151
		Total time spent by all reduce tasks (ms)=4047
		Total vcore-milliseconds taken by all map tasks=25151
		Total vcore-milliseconds taken by all reduce tasks=4047
		Total megabyte-milliseconds taken by all map tasks=51509248
		Total megabyte-milliseconds taken by all reduce tasks=8288256
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1194
		CPU time spent (ms)=8180
		Physical memory (bytes) snapshot=1472897024
		Virtual memory (bytes) snapshot=14054268928
		Total committed heap usage (bytes)=1208483840
		Peak Map Physical memory (bytes)=386936832
		Peak Map Virtual memory (bytes)=3510157312
		Peak Reduce Physical memory (bytes)=315584512
		Peak Reduce Virtual memory (bytes)=3527110656
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210108 19:05:44.642" starttime="20210108 19:05:44.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:05:44.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:05:44.643" starttime="20210108 19:05:44.643"></status>
</kw>
<status status="PASS" endtime="20210108 19:05:44.643" starttime="20210108 19:05:11.015"></status>
</kw>
<msg timestamp="20210108 19:05:44.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:05:44.643" starttime="20210108 19:05:11.015"></status>
</kw>
<msg timestamp="20210108 19:05:44.644" level="INFO">${output} = 2021-01-08 19:05:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2021-01-08 19:05:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
20...</msg>
<status status="PASS" endtime="20210108 19:05:44.644" starttime="20210108 19:05:11.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210108 19:05:44.645" starttime="20210108 19:05:44.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 19:05:44.645" starttime="20210108 19:05:44.645"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 19:05:44.645" critical="yes" starttime="20210108 19:05:10.966"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210108 19:05:44.647" starttime="20210108 19:04:38.982"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:03:04.523" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:03:04.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:03:04.529" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:03:04.529" starttime="20210108 19:03:04.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:03:04.530" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:03:04.530" starttime="20210108 19:03:04.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:03:04.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:03:04.531" starttime="20210108 19:03:04.530"></status>
</kw>
<status status="PASS" endtime="20210108 19:03:04.531" starttime="20210108 19:03:04.518"></status>
</kw>
<msg timestamp="20210108 19:03:04.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:03:04.531" starttime="20210108 19:03:04.518"></status>
</kw>
<msg timestamp="20210108 19:03:04.532" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:03:04.532" starttime="20210108 19:03:04.518"></status>
</kw>
<msg timestamp="20210108 19:03:04.532" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:03:04.532" starttime="20210108 19:03:04.517"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 19:03:04.536" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 19:03:04.536" starttime="20210108 19:03:04.536"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:03:04.537" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 19:03:04.537" starttime="20210108 19:03:04.536"></status>
</kw>
<status status="PASS" endtime="20210108 19:03:04.537" starttime="20210108 19:03:04.535"></status>
</kw>
<msg timestamp="20210108 19:03:04.537" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 19:03:04.537" starttime="20210108 19:03:04.534"></status>
</kw>
<status status="PASS" endtime="20210108 19:03:04.538" starttime="20210108 19:03:04.533"></status>
</kw>
<msg timestamp="20210108 19:03:04.538" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 19:03:04.538" starttime="20210108 19:03:04.533"></status>
</kw>
<msg timestamp="20210108 19:03:04.538" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 19:03:04.538" starttime="20210108 19:03:04.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:03:04.542" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:03:45.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:03:45.207" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 19:03:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:03:06 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210108 19:03:45.207" starttime="20210108 19:03:04.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:03:45.209" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-08 19:03:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:03:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 19:03:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 19:03:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 19:03:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CD2C61A2941E-&gt;5eaff890-3686-4044-a27f-84ee0a62ba97
2021-01-08 19:03:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-08 19:03:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2021-01-08 19:03:08 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2021-01-08 19:03:09 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1610132588926, maxDate=1610737388926, sequenceNumber=1, masterKeyId=2))
2021-01-08 19:03:09 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8b 90 86 9b ee 2e 38 8b 98 b8 bb f0 2e 40 01 48 01 5a 0d 32 32 39 30 39 39 39 37 33 37 35 35 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-08 19:03:09 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1610132588926, maxDate=1610737388926, sequenceNumber=1, masterKeyId=2)
2021-01-08 19:03:09 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-08 19:03:09 INFO  JobSubmitter:202 - number of splits:3
2021-01-08 19:03:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1610132352346_0001
2021-01-08 19:03:09 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8b 90 86 9b ee 2e 38 8b 98 b8 bb f0 2e 40 01 48 01 5a 0d 32 32 39 30 39 39 39 37 33 37 35 35 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1610132588926, maxDate=1610737388926, sequenceNumber=1, masterKeyId=2)]
2021-01-08 19:03:10 INFO  Configuration:2795 - resource-types.xml not found
2021-01-08 19:03:10 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-08 19:03:10 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-08 19:03:11 INFO  YarnClientImpl:329 - Submitted application application_1610132352346_0001
2021-01-08 19:03:11 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1610132352346_0001/
2021-01-08 19:03:11 INFO  Job:1619 - Running job: job_1610132352346_0001
2021-01-08 19:03:23 INFO  Job:1640 - Job job_1610132352346_0001 running in uber mode : false
2021-01-08 19:03:23 INFO  Job:1647 -  map 0% reduce 0%
2021-01-08 19:03:35 INFO  Job:1647 -  map 33% reduce 0%
2021-01-08 19:03:36 INFO  Job:1647 -  map 67% reduce 0%
2021-01-08 19:03:37 INFO  Job:1647 -  map 100% reduce 0%
2021-01-08 19:03:41 INFO  Job:1647 -  map 100% reduce 100%
2021-01-08 19:03:44 INFO  Job:1658 - Job job_1610132352346_0001 completed successfully
2021-01-08 19:03:44 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1066001
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=54028
		Total time spent by all reduces in occupied slots (ms)=8464
		Total time spent by all map tasks (ms)=27014
		Total time spent by all reduce tasks (ms)=4232
		Total vcore-milliseconds taken by all map tasks=27014
		Total vcore-milliseconds taken by all reduce tasks=4232
		Total megabyte-milliseconds taken by all map tasks=55324672
		Total megabyte-milliseconds taken by all reduce tasks=8667136
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1232
		CPU time spent (ms)=7940
		Physical memory (bytes) snapshot=1478131712
		Virtual memory (bytes) snapshot=14055153664
		Total committed heap usage (bytes)=1262485504
		Peak Map Physical memory (bytes)=395706368
		Peak Map Virtual memory (bytes)=3510099968
		Peak Reduce Physical memory (bytes)=311083008
		Peak Reduce Virtual memory (bytes)=3527069696
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.557 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210108 19:03:45.209" starttime="20210108 19:03:45.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:03:45.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:03:45.210" starttime="20210108 19:03:45.210"></status>
</kw>
<status status="PASS" endtime="20210108 19:03:45.210" starttime="20210108 19:03:04.540"></status>
</kw>
<msg timestamp="20210108 19:03:45.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:03:45.211" starttime="20210108 19:03:04.539"></status>
</kw>
<msg timestamp="20210108 19:03:45.211" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-08 19:03:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:03:06 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210108 19:03:45.211" starttime="20210108 19:03:04.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 19:03:45.212" starttime="20210108 19:03:45.211"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 19:03:45.212" critical="yes" starttime="20210108 19:03:04.516"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:03:45.218" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:03:45.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:03:45.225" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:03:45.226" starttime="20210108 19:03:45.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:03:45.226" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:03:45.227" starttime="20210108 19:03:45.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:03:45.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:03:45.227" starttime="20210108 19:03:45.227"></status>
</kw>
<status status="PASS" endtime="20210108 19:03:45.228" starttime="20210108 19:03:45.215"></status>
</kw>
<msg timestamp="20210108 19:03:45.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:03:45.228" starttime="20210108 19:03:45.215"></status>
</kw>
<msg timestamp="20210108 19:03:45.228" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:03:45.228" starttime="20210108 19:03:45.214"></status>
</kw>
<msg timestamp="20210108 19:03:45.229" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210108 19:03:45.229" starttime="20210108 19:03:45.214"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 19:03:45.230" level="INFO">${random} = lFTof8bF</msg>
<status status="PASS" endtime="20210108 19:03:45.230" starttime="20210108 19:03:45.229"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 19:03:45.235" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 19:03:45.235" starttime="20210108 19:03:45.234"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:03:45.236" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 19:03:45.236" starttime="20210108 19:03:45.235"></status>
</kw>
<status status="PASS" endtime="20210108 19:03:45.236" starttime="20210108 19:03:45.233"></status>
</kw>
<msg timestamp="20210108 19:03:45.236" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 19:03:45.236" starttime="20210108 19:03:45.232"></status>
</kw>
<status status="PASS" endtime="20210108 19:03:45.237" starttime="20210108 19:03:45.232"></status>
</kw>
<msg timestamp="20210108 19:03:45.237" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 19:03:45.237" starttime="20210108 19:03:45.231"></status>
</kw>
<msg timestamp="20210108 19:03:45.237" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210108 19:03:45.237" starttime="20210108 19:03:45.230"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 19:03:45.241" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 19:03:45.241" starttime="20210108 19:03:45.241"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:03:45.242" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 19:03:45.242" starttime="20210108 19:03:45.242"></status>
</kw>
<status status="PASS" endtime="20210108 19:03:45.243" starttime="20210108 19:03:45.240"></status>
</kw>
<msg timestamp="20210108 19:03:45.243" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 19:03:45.243" starttime="20210108 19:03:45.239"></status>
</kw>
<status status="PASS" endtime="20210108 19:03:45.243" starttime="20210108 19:03:45.239"></status>
</kw>
<msg timestamp="20210108 19:03:45.243" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210108 19:03:45.243" starttime="20210108 19:03:45.238"></status>
</kw>
<msg timestamp="20210108 19:03:45.243" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210108 19:03:45.244" starttime="20210108 19:03:45.237"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210108 19:03:45.247" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210108 19:03:45.247" starttime="20210108 19:03:45.246"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:03:45.248" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210108 19:03:45.248" starttime="20210108 19:03:45.247"></status>
</kw>
<status status="PASS" endtime="20210108 19:03:45.248" starttime="20210108 19:03:45.246"></status>
</kw>
<msg timestamp="20210108 19:03:45.248" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210108 19:03:45.248" starttime="20210108 19:03:45.246"></status>
</kw>
<status status="PASS" endtime="20210108 19:03:45.248" starttime="20210108 19:03:45.245"></status>
</kw>
<msg timestamp="20210108 19:03:45.249" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-lFTof8bF.txt</msg>
<status status="PASS" endtime="20210108 19:03:45.249" starttime="20210108 19:03:45.244"></status>
</kw>
<msg timestamp="20210108 19:03:45.249" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-lFTof8bF.txt</msg>
<status status="PASS" endtime="20210108 19:03:45.249" starttime="20210108 19:03:45.244"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:03:45.252" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-lFTof8bF.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:04:21.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:04:21.294" level="INFO">${output} = 2021-01-08 19:03:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2021-01-08 19:03:47 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
20...</msg>
<status status="PASS" endtime="20210108 19:04:21.294" starttime="20210108 19:03:45.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:04:21.295" level="INFO">2021-01-08 19:03:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2021-01-08 19:03:47 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2021-01-08 19:03:47 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1610132627857, maxDate=1610737427857, sequenceNumber=2, masterKeyId=2))
2021-01-08 19:03:47 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a3 c2 88 9b ee 2e 38 a3 ca ba bb f0 2e 40 02 48 01 5a 0d 32 32 39 30 39 39 39 37 33 37 35 35 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-08 19:03:47 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1610132627857, maxDate=1610737427857, sequenceNumber=2, masterKeyId=2)
2021-01-08 19:03:47 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-08 19:03:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-08 19:03:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-08 19:03:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-08 19:03:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 19:03:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DF6BAB4436BE-&gt;5eaff890-3686-4044-a27f-84ee0a62ba97
2021-01-08 19:03:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 19:03:49 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-08 19:03:51 INFO  JobSubmitter:202 - number of splits:3
2021-01-08 19:03:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1610132352346_0002
2021-01-08 19:03:51 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a3 c2 88 9b ee 2e 38 a3 ca ba bb f0 2e 40 02 48 01 5a 0d 32 32 39 30 39 39 39 37 33 37 35 35 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1610132627857, maxDate=1610737427857, sequenceNumber=2, masterKeyId=2)]
2021-01-08 19:03:52 INFO  Configuration:2795 - resource-types.xml not found
2021-01-08 19:03:52 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-08 19:03:52 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-08 19:03:53 INFO  YarnClientImpl:329 - Submitted application application_1610132352346_0002
2021-01-08 19:03:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1610132352346_0002/
2021-01-08 19:03:53 INFO  Job:1619 - Running job: job_1610132352346_0002
2021-01-08 19:04:01 INFO  Job:1640 - Job job_1610132352346_0002 running in uber mode : false
2021-01-08 19:04:01 INFO  Job:1647 -  map 0% reduce 0%
2021-01-08 19:04:12 INFO  Job:1647 -  map 33% reduce 0%
2021-01-08 19:04:14 INFO  Job:1647 -  map 67% reduce 0%
2021-01-08 19:04:15 INFO  Job:1647 -  map 100% reduce 0%
2021-01-08 19:04:19 INFO  Job:1647 -  map 100% reduce 100%
2021-01-08 19:04:20 INFO  Job:1658 - Job job_1610132352346_0002 completed successfully
2021-01-08 19:04:20 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128539
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50524
		Total time spent by all reduces in occupied slots (ms)=7410
		Total time spent by all map tasks (ms)=25262
		Total time spent by all reduce tasks (ms)=3705
		Total vcore-milliseconds taken by all map tasks=25262
		Total vcore-milliseconds taken by all reduce tasks=3705
		Total megabyte-milliseconds taken by all map tasks=51736576
		Total megabyte-milliseconds taken by all reduce tasks=7587840
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1176
		CPU time spent (ms)=8200
		Physical memory (bytes) snapshot=1443868672
		Virtual memory (bytes) snapshot=14035898368
		Total committed heap usage (bytes)=1201143808
		Peak Map Physical memory (bytes)=383881216
		Peak Map Virtual memory (bytes)=3508412416
		Peak Reduce Physical memory (bytes)=316850176
		Peak Reduce Virtual memory (bytes)=3511857152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210108 19:04:21.295" starttime="20210108 19:04:21.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:04:21.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:04:21.296" starttime="20210108 19:04:21.295"></status>
</kw>
<status status="PASS" endtime="20210108 19:04:21.296" starttime="20210108 19:03:45.250"></status>
</kw>
<msg timestamp="20210108 19:04:21.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:04:21.297" starttime="20210108 19:03:45.250"></status>
</kw>
<msg timestamp="20210108 19:04:21.297" level="INFO">${output} = 2021-01-08 19:03:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2021-01-08 19:03:47 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
20...</msg>
<status status="PASS" endtime="20210108 19:04:21.297" starttime="20210108 19:03:45.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210108 19:04:21.298" starttime="20210108 19:04:21.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210108 19:04:21.298" starttime="20210108 19:04:21.298"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210108 19:04:21.298" critical="yes" starttime="20210108 19:03:45.213"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210108 19:04:21.300" starttime="20210108 19:03:04.456"></status>
</suite>
<status status="PASS" elapsedtime="204114" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
