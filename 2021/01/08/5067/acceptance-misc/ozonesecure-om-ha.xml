<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210108 19:13:15.163" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:08:30.228" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:08:46.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:08:46.072" level="INFO">${output} = 2021-01-08 19:08:32,179 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 19:08:32,363 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210108 19:08:46.072" starttime="20210108 19:08:30.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:08:46.073" level="INFO">2021-01-08 19:08:32,179 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 19:08:32,363 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-08 19:08:32,365 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-08 19:08:32,538 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-08 19:08:32,552 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2021-01-08 19:08:33,553 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:34,554 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:35,557 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:35,603 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2021-01-08 19:08:36,069 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-08 19:08:36,559 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:37,563 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:38,564 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:38,789 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-08 19:08:39,203 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-08 19:08:39,204 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-0A5774EEAB0D-&gt;5349625c-7f18-45eb-80eb-c6c01acba52a
2021-01-08 19:08:39,204 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-08 19:08:39,564 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:40,566 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:41,567 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:42,568 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:43,568 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:44,572 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:45,572 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-08 19:08:45,705 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=8195.423384, max=8195.423384, mean=8195.423384, stddev=0.0, median=8195.423384, p75=8195.423384, p95=8195.423384, p98=8195.423384, p99=8195.423384, p999=8195.423384, mean_rate=0.1068612308302919, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-08 19:08:45,707 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 13
2021-01-08 19:08:45,719 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-08 19:08:45,719 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210108 19:08:46.074" starttime="20210108 19:08:46.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:08:46.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:08:46.074" starttime="20210108 19:08:46.074"></status>
</kw>
<status status="PASS" endtime="20210108 19:08:46.075" starttime="20210108 19:08:30.224"></status>
</kw>
<msg timestamp="20210108 19:08:46.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:08:46.075" starttime="20210108 19:08:30.223"></status>
</kw>
<msg timestamp="20210108 19:08:46.075" level="INFO">${result} = 2021-01-08 19:08:32,179 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 19:08:32,363 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210108 19:08:46.075" starttime="20210108 19:08:30.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210108 19:08:46.076" starttime="20210108 19:08:46.076"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 19:08:46.076" critical="yes" starttime="20210108 19:08:30.222"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:08:46.084" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:08:51.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:08:51.617" level="INFO">${output} = 2021-01-08 19:08:48,038 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 19:08:48,265 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210108 19:08:51.617" starttime="20210108 19:08:46.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:08:51.618" level="INFO">2021-01-08 19:08:48,038 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 19:08:48,265 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-08 19:08:48,265 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-08 19:08:48,431 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-01-08 19:08:48,450 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2021-01-08 19:08:49,454 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:50,454 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:51,455 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-08 19:08:51,574 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=336.862317, max=336.862317, mean=336.862317, stddev=0.0, median=336.862317, p75=336.862317, p95=336.862317, p98=336.862317, p99=336.862317, p999=336.862317, mean_rate=0.7619600712075459, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-08 19:08:51,574 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-01-08 19:08:51,574 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-08 19:08:51,574 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210108 19:08:51.618" starttime="20210108 19:08:51.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:08:51.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:08:51.619" starttime="20210108 19:08:51.618"></status>
</kw>
<status status="PASS" endtime="20210108 19:08:51.619" starttime="20210108 19:08:46.080"></status>
</kw>
<msg timestamp="20210108 19:08:51.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:08:51.619" starttime="20210108 19:08:46.080"></status>
</kw>
<msg timestamp="20210108 19:08:51.620" level="INFO">${result} = 2021-01-08 19:08:48,038 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 19:08:48,265 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210108 19:08:51.620" starttime="20210108 19:08:46.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210108 19:08:51.620" starttime="20210108 19:08:51.620"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 19:08:51.621" critical="yes" starttime="20210108 19:08:46.078"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:08:51.626" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:08:56.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:08:56.731" level="INFO">${output} = 2021-01-08 19:08:53,468 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 19:08:53,695 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210108 19:08:56.731" starttime="20210108 19:08:51.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:08:56.732" level="INFO">2021-01-08 19:08:53,468 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 19:08:53,695 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-08 19:08:53,696 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-08 19:08:53,890 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-01-08 19:08:53,916 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2021-01-08 19:08:54,922 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:08:55,922 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-08 19:08:56,603 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=95.998334, max=95.998334, mean=95.998334, stddev=0.0, median=95.998334, p75=95.998334, p95=95.998334, p98=95.998334, p99=95.998334, p999=95.998334, mean_rate=0.8789338636299937, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-08 19:08:56,606 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-01-08 19:08:56,607 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-08 19:08:56,607 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210108 19:08:56.733" starttime="20210108 19:08:56.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:08:56.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:08:56.734" starttime="20210108 19:08:56.733"></status>
</kw>
<status status="PASS" endtime="20210108 19:08:56.734" starttime="20210108 19:08:51.624"></status>
</kw>
<msg timestamp="20210108 19:08:56.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:08:56.734" starttime="20210108 19:08:51.623"></status>
</kw>
<msg timestamp="20210108 19:08:56.735" level="INFO">${result} = 2021-01-08 19:08:53,468 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 19:08:53,695 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210108 19:08:56.735" starttime="20210108 19:08:51.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210108 19:08:56.736" starttime="20210108 19:08:56.735"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 19:08:56.736" critical="yes" starttime="20210108 19:08:51.622"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210108 19:08:56.737" starttime="20210108 19:08:30.203"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:08:56.750" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:09:04.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:09:04.082" level="INFO">${output} = 2021-01-08 19:08:58,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 19:08:58,777 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210108 19:09:04.082" starttime="20210108 19:08:56.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:09:04.084" level="INFO">2021-01-08 19:08:58,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 19:08:58,777 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-08 19:08:58,777 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-08 19:08:58,960 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-08 19:08:58,971 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2021-01-08 19:08:59,980 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:09:00,980 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:09:01,811 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-08 19:09:01,980 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-08 19:09:02,981 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-08 19:09:03,715 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=214.40743, max=214.40743, mean=214.40743, stddev=0.0, median=214.40743, p75=214.40743, p95=214.40743, p98=214.40743, p99=214.40743, p999=214.40743, mean_rate=0.9686312489569293, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-08 19:09:03,715 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-01-08 19:09:03,716 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-08 19:09:03,716 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210108 19:09:04.084" starttime="20210108 19:09:04.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:09:04.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:09:04.085" starttime="20210108 19:09:04.084"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:04.085" starttime="20210108 19:08:56.747"></status>
</kw>
<msg timestamp="20210108 19:09:04.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:09:04.085" starttime="20210108 19:08:56.747"></status>
</kw>
<msg timestamp="20210108 19:09:04.086" level="INFO">${result} = 2021-01-08 19:08:58,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-08 19:08:58,777 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210108 19:09:04.086" starttime="20210108 19:08:56.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210108 19:09:04.086" starttime="20210108 19:09:04.086"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210108 19:09:04.087" critical="yes" starttime="20210108 19:08:56.745"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210108 19:09:04.089" starttime="20210108 19:08:56.740"></status>
</suite>
<status status="PASS" endtime="20210108 19:09:04.093" starttime="20210108 19:08:30.171"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:08:23.848" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:08:23.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:08:23.849" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:08:23.849" starttime="20210108 19:08:23.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:08:23.850" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:08:23.850" starttime="20210108 19:08:23.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:08:23.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:08:23.851" starttime="20210108 19:08:23.850"></status>
</kw>
<status status="PASS" endtime="20210108 19:08:23.851" starttime="20210108 19:08:23.842"></status>
</kw>
<msg timestamp="20210108 19:08:23.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:08:23.852" starttime="20210108 19:08:23.842"></status>
</kw>
<msg timestamp="20210108 19:08:23.852" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:08:23.852" starttime="20210108 19:08:23.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:08:23.853" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:08:23.853" starttime="20210108 19:08:23.852"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:08:23.856" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:08:23.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:08:23.875" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:08:23.875" starttime="20210108 19:08:23.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:08:23.876" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:08:23.876" starttime="20210108 19:08:23.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:08:23.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:08:23.876" starttime="20210108 19:08:23.876"></status>
</kw>
<status status="PASS" endtime="20210108 19:08:23.877" starttime="20210108 19:08:23.854"></status>
</kw>
<msg timestamp="20210108 19:08:23.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:08:23.877" starttime="20210108 19:08:23.854"></status>
</kw>
<status status="PASS" endtime="20210108 19:08:23.877" starttime="20210108 19:08:23.853"></status>
</kw>
<status status="PASS" endtime="20210108 19:08:23.877" starttime="20210108 19:08:23.853"></status>
</kw>
<status status="PASS" endtime="20210108 19:08:23.877" starttime="20210108 19:08:23.841"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:08:23.878" critical="yes" starttime="20210108 19:08:23.840"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210108 19:08:23.879" starttime="20210108 19:08:23.777"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210108 19:09:10.787" level="INFO">${random} = 04783</msg>
<status status="PASS" endtime="20210108 19:09:10.787" starttime="20210108 19:09:10.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210108 19:09:10.789" level="INFO">${source} = 04783-source</msg>
<status status="PASS" endtime="20210108 19:09:10.789" starttime="20210108 19:09:10.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210108 19:09:10.790" level="INFO">${target} = 04783-target</msg>
<status status="PASS" endtime="20210108 19:09:10.790" starttime="20210108 19:09:10.789"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:09:10.794" level="INFO">Running command 'ozone sh volume create 04783-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:09:14.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:09:14.806" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:09:14.806" starttime="20210108 19:09:10.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:09:14.807" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:09:14.808" starttime="20210108 19:09:14.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:09:14.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:09:14.809" starttime="20210108 19:09:14.808"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:14.809" starttime="20210108 19:09:10.791"></status>
</kw>
<msg timestamp="20210108 19:09:14.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:09:14.810" starttime="20210108 19:09:10.790"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:14.810" starttime="20210108 19:09:10.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:09:14.814" level="INFO">Running command 'ozone sh volume create 04783-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:09:18.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:09:18.693" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:09:18.693" starttime="20210108 19:09:14.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:09:18.694" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:09:18.694" starttime="20210108 19:09:18.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:09:18.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:09:18.695" starttime="20210108 19:09:18.695"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:18.696" starttime="20210108 19:09:14.812"></status>
</kw>
<msg timestamp="20210108 19:09:18.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:09:18.696" starttime="20210108 19:09:14.811"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:18.696" starttime="20210108 19:09:14.811"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:09:18.702" level="INFO">Running command 'ozone sh bucket create 04783-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:09:22.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:09:22.717" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:09:22.717" starttime="20210108 19:09:18.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:09:22.718" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:09:22.718" starttime="20210108 19:09:22.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:09:22.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:09:22.719" starttime="20210108 19:09:22.719"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:22.720" starttime="20210108 19:09:18.699"></status>
</kw>
<msg timestamp="20210108 19:09:22.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:09:22.720" starttime="20210108 19:09:18.698"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:22.721" starttime="20210108 19:09:18.698"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:09:22.727" level="INFO">Running command 'ozone sh key put 04783-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:09:30.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:09:30.789" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:09:30.789" starttime="20210108 19:09:22.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:09:30.790" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:09:30.791" starttime="20210108 19:09:30.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:09:30.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:09:30.791" starttime="20210108 19:09:30.791"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:30.791" starttime="20210108 19:09:22.724"></status>
</kw>
<msg timestamp="20210108 19:09:30.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:09:30.792" starttime="20210108 19:09:22.722"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:30.792" starttime="20210108 19:09:22.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:09:30.795" level="INFO">Running command 'ozone sh bucket create 04783-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:09:34.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:09:34.474" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:09:34.474" starttime="20210108 19:09:30.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:09:34.475" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:09:34.475" starttime="20210108 19:09:34.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:09:34.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:09:34.476" starttime="20210108 19:09:34.475"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:34.476" starttime="20210108 19:09:30.793"></status>
</kw>
<msg timestamp="20210108 19:09:34.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:09:34.476" starttime="20210108 19:09:30.793"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:34.477" starttime="20210108 19:09:30.792"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:09:34.480" level="INFO">Running command 'ozone sh bucket link 04783-source/readable-bucket 04783-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:09:38.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:09:38.047" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:09:38.047" starttime="20210108 19:09:34.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:09:38.048" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:09:38.049" starttime="20210108 19:09:38.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:09:38.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:09:38.049" starttime="20210108 19:09:38.049"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:38.049" starttime="20210108 19:09:34.478"></status>
</kw>
<msg timestamp="20210108 19:09:38.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:09:38.050" starttime="20210108 19:09:34.478"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:38.050" starttime="20210108 19:09:34.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:09:38.054" level="INFO">Running command 'ozone sh bucket link 04783-source/readable-bucket 04783-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:09:42.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:09:42.178" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:09:42.178" starttime="20210108 19:09:38.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:09:42.180" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:09:42.180" starttime="20210108 19:09:42.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:09:42.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:09:42.180" starttime="20210108 19:09:42.180"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:42.181" starttime="20210108 19:09:38.051"></status>
</kw>
<msg timestamp="20210108 19:09:42.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:09:42.181" starttime="20210108 19:09:38.051"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:42.181" starttime="20210108 19:09:38.050"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:09:42.185" level="INFO">Running command 'ozone sh bucket link 04783-source/unreadable-bucket 04783-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:09:45.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:09:45.984" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:09:45.984" starttime="20210108 19:09:42.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:09:45.985" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:09:45.985" starttime="20210108 19:09:45.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:09:45.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:09:45.986" starttime="20210108 19:09:45.985"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:45.986" starttime="20210108 19:09:42.182"></status>
</kw>
<msg timestamp="20210108 19:09:45.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:09:45.987" starttime="20210108 19:09:42.182"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:45.987" starttime="20210108 19:09:42.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:09:45.991" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 04783-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:09:49.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:09:49.797" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:09:49.797" starttime="20210108 19:09:45.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:09:49.798" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210108 19:09:49.798" starttime="20210108 19:09:49.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:09:49.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:09:49.799" starttime="20210108 19:09:49.798"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:49.799" starttime="20210108 19:09:45.988"></status>
</kw>
<msg timestamp="20210108 19:09:49.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:09:49.799" starttime="20210108 19:09:45.988"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:49.800" starttime="20210108 19:09:45.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:09:49.813" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 04783-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:09:54.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:09:54.103" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:09:54.103" starttime="20210108 19:09:49.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:09:54.104" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210108 19:09:54.104" starttime="20210108 19:09:54.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:09:54.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:09:54.105" starttime="20210108 19:09:54.104"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:54.105" starttime="20210108 19:09:49.809"></status>
</kw>
<msg timestamp="20210108 19:09:54.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:09:54.105" starttime="20210108 19:09:49.800"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:54.105" starttime="20210108 19:09:49.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:09:54.109" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 04783-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:09:58.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:09:58.162" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:09:58.163" starttime="20210108 19:09:54.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:09:58.164" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210108 19:09:58.164" starttime="20210108 19:09:58.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:09:58.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:09:58.165" starttime="20210108 19:09:58.164"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:58.165" starttime="20210108 19:09:54.107"></status>
</kw>
<msg timestamp="20210108 19:09:58.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:09:58.165" starttime="20210108 19:09:54.106"></status>
</kw>
<status status="PASS" endtime="20210108 19:09:58.165" starttime="20210108 19:09:54.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:09:58.170" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 04783-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:01.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:01.833" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:10:01.833" starttime="20210108 19:09:58.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:01.834" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210108 19:10:01.834" starttime="20210108 19:10:01.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:01.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:01.835" starttime="20210108 19:10:01.834"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:01.835" starttime="20210108 19:09:58.167"></status>
</kw>
<msg timestamp="20210108 19:10:01.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:01.835" starttime="20210108 19:09:58.166"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:01.836" starttime="20210108 19:09:58.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:01.840" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 04783-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:05.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:05.354" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:10:05.354" starttime="20210108 19:10:01.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:05.355" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210108 19:10:05.355" starttime="20210108 19:10:05.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:05.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:05.356" starttime="20210108 19:10:05.355"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:05.356" starttime="20210108 19:10:01.836"></status>
</kw>
<msg timestamp="20210108 19:10:05.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:05.357" starttime="20210108 19:10:01.836"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:05.357" starttime="20210108 19:10:01.836"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:05.357" starttime="20210108 19:09:18.697"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:05.357" starttime="20210108 19:09:18.697"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:05.358" starttime="20210108 19:09:10.787"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:05.364" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:05.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:05.367" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:10:05.367" starttime="20210108 19:10:05.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:05.368" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:10:05.368" starttime="20210108 19:10:05.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:05.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:05.369" starttime="20210108 19:10:05.368"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:05.369" starttime="20210108 19:10:05.361"></status>
</kw>
<msg timestamp="20210108 19:10:05.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:05.369" starttime="20210108 19:10:05.361"></status>
</kw>
<msg timestamp="20210108 19:10:05.369" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:10:05.369" starttime="20210108 19:10:05.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:10:05.371" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:10:05.371" starttime="20210108 19:10:05.370"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:05.375" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:10.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:10.428" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:10:10.428" starttime="20210108 19:10:05.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:10.429" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:10:10.429" starttime="20210108 19:10:10.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:10.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:10.430" starttime="20210108 19:10:10.430"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:10.431" starttime="20210108 19:10:05.372"></status>
</kw>
<msg timestamp="20210108 19:10:10.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:10.431" starttime="20210108 19:10:05.372"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:10.431" starttime="20210108 19:10:05.371"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:10.431" starttime="20210108 19:10:05.371"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:10.432" starttime="20210108 19:10:05.360"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:10.432" starttime="20210108 19:10:05.359"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:10.436" level="INFO">Running command 'ozone sh bucket link 04783-source/no-such-bucket 04783-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:14.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:14.350" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:10:14.351" starttime="20210108 19:10:10.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:14.352" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:10:14.352" starttime="20210108 19:10:14.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:14.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:14.353" starttime="20210108 19:10:14.352"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:14.353" starttime="20210108 19:10:10.433"></status>
</kw>
<msg timestamp="20210108 19:10:14.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:14.353" starttime="20210108 19:10:10.433"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:14.354" starttime="20210108 19:10:10.432"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:14.356" level="INFO">Running command 'ozone sh key list 04783-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:18.162" level="INFO">${rc} = 255</msg>
<msg timestamp="20210108 19:10:18.162" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:10:18.162" starttime="20210108 19:10:14.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:18.163" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210108 19:10:18.163" starttime="20210108 19:10:18.162"></status>
</kw>
<msg timestamp="20210108 19:10:18.164" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:10:18.164" starttime="20210108 19:10:14.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210108 19:10:18.164" starttime="20210108 19:10:18.164"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:10:18.164" critical="yes" starttime="20210108 19:10:05.358"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:18.171" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:18.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:18.173" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:10:18.173" starttime="20210108 19:10:18.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:18.174" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:10:18.174" starttime="20210108 19:10:18.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:18.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:18.175" starttime="20210108 19:10:18.174"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:18.175" starttime="20210108 19:10:18.168"></status>
</kw>
<msg timestamp="20210108 19:10:18.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:18.175" starttime="20210108 19:10:18.168"></status>
</kw>
<msg timestamp="20210108 19:10:18.176" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:10:18.176" starttime="20210108 19:10:18.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:10:18.176" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:10:18.176" starttime="20210108 19:10:18.176"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:18.181" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:18.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:18.198" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:10:18.198" starttime="20210108 19:10:18.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:18.199" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:10:18.199" starttime="20210108 19:10:18.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:18.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:18.200" starttime="20210108 19:10:18.199"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:18.200" starttime="20210108 19:10:18.178"></status>
</kw>
<msg timestamp="20210108 19:10:18.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:18.201" starttime="20210108 19:10:18.178"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:18.201" starttime="20210108 19:10:18.177"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:18.201" starttime="20210108 19:10:18.177"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:18.201" starttime="20210108 19:10:18.167"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:18.201" starttime="20210108 19:10:18.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:18.207" level="INFO">Running command 'ozone sh bucket link 04783-source/bucket1 04783-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:21.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:21.839" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:10:21.840" starttime="20210108 19:10:18.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:21.841" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:10:21.841" starttime="20210108 19:10:21.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:21.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:21.841" starttime="20210108 19:10:21.841"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:21.842" starttime="20210108 19:10:18.203"></status>
</kw>
<msg timestamp="20210108 19:10:21.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:21.842" starttime="20210108 19:10:18.202"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:21.842" starttime="20210108 19:10:18.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:21.846" level="INFO">Running command 'ozone sh bucket create 04783-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:25.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:25.683" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:10:25.683" starttime="20210108 19:10:21.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:25.684" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:10:25.684" starttime="20210108 19:10:25.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:25.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:25.685" starttime="20210108 19:10:25.685"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:25.685" starttime="20210108 19:10:21.844"></status>
</kw>
<msg timestamp="20210108 19:10:25.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:25.686" starttime="20210108 19:10:21.843"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:25.686" starttime="20210108 19:10:21.843"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:25.690" level="INFO">Running command 'ozone sh key put 04783-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:34.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:34.653" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:10:34.653" starttime="20210108 19:10:25.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:34.654" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:10:34.654" starttime="20210108 19:10:34.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:34.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:34.655" starttime="20210108 19:10:34.654"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:34.655" starttime="20210108 19:10:25.687"></status>
</kw>
<msg timestamp="20210108 19:10:34.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:34.655" starttime="20210108 19:10:25.687"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:34.656" starttime="20210108 19:10:25.686"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210108 19:10:34.658" level="INFO">${postfix} = 47050</msg>
<status status="PASS" endtime="20210108 19:10:34.658" starttime="20210108 19:10:34.657"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210108 19:10:34.658" level="INFO">${tmpfile} = /tmp/tempkey-47050</msg>
<status status="PASS" endtime="20210108 19:10:34.659" starttime="20210108 19:10:34.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:34.662" level="INFO">Running command 'ozone sh key get -f 04783-target/link1/key1 /tmp/tempkey-47050 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:40.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:40.117" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:10:40.117" starttime="20210108 19:10:34.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:40.118" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:10:40.118" starttime="20210108 19:10:40.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:40.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:40.119" starttime="20210108 19:10:40.118"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:40.119" starttime="20210108 19:10:34.659"></status>
</kw>
<msg timestamp="20210108 19:10:40.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:40.120" starttime="20210108 19:10:34.659"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:40.120" starttime="20210108 19:10:34.659"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210108 19:10:40.122" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-47050 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:40.125" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210108 19:10:40.125" starttime="20210108 19:10:40.120"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:40.128" level="INFO">Running command 'rm -f /tmp/tempkey-47050 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:40.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:40.131" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:10:40.132" starttime="20210108 19:10:40.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:40.132" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:10:40.132" starttime="20210108 19:10:40.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:40.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:40.133" starttime="20210108 19:10:40.133"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:40.134" starttime="20210108 19:10:40.126"></status>
</kw>
<msg timestamp="20210108 19:10:40.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:40.134" starttime="20210108 19:10:40.126"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:40.134" starttime="20210108 19:10:40.125"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:10:40.135" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210108 19:10:40.135" starttime="20210108 19:10:40.134"></status>
</kw>
<msg timestamp="20210108 19:10:40.135" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210108 19:10:40.135" starttime="20210108 19:10:34.656"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:10:40.136" starttime="20210108 19:10:40.135"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:40.136" starttime="20210108 19:10:34.656"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:10:40.136" critical="yes" starttime="20210108 19:10:18.165"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:40.141" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:40.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:40.143" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:10:40.143" starttime="20210108 19:10:40.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:40.144" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:10:40.144" starttime="20210108 19:10:40.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:40.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:40.145" starttime="20210108 19:10:40.145"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:40.146" starttime="20210108 19:10:40.139"></status>
</kw>
<msg timestamp="20210108 19:10:40.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:40.146" starttime="20210108 19:10:40.139"></status>
</kw>
<msg timestamp="20210108 19:10:40.146" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:10:40.146" starttime="20210108 19:10:40.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:10:40.147" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:10:40.147" starttime="20210108 19:10:40.146"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:40.151" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:40.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:40.172" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:10:40.173" starttime="20210108 19:10:40.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:40.174" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:10:40.174" starttime="20210108 19:10:40.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:40.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:40.175" starttime="20210108 19:10:40.174"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:40.175" starttime="20210108 19:10:40.149"></status>
</kw>
<msg timestamp="20210108 19:10:40.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:40.175" starttime="20210108 19:10:40.148"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:40.176" starttime="20210108 19:10:40.148"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:40.176" starttime="20210108 19:10:40.147"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:40.176" starttime="20210108 19:10:40.138"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:40.176" starttime="20210108 19:10:40.137"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:40.181" level="INFO">Running command 'ozone sh key put 04783-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:48.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:48.761" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:10:48.761" starttime="20210108 19:10:40.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:48.762" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:10:48.763" starttime="20210108 19:10:48.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:48.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:48.763" starttime="20210108 19:10:48.763"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:48.764" starttime="20210108 19:10:40.178"></status>
</kw>
<msg timestamp="20210108 19:10:48.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:48.764" starttime="20210108 19:10:40.178"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:48.764" starttime="20210108 19:10:40.177"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210108 19:10:48.766" level="INFO">${postfix} = 74858</msg>
<status status="PASS" endtime="20210108 19:10:48.766" starttime="20210108 19:10:48.765"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210108 19:10:48.766" level="INFO">${tmpfile} = /tmp/tempkey-74858</msg>
<status status="PASS" endtime="20210108 19:10:48.766" starttime="20210108 19:10:48.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:48.770" level="INFO">Running command 'ozone sh key get -f 04783-source/bucket1/key2 /tmp/tempkey-74858 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:54.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:54.560" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:10:54.560" starttime="20210108 19:10:48.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:54.561" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:10:54.561" starttime="20210108 19:10:54.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:54.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:54.562" starttime="20210108 19:10:54.561"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:54.562" starttime="20210108 19:10:48.767"></status>
</kw>
<msg timestamp="20210108 19:10:54.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:54.562" starttime="20210108 19:10:48.767"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:54.563" starttime="20210108 19:10:48.767"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210108 19:10:54.565" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-74858 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:54.568" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210108 19:10:54.568" starttime="20210108 19:10:54.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:54.573" level="INFO">Running command 'rm -f /tmp/tempkey-74858 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:54.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:54.576" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:10:54.576" starttime="20210108 19:10:54.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:54.577" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:10:54.577" starttime="20210108 19:10:54.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:54.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:54.578" starttime="20210108 19:10:54.577"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:54.578" starttime="20210108 19:10:54.570"></status>
</kw>
<msg timestamp="20210108 19:10:54.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:54.578" starttime="20210108 19:10:54.570"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:54.578" starttime="20210108 19:10:54.568"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:10:54.579" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210108 19:10:54.579" starttime="20210108 19:10:54.579"></status>
</kw>
<msg timestamp="20210108 19:10:54.579" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210108 19:10:54.579" starttime="20210108 19:10:48.765"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:10:54.580" starttime="20210108 19:10:54.580"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:54.580" starttime="20210108 19:10:48.764"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:10:54.581" critical="yes" starttime="20210108 19:10:40.137"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:54.587" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:54.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:54.590" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:10:54.590" starttime="20210108 19:10:54.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:54.591" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:10:54.591" starttime="20210108 19:10:54.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:54.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:54.592" starttime="20210108 19:10:54.591"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:54.592" starttime="20210108 19:10:54.584"></status>
</kw>
<msg timestamp="20210108 19:10:54.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:54.592" starttime="20210108 19:10:54.584"></status>
</kw>
<msg timestamp="20210108 19:10:54.592" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:10:54.593" starttime="20210108 19:10:54.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:10:54.593" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:10:54.593" starttime="20210108 19:10:54.593"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:54.597" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:54.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:54.614" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:10:54.614" starttime="20210108 19:10:54.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:54.615" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:10:54.615" starttime="20210108 19:10:54.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:54.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:54.616" starttime="20210108 19:10:54.615"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:54.616" starttime="20210108 19:10:54.595"></status>
</kw>
<msg timestamp="20210108 19:10:54.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:54.617" starttime="20210108 19:10:54.594"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:54.617" starttime="20210108 19:10:54.594"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:54.617" starttime="20210108 19:10:54.593"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:54.617" starttime="20210108 19:10:54.583"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:54.617" starttime="20210108 19:10:54.582"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:54.621" level="INFO">Running command 'ozone sh key list 04783-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:10:58.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:10:58.482" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210108 19:10:58.482" starttime="20210108 19:10:54.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:10:58.484" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210108 19:10:58.484" starttime="20210108 19:10:58.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:10:58.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:10:58.484" starttime="20210108 19:10:58.484"></status>
</kw>
<status status="PASS" endtime="20210108 19:10:58.485" starttime="20210108 19:10:54.618"></status>
</kw>
<msg timestamp="20210108 19:10:58.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:10:58.485" starttime="20210108 19:10:54.618"></status>
</kw>
<msg timestamp="20210108 19:10:58.485" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210108 19:10:58.485" starttime="20210108 19:10:54.618"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:10:58.491" level="INFO">Running command 'ozone sh key list 04783-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:02.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:02.488" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210108 19:11:02.488" starttime="20210108 19:10:58.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:02.490" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210108 19:11:02.490" starttime="20210108 19:11:02.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:02.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:02.491" starttime="20210108 19:11:02.490"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:02.491" starttime="20210108 19:10:58.487"></status>
</kw>
<msg timestamp="20210108 19:11:02.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:02.492" starttime="20210108 19:10:58.486"></status>
</kw>
<msg timestamp="20210108 19:11:02.492" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210108 19:11:02.492" starttime="20210108 19:10:58.486"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:11:02.493" starttime="20210108 19:11:02.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210108 19:11:02.494" starttime="20210108 19:11:02.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210108 19:11:02.495" starttime="20210108 19:11:02.494"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:11:02.495" critical="yes" starttime="20210108 19:10:54.581"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:02.502" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:02.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:02.504" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:11:02.504" starttime="20210108 19:11:02.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:02.506" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:11:02.506" starttime="20210108 19:11:02.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:02.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:02.507" starttime="20210108 19:11:02.506"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:02.507" starttime="20210108 19:11:02.499"></status>
</kw>
<msg timestamp="20210108 19:11:02.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:02.507" starttime="20210108 19:11:02.499"></status>
</kw>
<msg timestamp="20210108 19:11:02.507" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:11:02.507" starttime="20210108 19:11:02.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:11:02.508" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:11:02.508" starttime="20210108 19:11:02.508"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:02.512" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:02.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:02.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:11:02.524" starttime="20210108 19:11:02.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:02.526" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:11:02.526" starttime="20210108 19:11:02.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:02.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:02.527" starttime="20210108 19:11:02.526"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:02.527" starttime="20210108 19:11:02.510"></status>
</kw>
<msg timestamp="20210108 19:11:02.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:02.528" starttime="20210108 19:11:02.509"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:02.528" starttime="20210108 19:11:02.509"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:02.528" starttime="20210108 19:11:02.508"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:02.528" starttime="20210108 19:11:02.497"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:02.529" starttime="20210108 19:11:02.497"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:02.533" level="INFO">Running command 'ozone sh key delete 04783-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:06.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:06.629" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:11:06.629" starttime="20210108 19:11:02.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:06.631" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:11:06.631" starttime="20210108 19:11:06.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:06.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:06.634" starttime="20210108 19:11:06.631"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:06.634" starttime="20210108 19:11:02.530"></status>
</kw>
<msg timestamp="20210108 19:11:06.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:06.634" starttime="20210108 19:11:02.530"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:06.634" starttime="20210108 19:11:02.529"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:06.642" level="INFO">Running command 'ozone sh key list 04783-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:10.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:10.684" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210108 19:11:10.684" starttime="20210108 19:11:06.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:10.685" level="INFO">key1</msg>
<status status="PASS" endtime="20210108 19:11:10.686" starttime="20210108 19:11:10.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:10.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:10.686" starttime="20210108 19:11:10.686"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:10.687" starttime="20210108 19:11:06.636"></status>
</kw>
<msg timestamp="20210108 19:11:10.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:10.687" starttime="20210108 19:11:06.636"></status>
</kw>
<msg timestamp="20210108 19:11:10.687" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210108 19:11:10.687" starttime="20210108 19:11:06.635"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210108 19:11:10.688" starttime="20210108 19:11:10.687"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:11:10.688" critical="yes" starttime="20210108 19:11:02.496"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:10.697" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:10.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:10.700" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:11:10.700" starttime="20210108 19:11:10.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:10.701" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:11:10.701" starttime="20210108 19:11:10.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:10.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:10.702" starttime="20210108 19:11:10.701"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:10.702" starttime="20210108 19:11:10.695"></status>
</kw>
<msg timestamp="20210108 19:11:10.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:10.702" starttime="20210108 19:11:10.694"></status>
</kw>
<msg timestamp="20210108 19:11:10.703" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:11:10.703" starttime="20210108 19:11:10.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:11:10.704" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:11:10.704" starttime="20210108 19:11:10.703"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:10.709" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:15.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:15.724" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:11:15.724" starttime="20210108 19:11:10.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:15.725" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:11:15.726" starttime="20210108 19:11:15.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:15.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:15.726" starttime="20210108 19:11:15.726"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:15.727" starttime="20210108 19:11:10.705"></status>
</kw>
<msg timestamp="20210108 19:11:15.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:15.727" starttime="20210108 19:11:10.705"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:15.727" starttime="20210108 19:11:10.704"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:15.727" starttime="20210108 19:11:10.704"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:15.728" starttime="20210108 19:11:10.693"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:15.728" starttime="20210108 19:11:10.692"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:15.735" level="INFO">Running command 'ozone sh bucket list 04783-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:19.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:19.916" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:11:19.916" starttime="20210108 19:11:15.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:19.918" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:10:14.163Z",
  "modificationTime" : "2021-01-08T19:10:14.163Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:09:45.782Z",
  "modificationTime" : "2021-01-08T19:10:05.271Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:10:21.758Z",
  "modificationTime" : "2021-01-08T19:10:21.758Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:09:37.942Z",
  "modificationTime" : "2021-01-08T19:10:01.758Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:09:41.989Z",
  "modificationTime" : "2021-01-08T19:09:41.989Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210108 19:11:19.918" starttime="20210108 19:11:19.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:19.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:19.919" starttime="20210108 19:11:19.918"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:19.919" starttime="20210108 19:11:15.731"></status>
</kw>
<msg timestamp="20210108 19:11:19.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:19.920" starttime="20210108 19:11:15.731"></status>
</kw>
<msg timestamp="20210108 19:11:19.920" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:11:19.920" starttime="20210108 19:11:15.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210108 19:11:19.921" starttime="20210108 19:11:19.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210108 19:11:19.922" starttime="20210108 19:11:19.922"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:11:19.922" critical="yes" starttime="20210108 19:11:10.691"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:19.929" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:19.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:19.932" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:11:19.932" starttime="20210108 19:11:19.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:19.933" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:11:19.934" starttime="20210108 19:11:19.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:19.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:19.934" starttime="20210108 19:11:19.934"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:19.935" starttime="20210108 19:11:19.926"></status>
</kw>
<msg timestamp="20210108 19:11:19.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:19.935" starttime="20210108 19:11:19.926"></status>
</kw>
<msg timestamp="20210108 19:11:19.935" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:11:19.935" starttime="20210108 19:11:19.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:11:19.936" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:11:19.936" starttime="20210108 19:11:19.935"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:19.941" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:19.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:19.960" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:11:19.960" starttime="20210108 19:11:19.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:19.960" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:11:19.961" starttime="20210108 19:11:19.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:19.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:19.961" starttime="20210108 19:11:19.961"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:19.962" starttime="20210108 19:11:19.938"></status>
</kw>
<msg timestamp="20210108 19:11:19.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:19.962" starttime="20210108 19:11:19.938"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:19.962" starttime="20210108 19:11:19.937"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:19.962" starttime="20210108 19:11:19.937"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:19.962" starttime="20210108 19:11:19.925"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:19.962" starttime="20210108 19:11:19.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:19.966" level="INFO">Running command 'ozone sh bucket info 04783-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:23.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:23.999" level="INFO">${output} = 04783-source bucket1</msg>
<status status="PASS" endtime="20210108 19:11:24.000" starttime="20210108 19:11:19.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:24.001" level="INFO">04783-source bucket1</msg>
<status status="PASS" endtime="20210108 19:11:24.001" starttime="20210108 19:11:24.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:24.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:24.002" starttime="20210108 19:11:24.001"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:24.002" starttime="20210108 19:11:19.964"></status>
</kw>
<msg timestamp="20210108 19:11:24.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:24.002" starttime="20210108 19:11:19.963"></status>
</kw>
<msg timestamp="20210108 19:11:24.002" level="INFO">${result} = 04783-source bucket1</msg>
<status status="PASS" endtime="20210108 19:11:24.002" starttime="20210108 19:11:19.963"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210108 19:11:24.003" starttime="20210108 19:11:24.002"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:11:24.003" critical="yes" starttime="20210108 19:11:19.923"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:24.010" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:24.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:24.012" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:11:24.012" starttime="20210108 19:11:24.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:24.013" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:11:24.013" starttime="20210108 19:11:24.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:24.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:24.014" starttime="20210108 19:11:24.013"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:24.014" starttime="20210108 19:11:24.007"></status>
</kw>
<msg timestamp="20210108 19:11:24.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:24.015" starttime="20210108 19:11:24.007"></status>
</kw>
<msg timestamp="20210108 19:11:24.015" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:11:24.015" starttime="20210108 19:11:24.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:11:24.016" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:11:24.016" starttime="20210108 19:11:24.015"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:24.020" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:24.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:24.031" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:11:24.031" starttime="20210108 19:11:24.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:24.032" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:11:24.033" starttime="20210108 19:11:24.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:24.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:24.033" starttime="20210108 19:11:24.033"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:24.034" starttime="20210108 19:11:24.017"></status>
</kw>
<msg timestamp="20210108 19:11:24.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:24.034" starttime="20210108 19:11:24.017"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:24.034" starttime="20210108 19:11:24.016"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:24.034" starttime="20210108 19:11:24.016"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:24.034" starttime="20210108 19:11:24.006"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:24.034" starttime="20210108 19:11:24.006"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:24.038" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 04783-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:28.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:28.144" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:11:28.144" starttime="20210108 19:11:24.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:28.145" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210108 19:11:28.145" starttime="20210108 19:11:28.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:28.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:28.146" starttime="20210108 19:11:28.145"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:28.146" starttime="20210108 19:11:24.036"></status>
</kw>
<msg timestamp="20210108 19:11:28.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:28.146" starttime="20210108 19:11:24.035"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:28.147" starttime="20210108 19:11:24.035"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:28.151" level="INFO">Running command 'ozone sh bucket getacl 04783-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:32.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:32.049" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210108 19:11:32.049" starttime="20210108 19:11:28.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:32.050" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210108 19:11:32.050" starttime="20210108 19:11:32.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:32.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:32.051" starttime="20210108 19:11:32.050"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:32.051" starttime="20210108 19:11:28.148"></status>
</kw>
<msg timestamp="20210108 19:11:32.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:32.051" starttime="20210108 19:11:28.148"></status>
</kw>
<msg timestamp="20210108 19:11:32.052" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210108 19:11:32.052" starttime="20210108 19:11:28.147"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:11:32.053" starttime="20210108 19:11:32.052"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:32.053" starttime="20210108 19:11:28.147"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:32.057" level="INFO">Running command 'ozone sh bucket getacl 04783-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:36.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:36.043" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:11:36.043" starttime="20210108 19:11:32.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:36.044" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:11:36.045" starttime="20210108 19:11:36.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:36.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:36.045" starttime="20210108 19:11:36.045"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:36.045" starttime="20210108 19:11:32.055"></status>
</kw>
<msg timestamp="20210108 19:11:36.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:36.046" starttime="20210108 19:11:32.055"></status>
</kw>
<msg timestamp="20210108 19:11:36.046" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210108 19:11:36.046" starttime="20210108 19:11:32.054"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:11:36.047" starttime="20210108 19:11:36.046"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:36.047" starttime="20210108 19:11:32.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:36.051" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 04783-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:39.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:39.810" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:11:39.810" starttime="20210108 19:11:36.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:39.811" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210108 19:11:39.812" starttime="20210108 19:11:39.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:39.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:39.812" starttime="20210108 19:11:39.812"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:39.813" starttime="20210108 19:11:36.048"></status>
</kw>
<msg timestamp="20210108 19:11:39.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:39.813" starttime="20210108 19:11:36.048"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:39.813" starttime="20210108 19:11:36.047"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:39.819" level="INFO">Running command 'ozone sh bucket getacl 04783-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:43.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:43.946" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:11:43.946" starttime="20210108 19:11:39.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:43.948" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:11:43.948" starttime="20210108 19:11:43.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:43.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:43.949" starttime="20210108 19:11:43.948"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:43.949" starttime="20210108 19:11:39.815"></status>
</kw>
<msg timestamp="20210108 19:11:43.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:43.949" starttime="20210108 19:11:39.815"></status>
</kw>
<msg timestamp="20210108 19:11:43.950" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210108 19:11:43.950" starttime="20210108 19:11:39.814"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:11:43.951" starttime="20210108 19:11:43.950"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:43.951" starttime="20210108 19:11:39.813"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:43.956" level="INFO">Running command 'ozone sh bucket getacl 04783-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:47.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:47.771" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210108 19:11:47.771" starttime="20210108 19:11:43.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:47.773" level="INFO">READ</msg>
<status status="PASS" endtime="20210108 19:11:47.773" starttime="20210108 19:11:47.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:47.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:47.774" starttime="20210108 19:11:47.773"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:47.775" starttime="20210108 19:11:43.953"></status>
</kw>
<msg timestamp="20210108 19:11:47.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:47.775" starttime="20210108 19:11:43.952"></status>
</kw>
<msg timestamp="20210108 19:11:47.775" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210108 19:11:47.775" starttime="20210108 19:11:43.952"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:11:47.776" starttime="20210108 19:11:47.776"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:47.776" starttime="20210108 19:11:43.951"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:11:47.777" critical="yes" starttime="20210108 19:11:24.005"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:47.788" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:47.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:47.791" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:11:47.791" starttime="20210108 19:11:47.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:47.792" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:11:47.792" starttime="20210108 19:11:47.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:47.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:47.793" starttime="20210108 19:11:47.792"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:47.793" starttime="20210108 19:11:47.784"></status>
</kw>
<msg timestamp="20210108 19:11:47.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:47.793" starttime="20210108 19:11:47.783"></status>
</kw>
<msg timestamp="20210108 19:11:47.793" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:11:47.794" starttime="20210108 19:11:47.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:11:47.794" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:11:47.794" starttime="20210108 19:11:47.794"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:47.799" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:47.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:47.842" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:11:47.842" starttime="20210108 19:11:47.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:47.843" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:11:47.843" starttime="20210108 19:11:47.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:47.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:47.844" starttime="20210108 19:11:47.843"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:47.845" starttime="20210108 19:11:47.796"></status>
</kw>
<msg timestamp="20210108 19:11:47.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:47.845" starttime="20210108 19:11:47.796"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:47.845" starttime="20210108 19:11:47.795"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:47.845" starttime="20210108 19:11:47.795"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:47.845" starttime="20210108 19:11:47.780"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:47.846" starttime="20210108 19:11:47.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:47.850" level="INFO">Running command 'ozone sh bucket link 04783-source/bucket2 04783-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:51.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:51.633" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:11:51.633" starttime="20210108 19:11:47.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:51.634" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:11:51.634" starttime="20210108 19:11:51.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:51.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:51.635" starttime="20210108 19:11:51.634"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:51.635" starttime="20210108 19:11:47.847"></status>
</kw>
<msg timestamp="20210108 19:11:51.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:51.635" starttime="20210108 19:11:47.847"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:51.636" starttime="20210108 19:11:47.846"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:51.639" level="INFO">Running command 'ozone sh bucket create 04783-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:55.336" level="INFO">${rc} = 255</msg>
<msg timestamp="20210108 19:11:55.336" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:11:55.336" starttime="20210108 19:11:51.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:55.338" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210108 19:11:55.338" starttime="20210108 19:11:55.337"></status>
</kw>
<msg timestamp="20210108 19:11:55.338" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:11:55.338" starttime="20210108 19:11:51.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210108 19:11:55.339" starttime="20210108 19:11:55.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:55.343" level="INFO">Running command 'ozone sh bucket create 04783-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:11:59.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:11:59.061" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:11:59.061" starttime="20210108 19:11:55.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:11:59.062" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:11:59.062" starttime="20210108 19:11:59.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:11:59.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:11:59.063" starttime="20210108 19:11:59.063"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:59.064" starttime="20210108 19:11:55.340"></status>
</kw>
<msg timestamp="20210108 19:11:59.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:11:59.064" starttime="20210108 19:11:55.340"></status>
</kw>
<status status="PASS" endtime="20210108 19:11:59.064" starttime="20210108 19:11:55.339"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:11:59.067" level="INFO">Running command 'ozone sh bucket link 04783-source/bucket1 04783-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:02.765" level="INFO">${rc} = 255</msg>
<msg timestamp="20210108 19:12:02.765" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:02.765" starttime="20210108 19:11:59.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:02.766" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210108 19:12:02.766" starttime="20210108 19:12:02.765"></status>
</kw>
<msg timestamp="20210108 19:12:02.767" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:02.767" starttime="20210108 19:11:59.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210108 19:12:02.767" starttime="20210108 19:12:02.767"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:12:02.767" critical="yes" starttime="20210108 19:11:47.778"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:02.775" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:02.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:02.780" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:12:02.780" starttime="20210108 19:12:02.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:02.782" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:12:02.782" starttime="20210108 19:12:02.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:02.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:02.783" starttime="20210108 19:12:02.782"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.783" starttime="20210108 19:12:02.772"></status>
</kw>
<msg timestamp="20210108 19:12:02.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:02.784" starttime="20210108 19:12:02.772"></status>
</kw>
<msg timestamp="20210108 19:12:02.784" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:12:02.784" starttime="20210108 19:12:02.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:12:02.785" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:12:02.785" starttime="20210108 19:12:02.785"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:02.791" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:02.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:02.809" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:02.809" starttime="20210108 19:12:02.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:02.810" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:02.810" starttime="20210108 19:12:02.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:02.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:02.811" starttime="20210108 19:12:02.811"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.811" starttime="20210108 19:12:02.789"></status>
</kw>
<msg timestamp="20210108 19:12:02.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:02.812" starttime="20210108 19:12:02.788"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.812" starttime="20210108 19:12:02.787"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.812" starttime="20210108 19:12:02.786"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.812" starttime="20210108 19:12:02.771"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.812" starttime="20210108 19:12:02.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:02.817" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:02.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:02.820" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:02.820" starttime="20210108 19:12:02.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:02.821" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:02.821" starttime="20210108 19:12:02.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:02.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:02.822" starttime="20210108 19:12:02.822"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.822" starttime="20210108 19:12:02.814"></status>
</kw>
<msg timestamp="20210108 19:12:02.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:02.823" starttime="20210108 19:12:02.814"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.823" starttime="20210108 19:12:02.814"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:02.827" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:02.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:02.829" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:12:02.829" starttime="20210108 19:12:02.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:02.830" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:12:02.830" starttime="20210108 19:12:02.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:02.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:02.831" starttime="20210108 19:12:02.830"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.831" starttime="20210108 19:12:02.825"></status>
</kw>
<msg timestamp="20210108 19:12:02.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:02.831" starttime="20210108 19:12:02.824"></status>
</kw>
<msg timestamp="20210108 19:12:02.832" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:12:02.832" starttime="20210108 19:12:02.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:12:02.832" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:12:02.832" starttime="20210108 19:12:02.832"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:02.838" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:02.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:02.866" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:02.866" starttime="20210108 19:12:02.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:02.867" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:02.868" starttime="20210108 19:12:02.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:02.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:02.869" starttime="20210108 19:12:02.868"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.869" starttime="20210108 19:12:02.835"></status>
</kw>
<msg timestamp="20210108 19:12:02.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:02.869" starttime="20210108 19:12:02.834"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.869" starttime="20210108 19:12:02.833"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.869" starttime="20210108 19:12:02.833"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.870" starttime="20210108 19:12:02.823"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:02.870" starttime="20210108 19:12:02.823"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:02.872" level="INFO">Running command 'ozone sh key list 04783-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:06.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:06.758" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:06.758" starttime="20210108 19:12:02.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:06.759" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "04783-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-08T19:09:26.154Z",
  "modificationTime" : "2021-01-08T19:09:30.371Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210108 19:12:06.760" starttime="20210108 19:12:06.759"></status>
</kw>
<msg timestamp="20210108 19:12:06.760" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:06.760" starttime="20210108 19:12:02.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210108 19:12:06.761" starttime="20210108 19:12:06.760"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.761" starttime="20210108 19:12:02.813"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.761" starttime="20210108 19:12:02.812"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:12:06.761" critical="yes" starttime="20210108 19:12:02.768"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:06.768" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:06.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:06.771" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:12:06.771" starttime="20210108 19:12:06.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:06.772" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:12:06.772" starttime="20210108 19:12:06.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:06.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:06.772" starttime="20210108 19:12:06.772"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.773" starttime="20210108 19:12:06.765"></status>
</kw>
<msg timestamp="20210108 19:12:06.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:06.773" starttime="20210108 19:12:06.764"></status>
</kw>
<msg timestamp="20210108 19:12:06.774" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:12:06.774" starttime="20210108 19:12:06.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:12:06.774" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:12:06.774" starttime="20210108 19:12:06.774"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:06.779" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:06.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:06.792" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:06.792" starttime="20210108 19:12:06.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:06.792" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:06.793" starttime="20210108 19:12:06.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:06.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:06.793" starttime="20210108 19:12:06.793"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.794" starttime="20210108 19:12:06.776"></status>
</kw>
<msg timestamp="20210108 19:12:06.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:06.794" starttime="20210108 19:12:06.776"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.794" starttime="20210108 19:12:06.775"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.794" starttime="20210108 19:12:06.775"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.795" starttime="20210108 19:12:06.763"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.795" starttime="20210108 19:12:06.763"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:06.800" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:06.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:06.803" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:06.803" starttime="20210108 19:12:06.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:06.805" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:06.805" starttime="20210108 19:12:06.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:06.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:06.806" starttime="20210108 19:12:06.805"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.806" starttime="20210108 19:12:06.797"></status>
</kw>
<msg timestamp="20210108 19:12:06.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:06.806" starttime="20210108 19:12:06.797"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.807" starttime="20210108 19:12:06.796"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:06.811" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:06.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:06.814" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:12:06.814" starttime="20210108 19:12:06.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:06.815" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:12:06.815" starttime="20210108 19:12:06.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:06.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:06.816" starttime="20210108 19:12:06.815"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.816" starttime="20210108 19:12:06.809"></status>
</kw>
<msg timestamp="20210108 19:12:06.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:06.817" starttime="20210108 19:12:06.808"></status>
</kw>
<msg timestamp="20210108 19:12:06.817" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:12:06.817" starttime="20210108 19:12:06.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:12:06.818" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:12:06.818" starttime="20210108 19:12:06.817"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:06.822" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:06.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:06.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:06.839" starttime="20210108 19:12:06.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:06.840" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:06.840" starttime="20210108 19:12:06.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:06.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:06.841" starttime="20210108 19:12:06.841"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.842" starttime="20210108 19:12:06.820"></status>
</kw>
<msg timestamp="20210108 19:12:06.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:06.842" starttime="20210108 19:12:06.820"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.842" starttime="20210108 19:12:06.819"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.842" starttime="20210108 19:12:06.818"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.842" starttime="20210108 19:12:06.807"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:06.842" starttime="20210108 19:12:06.807"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:06.845" level="INFO">Running command 'ozone sh key list 04783-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:10.710" level="INFO">${rc} = 255</msg>
<msg timestamp="20210108 19:12:10.710" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:10.710" starttime="20210108 19:12:06.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:10.712" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 04783-target unreadable-link null</msg>
<status status="PASS" endtime="20210108 19:12:10.712" starttime="20210108 19:12:10.711"></status>
</kw>
<msg timestamp="20210108 19:12:10.712" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:10.712" starttime="20210108 19:12:06.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210108 19:12:10.713" starttime="20210108 19:12:10.713"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.714" starttime="20210108 19:12:06.795"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.714" starttime="20210108 19:12:06.795"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:12:10.714" critical="yes" starttime="20210108 19:12:06.762"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:10.720" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:10.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:10.723" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:12:10.723" starttime="20210108 19:12:10.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:10.724" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:12:10.724" starttime="20210108 19:12:10.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:10.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:10.725" starttime="20210108 19:12:10.724"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.725" starttime="20210108 19:12:10.718"></status>
</kw>
<msg timestamp="20210108 19:12:10.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:10.725" starttime="20210108 19:12:10.717"></status>
</kw>
<msg timestamp="20210108 19:12:10.726" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:12:10.726" starttime="20210108 19:12:10.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:12:10.726" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:12:10.726" starttime="20210108 19:12:10.726"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:10.731" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:10.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:10.755" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:10.755" starttime="20210108 19:12:10.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:10.756" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:10.756" starttime="20210108 19:12:10.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:10.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:10.757" starttime="20210108 19:12:10.756"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.757" starttime="20210108 19:12:10.728"></status>
</kw>
<msg timestamp="20210108 19:12:10.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:10.758" starttime="20210108 19:12:10.728"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.758" starttime="20210108 19:12:10.727"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.758" starttime="20210108 19:12:10.726"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.758" starttime="20210108 19:12:10.716"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.758" starttime="20210108 19:12:10.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:10.763" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:10.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:10.767" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:10.767" starttime="20210108 19:12:10.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:10.768" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:10.768" starttime="20210108 19:12:10.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:10.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:10.768" starttime="20210108 19:12:10.768"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.769" starttime="20210108 19:12:10.760"></status>
</kw>
<msg timestamp="20210108 19:12:10.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:10.769" starttime="20210108 19:12:10.760"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.769" starttime="20210108 19:12:10.759"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:10.774" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:10.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:10.776" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:12:10.776" starttime="20210108 19:12:10.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:10.777" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:12:10.777" starttime="20210108 19:12:10.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:10.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:10.778" starttime="20210108 19:12:10.777"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.778" starttime="20210108 19:12:10.771"></status>
</kw>
<msg timestamp="20210108 19:12:10.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:10.778" starttime="20210108 19:12:10.771"></status>
</kw>
<msg timestamp="20210108 19:12:10.779" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:12:10.779" starttime="20210108 19:12:10.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:12:10.779" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:12:10.779" starttime="20210108 19:12:10.779"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:10.783" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:10.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:10.800" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:10.800" starttime="20210108 19:12:10.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:10.801" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:10.801" starttime="20210108 19:12:10.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:10.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:10.801" starttime="20210108 19:12:10.801"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.802" starttime="20210108 19:12:10.781"></status>
</kw>
<msg timestamp="20210108 19:12:10.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:10.802" starttime="20210108 19:12:10.781"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.803" starttime="20210108 19:12:10.780"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.803" starttime="20210108 19:12:10.780"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.803" starttime="20210108 19:12:10.770"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:10.803" starttime="20210108 19:12:10.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:10.808" level="INFO">Running command 'ozone sh bucket info 04783-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:14.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:14.873" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:14.873" starttime="20210108 19:12:10.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:14.874" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:09:45.782Z",
  "modificationTime" : "2021-01-08T19:10:05.271Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210108 19:12:14.875" starttime="20210108 19:12:14.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:14.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:14.875" starttime="20210108 19:12:14.875"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:14.876" starttime="20210108 19:12:10.804"></status>
</kw>
<msg timestamp="20210108 19:12:14.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:14.876" starttime="20210108 19:12:10.804"></status>
</kw>
<msg timestamp="20210108 19:12:14.877" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:14.877" starttime="20210108 19:12:10.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210108 19:12:14.877" starttime="20210108 19:12:14.877"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210108 19:12:14.878" starttime="20210108 19:12:14.877"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:14.881" level="INFO">Running command 'ozone sh key list 04783-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:18.507" level="INFO">${rc} = 255</msg>
<msg timestamp="20210108 19:12:18.508" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:18.508" starttime="20210108 19:12:14.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:18.509" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 04783-source unreadable-bucket </msg>
<status status="PASS" endtime="20210108 19:12:18.509" starttime="20210108 19:12:18.508"></status>
</kw>
<msg timestamp="20210108 19:12:18.510" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:18.510" starttime="20210108 19:12:14.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210108 19:12:18.510" starttime="20210108 19:12:18.510"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:18.510" starttime="20210108 19:12:10.759"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:18.510" starttime="20210108 19:12:10.758"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:12:18.511" critical="yes" starttime="20210108 19:12:10.715"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:18.518" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:18.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:18.522" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:12:18.522" starttime="20210108 19:12:18.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:18.524" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:12:18.525" starttime="20210108 19:12:18.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:18.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:18.526" starttime="20210108 19:12:18.525"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:18.526" starttime="20210108 19:12:18.515"></status>
</kw>
<msg timestamp="20210108 19:12:18.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:18.526" starttime="20210108 19:12:18.515"></status>
</kw>
<msg timestamp="20210108 19:12:18.527" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:12:18.527" starttime="20210108 19:12:18.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:12:18.528" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:12:18.528" starttime="20210108 19:12:18.527"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:18.532" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:18.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:18.549" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:18.549" starttime="20210108 19:12:18.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:18.550" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:18.550" starttime="20210108 19:12:18.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:18.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:18.551" starttime="20210108 19:12:18.551"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:18.552" starttime="20210108 19:12:18.529"></status>
</kw>
<msg timestamp="20210108 19:12:18.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:18.552" starttime="20210108 19:12:18.529"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:18.552" starttime="20210108 19:12:18.528"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:18.552" starttime="20210108 19:12:18.528"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:18.552" starttime="20210108 19:12:18.514"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:18.553" starttime="20210108 19:12:18.513"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:18.556" level="INFO">Running command 'ozone sh bucket link 04783-target/loop1 04783-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:22.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:22.142" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:22.142" starttime="20210108 19:12:18.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:22.144" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:12:22.144" starttime="20210108 19:12:22.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:22.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:22.144" starttime="20210108 19:12:22.144"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:22.145" starttime="20210108 19:12:18.554"></status>
</kw>
<msg timestamp="20210108 19:12:22.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:22.145" starttime="20210108 19:12:18.554"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:22.145" starttime="20210108 19:12:18.553"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:22.149" level="INFO">Running command 'ozone sh bucket link 04783-target/loop2 04783-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:26.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:26.214" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:26.214" starttime="20210108 19:12:22.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:26.215" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:12:26.215" starttime="20210108 19:12:26.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:26.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:26.216" starttime="20210108 19:12:26.215"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:26.216" starttime="20210108 19:12:22.147"></status>
</kw>
<msg timestamp="20210108 19:12:26.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:26.217" starttime="20210108 19:12:22.146"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:26.217" starttime="20210108 19:12:22.146"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:26.222" level="INFO">Running command 'ozone sh bucket link 04783-target/loop3 04783-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:30.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:30.180" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:30.180" starttime="20210108 19:12:26.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:30.181" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:12:30.181" starttime="20210108 19:12:30.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:30.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:30.181" starttime="20210108 19:12:30.181"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:30.182" starttime="20210108 19:12:26.218"></status>
</kw>
<msg timestamp="20210108 19:12:30.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:30.182" starttime="20210108 19:12:26.218"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:30.182" starttime="20210108 19:12:26.217"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:30.185" level="INFO">Running command 'ozone sh key list 04783-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:34.293" level="INFO">${rc} = 255</msg>
<msg timestamp="20210108 19:12:34.293" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:34.293" starttime="20210108 19:12:30.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:34.295" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210108 19:12:34.295" starttime="20210108 19:12:34.294"></status>
</kw>
<msg timestamp="20210108 19:12:34.295" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:34.295" starttime="20210108 19:12:30.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210108 19:12:34.296" starttime="20210108 19:12:34.296"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:12:34.296" critical="yes" starttime="20210108 19:12:18.512"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:34.304" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:34.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:34.306" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:12:34.307" starttime="20210108 19:12:34.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:34.308" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:12:34.308" starttime="20210108 19:12:34.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:34.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:34.309" starttime="20210108 19:12:34.308"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:34.310" starttime="20210108 19:12:34.301"></status>
</kw>
<msg timestamp="20210108 19:12:34.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:34.310" starttime="20210108 19:12:34.301"></status>
</kw>
<msg timestamp="20210108 19:12:34.310" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:12:34.310" starttime="20210108 19:12:34.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:12:34.311" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:12:34.311" starttime="20210108 19:12:34.310"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:34.315" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:34.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:34.332" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:34.332" starttime="20210108 19:12:34.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:34.333" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:34.333" starttime="20210108 19:12:34.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:34.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:34.334" starttime="20210108 19:12:34.333"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:34.334" starttime="20210108 19:12:34.313"></status>
</kw>
<msg timestamp="20210108 19:12:34.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:34.334" starttime="20210108 19:12:34.312"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:34.335" starttime="20210108 19:12:34.312"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:34.335" starttime="20210108 19:12:34.311"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:34.335" starttime="20210108 19:12:34.299"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:34.335" starttime="20210108 19:12:34.298"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:34.339" level="INFO">Running command 'ozone sh bucket link 04783-source/bucket1 04783-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:38.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:38.171" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:38.172" starttime="20210108 19:12:34.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:38.173" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:12:38.173" starttime="20210108 19:12:38.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:38.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:38.174" starttime="20210108 19:12:38.173"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:38.174" starttime="20210108 19:12:34.336"></status>
</kw>
<msg timestamp="20210108 19:12:38.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:38.174" starttime="20210108 19:12:34.336"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:38.175" starttime="20210108 19:12:34.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:38.179" level="INFO">Running command 'ozone sh key put 04783-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:47.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:47.344" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:47.344" starttime="20210108 19:12:38.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:47.345" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:12:47.346" starttime="20210108 19:12:47.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:47.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:47.346" starttime="20210108 19:12:47.346"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:47.347" starttime="20210108 19:12:38.176"></status>
</kw>
<msg timestamp="20210108 19:12:47.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:47.347" starttime="20210108 19:12:38.176"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:47.347" starttime="20210108 19:12:38.175"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210108 19:12:47.350" level="INFO">${postfix} = 45216</msg>
<status status="PASS" endtime="20210108 19:12:47.350" starttime="20210108 19:12:47.349"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210108 19:12:47.351" level="INFO">${tmpfile} = /tmp/tempkey-45216</msg>
<status status="PASS" endtime="20210108 19:12:47.351" starttime="20210108 19:12:47.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:47.354" level="INFO">Running command 'ozone sh key get -f 04783-target/link1/key3 /tmp/tempkey-45216 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:53.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:53.273" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:53.273" starttime="20210108 19:12:47.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:53.274" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:12:53.274" starttime="20210108 19:12:53.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:53.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:53.275" starttime="20210108 19:12:53.274"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:53.275" starttime="20210108 19:12:47.352"></status>
</kw>
<msg timestamp="20210108 19:12:53.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:53.276" starttime="20210108 19:12:47.351"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:53.276" starttime="20210108 19:12:47.351"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210108 19:12:53.278" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-45216 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:53.281" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210108 19:12:53.281" starttime="20210108 19:12:53.276"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:53.286" level="INFO">Running command 'rm -f /tmp/tempkey-45216 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:53.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:53.288" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:53.288" starttime="20210108 19:12:53.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:53.289" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:53.290" starttime="20210108 19:12:53.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:53.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:53.291" starttime="20210108 19:12:53.290"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:53.291" starttime="20210108 19:12:53.283"></status>
</kw>
<msg timestamp="20210108 19:12:53.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:53.291" starttime="20210108 19:12:53.283"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:53.291" starttime="20210108 19:12:53.281"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210108 19:12:53.292" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210108 19:12:53.292" starttime="20210108 19:12:53.292"></status>
</kw>
<msg timestamp="20210108 19:12:53.293" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210108 19:12:53.293" starttime="20210108 19:12:47.348"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210108 19:12:53.294" starttime="20210108 19:12:53.293"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:53.294" starttime="20210108 19:12:47.348"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:12:53.294" critical="yes" starttime="20210108 19:12:34.298"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:53.300" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:53.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:53.303" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210108 19:12:53.303" starttime="20210108 19:12:53.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:53.304" level="INFO">scm</msg>
<status status="PASS" endtime="20210108 19:12:53.304" starttime="20210108 19:12:53.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:53.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:53.306" starttime="20210108 19:12:53.304"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:53.306" starttime="20210108 19:12:53.298"></status>
</kw>
<msg timestamp="20210108 19:12:53.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:53.306" starttime="20210108 19:12:53.298"></status>
</kw>
<msg timestamp="20210108 19:12:53.306" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210108 19:12:53.306" starttime="20210108 19:12:53.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210108 19:12:53.308" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210108 19:12:53.308" starttime="20210108 19:12:53.307"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:53.312" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:53.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:53.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210108 19:12:53.337" starttime="20210108 19:12:53.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:53.338" level="INFO"></msg>
<status status="PASS" endtime="20210108 19:12:53.338" starttime="20210108 19:12:53.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:53.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:53.339" starttime="20210108 19:12:53.338"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:53.339" starttime="20210108 19:12:53.310"></status>
</kw>
<msg timestamp="20210108 19:12:53.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:53.340" starttime="20210108 19:12:53.309"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:53.340" starttime="20210108 19:12:53.309"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:53.340" starttime="20210108 19:12:53.308"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:53.340" starttime="20210108 19:12:53.297"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:53.340" starttime="20210108 19:12:53.296"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:53.344" level="INFO">Running command 'ozone sh bucket delete 04783-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:12:57.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:12:57.087" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:12:57.088" starttime="20210108 19:12:53.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:12:57.089" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210108 19:12:57.090" starttime="20210108 19:12:57.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:12:57.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:12:57.090" starttime="20210108 19:12:57.090"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:57.091" starttime="20210108 19:12:53.342"></status>
</kw>
<msg timestamp="20210108 19:12:57.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:12:57.091" starttime="20210108 19:12:53.341"></status>
</kw>
<status status="PASS" endtime="20210108 19:12:57.091" starttime="20210108 19:12:53.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:12:57.096" level="INFO">Running command 'ozone sh bucket list 04783-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:13:01.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:13:01.159" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:13:01.159" starttime="20210108 19:12:57.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:13:01.160" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:11:58.858Z",
  "modificationTime" : "2021-01-08T19:11:58.858Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:10:14.163Z",
  "modificationTime" : "2021-01-08T19:10:14.163Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:09:45.782Z",
  "modificationTime" : "2021-01-08T19:10:05.271Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:11:51.443Z",
  "modificationTime" : "2021-01-08T19:11:51.443Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:12:38.035Z",
  "modificationTime" : "2021-01-08T19:12:38.035Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:12:29.974Z",
  "modificationTime" : "2021-01-08T19:12:29.974Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:12:22.004Z",
  "modificationTime" : "2021-01-08T19:12:22.004Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:12:26.005Z",
  "modificationTime" : "2021-01-08T19:12:26.005Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:09:37.942Z",
  "modificationTime" : "2021-01-08T19:10:01.758Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "04783-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-08T19:09:41.989Z",
  "modificationTime" : "2021-01-08T19:09:41.989Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "04783-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210108 19:13:01.160" starttime="20210108 19:13:01.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:13:01.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:13:01.162" starttime="20210108 19:13:01.161"></status>
</kw>
<status status="PASS" endtime="20210108 19:13:01.162" starttime="20210108 19:12:57.093"></status>
</kw>
<msg timestamp="20210108 19:13:01.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:13:01.162" starttime="20210108 19:12:57.092"></status>
</kw>
<msg timestamp="20210108 19:13:01.163" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210108 19:13:01.163" starttime="20210108 19:12:57.092"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210108 19:13:01.163" starttime="20210108 19:13:01.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210108 19:13:01.168" level="INFO">Running command 'ozone sh key list 04783-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210108 19:13:05.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210108 19:13:05.108" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210108 19:13:05.108" starttime="20210108 19:13:01.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210108 19:13:05.109" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210108 19:13:05.109" starttime="20210108 19:13:05.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210108 19:13:05.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210108 19:13:05.110" starttime="20210108 19:13:05.109"></status>
</kw>
<status status="PASS" endtime="20210108 19:13:05.110" starttime="20210108 19:13:01.165"></status>
</kw>
<msg timestamp="20210108 19:13:05.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210108 19:13:05.111" starttime="20210108 19:13:01.164"></status>
</kw>
<msg timestamp="20210108 19:13:05.111" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210108 19:13:05.111" starttime="20210108 19:13:01.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210108 19:13:05.112" starttime="20210108 19:13:05.111"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210108 19:13:05.112" critical="yes" starttime="20210108 19:12:53.295"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210108 19:13:05.116" starttime="20210108 19:09:10.722"></status>
</suite>
<status status="PASS" elapsedtime="268418" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
