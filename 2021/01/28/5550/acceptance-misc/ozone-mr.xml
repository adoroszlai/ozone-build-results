<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210128 13:36:10.080" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:00.984" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:02.996" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 13:24:02.996" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 13:24:02.996" starttime="20210128 13:24:00.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:02.997" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 13:24:02.997" starttime="20210128 13:24:02.996"></status>
</kw>
<msg timestamp="20210128 13:24:02.997" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 13:24:02.997" starttime="20210128 13:24:00.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:03.002" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:04.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:24:04.856" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:24:04.856" starttime="20210128 13:24:03.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:04.857" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:24:04.857" starttime="20210128 13:24:04.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:24:04.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:24:04.858" starttime="20210128 13:24:04.858"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:04.858" starttime="20210128 13:24:02.999"></status>
</kw>
<msg timestamp="20210128 13:24:04.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:24:04.858" starttime="20210128 13:24:02.999"></status>
</kw>
<msg timestamp="20210128 13:24:04.859" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210128 13:24:04.859" starttime="20210128 13:24:02.998"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210128 13:24:04.859" starttime="20210128 13:24:04.859"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:04.859" starttime="20210128 13:24:02.998"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:04.859" starttime="20210128 13:24:02.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:04.864" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:06.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:24:06.772" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:24:06.772" starttime="20210128 13:24:04.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:06.773" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:24:06.773" starttime="20210128 13:24:06.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:24:06.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:24:06.774" starttime="20210128 13:24:06.773"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:06.774" starttime="20210128 13:24:04.861"></status>
</kw>
<msg timestamp="20210128 13:24:06.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:24:06.774" starttime="20210128 13:24:04.861"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:06.775" starttime="20210128 13:24:04.860"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:06.775" starttime="20210128 13:24:04.860"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:06.775" starttime="20210128 13:24:04.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210128 13:24:06.775" starttime="20210128 13:24:06.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:06.783" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:08.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:24:08.920" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:24...</msg>
<status status="PASS" endtime="20210128 13:24:08.920" starttime="20210128 13:24:06.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:08.921" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:24:06.698Z",
  "modificationTime" : "2021-01-28T13:24:06.698Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 13:24:08.922" starttime="20210128 13:24:08.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:24:08.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:24:08.922" starttime="20210128 13:24:08.922"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:08.922" starttime="20210128 13:24:06.776"></status>
</kw>
<msg timestamp="20210128 13:24:08.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:24:08.923" starttime="20210128 13:24:06.776"></status>
</kw>
<msg timestamp="20210128 13:24:08.923" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:24...</msg>
<status status="PASS" endtime="20210128 13:24:08.923" starttime="20210128 13:24:06.775"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210128 13:24:08.923" starttime="20210128 13:24:08.923"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:24:08.927" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:24:08.927" starttime="20210128 13:24:08.926"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:24:08.927" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:24:08.927" starttime="20210128 13:24:08.927"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:08.927" starttime="20210128 13:24:08.926"></status>
</kw>
<msg timestamp="20210128 13:24:08.927" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:24:08.928" starttime="20210128 13:24:08.925"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:08.928" starttime="20210128 13:24:08.925"></status>
</kw>
<msg timestamp="20210128 13:24:08.928" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 13:24:08.928" starttime="20210128 13:24:08.924"></status>
</kw>
<msg timestamp="20210128 13:24:08.928" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 13:24:08.928" starttime="20210128 13:24:08.923"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:08.931" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:10.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:24:10.937" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:24:10.937" starttime="20210128 13:24:08.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:10.938" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:24:10.938" starttime="20210128 13:24:10.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:24:10.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:24:10.939" starttime="20210128 13:24:10.938"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:10.939" starttime="20210128 13:24:08.929"></status>
</kw>
<msg timestamp="20210128 13:24:10.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:24:10.939" starttime="20210128 13:24:08.929"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:10.939" starttime="20210128 13:24:08.928"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:10.943" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:15.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:24:15.595" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:24:15.595" starttime="20210128 13:24:10.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:15.596" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:24:15.596" starttime="20210128 13:24:15.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:24:15.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:24:15.597" starttime="20210128 13:24:15.596"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:15.597" starttime="20210128 13:24:10.941"></status>
</kw>
<msg timestamp="20210128 13:24:15.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:24:15.597" starttime="20210128 13:24:10.940"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:15.598" starttime="20210128 13:24:10.940"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:15.601" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:18.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:24:18.919" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:24:18.919" starttime="20210128 13:24:15.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:18.920" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:24:18.920" starttime="20210128 13:24:18.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:24:18.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:24:18.921" starttime="20210128 13:24:18.920"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:18.921" starttime="20210128 13:24:15.598"></status>
</kw>
<msg timestamp="20210128 13:24:18.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:24:18.921" starttime="20210128 13:24:15.598"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:18.921" starttime="20210128 13:24:15.598"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:18.925" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:22.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:24:22.126" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:24:22.126" starttime="20210128 13:24:18.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:22.127" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:24:22.127" starttime="20210128 13:24:22.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:24:22.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:24:22.128" starttime="20210128 13:24:22.127"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:22.128" starttime="20210128 13:24:18.922"></status>
</kw>
<msg timestamp="20210128 13:24:22.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:24:22.128" starttime="20210128 13:24:18.922"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:22.128" starttime="20210128 13:24:18.921"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:24:22.129" critical="yes" starttime="20210128 13:24:00.979"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:24:22.133" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:24:22.133" starttime="20210128 13:24:22.132"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:24:22.133" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:24:22.133" starttime="20210128 13:24:22.133"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:22.133" starttime="20210128 13:24:22.132"></status>
</kw>
<msg timestamp="20210128 13:24:22.133" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:24:22.133" starttime="20210128 13:24:22.131"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:22.134" starttime="20210128 13:24:22.131"></status>
</kw>
<msg timestamp="20210128 13:24:22.134" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 13:24:22.134" starttime="20210128 13:24:22.130"></status>
</kw>
<msg timestamp="20210128 13:24:22.134" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 13:24:22.134" starttime="20210128 13:24:22.130"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:22.137" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:23.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:24:23.878" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:24:23.878" starttime="20210128 13:24:22.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:23.880" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:24:23.880" starttime="20210128 13:24:23.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:24:23.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:24:23.880" starttime="20210128 13:24:23.880"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:23.880" starttime="20210128 13:24:22.135"></status>
</kw>
<msg timestamp="20210128 13:24:23.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:24:23.881" starttime="20210128 13:24:22.134"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:23.881" starttime="20210128 13:24:22.134"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:23.884" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:25.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:24:25.694" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:24:25.694" starttime="20210128 13:24:23.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:25.696" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:24:25.696" starttime="20210128 13:24:25.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:24:25.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:24:25.696" starttime="20210128 13:24:25.696"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:25.697" starttime="20210128 13:24:23.882"></status>
</kw>
<msg timestamp="20210128 13:24:25.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:24:25.697" starttime="20210128 13:24:23.881"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:25.697" starttime="20210128 13:24:23.881"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:24:25.697" critical="yes" starttime="20210128 13:24:22.129"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210128 13:24:25.698" starttime="20210128 13:24:00.932"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:25:54.440" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:25:54.440" starttime="20210128 13:25:54.439"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:25:54.440" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:25:54.440" starttime="20210128 13:25:54.440"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:54.440" starttime="20210128 13:25:54.439"></status>
</kw>
<msg timestamp="20210128 13:25:54.440" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:25:54.440" starttime="20210128 13:25:54.438"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:25:54.441" starttime="20210128 13:25:54.441"></status>
</kw>
<msg timestamp="20210128 13:25:54.441" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 13:25:54.441" starttime="20210128 13:25:54.441"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:54.442" starttime="20210128 13:25:54.438"></status>
</kw>
<msg timestamp="20210128 13:25:54.442" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:25:54.442" starttime="20210128 13:25:54.437"></status>
</kw>
<msg timestamp="20210128 13:25:54.442" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:25:54.442" starttime="20210128 13:25:54.436"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:25:54.442" level="INFO">${random} = 78205</msg>
<status status="PASS" endtime="20210128 13:25:54.443" starttime="20210128 13:25:54.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:25:54.448" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-78205 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:25:57.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:25:57.474" level="INFO">${output} = 2021-01-28 13:25:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:25:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 ...</msg>
<status status="PASS" endtime="20210128 13:25:57.474" starttime="20210128 13:25:54.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:25:57.475" level="INFO">2021-01-28 13:25:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:25:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 13:25:56 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-28 13:25:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:25:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8C7C52491A40-&gt;d1f34742-decf-48ce-b55e-fa852c7ecf42
2021-01-28 13:25:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210128 13:25:57.475" starttime="20210128 13:25:57.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:25:57.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:25:57.476" starttime="20210128 13:25:57.476"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:57.476" starttime="20210128 13:25:54.443"></status>
</kw>
<msg timestamp="20210128 13:25:57.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:25:57.477" starttime="20210128 13:25:54.443"></status>
</kw>
<msg timestamp="20210128 13:25:57.477" level="INFO">${result} = 2021-01-28 13:25:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:25:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 ...</msg>
<status status="PASS" endtime="20210128 13:25:57.477" starttime="20210128 13:25:54.443"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:25:57.480" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:25:59.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:25:59.014" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 13:25 ofs://om/volume1/bucket1/ozone-78205
-rw-...</msg>
<status status="PASS" endtime="20210128 13:25:59.014" starttime="20210128 13:25:57.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:25:59.015" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 13:25 ofs://om/volume1/bucket1/ozone-78205
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 13:24 ofs://om/volume1/bucket1/ozone-97928
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:24 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:25 ofs://om/volume1/bucket1/wordcount-UePAowUk.txt</msg>
<status status="PASS" endtime="20210128 13:25:59.015" starttime="20210128 13:25:59.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:25:59.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:25:59.016" starttime="20210128 13:25:59.015"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:59.016" starttime="20210128 13:25:57.478"></status>
</kw>
<msg timestamp="20210128 13:25:59.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:25:59.016" starttime="20210128 13:25:57.478"></status>
</kw>
<msg timestamp="20210128 13:25:59.017" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 13:25 ofs://om/volume1/bucket1/ozone-78205
-rw-...</msg>
<status status="PASS" endtime="20210128 13:25:59.017" starttime="20210128 13:25:57.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:25:59.017" starttime="20210128 13:25:59.017"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 13:25:59.017" critical="yes" starttime="20210128 13:25:54.435"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 13:25:59.018" starttime="20210128 13:25:54.388"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:24:29.922" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:24:29.922" starttime="20210128 13:24:29.921"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:24:29.922" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:24:29.922" starttime="20210128 13:24:29.922"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:29.922" starttime="20210128 13:24:29.921"></status>
</kw>
<msg timestamp="20210128 13:24:29.922" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:24:29.922" starttime="20210128 13:24:29.921"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:29.923" starttime="20210128 13:24:29.920"></status>
</kw>
<msg timestamp="20210128 13:24:29.923" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:24:29.923" starttime="20210128 13:24:29.920"></status>
</kw>
<msg timestamp="20210128 13:24:29.923" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:24:29.923" starttime="20210128 13:24:29.919"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:24:29.923" level="INFO">${random} = 97928</msg>
<status status="PASS" endtime="20210128 13:24:29.923" starttime="20210128 13:24:29.923"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:29.928" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-97928 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:33.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:24:33.113" level="INFO">${output} = 2021-01-28 13:24:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:24:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 ...</msg>
<status status="PASS" endtime="20210128 13:24:33.113" starttime="20210128 13:24:29.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:33.115" level="INFO">2021-01-28 13:24:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:24:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 13:24:31 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-28 13:24:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:24:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B04C7DE7D711-&gt;45452c68-9f1f-4dda-96ce-d2b129c1898a
2021-01-28 13:24:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210128 13:24:33.115" starttime="20210128 13:24:33.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:24:33.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:24:33.115" starttime="20210128 13:24:33.115"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:33.116" starttime="20210128 13:24:29.924"></status>
</kw>
<msg timestamp="20210128 13:24:33.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:24:33.116" starttime="20210128 13:24:29.924"></status>
</kw>
<msg timestamp="20210128 13:24:33.116" level="INFO">${result} = 2021-01-28 13:24:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:24:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 ...</msg>
<status status="PASS" endtime="20210128 13:24:33.116" starttime="20210128 13:24:29.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:33.119" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:34.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:24:34.490" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 13:24 o3fs://bucket1.volume1.om/ozone-97928
dr...</msg>
<status status="PASS" endtime="20210128 13:24:34.490" starttime="20210128 13:24:33.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:34.491" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 13:24 o3fs://bucket1.volume1.om/ozone-97928
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:24 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 13:24:34.491" starttime="20210128 13:24:34.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:24:34.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:24:34.492" starttime="20210128 13:24:34.491"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:34.492" starttime="20210128 13:24:33.117"></status>
</kw>
<msg timestamp="20210128 13:24:34.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:24:34.492" starttime="20210128 13:24:33.117"></status>
</kw>
<msg timestamp="20210128 13:24:34.492" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 13:24 o3fs://bucket1.volume1.om/ozone-97928
dr...</msg>
<status status="PASS" endtime="20210128 13:24:34.492" starttime="20210128 13:24:33.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:24:34.493" starttime="20210128 13:24:34.492"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 13:24:34.493" critical="yes" starttime="20210128 13:24:29.918"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 13:24:34.494" starttime="20210128 13:24:29.878"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:26:03.204" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:26:03.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:26:03.210" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:26:03.210" starttime="20210128 13:26:03.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:26:03.211" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:26:03.211" starttime="20210128 13:26:03.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:26:03.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:26:03.212" starttime="20210128 13:26:03.211"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:03.212" starttime="20210128 13:26:03.200"></status>
</kw>
<msg timestamp="20210128 13:26:03.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:26:03.212" starttime="20210128 13:26:03.200"></status>
</kw>
<msg timestamp="20210128 13:26:03.212" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:26:03.213" starttime="20210128 13:26:03.200"></status>
</kw>
<msg timestamp="20210128 13:26:03.213" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:26:03.213" starttime="20210128 13:26:03.199"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:26:03.217" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:26:03.217" starttime="20210128 13:26:03.217"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:26:03.218" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:26:03.218" starttime="20210128 13:26:03.217"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:03.218" starttime="20210128 13:26:03.216"></status>
</kw>
<msg timestamp="20210128 13:26:03.218" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:26:03.218" starttime="20210128 13:26:03.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:26:03.219" starttime="20210128 13:26:03.218"></status>
</kw>
<msg timestamp="20210128 13:26:03.219" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 13:26:03.219" starttime="20210128 13:26:03.218"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:03.219" starttime="20210128 13:26:03.215"></status>
</kw>
<msg timestamp="20210128 13:26:03.219" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:26:03.219" starttime="20210128 13:26:03.214"></status>
</kw>
<msg timestamp="20210128 13:26:03.219" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:26:03.219" starttime="20210128 13:26:03.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:26:03.223" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:26:38.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:26:38.062" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:26:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:26:04 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210128 13:26:38.062" starttime="20210128 13:26:03.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:26:38.063" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:26:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:26:04 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 13:26:04 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-28 13:26:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:26:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-051C49E5FA30-&gt;d1f34742-decf-48ce-b55e-fa852c7ecf42
2021-01-28 13:26:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-28 13:26:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-959B80C4BF8A-&gt;45452c68-9f1f-4dda-96ce-d2b129c1898a
2021-01-28 13:26:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-28 13:26:08 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-28 13:26:08 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 13:26:08 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-28 13:26:08 INFO  JobSubmitter:198 - number of splits:3
2021-01-28 13:26:09 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611840210066_0003
2021-01-28 13:26:09 INFO  YarnClientImpl:273 - Submitted application application_1611840210066_0003
2021-01-28 13:26:09 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611840210066_0003/
2021-01-28 13:26:09 INFO  Job:1339 - Running job: job_1611840210066_0003
2021-01-28 13:26:16 INFO  Job:1360 - Job job_1611840210066_0003 running in uber mode : false
2021-01-28 13:26:16 INFO  Job:1367 -  map 0% reduce 0%
2021-01-28 13:26:22 INFO  Job:1367 -  map 33% reduce 0%
2021-01-28 13:26:27 INFO  Job:1367 -  map 67% reduce 0%
2021-01-28 13:26:31 INFO  Job:1367 -  map 100% reduce 0%
2021-01-28 13:26:36 INFO  Job:1367 -  map 100% reduce 100%
2021-01-28 13:26:37 INFO  Job:1378 - Job job_1611840210066_0003 completed successfully
2021-01-28 13:26:37 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610717
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34056
		Total time spent by all reduces in occupied slots (ms)=22484
		Total time spent by all map tasks (ms)=8514
		Total time spent by all reduce tasks (ms)=5621
		Total vcore-milliseconds taken by all map tasks=8514
		Total vcore-milliseconds taken by all reduce tasks=5621
		Total megabyte-milliseconds taken by all map tasks=34873344
		Total megabyte-milliseconds taken by all reduce tasks=23023616
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=537
		CPU time spent (ms)=5660
		Physical memory (bytes) snapshot=1173446656
		Virtual memory (bytes) snapshot=15778508800
		Total committed heap usage (bytes)=1064828928
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.164 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210128 13:26:38.063" starttime="20210128 13:26:38.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:26:38.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:26:38.064" starttime="20210128 13:26:38.063"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:38.064" starttime="20210128 13:26:03.220"></status>
</kw>
<msg timestamp="20210128 13:26:38.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:26:38.064" starttime="20210128 13:26:03.220"></status>
</kw>
<msg timestamp="20210128 13:26:38.064" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:26:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:26:04 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210128 13:26:38.065" starttime="20210128 13:26:03.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:26:38.065" starttime="20210128 13:26:38.065"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:26:38.065" critical="yes" starttime="20210128 13:26:03.199"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:26:38.069" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:26:38.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:26:38.074" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:26:38.074" starttime="20210128 13:26:38.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:26:38.074" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:26:38.074" starttime="20210128 13:26:38.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:26:38.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:26:38.075" starttime="20210128 13:26:38.075"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:38.075" starttime="20210128 13:26:38.067"></status>
</kw>
<msg timestamp="20210128 13:26:38.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:26:38.075" starttime="20210128 13:26:38.067"></status>
</kw>
<msg timestamp="20210128 13:26:38.076" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:26:38.076" starttime="20210128 13:26:38.067"></status>
</kw>
<msg timestamp="20210128 13:26:38.076" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:26:38.076" starttime="20210128 13:26:38.066"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:26:38.076" level="INFO">${random} = ZEUgNNzA</msg>
<status status="PASS" endtime="20210128 13:26:38.076" starttime="20210128 13:26:38.076"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:26:38.079" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:26:38.079" starttime="20210128 13:26:38.079"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:26:38.080" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:26:38.080" starttime="20210128 13:26:38.079"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:38.080" starttime="20210128 13:26:38.079"></status>
</kw>
<msg timestamp="20210128 13:26:38.080" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:26:38.080" starttime="20210128 13:26:38.078"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:26:38.081" starttime="20210128 13:26:38.081"></status>
</kw>
<msg timestamp="20210128 13:26:38.081" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 13:26:38.081" starttime="20210128 13:26:38.080"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:38.081" starttime="20210128 13:26:38.078"></status>
</kw>
<msg timestamp="20210128 13:26:38.081" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:26:38.081" starttime="20210128 13:26:38.077"></status>
</kw>
<msg timestamp="20210128 13:26:38.081" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:26:38.082" starttime="20210128 13:26:38.076"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:26:38.084" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:26:38.084" starttime="20210128 13:26:38.084"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:26:38.084" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:26:38.084" starttime="20210128 13:26:38.084"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:38.085" starttime="20210128 13:26:38.083"></status>
</kw>
<msg timestamp="20210128 13:26:38.085" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:26:38.085" starttime="20210128 13:26:38.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:26:38.086" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210128 13:26:38.086" starttime="20210128 13:26:38.086"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:26:38.086" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210128 13:26:38.086" starttime="20210128 13:26:38.086"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:38.087" starttime="20210128 13:26:38.085"></status>
</kw>
<msg timestamp="20210128 13:26:38.087" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210128 13:26:38.087" starttime="20210128 13:26:38.085"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:38.087" starttime="20210128 13:26:38.082"></status>
</kw>
<msg timestamp="20210128 13:26:38.087" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 13:26:38.087" starttime="20210128 13:26:38.082"></status>
</kw>
<msg timestamp="20210128 13:26:38.087" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 13:26:38.087" starttime="20210128 13:26:38.082"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:26:38.090" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:26:38.090" starttime="20210128 13:26:38.089"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:26:38.090" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:26:38.090" starttime="20210128 13:26:38.090"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:38.090" starttime="20210128 13:26:38.089"></status>
</kw>
<msg timestamp="20210128 13:26:38.090" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:26:38.090" starttime="20210128 13:26:38.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:26:38.092" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210128 13:26:38.092" starttime="20210128 13:26:38.091"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:26:38.092" level="INFO">${result} = /wordcount-ZEUgNNzA.txt</msg>
<status status="PASS" endtime="20210128 13:26:38.092" starttime="20210128 13:26:38.092"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:38.092" starttime="20210128 13:26:38.091"></status>
</kw>
<msg timestamp="20210128 13:26:38.092" level="INFO">${path_with_leading} = /wordcount-ZEUgNNzA.txt</msg>
<status status="PASS" endtime="20210128 13:26:38.092" starttime="20210128 13:26:38.091"></status>
</kw>
<status status="PASS" endtime="20210128 13:26:38.093" starttime="20210128 13:26:38.088"></status>
</kw>
<msg timestamp="20210128 13:26:38.093" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-ZEUgNNzA.txt</msg>
<status status="PASS" endtime="20210128 13:26:38.093" starttime="20210128 13:26:38.088"></status>
</kw>
<msg timestamp="20210128 13:26:38.093" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-ZEUgNNzA.txt</msg>
<status status="PASS" endtime="20210128 13:26:38.093" starttime="20210128 13:26:38.087"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:26:38.096" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-ZEUgNNzA.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:27:10.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:27:10.004" level="INFO">${output} = 2021-01-28 13:26:39 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-28 13:26:39 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210128 13:27:10.004" starttime="20210128 13:26:38.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:27:10.005" level="INFO">2021-01-28 13:26:39 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-28 13:26:39 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 13:26:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:26:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 13:26:39 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-28 13:26:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:26:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B2BEF31E86D3-&gt;d1f34742-decf-48ce-b55e-fa852c7ecf42
2021-01-28 13:26:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:26:40 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-28 13:26:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A23A4E1306FF-&gt;45452c68-9f1f-4dda-96ce-d2b129c1898a
2021-01-28 13:26:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:26:40 INFO  JobSubmitter:198 - number of splits:3
2021-01-28 13:26:41 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611840210066_0004
2021-01-28 13:26:41 INFO  YarnClientImpl:273 - Submitted application application_1611840210066_0004
2021-01-28 13:26:41 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611840210066_0004/
2021-01-28 13:26:41 INFO  Job:1339 - Running job: job_1611840210066_0004
2021-01-28 13:26:49 INFO  Job:1360 - Job job_1611840210066_0004 running in uber mode : false
2021-01-28 13:26:49 INFO  Job:1367 -  map 0% reduce 0%
2021-01-28 13:26:55 INFO  Job:1367 -  map 33% reduce 0%
2021-01-28 13:26:58 INFO  Job:1367 -  map 67% reduce 0%
2021-01-28 13:27:02 INFO  Job:1367 -  map 100% reduce 0%
2021-01-28 13:27:06 INFO  Job:1367 -  map 100% reduce 100%
2021-01-28 13:27:09 INFO  Job:1378 - Job job_1611840210066_0004 completed successfully
2021-01-28 13:27:09 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=32216
		Total time spent by all reduces in occupied slots (ms)=11604
		Total time spent by all map tasks (ms)=8054
		Total time spent by all reduce tasks (ms)=2901
		Total vcore-milliseconds taken by all map tasks=8054
		Total vcore-milliseconds taken by all reduce tasks=2901
		Total megabyte-milliseconds taken by all map tasks=32989184
		Total megabyte-milliseconds taken by all reduce tasks=11882496
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=510
		CPU time spent (ms)=5470
		Physical memory (bytes) snapshot=1161318400
		Virtual memory (bytes) snapshot=15772708864
		Total committed heap usage (bytes)=1056440320
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210128 13:27:10.006" starttime="20210128 13:27:10.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:27:10.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:27:10.006" starttime="20210128 13:27:10.006"></status>
</kw>
<status status="PASS" endtime="20210128 13:27:10.006" starttime="20210128 13:26:38.094"></status>
</kw>
<msg timestamp="20210128 13:27:10.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:27:10.007" starttime="20210128 13:26:38.093"></status>
</kw>
<msg timestamp="20210128 13:27:10.007" level="INFO">${output} = 2021-01-28 13:26:39 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-28 13:26:39 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210128 13:27:10.007" starttime="20210128 13:26:38.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 13:27:10.007" starttime="20210128 13:27:10.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:27:10.008" starttime="20210128 13:27:10.008"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:27:10.008" critical="yes" starttime="20210128 13:26:38.066"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 13:27:10.009" starttime="20210128 13:26:03.153"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:38.409" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:24:38.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:24:38.415" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:24:38.415" starttime="20210128 13:24:38.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:24:38.416" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:24:38.416" starttime="20210128 13:24:38.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:24:38.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:24:38.416" starttime="20210128 13:24:38.416"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:38.417" starttime="20210128 13:24:38.406"></status>
</kw>
<msg timestamp="20210128 13:24:38.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:24:38.417" starttime="20210128 13:24:38.405"></status>
</kw>
<msg timestamp="20210128 13:24:38.417" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:24:38.417" starttime="20210128 13:24:38.405"></status>
</kw>
<msg timestamp="20210128 13:24:38.417" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:24:38.417" starttime="20210128 13:24:38.405"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:24:38.421" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:24:38.421" starttime="20210128 13:24:38.421"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:24:38.422" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:24:38.422" starttime="20210128 13:24:38.421"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:38.422" starttime="20210128 13:24:38.420"></status>
</kw>
<msg timestamp="20210128 13:24:38.422" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:24:38.422" starttime="20210128 13:24:38.420"></status>
</kw>
<status status="PASS" endtime="20210128 13:24:38.422" starttime="20210128 13:24:38.419"></status>
</kw>
<msg timestamp="20210128 13:24:38.422" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:24:38.422" starttime="20210128 13:24:38.418"></status>
</kw>
<msg timestamp="20210128 13:24:38.422" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:24:38.422" starttime="20210128 13:24:38.417"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:24:38.425" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:25:16.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:25:16.843" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:24:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:24:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210128 13:25:16.843" starttime="20210128 13:24:38.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:25:16.844" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:24:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:24:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 13:24:40 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-28 13:24:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:24:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FACF9D88F32B-&gt;45452c68-9f1f-4dda-96ce-d2b129c1898a
2021-01-28 13:24:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-28 13:24:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C5DA7F5D6160-&gt;d1f34742-decf-48ce-b55e-fa852c7ecf42
2021-01-28 13:24:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-28 13:24:41 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-28 13:24:44 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-28 13:24:46 INFO  JobSubmitter:198 - number of splits:3
2021-01-28 13:24:49 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611840210066_0001
2021-01-28 13:24:49 INFO  YarnClientImpl:273 - Submitted application application_1611840210066_0001
2021-01-28 13:24:49 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611840210066_0001/
2021-01-28 13:24:49 INFO  Job:1339 - Running job: job_1611840210066_0001
2021-01-28 13:24:58 INFO  Job:1360 - Job job_1611840210066_0001 running in uber mode : false
2021-01-28 13:24:58 INFO  Job:1367 -  map 0% reduce 0%
2021-01-28 13:25:04 INFO  Job:1367 -  map 33% reduce 0%
2021-01-28 13:25:08 INFO  Job:1367 -  map 67% reduce 0%
2021-01-28 13:25:12 INFO  Job:1367 -  map 100% reduce 0%
2021-01-28 13:25:15 INFO  Job:1367 -  map 100% reduce 100%
2021-01-28 13:25:16 INFO  Job:1378 - Job job_1611840210066_0001 completed successfully
2021-01-28 13:25:16 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610929
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=31744
		Total time spent by all reduces in occupied slots (ms)=11728
		Total time spent by all map tasks (ms)=7936
		Total time spent by all reduce tasks (ms)=2932
		Total vcore-milliseconds taken by all map tasks=7936
		Total vcore-milliseconds taken by all reduce tasks=2932
		Total megabyte-milliseconds taken by all map tasks=32505856
		Total megabyte-milliseconds taken by all reduce tasks=12009472
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=493
		CPU time spent (ms)=4990
		Physical memory (bytes) snapshot=1156448256
		Virtual memory (bytes) snapshot=15758811136
		Total committed heap usage (bytes)=1060110336
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.155 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210128 13:25:16.844" starttime="20210128 13:25:16.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:25:16.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:25:16.845" starttime="20210128 13:25:16.844"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:16.845" starttime="20210128 13:24:38.423"></status>
</kw>
<msg timestamp="20210128 13:25:16.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:25:16.845" starttime="20210128 13:24:38.423"></status>
</kw>
<msg timestamp="20210128 13:25:16.845" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:24:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:24:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210128 13:25:16.845" starttime="20210128 13:24:38.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:25:16.846" starttime="20210128 13:25:16.846"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:25:16.846" critical="yes" starttime="20210128 13:24:38.404"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:25:16.851" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:25:16.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:25:16.856" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:25:16.856" starttime="20210128 13:25:16.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:25:16.857" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:25:16.857" starttime="20210128 13:25:16.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:25:16.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:25:16.858" starttime="20210128 13:25:16.857"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:16.858" starttime="20210128 13:25:16.849"></status>
</kw>
<msg timestamp="20210128 13:25:16.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:25:16.858" starttime="20210128 13:25:16.849"></status>
</kw>
<msg timestamp="20210128 13:25:16.858" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:25:16.858" starttime="20210128 13:25:16.848"></status>
</kw>
<msg timestamp="20210128 13:25:16.858" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 13:25:16.858" starttime="20210128 13:25:16.848"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:25:16.859" level="INFO">${random} = UePAowUk</msg>
<status status="PASS" endtime="20210128 13:25:16.859" starttime="20210128 13:25:16.859"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:25:16.862" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:25:16.862" starttime="20210128 13:25:16.861"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:25:16.862" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:25:16.862" starttime="20210128 13:25:16.862"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:16.862" starttime="20210128 13:25:16.861"></status>
</kw>
<msg timestamp="20210128 13:25:16.863" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:25:16.863" starttime="20210128 13:25:16.861"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:16.863" starttime="20210128 13:25:16.860"></status>
</kw>
<msg timestamp="20210128 13:25:16.863" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:25:16.863" starttime="20210128 13:25:16.860"></status>
</kw>
<msg timestamp="20210128 13:25:16.863" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:25:16.863" starttime="20210128 13:25:16.859"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:25:16.866" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:25:16.866" starttime="20210128 13:25:16.865"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:25:16.866" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:25:16.866" starttime="20210128 13:25:16.866"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:16.866" starttime="20210128 13:25:16.865"></status>
</kw>
<msg timestamp="20210128 13:25:16.866" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:25:16.866" starttime="20210128 13:25:16.865"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:16.867" starttime="20210128 13:25:16.864"></status>
</kw>
<msg timestamp="20210128 13:25:16.867" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 13:25:16.867" starttime="20210128 13:25:16.864"></status>
</kw>
<msg timestamp="20210128 13:25:16.867" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 13:25:16.867" starttime="20210128 13:25:16.863"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:25:16.869" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:25:16.870" starttime="20210128 13:25:16.869"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:25:16.870" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:25:16.870" starttime="20210128 13:25:16.870"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:16.870" starttime="20210128 13:25:16.869"></status>
</kw>
<msg timestamp="20210128 13:25:16.870" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:25:16.870" starttime="20210128 13:25:16.868"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:16.870" starttime="20210128 13:25:16.868"></status>
</kw>
<msg timestamp="20210128 13:25:16.871" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-UePAowUk.txt</msg>
<status status="PASS" endtime="20210128 13:25:16.871" starttime="20210128 13:25:16.868"></status>
</kw>
<msg timestamp="20210128 13:25:16.871" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-UePAowUk.txt</msg>
<status status="PASS" endtime="20210128 13:25:16.871" starttime="20210128 13:25:16.867"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:25:16.874" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-UePAowUk.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:25:50.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:25:50.118" level="INFO">${output} = 2021-01-28 13:25:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-28 13:25:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210128 13:25:50.118" starttime="20210128 13:25:16.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:25:50.119" level="INFO">2021-01-28 13:25:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-28 13:25:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 13:25:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:25:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 13:25:18 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-28 13:25:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:25:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-56850E69BF5A-&gt;45452c68-9f1f-4dda-96ce-d2b129c1898a
2021-01-28 13:25:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:25:19 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-28 13:25:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8CE975E7FF04-&gt;d1f34742-decf-48ce-b55e-fa852c7ecf42
2021-01-28 13:25:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:25:19 INFO  JobSubmitter:198 - number of splits:3
2021-01-28 13:25:20 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611840210066_0002
2021-01-28 13:25:20 INFO  YarnClientImpl:273 - Submitted application application_1611840210066_0002
2021-01-28 13:25:20 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611840210066_0002/
2021-01-28 13:25:20 INFO  Job:1339 - Running job: job_1611840210066_0002
2021-01-28 13:25:28 INFO  Job:1360 - Job job_1611840210066_0002 running in uber mode : false
2021-01-28 13:25:28 INFO  Job:1367 -  map 0% reduce 0%
2021-01-28 13:25:34 INFO  Job:1367 -  map 33% reduce 0%
2021-01-28 13:25:39 INFO  Job:1367 -  map 67% reduce 0%
2021-01-28 13:25:43 INFO  Job:1367 -  map 100% reduce 0%
2021-01-28 13:25:48 INFO  Job:1367 -  map 100% reduce 100%
2021-01-28 13:25:49 INFO  Job:1378 - Job job_1611840210066_0002 completed successfully
2021-01-28 13:25:49 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35736
		Total time spent by all reduces in occupied slots (ms)=13176
		Total time spent by all map tasks (ms)=8934
		Total time spent by all reduce tasks (ms)=3294
		Total vcore-milliseconds taken by all map tasks=8934
		Total vcore-milliseconds taken by all reduce tasks=3294
		Total megabyte-milliseconds taken by all map tasks=36593664
		Total megabyte-milliseconds taken by all reduce tasks=13492224
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=572
		CPU time spent (ms)=5990
		Physical memory (bytes) snapshot=1147486208
		Virtual memory (bytes) snapshot=15757684736
		Total committed heap usage (bytes)=1048051712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210128 13:25:50.119" starttime="20210128 13:25:50.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:25:50.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:25:50.120" starttime="20210128 13:25:50.119"></status>
</kw>
<status status="PASS" endtime="20210128 13:25:50.120" starttime="20210128 13:25:16.872"></status>
</kw>
<msg timestamp="20210128 13:25:50.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:25:50.120" starttime="20210128 13:25:16.871"></status>
</kw>
<msg timestamp="20210128 13:25:50.121" level="INFO">${output} = 2021-01-28 13:25:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-01-28 13:25:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210128 13:25:50.121" starttime="20210128 13:25:16.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 13:25:50.121" starttime="20210128 13:25:50.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:25:50.122" starttime="20210128 13:25:50.121"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:25:50.122" critical="yes" starttime="20210128 13:25:16.847"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 13:25:50.123" starttime="20210128 13:24:38.363"></status>
</suite>
<status status="PASS" elapsedtime="172628" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:11.940" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:13.810" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 13:28:13.811" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 13:28:13.811" starttime="20210128 13:28:11.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:13.812" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 13:28:13.812" starttime="20210128 13:28:13.811"></status>
</kw>
<msg timestamp="20210128 13:28:13.812" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 13:28:13.812" starttime="20210128 13:28:11.936"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:13.817" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:15.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:28:15.576" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:28:15.576" starttime="20210128 13:28:13.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:15.578" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:28:15.578" starttime="20210128 13:28:15.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:28:15.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:28:15.578" starttime="20210128 13:28:15.578"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:15.579" starttime="20210128 13:28:13.813"></status>
</kw>
<msg timestamp="20210128 13:28:15.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:28:15.579" starttime="20210128 13:28:13.813"></status>
</kw>
<msg timestamp="20210128 13:28:15.579" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210128 13:28:15.579" starttime="20210128 13:28:13.813"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210128 13:28:15.580" starttime="20210128 13:28:15.579"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:15.580" starttime="20210128 13:28:13.813"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:15.580" starttime="20210128 13:28:13.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:15.583" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:17.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:28:17.393" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:28:17.393" starttime="20210128 13:28:15.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:17.394" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:28:17.394" starttime="20210128 13:28:17.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:28:17.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:28:17.395" starttime="20210128 13:28:17.394"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:17.395" starttime="20210128 13:28:15.581"></status>
</kw>
<msg timestamp="20210128 13:28:17.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:28:17.395" starttime="20210128 13:28:15.581"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:17.395" starttime="20210128 13:28:15.581"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:17.395" starttime="20210128 13:28:15.580"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:17.395" starttime="20210128 13:28:15.580"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210128 13:28:17.396" starttime="20210128 13:28:17.395"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:17.399" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:19.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:28:19.104" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:28...</msg>
<status status="PASS" endtime="20210128 13:28:19.104" starttime="20210128 13:28:17.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:19.105" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:28:17.361Z",
  "modificationTime" : "2021-01-28T13:28:17.361Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 13:28:19.105" starttime="20210128 13:28:19.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:28:19.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:28:19.106" starttime="20210128 13:28:19.105"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:19.106" starttime="20210128 13:28:17.397"></status>
</kw>
<msg timestamp="20210128 13:28:19.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:28:19.106" starttime="20210128 13:28:17.396"></status>
</kw>
<msg timestamp="20210128 13:28:19.107" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:28...</msg>
<status status="PASS" endtime="20210128 13:28:19.107" starttime="20210128 13:28:17.396"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210128 13:28:19.107" starttime="20210128 13:28:19.107"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:28:19.110" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:28:19.110" starttime="20210128 13:28:19.110"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:28:19.111" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:28:19.111" starttime="20210128 13:28:19.111"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:19.111" starttime="20210128 13:28:19.110"></status>
</kw>
<msg timestamp="20210128 13:28:19.111" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:28:19.111" starttime="20210128 13:28:19.109"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:19.111" starttime="20210128 13:28:19.109"></status>
</kw>
<msg timestamp="20210128 13:28:19.112" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 13:28:19.112" starttime="20210128 13:28:19.108"></status>
</kw>
<msg timestamp="20210128 13:28:19.112" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 13:28:19.112" starttime="20210128 13:28:19.107"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:19.115" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:20.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:28:20.961" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:28:20.961" starttime="20210128 13:28:19.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:20.962" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:28:20.962" starttime="20210128 13:28:20.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:28:20.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:28:20.963" starttime="20210128 13:28:20.962"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:20.963" starttime="20210128 13:28:19.112"></status>
</kw>
<msg timestamp="20210128 13:28:20.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:28:20.963" starttime="20210128 13:28:19.112"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:20.963" starttime="20210128 13:28:19.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:20.966" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:25.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:28:25.431" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:28:25.431" starttime="20210128 13:28:20.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:25.432" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:28:25.432" starttime="20210128 13:28:25.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:28:25.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:28:25.433" starttime="20210128 13:28:25.432"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:25.433" starttime="20210128 13:28:20.964"></status>
</kw>
<msg timestamp="20210128 13:28:25.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:28:25.433" starttime="20210128 13:28:20.964"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:25.434" starttime="20210128 13:28:20.963"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:25.437" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:28.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:28:28.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:28:28.524" starttime="20210128 13:28:25.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:28.525" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:28:28.525" starttime="20210128 13:28:28.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:28:28.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:28:28.526" starttime="20210128 13:28:28.525"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:28.526" starttime="20210128 13:28:25.435"></status>
</kw>
<msg timestamp="20210128 13:28:28.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:28:28.526" starttime="20210128 13:28:25.434"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:28.526" starttime="20210128 13:28:25.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:28.530" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:31.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:28:31.825" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:28:31.825" starttime="20210128 13:28:28.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:31.826" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:28:31.826" starttime="20210128 13:28:31.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:28:31.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:28:31.827" starttime="20210128 13:28:31.827"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:31.827" starttime="20210128 13:28:28.527"></status>
</kw>
<msg timestamp="20210128 13:28:31.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:28:31.827" starttime="20210128 13:28:28.527"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:31.828" starttime="20210128 13:28:28.526"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:28:31.828" critical="yes" starttime="20210128 13:28:11.935"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:28:31.832" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:28:31.832" starttime="20210128 13:28:31.831"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:28:31.832" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:28:31.832" starttime="20210128 13:28:31.832"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:31.832" starttime="20210128 13:28:31.831"></status>
</kw>
<msg timestamp="20210128 13:28:31.832" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:28:31.832" starttime="20210128 13:28:31.830"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:31.833" starttime="20210128 13:28:31.830"></status>
</kw>
<msg timestamp="20210128 13:28:31.833" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 13:28:31.833" starttime="20210128 13:28:31.829"></status>
</kw>
<msg timestamp="20210128 13:28:31.833" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 13:28:31.833" starttime="20210128 13:28:31.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:31.836" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:33.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:28:33.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:28:33.560" starttime="20210128 13:28:31.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:33.561" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:28:33.561" starttime="20210128 13:28:33.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:28:33.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:28:33.561" starttime="20210128 13:28:33.561"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:33.562" starttime="20210128 13:28:31.834"></status>
</kw>
<msg timestamp="20210128 13:28:33.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:28:33.562" starttime="20210128 13:28:31.833"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:33.562" starttime="20210128 13:28:31.833"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:33.565" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:35.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:28:35.456" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:28:35.456" starttime="20210128 13:28:33.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:35.457" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:28:35.457" starttime="20210128 13:28:35.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:28:35.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:28:35.458" starttime="20210128 13:28:35.458"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:35.458" starttime="20210128 13:28:33.563"></status>
</kw>
<msg timestamp="20210128 13:28:35.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:28:35.459" starttime="20210128 13:28:33.562"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:35.459" starttime="20210128 13:28:33.562"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:28:35.459" critical="yes" starttime="20210128 13:28:31.828"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210128 13:28:35.460" starttime="20210128 13:28:11.893"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:30:08.953" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:30:08.953" starttime="20210128 13:30:08.953"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:30:08.954" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:30:08.954" starttime="20210128 13:30:08.953"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:08.954" starttime="20210128 13:30:08.952"></status>
</kw>
<msg timestamp="20210128 13:30:08.954" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:30:08.954" starttime="20210128 13:30:08.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:30:08.955" starttime="20210128 13:30:08.955"></status>
</kw>
<msg timestamp="20210128 13:30:08.955" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 13:30:08.955" starttime="20210128 13:30:08.954"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:08.956" starttime="20210128 13:30:08.950"></status>
</kw>
<msg timestamp="20210128 13:30:08.956" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:30:08.956" starttime="20210128 13:30:08.950"></status>
</kw>
<msg timestamp="20210128 13:30:08.956" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:30:08.956" starttime="20210128 13:30:08.949"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:30:08.956" level="INFO">${random} = 48343</msg>
<status status="PASS" endtime="20210128 13:30:08.957" starttime="20210128 13:30:08.956"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:30:08.962" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-48343 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:30:11.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:30:11.882" level="INFO">${output} = 2021-01-28 13:30:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:10 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 13:30:11.882" starttime="20210128 13:30:08.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:30:11.883" level="INFO">2021-01-28 13:30:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:10 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:10 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-28 13:30:10 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:30:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:30:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:30:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:30:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4B2C6C8D920B-&gt;abaca244-3b1b-414d-84f1-d467f08e9922
2021-01-28 13:30:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:30:11 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 13:30:11.883" starttime="20210128 13:30:11.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:30:11.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:30:11.884" starttime="20210128 13:30:11.884"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:11.884" starttime="20210128 13:30:08.957"></status>
</kw>
<msg timestamp="20210128 13:30:11.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:30:11.884" starttime="20210128 13:30:08.957"></status>
</kw>
<msg timestamp="20210128 13:30:11.885" level="INFO">${result} = 2021-01-28 13:30:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:10 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 13:30:11.885" starttime="20210128 13:30:08.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:30:11.888" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:30:13.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:30:13.518" level="INFO">${output} = 2021-01-28 13:30:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 13:30:13.518" starttime="20210128 13:30:11.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:30:13.519" level="INFO">2021-01-28 13:30:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:13 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:28 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-28 13:30 ofs://om/volume1/bucket1/ozone-48343
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-28 13:28 ofs://om/volume1/bucket1/ozone-69454
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:28 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:29 ofs://om/volume1/bucket1/wordcount-5L0WFwIG.txt
2021-01-28 13:30:13 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 13:30:13.519" starttime="20210128 13:30:13.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:30:13.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:30:13.520" starttime="20210128 13:30:13.519"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:13.520" starttime="20210128 13:30:11.886"></status>
</kw>
<msg timestamp="20210128 13:30:13.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:30:13.520" starttime="20210128 13:30:11.885"></status>
</kw>
<msg timestamp="20210128 13:30:13.520" level="INFO">${result} = 2021-01-28 13:30:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 13:30:13.520" starttime="20210128 13:30:11.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:30:13.521" starttime="20210128 13:30:13.520"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 13:30:13.521" critical="yes" starttime="20210128 13:30:08.948"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 13:30:13.522" starttime="20210128 13:30:08.902"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:28:39.546" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:28:39.546" starttime="20210128 13:28:39.546"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:28:39.547" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:28:39.547" starttime="20210128 13:28:39.546"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:39.547" starttime="20210128 13:28:39.546"></status>
</kw>
<msg timestamp="20210128 13:28:39.547" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:28:39.547" starttime="20210128 13:28:39.545"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:39.547" starttime="20210128 13:28:39.545"></status>
</kw>
<msg timestamp="20210128 13:28:39.547" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:28:39.547" starttime="20210128 13:28:39.544"></status>
</kw>
<msg timestamp="20210128 13:28:39.547" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:28:39.547" starttime="20210128 13:28:39.543"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:28:39.548" level="INFO">${random} = 69454</msg>
<status status="PASS" endtime="20210128 13:28:39.548" starttime="20210128 13:28:39.548"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:39.552" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-69454 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:45.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:28:45.237" level="INFO">${output} = 2021-01-28 13:28:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 13:28:45.237" starttime="20210128 13:28:39.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:45.239" level="INFO">2021-01-28 13:28:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:41 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-28 13:28:41 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:28:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:28:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:28:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:28:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E8D7313BB73C-&gt;a7fad041-7e65-46f5-ac17-ec9ee4f90aae
2021-01-28 13:28:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:28:44 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 13:28:45.239" starttime="20210128 13:28:45.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:28:45.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:28:45.240" starttime="20210128 13:28:45.239"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:45.240" starttime="20210128 13:28:39.549"></status>
</kw>
<msg timestamp="20210128 13:28:45.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:28:45.240" starttime="20210128 13:28:39.548"></status>
</kw>
<msg timestamp="20210128 13:28:45.240" level="INFO">${result} = 2021-01-28 13:28:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 13:28:45.241" starttime="20210128 13:28:39.548"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:45.243" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:46.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:28:46.843" level="INFO">${output} = 2021-01-28 13:28:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 13:28:46.843" starttime="20210128 13:28:45.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:46.844" level="INFO">2021-01-28 13:28:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:46 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-28 13:28 o3fs://bucket1.volume1.om/ozone-69454
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:28 o3fs://bucket1.volume1.om/user
2021-01-28 13:28:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 13:28:46.845" starttime="20210128 13:28:46.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:28:46.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:28:46.845" starttime="20210128 13:28:46.845"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:46.845" starttime="20210128 13:28:45.241"></status>
</kw>
<msg timestamp="20210128 13:28:46.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:28:46.846" starttime="20210128 13:28:45.241"></status>
</kw>
<msg timestamp="20210128 13:28:46.846" level="INFO">${result} = 2021-01-28 13:28:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 13:28:46.846" starttime="20210128 13:28:45.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:28:46.846" starttime="20210128 13:28:46.846"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 13:28:46.847" critical="yes" starttime="20210128 13:28:39.543"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 13:28:46.847" starttime="20210128 13:28:39.503"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:30:17.496" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:30:17.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:30:17.502" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:30:17.502" starttime="20210128 13:30:17.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:30:17.503" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:30:17.503" starttime="20210128 13:30:17.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:30:17.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:30:17.503" starttime="20210128 13:30:17.503"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:17.504" starttime="20210128 13:30:17.493"></status>
</kw>
<msg timestamp="20210128 13:30:17.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:30:17.504" starttime="20210128 13:30:17.493"></status>
</kw>
<msg timestamp="20210128 13:30:17.504" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:30:17.504" starttime="20210128 13:30:17.492"></status>
</kw>
<msg timestamp="20210128 13:30:17.504" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:30:17.504" starttime="20210128 13:30:17.492"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:30:17.508" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:30:17.508" starttime="20210128 13:30:17.508"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:30:17.508" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:30:17.508" starttime="20210128 13:30:17.508"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:17.509" starttime="20210128 13:30:17.507"></status>
</kw>
<msg timestamp="20210128 13:30:17.509" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:30:17.509" starttime="20210128 13:30:17.507"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:30:17.510" starttime="20210128 13:30:17.509"></status>
</kw>
<msg timestamp="20210128 13:30:17.510" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 13:30:17.510" starttime="20210128 13:30:17.509"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:17.510" starttime="20210128 13:30:17.506"></status>
</kw>
<msg timestamp="20210128 13:30:17.510" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:30:17.510" starttime="20210128 13:30:17.505"></status>
</kw>
<msg timestamp="20210128 13:30:17.510" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:30:17.510" starttime="20210128 13:30:17.504"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:30:17.513" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:30:54.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:30:54.815" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:30:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30...</msg>
<status status="PASS" endtime="20210128 13:30:54.815" starttime="20210128 13:30:17.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:30:54.816" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:30:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:19 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-28 13:30:19 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:30:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:30:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:30:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:30:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B4B31252A634-&gt;abaca244-3b1b-414d-84f1-d467f08e9922
2021-01-28 13:30:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-28 13:30:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D94E1FFE3FE5-&gt;a7fad041-7e65-46f5-ac17-ec9ee4f90aae
2021-01-28 13:30:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-28 13:30:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2021-01-28 13:30:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 13:30:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:20 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 13:30:20 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 13:30:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611840469170_0003
2021-01-28 13:30:23 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 13:30:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:23 INFO  Configuration:2752 - resource-types.xml not found
2021-01-28 13:30:23 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-28 13:30:23 INFO  YarnClientImpl:324 - Submitted application application_1611840469170_0003
2021-01-28 13:30:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611840469170_0003/
2021-01-28 13:30:23 INFO  Job:1619 - Running job: job_1611840469170_0003
2021-01-28 13:30:30 INFO  Job:1640 - Job job_1611840469170_0003 running in uber mode : false
2021-01-28 13:30:30 INFO  Job:1647 -  map 0% reduce 0%
2021-01-28 13:30:36 INFO  Job:1647 -  map 33% reduce 0%
2021-01-28 13:30:41 INFO  Job:1647 -  map 67% reduce 0%
2021-01-28 13:30:46 INFO  Job:1647 -  map 100% reduce 0%
2021-01-28 13:30:53 INFO  Job:1647 -  map 100% reduce 100%
2021-01-28 13:30:54 INFO  Job:1658 - Job job_1611840469170_0003 completed successfully
2021-01-28 13:30:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016165
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=32788
		Total time spent by all reduces in occupied slots (ms)=23332
		Total time spent by all map tasks (ms)=8197
		Total time spent by all reduce tasks (ms)=5833
		Total vcore-milliseconds taken by all map tasks=8197
		Total vcore-milliseconds taken by all reduce tasks=5833
		Total megabyte-milliseconds taken by all map tasks=33574912
		Total megabyte-milliseconds taken by all reduce tasks=23891968
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=604
		CPU time spent (ms)=5940
		Physical memory (bytes) snapshot=1252401152
		Virtual memory (bytes) snapshot=15819030528
		Total committed heap usage (bytes)=1091043328
		Peak Map Physical memory (bytes)=320491520
		Peak Map Virtual memory (bytes)=3954253824
		Peak Reduce Physical memory (bytes)=311726080
		Peak Reduce Virtual memory (bytes)=3968241664
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.046 seconds
2021-01-28 13:30:54 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-28 13:30:54 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 13:30:54.816" starttime="20210128 13:30:54.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:30:54.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:30:54.817" starttime="20210128 13:30:54.817"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:54.817" starttime="20210128 13:30:17.511"></status>
</kw>
<msg timestamp="20210128 13:30:54.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:30:54.817" starttime="20210128 13:30:17.511"></status>
</kw>
<msg timestamp="20210128 13:30:54.818" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:30:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30...</msg>
<status status="PASS" endtime="20210128 13:30:54.818" starttime="20210128 13:30:17.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:30:54.818" starttime="20210128 13:30:54.818"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:30:54.819" critical="yes" starttime="20210128 13:30:17.491"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:30:54.823" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:30:54.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:30:54.828" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:30:54.828" starttime="20210128 13:30:54.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:30:54.829" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:30:54.829" starttime="20210128 13:30:54.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:30:54.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:30:54.829" starttime="20210128 13:30:54.829"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:54.829" starttime="20210128 13:30:54.821"></status>
</kw>
<msg timestamp="20210128 13:30:54.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:30:54.830" starttime="20210128 13:30:54.821"></status>
</kw>
<msg timestamp="20210128 13:30:54.830" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:30:54.830" starttime="20210128 13:30:54.820"></status>
</kw>
<msg timestamp="20210128 13:30:54.830" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:30:54.830" starttime="20210128 13:30:54.820"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:30:54.830" level="INFO">${random} = 2BiX3wmm</msg>
<status status="PASS" endtime="20210128 13:30:54.831" starttime="20210128 13:30:54.830"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:30:54.834" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:30:54.834" starttime="20210128 13:30:54.834"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:30:54.835" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:30:54.835" starttime="20210128 13:30:54.834"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:54.835" starttime="20210128 13:30:54.833"></status>
</kw>
<msg timestamp="20210128 13:30:54.835" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:30:54.835" starttime="20210128 13:30:54.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:30:54.836" starttime="20210128 13:30:54.835"></status>
</kw>
<msg timestamp="20210128 13:30:54.836" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 13:30:54.836" starttime="20210128 13:30:54.835"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:54.836" starttime="20210128 13:30:54.832"></status>
</kw>
<msg timestamp="20210128 13:30:54.836" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:30:54.836" starttime="20210128 13:30:54.831"></status>
</kw>
<msg timestamp="20210128 13:30:54.836" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:30:54.836" starttime="20210128 13:30:54.831"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:30:54.839" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:30:54.839" starttime="20210128 13:30:54.839"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:30:54.840" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:30:54.840" starttime="20210128 13:30:54.839"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:54.840" starttime="20210128 13:30:54.838"></status>
</kw>
<msg timestamp="20210128 13:30:54.840" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:30:54.840" starttime="20210128 13:30:54.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:30:54.841" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210128 13:30:54.841" starttime="20210128 13:30:54.841"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:30:54.842" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210128 13:30:54.842" starttime="20210128 13:30:54.841"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:54.842" starttime="20210128 13:30:54.840"></status>
</kw>
<msg timestamp="20210128 13:30:54.842" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210128 13:30:54.842" starttime="20210128 13:30:54.840"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:54.842" starttime="20210128 13:30:54.837"></status>
</kw>
<msg timestamp="20210128 13:30:54.842" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 13:30:54.842" starttime="20210128 13:30:54.837"></status>
</kw>
<msg timestamp="20210128 13:30:54.843" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 13:30:54.843" starttime="20210128 13:30:54.836"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:30:54.845" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:30:54.845" starttime="20210128 13:30:54.845"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:30:54.846" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:30:54.846" starttime="20210128 13:30:54.846"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:54.846" starttime="20210128 13:30:54.845"></status>
</kw>
<msg timestamp="20210128 13:30:54.846" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:30:54.846" starttime="20210128 13:30:54.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:30:54.847" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210128 13:30:54.847" starttime="20210128 13:30:54.847"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:30:54.848" level="INFO">${result} = /wordcount-2BiX3wmm.txt</msg>
<status status="PASS" endtime="20210128 13:30:54.848" starttime="20210128 13:30:54.848"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:54.848" starttime="20210128 13:30:54.847"></status>
</kw>
<msg timestamp="20210128 13:30:54.848" level="INFO">${path_with_leading} = /wordcount-2BiX3wmm.txt</msg>
<status status="PASS" endtime="20210128 13:30:54.848" starttime="20210128 13:30:54.846"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:54.849" starttime="20210128 13:30:54.844"></status>
</kw>
<msg timestamp="20210128 13:30:54.849" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-2BiX3wmm.txt</msg>
<status status="PASS" endtime="20210128 13:30:54.849" starttime="20210128 13:30:54.843"></status>
</kw>
<msg timestamp="20210128 13:30:54.849" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-2BiX3wmm.txt</msg>
<status status="PASS" endtime="20210128 13:30:54.849" starttime="20210128 13:30:54.843"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:30:54.852" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-2BiX3wmm.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:31:30.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:31:30.773" level="INFO">${output} = 2021-01-28 13:30:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 13:31:30.773" starttime="20210128 13:30:54.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:31:30.774" level="INFO">2021-01-28 13:30:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2021-01-28 13:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 13:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:56 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-28 13:30:56 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:30:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:30:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:30:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:30:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F7BEB2629AD1-&gt;abaca244-3b1b-414d-84f1-d467f08e9922
2021-01-28 13:30:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:30:57 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 13:31:00 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 13:31:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DE3BCB3AF696-&gt;a7fad041-7e65-46f5-ac17-ec9ee4f90aae
2021-01-28 13:31:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:31:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611840469170_0004
2021-01-28 13:31:00 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 13:31:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:31:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:31:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:31:00 INFO  Configuration:2752 - resource-types.xml not found
2021-01-28 13:31:00 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-28 13:31:00 INFO  YarnClientImpl:324 - Submitted application application_1611840469170_0004
2021-01-28 13:31:00 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611840469170_0004/
2021-01-28 13:31:00 INFO  Job:1619 - Running job: job_1611840469170_0004
2021-01-28 13:31:07 INFO  Job:1640 - Job job_1611840469170_0004 running in uber mode : false
2021-01-28 13:31:07 INFO  Job:1647 -  map 0% reduce 0%
2021-01-28 13:31:12 INFO  Job:1647 -  map 33% reduce 0%
2021-01-28 13:31:17 INFO  Job:1647 -  map 67% reduce 0%
2021-01-28 13:31:22 INFO  Job:1647 -  map 100% reduce 0%
2021-01-28 13:31:26 INFO  Job:1647 -  map 100% reduce 100%
2021-01-28 13:31:30 INFO  Job:1658 - Job job_1611840469170_0004 completed successfully
2021-01-28 13:31:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:31:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078831
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=31760
		Total time spent by all reduces in occupied slots (ms)=11620
		Total time spent by all map tasks (ms)=7940
		Total time spent by all reduce tasks (ms)=2905
		Total vcore-milliseconds taken by all map tasks=7940
		Total vcore-milliseconds taken by all reduce tasks=2905
		Total megabyte-milliseconds taken by all map tasks=32522240
		Total megabyte-milliseconds taken by all reduce tasks=11898880
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=502
		CPU time spent (ms)=5440
		Physical memory (bytes) snapshot=1247154176
		Virtual memory (bytes) snapshot=15797817344
		Total committed heap usage (bytes)=1072693248
		Peak Map Physical memory (bytes)=315215872
		Peak Map Virtual memory (bytes)=3944116224
		Peak Reduce Physical memory (bytes)=311009280
		Peak Reduce Virtual memory (bytes)=3969892352
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-28 13:31:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 13:31:30.774" starttime="20210128 13:31:30.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:31:30.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:31:30.775" starttime="20210128 13:31:30.775"></status>
</kw>
<status status="PASS" endtime="20210128 13:31:30.775" starttime="20210128 13:30:54.850"></status>
</kw>
<msg timestamp="20210128 13:31:30.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:31:30.775" starttime="20210128 13:30:54.850"></status>
</kw>
<msg timestamp="20210128 13:31:30.776" level="INFO">${output} = 2021-01-28 13:30:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 13:31:30.776" starttime="20210128 13:30:54.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 13:31:30.776" starttime="20210128 13:31:30.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:31:30.777" starttime="20210128 13:31:30.776"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:31:30.777" critical="yes" starttime="20210128 13:30:54.819"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 13:31:30.778" starttime="20210128 13:30:17.451"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:50.932" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:28:50.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:28:50.938" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:28:50.938" starttime="20210128 13:28:50.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:28:50.938" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:28:50.938" starttime="20210128 13:28:50.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:28:50.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:28:50.939" starttime="20210128 13:28:50.939"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:50.939" starttime="20210128 13:28:50.928"></status>
</kw>
<msg timestamp="20210128 13:28:50.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:28:50.939" starttime="20210128 13:28:50.928"></status>
</kw>
<msg timestamp="20210128 13:28:50.939" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:28:50.940" starttime="20210128 13:28:50.928"></status>
</kw>
<msg timestamp="20210128 13:28:50.940" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:28:50.940" starttime="20210128 13:28:50.927"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:28:50.943" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:28:50.943" starttime="20210128 13:28:50.943"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:28:50.944" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:28:50.944" starttime="20210128 13:28:50.944"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:50.944" starttime="20210128 13:28:50.943"></status>
</kw>
<msg timestamp="20210128 13:28:50.944" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:28:50.944" starttime="20210128 13:28:50.942"></status>
</kw>
<status status="PASS" endtime="20210128 13:28:50.944" starttime="20210128 13:28:50.942"></status>
</kw>
<msg timestamp="20210128 13:28:50.944" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:28:50.944" starttime="20210128 13:28:50.940"></status>
</kw>
<msg timestamp="20210128 13:28:50.945" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:28:50.945" starttime="20210128 13:28:50.940"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:28:50.947" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:29:26.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:29:26.423" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:28:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28...</msg>
<status status="PASS" endtime="20210128 13:29:26.423" starttime="20210128 13:28:50.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:29:26.424" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:28:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:52 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-28 13:28:52 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:28:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:28:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:28:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:28:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D85BC46FA350-&gt;abaca244-3b1b-414d-84f1-d467f08e9922
2021-01-28 13:28:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-28 13:28:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2021-01-28 13:28:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EA6DFC2040B9-&gt;a7fad041-7e65-46f5-ac17-ec9ee4f90aae
2021-01-28 13:28:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:28:54 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 13:28:54 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 13:28:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611840469170_0001
2021-01-28 13:28:54 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 13:28:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:55 INFO  Configuration:2752 - resource-types.xml not found
2021-01-28 13:28:55 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-28 13:28:55 INFO  YarnClientImpl:324 - Submitted application application_1611840469170_0001
2021-01-28 13:28:55 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611840469170_0001/
2021-01-28 13:28:55 INFO  Job:1619 - Running job: job_1611840469170_0001
2021-01-28 13:29:04 INFO  Job:1640 - Job job_1611840469170_0001 running in uber mode : false
2021-01-28 13:29:04 INFO  Job:1647 -  map 0% reduce 0%
2021-01-28 13:29:10 INFO  Job:1647 -  map 33% reduce 0%
2021-01-28 13:29:15 INFO  Job:1647 -  map 67% reduce 0%
2021-01-28 13:29:19 INFO  Job:1647 -  map 100% reduce 0%
2021-01-28 13:29:24 INFO  Job:1647 -  map 100% reduce 100%
2021-01-28 13:29:25 INFO  Job:1658 - Job job_1611840469170_0001 completed successfully
2021-01-28 13:29:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:25 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016377
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34184
		Total time spent by all reduces in occupied slots (ms)=12196
		Total time spent by all map tasks (ms)=8546
		Total time spent by all reduce tasks (ms)=3049
		Total vcore-milliseconds taken by all map tasks=8546
		Total vcore-milliseconds taken by all reduce tasks=3049
		Total megabyte-milliseconds taken by all map tasks=35004416
		Total megabyte-milliseconds taken by all reduce tasks=12488704
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=533
		CPU time spent (ms)=5560
		Physical memory (bytes) snapshot=1297461248
		Virtual memory (bytes) snapshot=15806836736
		Total committed heap usage (bytes)=1073741824
		Peak Map Physical memory (bytes)=329478144
		Peak Map Virtual memory (bytes)=3946479616
		Peak Reduce Physical memory (bytes)=318689280
		Peak Reduce Virtual memory (bytes)=3968401408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.015 seconds
2021-01-28 13:29:25 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-28 13:29:26 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 13:29:26.425" starttime="20210128 13:29:26.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:29:26.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:29:26.425" starttime="20210128 13:29:26.425"></status>
</kw>
<status status="PASS" endtime="20210128 13:29:26.426" starttime="20210128 13:28:50.945"></status>
</kw>
<msg timestamp="20210128 13:29:26.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:29:26.426" starttime="20210128 13:28:50.945"></status>
</kw>
<msg timestamp="20210128 13:29:26.426" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:28:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:28...</msg>
<status status="PASS" endtime="20210128 13:29:26.426" starttime="20210128 13:28:50.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:29:26.427" starttime="20210128 13:29:26.427"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:29:26.427" critical="yes" starttime="20210128 13:28:50.927"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:29:26.432" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:29:26.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:29:26.438" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:29:26.438" starttime="20210128 13:29:26.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:29:26.439" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:29:26.439" starttime="20210128 13:29:26.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:29:26.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:29:26.439" starttime="20210128 13:29:26.439"></status>
</kw>
<status status="PASS" endtime="20210128 13:29:26.439" starttime="20210128 13:29:26.430"></status>
</kw>
<msg timestamp="20210128 13:29:26.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:29:26.439" starttime="20210128 13:29:26.430"></status>
</kw>
<msg timestamp="20210128 13:29:26.440" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:29:26.440" starttime="20210128 13:29:26.429"></status>
</kw>
<msg timestamp="20210128 13:29:26.440" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 13:29:26.440" starttime="20210128 13:29:26.429"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:29:26.440" level="INFO">${random} = 5L0WFwIG</msg>
<status status="PASS" endtime="20210128 13:29:26.440" starttime="20210128 13:29:26.440"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:29:26.443" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:29:26.443" starttime="20210128 13:29:26.443"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:29:26.444" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:29:26.444" starttime="20210128 13:29:26.444"></status>
</kw>
<status status="PASS" endtime="20210128 13:29:26.444" starttime="20210128 13:29:26.443"></status>
</kw>
<msg timestamp="20210128 13:29:26.444" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:29:26.444" starttime="20210128 13:29:26.442"></status>
</kw>
<status status="PASS" endtime="20210128 13:29:26.445" starttime="20210128 13:29:26.441"></status>
</kw>
<msg timestamp="20210128 13:29:26.445" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:29:26.445" starttime="20210128 13:29:26.441"></status>
</kw>
<msg timestamp="20210128 13:29:26.445" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:29:26.445" starttime="20210128 13:29:26.440"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:29:26.448" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:29:26.448" starttime="20210128 13:29:26.447"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:29:26.448" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:29:26.448" starttime="20210128 13:29:26.448"></status>
</kw>
<status status="PASS" endtime="20210128 13:29:26.448" starttime="20210128 13:29:26.447"></status>
</kw>
<msg timestamp="20210128 13:29:26.448" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:29:26.448" starttime="20210128 13:29:26.447"></status>
</kw>
<status status="PASS" endtime="20210128 13:29:26.449" starttime="20210128 13:29:26.446"></status>
</kw>
<msg timestamp="20210128 13:29:26.449" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 13:29:26.449" starttime="20210128 13:29:26.445"></status>
</kw>
<msg timestamp="20210128 13:29:26.449" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 13:29:26.449" starttime="20210128 13:29:26.445"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:29:26.451" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:29:26.451" starttime="20210128 13:29:26.451"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:29:26.452" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:29:26.452" starttime="20210128 13:29:26.451"></status>
</kw>
<status status="PASS" endtime="20210128 13:29:26.452" starttime="20210128 13:29:26.451"></status>
</kw>
<msg timestamp="20210128 13:29:26.452" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:29:26.452" starttime="20210128 13:29:26.450"></status>
</kw>
<status status="PASS" endtime="20210128 13:29:26.452" starttime="20210128 13:29:26.450"></status>
</kw>
<msg timestamp="20210128 13:29:26.452" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-5L0WFwIG.txt</msg>
<status status="PASS" endtime="20210128 13:29:26.452" starttime="20210128 13:29:26.449"></status>
</kw>
<msg timestamp="20210128 13:29:26.452" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-5L0WFwIG.txt</msg>
<status status="PASS" endtime="20210128 13:29:26.452" starttime="20210128 13:29:26.449"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:29:26.455" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-5L0WFwIG.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:30:05.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:30:05.095" level="INFO">${output} = 2021-01-28 13:29:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 13:30:05.095" starttime="20210128 13:29:26.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:30:05.096" level="INFO">2021-01-28 13:29:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:27 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2021-01-28 13:29:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 13:29:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:28 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-28 13:29:28 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-28 13:29:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:29:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:29:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:29:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3F490C612375-&gt;a7fad041-7e65-46f5-ac17-ec9ee4f90aae
2021-01-28 13:29:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:29:29 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 13:29:29 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 13:29:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-636F1EC3FFFB-&gt;abaca244-3b1b-414d-84f1-d467f08e9922
2021-01-28 13:29:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:29:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611840469170_0002
2021-01-28 13:29:29 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 13:29:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:30 INFO  Configuration:2752 - resource-types.xml not found
2021-01-28 13:29:30 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-28 13:29:30 INFO  YarnClientImpl:324 - Submitted application application_1611840469170_0002
2021-01-28 13:29:30 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611840469170_0002/
2021-01-28 13:29:30 INFO  Job:1619 - Running job: job_1611840469170_0002
2021-01-28 13:29:37 INFO  Job:1640 - Job job_1611840469170_0002 running in uber mode : false
2021-01-28 13:29:37 INFO  Job:1647 -  map 0% reduce 0%
2021-01-28 13:29:43 INFO  Job:1647 -  map 33% reduce 0%
2021-01-28 13:29:48 INFO  Job:1647 -  map 67% reduce 0%
2021-01-28 13:29:52 INFO  Job:1647 -  map 100% reduce 0%
2021-01-28 13:29:56 INFO  Job:1647 -  map 100% reduce 100%
2021-01-28 13:30:04 INFO  Job:1658 - Job job_1611840469170_0002 completed successfully
2021-01-28 13:30:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:30:04 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078915
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=32220
		Total time spent by all reduces in occupied slots (ms)=11676
		Total time spent by all map tasks (ms)=8055
		Total time spent by all reduce tasks (ms)=2919
		Total vcore-milliseconds taken by all map tasks=8055
		Total vcore-milliseconds taken by all reduce tasks=2919
		Total megabyte-milliseconds taken by all map tasks=32993280
		Total megabyte-milliseconds taken by all reduce tasks=11956224
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=518
		CPU time spent (ms)=5500
		Physical memory (bytes) snapshot=1261424640
		Virtual memory (bytes) snapshot=15798796288
		Total committed heap usage (bytes)=1069023232
		Peak Map Physical memory (bytes)=321662976
		Peak Map Virtual memory (bytes)=3944644608
		Peak Reduce Physical memory (bytes)=314548224
		Peak Reduce Virtual memory (bytes)=3968458752
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-28 13:30:04 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 13:30:05.096" starttime="20210128 13:30:05.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:30:05.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:30:05.097" starttime="20210128 13:30:05.096"></status>
</kw>
<status status="PASS" endtime="20210128 13:30:05.097" starttime="20210128 13:29:26.453"></status>
</kw>
<msg timestamp="20210128 13:30:05.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:30:05.097" starttime="20210128 13:29:26.453"></status>
</kw>
<msg timestamp="20210128 13:30:05.097" level="INFO">${output} = 2021-01-28 13:29:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 13:29:27 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 13:30:05.097" starttime="20210128 13:29:26.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 13:30:05.098" starttime="20210128 13:30:05.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:30:05.098" starttime="20210128 13:30:05.098"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:30:05.098" critical="yes" starttime="20210128 13:29:26.428"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 13:30:05.099" starttime="20210128 13:28:50.886"></status>
</suite>
<status status="PASS" elapsedtime="183071" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:32:37.341" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:32:40.561" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 13:32:40.561" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 13:32:40.561" starttime="20210128 13:32:37.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:32:40.562" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 13:32:40.562" starttime="20210128 13:32:40.561"></status>
</kw>
<msg timestamp="20210128 13:32:40.562" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 13:32:40.562" starttime="20210128 13:32:37.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:32:40.567" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:32:43.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:32:43.247" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:32:43.247" starttime="20210128 13:32:40.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:32:43.248" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:32:43.248" starttime="20210128 13:32:43.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:32:43.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:32:43.249" starttime="20210128 13:32:43.248"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:43.249" starttime="20210128 13:32:40.564"></status>
</kw>
<msg timestamp="20210128 13:32:43.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:32:43.249" starttime="20210128 13:32:40.564"></status>
</kw>
<msg timestamp="20210128 13:32:43.249" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210128 13:32:43.249" starttime="20210128 13:32:40.563"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210128 13:32:43.250" starttime="20210128 13:32:43.250"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:43.250" starttime="20210128 13:32:40.563"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:43.250" starttime="20210128 13:32:40.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:32:43.254" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:32:45.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:32:45.657" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:32:45.657" starttime="20210128 13:32:43.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:32:45.658" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:32:45.658" starttime="20210128 13:32:45.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:32:45.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:32:45.659" starttime="20210128 13:32:45.658"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:45.659" starttime="20210128 13:32:43.251"></status>
</kw>
<msg timestamp="20210128 13:32:45.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:32:45.659" starttime="20210128 13:32:43.251"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:45.659" starttime="20210128 13:32:43.251"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:45.659" starttime="20210128 13:32:43.251"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:45.659" starttime="20210128 13:32:43.250"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210128 13:32:45.660" starttime="20210128 13:32:45.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:32:45.663" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:32:48.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:32:48.089" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:32...</msg>
<status status="PASS" endtime="20210128 13:32:48.089" starttime="20210128 13:32:45.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:32:48.090" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:32:45.552Z",
  "modificationTime" : "2021-01-28T13:32:45.552Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 13:32:48.090" starttime="20210128 13:32:48.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:32:48.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:32:48.090" starttime="20210128 13:32:48.090"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:48.090" starttime="20210128 13:32:45.661"></status>
</kw>
<msg timestamp="20210128 13:32:48.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:32:48.091" starttime="20210128 13:32:45.660"></status>
</kw>
<msg timestamp="20210128 13:32:48.091" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:32...</msg>
<status status="PASS" endtime="20210128 13:32:48.091" starttime="20210128 13:32:45.660"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210128 13:32:48.091" starttime="20210128 13:32:48.091"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:32:48.094" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:32:48.094" starttime="20210128 13:32:48.094"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:32:48.095" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:32:48.095" starttime="20210128 13:32:48.094"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:48.095" starttime="20210128 13:32:48.094"></status>
</kw>
<msg timestamp="20210128 13:32:48.095" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:32:48.095" starttime="20210128 13:32:48.093"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:48.095" starttime="20210128 13:32:48.093"></status>
</kw>
<msg timestamp="20210128 13:32:48.095" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 13:32:48.095" starttime="20210128 13:32:48.092"></status>
</kw>
<msg timestamp="20210128 13:32:48.096" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 13:32:48.096" starttime="20210128 13:32:48.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:32:48.098" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:32:50.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:32:50.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:32:50.847" starttime="20210128 13:32:48.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:32:50.848" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:32:50.848" starttime="20210128 13:32:50.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:32:50.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:32:50.849" starttime="20210128 13:32:50.848"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:50.849" starttime="20210128 13:32:48.096"></status>
</kw>
<msg timestamp="20210128 13:32:50.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:32:50.849" starttime="20210128 13:32:48.096"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:50.849" starttime="20210128 13:32:48.096"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:32:50.852" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:32:56.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:32:56.273" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:32:56.273" starttime="20210128 13:32:50.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:32:56.274" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:32:56.274" starttime="20210128 13:32:56.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:32:56.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:32:56.275" starttime="20210128 13:32:56.275"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:56.275" starttime="20210128 13:32:50.850"></status>
</kw>
<msg timestamp="20210128 13:32:56.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:32:56.275" starttime="20210128 13:32:50.850"></status>
</kw>
<status status="PASS" endtime="20210128 13:32:56.276" starttime="20210128 13:32:50.849"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:32:56.278" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:33:00.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:33:00.534" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:33:00.534" starttime="20210128 13:32:56.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:33:00.536" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:33:00.536" starttime="20210128 13:33:00.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:33:00.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:33:00.536" starttime="20210128 13:33:00.536"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:00.536" starttime="20210128 13:32:56.276"></status>
</kw>
<msg timestamp="20210128 13:33:00.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:33:00.537" starttime="20210128 13:32:56.276"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:00.537" starttime="20210128 13:32:56.276"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:33:00.540" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:33:04.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:33:04.727" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:33:04.727" starttime="20210128 13:33:00.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:33:04.728" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:33:04.728" starttime="20210128 13:33:04.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:33:04.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:33:04.729" starttime="20210128 13:33:04.729"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:04.729" starttime="20210128 13:33:00.538"></status>
</kw>
<msg timestamp="20210128 13:33:04.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:33:04.729" starttime="20210128 13:33:00.537"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:04.730" starttime="20210128 13:33:00.537"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:33:04.730" critical="yes" starttime="20210128 13:32:37.337"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:33:04.734" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:33:04.734" starttime="20210128 13:33:04.734"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:33:04.734" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:33:04.735" starttime="20210128 13:33:04.734"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:04.735" starttime="20210128 13:33:04.733"></status>
</kw>
<msg timestamp="20210128 13:33:04.735" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:33:04.735" starttime="20210128 13:33:04.733"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:04.735" starttime="20210128 13:33:04.732"></status>
</kw>
<msg timestamp="20210128 13:33:04.735" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 13:33:04.735" starttime="20210128 13:33:04.732"></status>
</kw>
<msg timestamp="20210128 13:33:04.735" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 13:33:04.735" starttime="20210128 13:33:04.731"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:33:04.738" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:33:07.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:33:07.330" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:33:07.330" starttime="20210128 13:33:04.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:33:07.331" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:33:07.331" starttime="20210128 13:33:07.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:33:07.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:33:07.331" starttime="20210128 13:33:07.331"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:07.331" starttime="20210128 13:33:04.736"></status>
</kw>
<msg timestamp="20210128 13:33:07.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:33:07.332" starttime="20210128 13:33:04.736"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:07.332" starttime="20210128 13:33:04.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:33:07.335" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:33:09.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:33:09.704" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:33:09.704" starttime="20210128 13:33:07.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:33:09.705" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:33:09.705" starttime="20210128 13:33:09.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:33:09.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:33:09.706" starttime="20210128 13:33:09.705"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:09.706" starttime="20210128 13:33:07.332"></status>
</kw>
<msg timestamp="20210128 13:33:09.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:33:09.706" starttime="20210128 13:33:07.332"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:09.706" starttime="20210128 13:33:07.332"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:33:09.707" critical="yes" starttime="20210128 13:33:04.730"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210128 13:33:09.708" starttime="20210128 13:32:37.295"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:34:45.062" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:34:45.062" starttime="20210128 13:34:45.062"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:34:45.063" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:34:45.063" starttime="20210128 13:34:45.062"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:45.063" starttime="20210128 13:34:45.061"></status>
</kw>
<msg timestamp="20210128 13:34:45.063" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:34:45.063" starttime="20210128 13:34:45.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:34:45.064" starttime="20210128 13:34:45.063"></status>
</kw>
<msg timestamp="20210128 13:34:45.064" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 13:34:45.064" starttime="20210128 13:34:45.063"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:45.064" starttime="20210128 13:34:45.060"></status>
</kw>
<msg timestamp="20210128 13:34:45.064" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:34:45.064" starttime="20210128 13:34:45.060"></status>
</kw>
<msg timestamp="20210128 13:34:45.064" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:34:45.064" starttime="20210128 13:34:45.059"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:34:45.065" level="INFO">${random} = 78072</msg>
<status status="PASS" endtime="20210128 13:34:45.065" starttime="20210128 13:34:45.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:34:45.070" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-78072 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:34:48.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:34:48.057" level="INFO">${output} = 2021-01-28 13:34:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:34:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 13:34:48.057" starttime="20210128 13:34:45.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:34:48.058" level="INFO">2021-01-28 13:34:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:34:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:34:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:34:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:34:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DD40361E6890-&gt;de29e4d1-a11b-471f-bdba-cc302a10a631
2021-01-28 13:34:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210128 13:34:48.058" starttime="20210128 13:34:48.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:34:48.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:34:48.059" starttime="20210128 13:34:48.059"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:48.059" starttime="20210128 13:34:45.066"></status>
</kw>
<msg timestamp="20210128 13:34:48.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:34:48.059" starttime="20210128 13:34:45.066"></status>
</kw>
<msg timestamp="20210128 13:34:48.060" level="INFO">${result} = 2021-01-28 13:34:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:34:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 13:34:48.060" starttime="20210128 13:34:45.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:34:48.063" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:34:49.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:34:49.707" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:32 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:33 ofs://om/volume1/bucket1/ozone-44168
-rw-...</msg>
<status status="PASS" endtime="20210128 13:34:49.707" starttime="20210128 13:34:48.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:34:49.708" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:32 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:33 ofs://om/volume1/bucket1/ozone-44168
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:34 ofs://om/volume1/bucket1/ozone-78072
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:33 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:34 ofs://om/volume1/bucket1/wordcount-1lUTOmuP.txt</msg>
<status status="PASS" endtime="20210128 13:34:49.708" starttime="20210128 13:34:49.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:34:49.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:34:49.709" starttime="20210128 13:34:49.709"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:49.709" starttime="20210128 13:34:48.061"></status>
</kw>
<msg timestamp="20210128 13:34:49.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:34:49.710" starttime="20210128 13:34:48.060"></status>
</kw>
<msg timestamp="20210128 13:34:49.710" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:32 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:33 ofs://om/volume1/bucket1/ozone-44168
-rw-...</msg>
<status status="PASS" endtime="20210128 13:34:49.710" starttime="20210128 13:34:48.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:34:49.710" starttime="20210128 13:34:49.710"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 13:34:49.710" critical="yes" starttime="20210128 13:34:45.059"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 13:34:49.712" starttime="20210128 13:34:45.015"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:33:13.642" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:33:13.642" starttime="20210128 13:33:13.641"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:33:13.642" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:33:13.642" starttime="20210128 13:33:13.642"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:13.642" starttime="20210128 13:33:13.641"></status>
</kw>
<msg timestamp="20210128 13:33:13.642" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:33:13.642" starttime="20210128 13:33:13.640"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:13.643" starttime="20210128 13:33:13.640"></status>
</kw>
<msg timestamp="20210128 13:33:13.643" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:33:13.643" starttime="20210128 13:33:13.639"></status>
</kw>
<msg timestamp="20210128 13:33:13.643" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:33:13.643" starttime="20210128 13:33:13.638"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:33:13.643" level="INFO">${random} = 44168</msg>
<status status="PASS" endtime="20210128 13:33:13.643" starttime="20210128 13:33:13.643"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:33:13.648" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-44168 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:33:19.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:33:19.239" level="INFO">${output} = 2021-01-28 13:33:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:33:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 13:33:19.239" starttime="20210128 13:33:13.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:33:19.241" level="INFO">2021-01-28 13:33:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:33:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:33:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:33:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:33:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0BFA509C1EBE-&gt;de29e4d1-a11b-471f-bdba-cc302a10a631
2021-01-28 13:33:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210128 13:33:19.242" starttime="20210128 13:33:19.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:33:19.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:33:19.242" starttime="20210128 13:33:19.242"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:19.242" starttime="20210128 13:33:13.644"></status>
</kw>
<msg timestamp="20210128 13:33:19.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:33:19.243" starttime="20210128 13:33:13.644"></status>
</kw>
<msg timestamp="20210128 13:33:19.243" level="INFO">${result} = 2021-01-28 13:33:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:33:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 13:33:19.243" starttime="20210128 13:33:13.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:33:19.246" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:33:20.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:33:20.717" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:32 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:33 o3fs://bucket1.volume1.om/ozone-44168
dr...</msg>
<status status="PASS" endtime="20210128 13:33:20.718" starttime="20210128 13:33:19.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:33:20.718" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:32 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:33 o3fs://bucket1.volume1.om/ozone-44168
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:33 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 13:33:20.719" starttime="20210128 13:33:20.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:33:20.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:33:20.719" starttime="20210128 13:33:20.719"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:20.719" starttime="20210128 13:33:19.244"></status>
</kw>
<msg timestamp="20210128 13:33:20.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:33:20.719" starttime="20210128 13:33:19.244"></status>
</kw>
<msg timestamp="20210128 13:33:20.720" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:32 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:33 o3fs://bucket1.volume1.om/ozone-44168
dr...</msg>
<status status="PASS" endtime="20210128 13:33:20.720" starttime="20210128 13:33:19.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:33:20.720" starttime="20210128 13:33:20.720"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 13:33:20.720" critical="yes" starttime="20210128 13:33:13.638"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 13:33:20.722" starttime="20210128 13:33:13.593"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:34:53.873" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:34:53.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:34:53.878" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:34:53.878" starttime="20210128 13:34:53.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:34:53.879" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:34:53.879" starttime="20210128 13:34:53.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:34:53.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:34:53.880" starttime="20210128 13:34:53.880"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:53.880" starttime="20210128 13:34:53.869"></status>
</kw>
<msg timestamp="20210128 13:34:53.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:34:53.880" starttime="20210128 13:34:53.868"></status>
</kw>
<msg timestamp="20210128 13:34:53.881" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:34:53.881" starttime="20210128 13:34:53.868"></status>
</kw>
<msg timestamp="20210128 13:34:53.881" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:34:53.881" starttime="20210128 13:34:53.868"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:34:53.885" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:34:53.885" starttime="20210128 13:34:53.885"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:34:53.886" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:34:53.886" starttime="20210128 13:34:53.885"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:53.886" starttime="20210128 13:34:53.884"></status>
</kw>
<msg timestamp="20210128 13:34:53.886" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:34:53.886" starttime="20210128 13:34:53.884"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:34:53.887" starttime="20210128 13:34:53.887"></status>
</kw>
<msg timestamp="20210128 13:34:53.887" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 13:34:53.887" starttime="20210128 13:34:53.886"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:53.887" starttime="20210128 13:34:53.883"></status>
</kw>
<msg timestamp="20210128 13:34:53.887" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:34:53.887" starttime="20210128 13:34:53.882"></status>
</kw>
<msg timestamp="20210128 13:34:53.887" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:34:53.888" starttime="20210128 13:34:53.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:34:53.891" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:35:26.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:35:26.850" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:34:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:34:55 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 13:35:26.850" starttime="20210128 13:34:53.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:35:26.851" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:34:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:34:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:34:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:34:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:34:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-837919E93FAE-&gt;de29e4d1-a11b-471f-bdba-cc302a10a631
2021-01-28 13:34:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-28 13:34:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7792EF3860BB-&gt;2beaf997-6b2e-44a7-a692-730e3d3f9ed0
2021-01-28 13:34:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-28 13:34:56 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-01-28 13:34:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 13:34:57 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 13:34:57 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 13:34:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611840730782_0003
2021-01-28 13:34:57 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 13:34:57 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 13:34:57 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 13:34:57 INFO  YarnClientImpl:329 - Submitted application application_1611840730782_0003
2021-01-28 13:34:57 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611840730782_0003/
2021-01-28 13:34:57 INFO  Job:1614 - Running job: job_1611840730782_0003
2021-01-28 13:35:04 INFO  Job:1635 - Job job_1611840730782_0003 running in uber mode : false
2021-01-28 13:35:04 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 13:35:11 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 13:35:15 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 13:35:21 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 13:35:25 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 13:35:26 INFO  Job:1653 - Job job_1611840730782_0003 completed successfully
2021-01-28 13:35:26 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091549
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35616
		Total time spent by all reduces in occupied slots (ms)=13536
		Total time spent by all map tasks (ms)=8904
		Total time spent by all reduce tasks (ms)=3384
		Total vcore-milliseconds taken by all map tasks=8904
		Total vcore-milliseconds taken by all reduce tasks=3384
		Total megabyte-milliseconds taken by all map tasks=36470784
		Total megabyte-milliseconds taken by all reduce tasks=13860864
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=624
		CPU time spent (ms)=6170
		Physical memory (bytes) snapshot=1495519232
		Virtual memory (bytes) snapshot=15794319360
		Total committed heap usage (bytes)=1806696448
		Peak Map Physical memory (bytes)=372023296
		Peak Map Virtual memory (bytes)=3946061824
		Peak Reduce Physical memory (bytes)=393007104
		Peak Reduce Virtual memory (bytes)=3969601536
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.493 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210128 13:35:26.851" starttime="20210128 13:35:26.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:35:26.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:35:26.852" starttime="20210128 13:35:26.851"></status>
</kw>
<status status="PASS" endtime="20210128 13:35:26.852" starttime="20210128 13:34:53.888"></status>
</kw>
<msg timestamp="20210128 13:35:26.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:35:26.852" starttime="20210128 13:34:53.888"></status>
</kw>
<msg timestamp="20210128 13:35:26.853" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:34:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:34:55 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 13:35:26.853" starttime="20210128 13:34:53.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:35:26.853" starttime="20210128 13:35:26.853"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:35:26.853" critical="yes" starttime="20210128 13:34:53.867"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:35:26.858" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:35:26.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:35:26.865" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:35:26.865" starttime="20210128 13:35:26.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:35:26.866" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:35:26.866" starttime="20210128 13:35:26.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:35:26.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:35:26.866" starttime="20210128 13:35:26.866"></status>
</kw>
<status status="PASS" endtime="20210128 13:35:26.866" starttime="20210128 13:35:26.856"></status>
</kw>
<msg timestamp="20210128 13:35:26.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:35:26.867" starttime="20210128 13:35:26.856"></status>
</kw>
<msg timestamp="20210128 13:35:26.867" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:35:26.867" starttime="20210128 13:35:26.856"></status>
</kw>
<msg timestamp="20210128 13:35:26.867" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:35:26.867" starttime="20210128 13:35:26.855"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:35:26.868" level="INFO">${random} = ouAC1f0G</msg>
<status status="PASS" endtime="20210128 13:35:26.868" starttime="20210128 13:35:26.867"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:35:26.871" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:35:26.871" starttime="20210128 13:35:26.870"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:35:26.871" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:35:26.871" starttime="20210128 13:35:26.871"></status>
</kw>
<status status="PASS" endtime="20210128 13:35:26.871" starttime="20210128 13:35:26.870"></status>
</kw>
<msg timestamp="20210128 13:35:26.871" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:35:26.871" starttime="20210128 13:35:26.870"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:35:26.872" starttime="20210128 13:35:26.872"></status>
</kw>
<msg timestamp="20210128 13:35:26.872" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 13:35:26.872" starttime="20210128 13:35:26.872"></status>
</kw>
<status status="PASS" endtime="20210128 13:35:26.873" starttime="20210128 13:35:26.869"></status>
</kw>
<msg timestamp="20210128 13:35:26.873" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:35:26.873" starttime="20210128 13:35:26.868"></status>
</kw>
<msg timestamp="20210128 13:35:26.873" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:35:26.873" starttime="20210128 13:35:26.868"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:35:26.876" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:35:26.876" starttime="20210128 13:35:26.875"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:35:26.876" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:35:26.876" starttime="20210128 13:35:26.876"></status>
</kw>
<status status="PASS" endtime="20210128 13:35:26.876" starttime="20210128 13:35:26.875"></status>
</kw>
<msg timestamp="20210128 13:35:26.876" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:35:26.876" starttime="20210128 13:35:26.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:35:26.878" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210128 13:35:26.878" starttime="20210128 13:35:26.877"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:35:26.878" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210128 13:35:26.878" starttime="20210128 13:35:26.878"></status>
</kw>
<status status="PASS" endtime="20210128 13:35:26.878" starttime="20210128 13:35:26.877"></status>
</kw>
<msg timestamp="20210128 13:35:26.878" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210128 13:35:26.878" starttime="20210128 13:35:26.876"></status>
</kw>
<status status="PASS" endtime="20210128 13:35:26.879" starttime="20210128 13:35:26.874"></status>
</kw>
<msg timestamp="20210128 13:35:26.879" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 13:35:26.879" starttime="20210128 13:35:26.874"></status>
</kw>
<msg timestamp="20210128 13:35:26.879" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 13:35:26.879" starttime="20210128 13:35:26.873"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:35:26.881" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:35:26.881" starttime="20210128 13:35:26.881"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:35:26.882" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:35:26.882" starttime="20210128 13:35:26.881"></status>
</kw>
<status status="PASS" endtime="20210128 13:35:26.882" starttime="20210128 13:35:26.881"></status>
</kw>
<msg timestamp="20210128 13:35:26.882" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:35:26.882" starttime="20210128 13:35:26.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:35:26.883" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210128 13:35:26.883" starttime="20210128 13:35:26.883"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:35:26.884" level="INFO">${result} = /wordcount-ouAC1f0G.txt</msg>
<status status="PASS" endtime="20210128 13:35:26.884" starttime="20210128 13:35:26.883"></status>
</kw>
<status status="PASS" endtime="20210128 13:35:26.884" starttime="20210128 13:35:26.883"></status>
</kw>
<msg timestamp="20210128 13:35:26.884" level="INFO">${path_with_leading} = /wordcount-ouAC1f0G.txt</msg>
<status status="PASS" endtime="20210128 13:35:26.884" starttime="20210128 13:35:26.882"></status>
</kw>
<status status="PASS" endtime="20210128 13:35:26.884" starttime="20210128 13:35:26.880"></status>
</kw>
<msg timestamp="20210128 13:35:26.884" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-ouAC1f0G.txt</msg>
<status status="PASS" endtime="20210128 13:35:26.884" starttime="20210128 13:35:26.879"></status>
</kw>
<msg timestamp="20210128 13:35:26.885" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-ouAC1f0G.txt</msg>
<status status="PASS" endtime="20210128 13:35:26.885" starttime="20210128 13:35:26.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:35:26.888" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-ouAC1f0G.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:36:03.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:36:03.706" level="INFO">${output} = 2021-01-28 13:35:28 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-01-28 13:35:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210128 13:36:03.706" starttime="20210128 13:35:26.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:36:03.707" level="INFO">2021-01-28 13:35:28 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-01-28 13:35:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 13:35:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:35:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:35:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:35:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:35:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-35AD17CA6765-&gt;de29e4d1-a11b-471f-bdba-cc302a10a631
2021-01-28 13:35:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:35:32 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 13:35:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AECBB021AD3B-&gt;2beaf997-6b2e-44a7-a692-730e3d3f9ed0
2021-01-28 13:35:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:35:32 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 13:35:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611840730782_0004
2021-01-28 13:35:32 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 13:35:32 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 13:35:32 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 13:35:32 INFO  YarnClientImpl:329 - Submitted application application_1611840730782_0004
2021-01-28 13:35:32 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611840730782_0004/
2021-01-28 13:35:32 INFO  Job:1614 - Running job: job_1611840730782_0004
2021-01-28 13:35:40 INFO  Job:1635 - Job job_1611840730782_0004 running in uber mode : false
2021-01-28 13:35:40 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 13:35:46 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 13:35:51 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 13:35:56 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 13:36:03 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 13:36:03 INFO  Job:1653 - Job job_1611840730782_0004 completed successfully
2021-01-28 13:36:03 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154231
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34176
		Total time spent by all reduces in occupied slots (ms)=22544
		Total time spent by all map tasks (ms)=8544
		Total time spent by all reduce tasks (ms)=5636
		Total vcore-milliseconds taken by all map tasks=8544
		Total vcore-milliseconds taken by all reduce tasks=5636
		Total megabyte-milliseconds taken by all map tasks=34996224
		Total megabyte-milliseconds taken by all reduce tasks=23085056
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=548
		CPU time spent (ms)=6230
		Physical memory (bytes) snapshot=1360740352
		Virtual memory (bytes) snapshot=15799873536
		Total committed heap usage (bytes)=1429209088
		Peak Map Physical memory (bytes)=373223424
		Peak Map Virtual memory (bytes)=3948560384
		Peak Reduce Physical memory (bytes)=395608064
		Peak Reduce Virtual memory (bytes)=3967823872
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210128 13:36:03.707" starttime="20210128 13:36:03.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:36:03.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:36:03.708" starttime="20210128 13:36:03.708"></status>
</kw>
<status status="PASS" endtime="20210128 13:36:03.708" starttime="20210128 13:35:26.885"></status>
</kw>
<msg timestamp="20210128 13:36:03.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:36:03.708" starttime="20210128 13:35:26.885"></status>
</kw>
<msg timestamp="20210128 13:36:03.709" level="INFO">${output} = 2021-01-28 13:35:28 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-01-28 13:35:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210128 13:36:03.709" starttime="20210128 13:35:26.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 13:36:03.709" starttime="20210128 13:36:03.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:36:03.710" starttime="20210128 13:36:03.709"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:36:03.710" critical="yes" starttime="20210128 13:35:26.854"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 13:36:03.711" starttime="20210128 13:34:53.821"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:33:24.674" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:33:24.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:33:24.680" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:33:24.680" starttime="20210128 13:33:24.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:33:24.681" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:33:24.681" starttime="20210128 13:33:24.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:33:24.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:33:24.681" starttime="20210128 13:33:24.681"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:24.682" starttime="20210128 13:33:24.671"></status>
</kw>
<msg timestamp="20210128 13:33:24.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:33:24.682" starttime="20210128 13:33:24.671"></status>
</kw>
<msg timestamp="20210128 13:33:24.682" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:33:24.682" starttime="20210128 13:33:24.670"></status>
</kw>
<msg timestamp="20210128 13:33:24.682" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:33:24.682" starttime="20210128 13:33:24.670"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:33:24.686" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:33:24.686" starttime="20210128 13:33:24.685"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:33:24.686" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:33:24.686" starttime="20210128 13:33:24.686"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:24.686" starttime="20210128 13:33:24.685"></status>
</kw>
<msg timestamp="20210128 13:33:24.686" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:33:24.686" starttime="20210128 13:33:24.685"></status>
</kw>
<status status="PASS" endtime="20210128 13:33:24.687" starttime="20210128 13:33:24.684"></status>
</kw>
<msg timestamp="20210128 13:33:24.687" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:33:24.687" starttime="20210128 13:33:24.683"></status>
</kw>
<msg timestamp="20210128 13:33:24.687" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:33:24.687" starttime="20210128 13:33:24.682"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:33:24.690" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:34:01.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:34:01.296" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:33:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:33:26 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 13:34:01.296" starttime="20210128 13:33:24.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:34:01.297" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:33:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:33:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:33:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:33:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:33:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E6DF50B2FE18-&gt;2beaf997-6b2e-44a7-a692-730e3d3f9ed0
2021-01-28 13:33:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-28 13:33:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1919D4A6F969-&gt;de29e4d1-a11b-471f-bdba-cc302a10a631
2021-01-28 13:33:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-28 13:33:30 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-01-28 13:33:30 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 13:33:30 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 13:33:30 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611840730782_0001
2021-01-28 13:33:30 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 13:33:30 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 13:33:30 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 13:33:31 INFO  YarnClientImpl:329 - Submitted application application_1611840730782_0001
2021-01-28 13:33:31 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611840730782_0001/
2021-01-28 13:33:31 INFO  Job:1614 - Running job: job_1611840730782_0001
2021-01-28 13:33:39 INFO  Job:1635 - Job job_1611840730782_0001 running in uber mode : false
2021-01-28 13:33:39 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 13:33:45 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 13:33:50 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 13:33:55 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 13:33:59 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 13:34:00 INFO  Job:1653 - Job job_1611840730782_0001 completed successfully
2021-01-28 13:34:00 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091761
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35108
		Total time spent by all reduces in occupied slots (ms)=13164
		Total time spent by all map tasks (ms)=8777
		Total time spent by all reduce tasks (ms)=3291
		Total vcore-milliseconds taken by all map tasks=8777
		Total vcore-milliseconds taken by all reduce tasks=3291
		Total megabyte-milliseconds taken by all map tasks=35950592
		Total megabyte-milliseconds taken by all reduce tasks=13479936
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=562
		CPU time spent (ms)=5860
		Physical memory (bytes) snapshot=1362284544
		Virtual memory (bytes) snapshot=15798321152
		Total committed heap usage (bytes)=1461714944
		Peak Map Physical memory (bytes)=367570944
		Peak Map Virtual memory (bytes)=3946397696
		Peak Reduce Physical memory (bytes)=399208448
		Peak Reduce Virtual memory (bytes)=3967959040
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.874 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210128 13:34:01.298" starttime="20210128 13:34:01.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:34:01.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:34:01.298" starttime="20210128 13:34:01.298"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:01.298" starttime="20210128 13:33:24.688"></status>
</kw>
<msg timestamp="20210128 13:34:01.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:34:01.299" starttime="20210128 13:33:24.687"></status>
</kw>
<msg timestamp="20210128 13:34:01.299" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:33:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:33:26 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 13:34:01.299" starttime="20210128 13:33:24.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:34:01.299" starttime="20210128 13:34:01.299"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:34:01.299" critical="yes" starttime="20210128 13:33:24.669"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:34:01.304" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:34:01.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:34:01.309" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:34:01.309" starttime="20210128 13:34:01.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:34:01.310" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:34:01.310" starttime="20210128 13:34:01.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:34:01.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:34:01.310" starttime="20210128 13:34:01.310"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:01.310" starttime="20210128 13:34:01.302"></status>
</kw>
<msg timestamp="20210128 13:34:01.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:34:01.311" starttime="20210128 13:34:01.302"></status>
</kw>
<msg timestamp="20210128 13:34:01.311" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:34:01.311" starttime="20210128 13:34:01.301"></status>
</kw>
<msg timestamp="20210128 13:34:01.311" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:34:01.311" starttime="20210128 13:34:01.301"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:34:01.311" level="INFO">${random} = 1lUTOmuP</msg>
<status status="PASS" endtime="20210128 13:34:01.311" starttime="20210128 13:34:01.311"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:34:01.315" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:34:01.315" starttime="20210128 13:34:01.314"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:34:01.315" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:34:01.315" starttime="20210128 13:34:01.315"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:01.315" starttime="20210128 13:34:01.314"></status>
</kw>
<msg timestamp="20210128 13:34:01.315" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:34:01.315" starttime="20210128 13:34:01.314"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:01.316" starttime="20210128 13:34:01.313"></status>
</kw>
<msg timestamp="20210128 13:34:01.316" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:34:01.316" starttime="20210128 13:34:01.312"></status>
</kw>
<msg timestamp="20210128 13:34:01.316" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:34:01.316" starttime="20210128 13:34:01.312"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:34:01.318" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:34:01.318" starttime="20210128 13:34:01.318"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:34:01.319" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:34:01.319" starttime="20210128 13:34:01.319"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:01.319" starttime="20210128 13:34:01.318"></status>
</kw>
<msg timestamp="20210128 13:34:01.319" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:34:01.319" starttime="20210128 13:34:01.317"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:01.319" starttime="20210128 13:34:01.317"></status>
</kw>
<msg timestamp="20210128 13:34:01.319" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 13:34:01.319" starttime="20210128 13:34:01.316"></status>
</kw>
<msg timestamp="20210128 13:34:01.320" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 13:34:01.320" starttime="20210128 13:34:01.316"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:34:01.322" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:34:01.322" starttime="20210128 13:34:01.322"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:34:01.323" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:34:01.323" starttime="20210128 13:34:01.322"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:01.323" starttime="20210128 13:34:01.321"></status>
</kw>
<msg timestamp="20210128 13:34:01.323" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:34:01.323" starttime="20210128 13:34:01.321"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:01.323" starttime="20210128 13:34:01.321"></status>
</kw>
<msg timestamp="20210128 13:34:01.323" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-1lUTOmuP.txt</msg>
<status status="PASS" endtime="20210128 13:34:01.323" starttime="20210128 13:34:01.320"></status>
</kw>
<msg timestamp="20210128 13:34:01.323" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-1lUTOmuP.txt</msg>
<status status="PASS" endtime="20210128 13:34:01.323" starttime="20210128 13:34:01.320"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:34:01.326" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-1lUTOmuP.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:34:40.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:34:40.944" level="INFO">${output} = 2021-01-28 13:34:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-01-28 13:34:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210128 13:34:40.944" starttime="20210128 13:34:01.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:34:40.945" level="INFO">2021-01-28 13:34:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-01-28 13:34:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 13:34:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:34:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:34:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:34:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:34:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-63935805210F-&gt;2beaf997-6b2e-44a7-a692-730e3d3f9ed0
2021-01-28 13:34:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:34:07 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 13:34:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FDD2FBE35F2D-&gt;de29e4d1-a11b-471f-bdba-cc302a10a631
2021-01-28 13:34:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:34:09 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 13:34:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611840730782_0002
2021-01-28 13:34:09 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 13:34:10 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 13:34:10 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 13:34:10 INFO  YarnClientImpl:329 - Submitted application application_1611840730782_0002
2021-01-28 13:34:10 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611840730782_0002/
2021-01-28 13:34:10 INFO  Job:1614 - Running job: job_1611840730782_0002
2021-01-28 13:34:17 INFO  Job:1635 - Job job_1611840730782_0002 running in uber mode : false
2021-01-28 13:34:17 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 13:34:23 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 13:34:27 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 13:34:32 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 13:34:37 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 13:34:40 INFO  Job:1653 - Job job_1611840730782_0002 completed successfully
2021-01-28 13:34:40 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154315
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34324
		Total time spent by all reduces in occupied slots (ms)=12424
		Total time spent by all map tasks (ms)=8581
		Total time spent by all reduce tasks (ms)=3106
		Total vcore-milliseconds taken by all map tasks=8581
		Total vcore-milliseconds taken by all reduce tasks=3106
		Total megabyte-milliseconds taken by all map tasks=35147776
		Total megabyte-milliseconds taken by all reduce tasks=12722176
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=523
		CPU time spent (ms)=5690
		Physical memory (bytes) snapshot=1276436480
		Virtual memory (bytes) snapshot=15794343936
		Total committed heap usage (bytes)=1268776960
		Peak Map Physical memory (bytes)=380375040
		Peak Map Virtual memory (bytes)=3946725376
		Peak Reduce Physical memory (bytes)=308256768
		Peak Reduce Virtual memory (bytes)=3969355776
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210128 13:34:40.945" starttime="20210128 13:34:40.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:34:40.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:34:40.946" starttime="20210128 13:34:40.945"></status>
</kw>
<status status="PASS" endtime="20210128 13:34:40.946" starttime="20210128 13:34:01.324"></status>
</kw>
<msg timestamp="20210128 13:34:40.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:34:40.946" starttime="20210128 13:34:01.324"></status>
</kw>
<msg timestamp="20210128 13:34:40.947" level="INFO">${output} = 2021-01-28 13:34:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-01-28 13:34:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210128 13:34:40.947" starttime="20210128 13:34:01.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 13:34:40.947" starttime="20210128 13:34:40.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:34:40.948" starttime="20210128 13:34:40.947"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:34:40.948" critical="yes" starttime="20210128 13:34:01.300"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 13:34:40.949" starttime="20210128 13:33:24.629"></status>
</suite>
<status status="PASS" elapsedtime="190449" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="546148" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
