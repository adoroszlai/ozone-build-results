<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210128 13:55:03.502" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:50:44.328" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:50:47.658" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 13:50:47.658" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 13:50:47.658" starttime="20210128 13:50:44.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:50:47.659" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 13:50:47.659" starttime="20210128 13:50:47.658"></status>
</kw>
<msg timestamp="20210128 13:50:47.659" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 13:50:47.659" starttime="20210128 13:50:44.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:50:47.664" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:50:50.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:50:50.552" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:50:50.552" starttime="20210128 13:50:47.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:50:50.553" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:50:50.553" starttime="20210128 13:50:50.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:50:50.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:50:50.554" starttime="20210128 13:50:50.553"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:50.554" starttime="20210128 13:50:47.661"></status>
</kw>
<msg timestamp="20210128 13:50:50.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:50:50.561" starttime="20210128 13:50:47.660"></status>
</kw>
<msg timestamp="20210128 13:50:50.566" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210128 13:50:50.566" starttime="20210128 13:50:47.660"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210128 13:50:50.566" starttime="20210128 13:50:50.566"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:50.566" starttime="20210128 13:50:47.660"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:50.566" starttime="20210128 13:50:47.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:50:50.577" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:50:53.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:50:53.235" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:50:53.235" starttime="20210128 13:50:50.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:50:53.236" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:50:53.236" starttime="20210128 13:50:53.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:50:53.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:50:53.237" starttime="20210128 13:50:53.236"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:53.237" starttime="20210128 13:50:50.568"></status>
</kw>
<msg timestamp="20210128 13:50:53.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:50:53.237" starttime="20210128 13:50:50.568"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:53.237" starttime="20210128 13:50:50.567"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:53.238" starttime="20210128 13:50:50.567"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:53.238" starttime="20210128 13:50:50.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210128 13:50:53.238" starttime="20210128 13:50:53.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:50:53.241" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:50:56.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:50:56.334" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:50...</msg>
<status status="PASS" endtime="20210128 13:50:56.334" starttime="20210128 13:50:53.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:50:56.335" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:50:53.164Z",
  "modificationTime" : "2021-01-28T13:50:53.164Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 13:50:56.335" starttime="20210128 13:50:56.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:50:56.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:50:56.335" starttime="20210128 13:50:56.335"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:56.336" starttime="20210128 13:50:53.239"></status>
</kw>
<msg timestamp="20210128 13:50:56.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:50:56.336" starttime="20210128 13:50:53.239"></status>
</kw>
<msg timestamp="20210128 13:50:56.336" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:50...</msg>
<status status="PASS" endtime="20210128 13:50:56.336" starttime="20210128 13:50:53.238"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210128 13:50:56.336" starttime="20210128 13:50:56.336"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:50:56.339" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:50:56.339" starttime="20210128 13:50:56.339"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:50:56.340" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:50:56.340" starttime="20210128 13:50:56.340"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:56.340" starttime="20210128 13:50:56.339"></status>
</kw>
<msg timestamp="20210128 13:50:56.340" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:50:56.340" starttime="20210128 13:50:56.338"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:56.340" starttime="20210128 13:50:56.338"></status>
</kw>
<msg timestamp="20210128 13:50:56.340" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 13:50:56.340" starttime="20210128 13:50:56.337"></status>
</kw>
<msg timestamp="20210128 13:50:56.341" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 13:50:56.341" starttime="20210128 13:50:56.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:50:56.343" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:50:59.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:50:59.339" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:50:59.339" starttime="20210128 13:50:56.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:50:59.340" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:50:59.340" starttime="20210128 13:50:59.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:50:59.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:50:59.342" starttime="20210128 13:50:59.340"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:59.342" starttime="20210128 13:50:56.341"></status>
</kw>
<msg timestamp="20210128 13:50:59.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:50:59.342" starttime="20210128 13:50:56.341"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:59.343" starttime="20210128 13:50:56.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:50:59.346" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:51:05.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:51:05.777" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:51:05.777" starttime="20210128 13:50:59.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:51:05.778" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:51:05.778" starttime="20210128 13:51:05.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:51:05.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:51:05.779" starttime="20210128 13:51:05.778"></status>
</kw>
<status status="PASS" endtime="20210128 13:51:05.779" starttime="20210128 13:50:59.344"></status>
</kw>
<msg timestamp="20210128 13:51:05.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:51:05.779" starttime="20210128 13:50:59.343"></status>
</kw>
<status status="PASS" endtime="20210128 13:51:05.780" starttime="20210128 13:50:59.343"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:51:05.782" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:51:10.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:51:10.189" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:51:10.190" starttime="20210128 13:51:05.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:51:10.191" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:51:10.191" starttime="20210128 13:51:10.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:51:10.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:51:10.191" starttime="20210128 13:51:10.191"></status>
</kw>
<status status="PASS" endtime="20210128 13:51:10.191" starttime="20210128 13:51:05.780"></status>
</kw>
<msg timestamp="20210128 13:51:10.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:51:10.192" starttime="20210128 13:51:05.780"></status>
</kw>
<status status="PASS" endtime="20210128 13:51:10.192" starttime="20210128 13:51:05.780"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:51:10.195" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:51:15.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:51:15.099" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:51:15.099" starttime="20210128 13:51:10.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:51:15.100" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:51:15.100" starttime="20210128 13:51:15.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:51:15.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:51:15.101" starttime="20210128 13:51:15.100"></status>
</kw>
<status status="PASS" endtime="20210128 13:51:15.101" starttime="20210128 13:51:10.193"></status>
</kw>
<msg timestamp="20210128 13:51:15.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:51:15.101" starttime="20210128 13:51:10.192"></status>
</kw>
<status status="PASS" endtime="20210128 13:51:15.101" starttime="20210128 13:51:10.192"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:51:15.101" critical="yes" starttime="20210128 13:50:44.324"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:51:15.105" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:51:15.105" starttime="20210128 13:51:15.105"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:51:15.106" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:51:15.106" starttime="20210128 13:51:15.106"></status>
</kw>
<status status="PASS" endtime="20210128 13:51:15.106" starttime="20210128 13:51:15.104"></status>
</kw>
<msg timestamp="20210128 13:51:15.106" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:51:15.106" starttime="20210128 13:51:15.104"></status>
</kw>
<status status="PASS" endtime="20210128 13:51:15.106" starttime="20210128 13:51:15.104"></status>
</kw>
<msg timestamp="20210128 13:51:15.107" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 13:51:15.107" starttime="20210128 13:51:15.103"></status>
</kw>
<msg timestamp="20210128 13:51:15.107" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 13:51:15.107" starttime="20210128 13:51:15.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:51:15.110" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:51:17.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:51:17.846" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:51:17.846" starttime="20210128 13:51:15.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:51:17.847" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:51:17.847" starttime="20210128 13:51:17.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:51:17.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:51:17.847" starttime="20210128 13:51:17.847"></status>
</kw>
<status status="PASS" endtime="20210128 13:51:17.848" starttime="20210128 13:51:15.108"></status>
</kw>
<msg timestamp="20210128 13:51:17.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:51:17.848" starttime="20210128 13:51:15.107"></status>
</kw>
<status status="PASS" endtime="20210128 13:51:17.848" starttime="20210128 13:51:15.107"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:51:17.851" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:51:20.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:51:20.673" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:51:20.673" starttime="20210128 13:51:17.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:51:20.674" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:51:20.674" starttime="20210128 13:51:20.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:51:20.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:51:20.674" starttime="20210128 13:51:20.674"></status>
</kw>
<status status="PASS" endtime="20210128 13:51:20.675" starttime="20210128 13:51:17.849"></status>
</kw>
<msg timestamp="20210128 13:51:20.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:51:20.675" starttime="20210128 13:51:17.849"></status>
</kw>
<status status="PASS" endtime="20210128 13:51:20.675" starttime="20210128 13:51:17.848"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:51:20.675" critical="yes" starttime="20210128 13:51:15.102"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210128 13:51:20.676" starttime="20210128 13:50:44.282"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:53:37.284" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:53:37.284" starttime="20210128 13:53:37.283"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:53:37.285" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:53:37.285" starttime="20210128 13:53:37.284"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:37.285" starttime="20210128 13:53:37.283"></status>
</kw>
<msg timestamp="20210128 13:53:37.285" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:53:37.285" starttime="20210128 13:53:37.283"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:53:37.286" starttime="20210128 13:53:37.286"></status>
</kw>
<msg timestamp="20210128 13:53:37.286" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 13:53:37.286" starttime="20210128 13:53:37.285"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:37.286" starttime="20210128 13:53:37.282"></status>
</kw>
<msg timestamp="20210128 13:53:37.286" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:53:37.286" starttime="20210128 13:53:37.281"></status>
</kw>
<msg timestamp="20210128 13:53:37.287" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:53:37.287" starttime="20210128 13:53:37.281"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:53:37.287" level="INFO">${random} = 29738</msg>
<status status="PASS" endtime="20210128 13:53:37.287" starttime="20210128 13:53:37.287"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:53:37.292" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-29738 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:53:40.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:53:40.562" level="INFO">${output} = 2021-01-28 13:53:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:53:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 13:53:40.562" starttime="20210128 13:53:37.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:53:40.563" level="INFO">2021-01-28 13:53:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:53:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:53:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:53:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:53:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-48F89A752D4F-&gt;6a1adab2-7201-4ea5-8942-f65d1ff30515
2021-01-28 13:53:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210128 13:53:40.563" starttime="20210128 13:53:40.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:53:40.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:53:40.563" starttime="20210128 13:53:40.563"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:40.564" starttime="20210128 13:53:37.288"></status>
</kw>
<msg timestamp="20210128 13:53:40.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:53:40.564" starttime="20210128 13:53:37.287"></status>
</kw>
<msg timestamp="20210128 13:53:40.564" level="INFO">${result} = 2021-01-28 13:53:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:53:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 13:53:40.564" starttime="20210128 13:53:37.287"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:53:40.568" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:53:42.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:53:42.121" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:50 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:52 ofs://om/volume1/bucket1/ozone-16191
-rw-...</msg>
<status status="PASS" endtime="20210128 13:53:42.121" starttime="20210128 13:53:40.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:53:42.122" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:50 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:52 ofs://om/volume1/bucket1/ozone-16191
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:53 ofs://om/volume1/bucket1/ozone-29738
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:51 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:53 ofs://om/volume1/bucket1/wordcount-WGMU444i.txt</msg>
<status status="PASS" endtime="20210128 13:53:42.122" starttime="20210128 13:53:42.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:53:42.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:53:42.123" starttime="20210128 13:53:42.122"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:42.123" starttime="20210128 13:53:40.565"></status>
</kw>
<msg timestamp="20210128 13:53:42.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:53:42.123" starttime="20210128 13:53:40.565"></status>
</kw>
<msg timestamp="20210128 13:53:42.123" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:50 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:52 ofs://om/volume1/bucket1/ozone-16191
-rw-...</msg>
<status status="PASS" endtime="20210128 13:53:42.123" starttime="20210128 13:53:40.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:53:42.124" starttime="20210128 13:53:42.124"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 13:53:42.124" critical="yes" starttime="20210128 13:53:37.280"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 13:53:42.125" starttime="20210128 13:53:37.240"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:52:13.622" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:52:13.622" starttime="20210128 13:52:13.622"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:52:13.623" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:52:13.623" starttime="20210128 13:52:13.623"></status>
</kw>
<status status="PASS" endtime="20210128 13:52:13.623" starttime="20210128 13:52:13.622"></status>
</kw>
<msg timestamp="20210128 13:52:13.623" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:52:13.623" starttime="20210128 13:52:13.621"></status>
</kw>
<status status="PASS" endtime="20210128 13:52:13.623" starttime="20210128 13:52:13.621"></status>
</kw>
<msg timestamp="20210128 13:52:13.623" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:52:13.623" starttime="20210128 13:52:13.620"></status>
</kw>
<msg timestamp="20210128 13:52:13.624" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:52:13.624" starttime="20210128 13:52:13.619"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:52:13.624" level="INFO">${random} = 16191</msg>
<status status="PASS" endtime="20210128 13:52:13.624" starttime="20210128 13:52:13.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:52:13.628" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-16191 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:52:17.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:52:17.485" level="INFO">${output} = 2021-01-28 13:52:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:52:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 13:52:17.485" starttime="20210128 13:52:13.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:52:17.487" level="INFO">2021-01-28 13:52:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:52:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:52:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:52:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:52:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C6A3ED385A69-&gt;6a1adab2-7201-4ea5-8942-f65d1ff30515
2021-01-28 13:52:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210128 13:52:17.487" starttime="20210128 13:52:17.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:52:17.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:52:17.488" starttime="20210128 13:52:17.487"></status>
</kw>
<status status="PASS" endtime="20210128 13:52:17.488" starttime="20210128 13:52:13.625"></status>
</kw>
<msg timestamp="20210128 13:52:17.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:52:17.488" starttime="20210128 13:52:13.625"></status>
</kw>
<msg timestamp="20210128 13:52:17.488" level="INFO">${result} = 2021-01-28 13:52:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:52:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 13:52:17.488" starttime="20210128 13:52:13.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:52:17.492" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:52:19.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:52:19.088" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:50 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:52 o3fs://bucket1.volume1.om/ozone-16191
dr...</msg>
<status status="PASS" endtime="20210128 13:52:19.089" starttime="20210128 13:52:17.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:52:19.090" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:50 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:52 o3fs://bucket1.volume1.om/ozone-16191
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:51 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 13:52:19.090" starttime="20210128 13:52:19.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:52:19.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:52:19.090" starttime="20210128 13:52:19.090"></status>
</kw>
<status status="PASS" endtime="20210128 13:52:19.091" starttime="20210128 13:52:17.489"></status>
</kw>
<msg timestamp="20210128 13:52:19.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:52:19.091" starttime="20210128 13:52:17.489"></status>
</kw>
<msg timestamp="20210128 13:52:19.091" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 13:50 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 13:52 o3fs://bucket1.volume1.om/ozone-16191
dr...</msg>
<status status="PASS" endtime="20210128 13:52:19.091" starttime="20210128 13:52:17.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:52:19.092" starttime="20210128 13:52:19.091"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 13:52:19.092" critical="yes" starttime="20210128 13:52:13.619"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 13:52:19.093" starttime="20210128 13:52:13.579"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:52:09.084" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:52:09.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:52:09.087" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210128 13:52:09.087" starttime="20210128 13:52:09.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:52:09.087" level="INFO">rm</msg>
<status status="PASS" endtime="20210128 13:52:09.088" starttime="20210128 13:52:09.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:52:09.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:52:09.088" starttime="20210128 13:52:09.088"></status>
</kw>
<status status="PASS" endtime="20210128 13:52:09.088" starttime="20210128 13:52:09.080"></status>
</kw>
<msg timestamp="20210128 13:52:09.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:52:09.088" starttime="20210128 13:52:09.080"></status>
</kw>
<msg timestamp="20210128 13:52:09.089" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210128 13:52:09.089" starttime="20210128 13:52:09.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:52:09.090" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:52:09.090" starttime="20210128 13:52:09.089"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:52:09.093" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:52:09.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:52:09.108" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:52:09.108" starttime="20210128 13:52:09.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:52:09.109" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:52:09.109" starttime="20210128 13:52:09.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:52:09.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:52:09.109" starttime="20210128 13:52:09.109"></status>
</kw>
<status status="PASS" endtime="20210128 13:52:09.109" starttime="20210128 13:52:09.091"></status>
</kw>
<msg timestamp="20210128 13:52:09.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:52:09.110" starttime="20210128 13:52:09.090"></status>
</kw>
<status status="PASS" endtime="20210128 13:52:09.110" starttime="20210128 13:52:09.090"></status>
</kw>
<status status="PASS" endtime="20210128 13:52:09.110" starttime="20210128 13:52:09.090"></status>
</kw>
<status status="PASS" endtime="20210128 13:52:09.110" starttime="20210128 13:52:09.079"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:52:09.110" critical="yes" starttime="20210128 13:52:09.079"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210128 13:52:09.111" starttime="20210128 13:52:09.037"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:50:39.934" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:50:39.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:50:39.936" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210128 13:50:39.936" starttime="20210128 13:50:39.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:50:39.937" level="INFO">om</msg>
<status status="PASS" endtime="20210128 13:50:39.937" starttime="20210128 13:50:39.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:50:39.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:50:39.937" starttime="20210128 13:50:39.937"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:39.937" starttime="20210128 13:50:39.930"></status>
</kw>
<msg timestamp="20210128 13:50:39.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:50:39.938" starttime="20210128 13:50:39.930"></status>
</kw>
<msg timestamp="20210128 13:50:39.938" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210128 13:50:39.938" starttime="20210128 13:50:39.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:50:39.938" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:50:39.938" starttime="20210128 13:50:39.938"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:50:39.942" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:50:39.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:50:39.958" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:50:39.958" starttime="20210128 13:50:39.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:50:39.958" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:50:39.958" starttime="20210128 13:50:39.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:50:39.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:50:39.959" starttime="20210128 13:50:39.959"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:39.959" starttime="20210128 13:50:39.940"></status>
</kw>
<msg timestamp="20210128 13:50:39.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:50:39.959" starttime="20210128 13:50:39.940"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:39.959" starttime="20210128 13:50:39.939"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:39.959" starttime="20210128 13:50:39.938"></status>
</kw>
<status status="PASS" endtime="20210128 13:50:39.960" starttime="20210128 13:50:39.929"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:50:39.960" critical="yes" starttime="20210128 13:50:39.928"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210128 13:50:39.961" starttime="20210128 13:50:39.890"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:53:46.469" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:53:46.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:53:46.475" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:53:46.475" starttime="20210128 13:53:46.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:53:46.476" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:53:46.476" starttime="20210128 13:53:46.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:53:46.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:53:46.476" starttime="20210128 13:53:46.476"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:46.477" starttime="20210128 13:53:46.466"></status>
</kw>
<msg timestamp="20210128 13:53:46.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:53:46.477" starttime="20210128 13:53:46.465"></status>
</kw>
<msg timestamp="20210128 13:53:46.477" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:53:46.477" starttime="20210128 13:53:46.465"></status>
</kw>
<msg timestamp="20210128 13:53:46.477" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:53:46.477" starttime="20210128 13:53:46.464"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:53:46.481" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:53:46.481" starttime="20210128 13:53:46.481"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:53:46.481" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:53:46.481" starttime="20210128 13:53:46.481"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:46.482" starttime="20210128 13:53:46.480"></status>
</kw>
<msg timestamp="20210128 13:53:46.482" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:53:46.482" starttime="20210128 13:53:46.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:53:46.482" starttime="20210128 13:53:46.482"></status>
</kw>
<msg timestamp="20210128 13:53:46.482" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 13:53:46.483" starttime="20210128 13:53:46.482"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:46.483" starttime="20210128 13:53:46.479"></status>
</kw>
<msg timestamp="20210128 13:53:46.483" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:53:46.483" starttime="20210128 13:53:46.478"></status>
</kw>
<msg timestamp="20210128 13:53:46.483" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:53:46.483" starttime="20210128 13:53:46.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:53:46.487" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:54:21.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:54:21.732" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:53:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:53:48 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 13:54:21.732" starttime="20210128 13:53:46.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:54:21.733" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:53:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:53:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:53:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:53:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:53:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2B588DFEB601-&gt;6a1adab2-7201-4ea5-8942-f65d1ff30515
2021-01-28 13:53:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-28 13:53:49 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-28 13:53:49 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.2:10200
2021-01-28 13:53:49 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611842029662, maxDate=1612446829662, sequenceNumber=3, masterKeyId=2))
2021-01-28 13:53:49 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 96 90 96 ca f4 2e 38 96 98 c8 ea f6 2e 40 03 48 01 5a 0d 31 39 36 37 30 37 32 37 32 30 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-28 13:53:49 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611842029662, maxDate=1612446829662, sequenceNumber=3, masterKeyId=2)
2021-01-28 13:53:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 13:53:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FA5B07D70664-&gt;4155bff5-5fe0-4d95-93b5-c948dbe64e7c
2021-01-28 13:53:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:53:52 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 13:53:52 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 13:53:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611841796499_0003
2021-01-28 13:53:52 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611842029662, maxDate=1612446829662, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 96 90 96 ca f4 2e 38 96 98 c8 ea f6 2e 40 03 48 01 5a 0d 31 39 36 37 30 37 32 37 32 30 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-28 13:53:53 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 13:53:53 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 13:53:53 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-28 13:53:53 INFO  YarnClientImpl:329 - Submitted application application_1611841796499_0003
2021-01-28 13:53:53 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611841796499_0003/
2021-01-28 13:53:53 INFO  Job:1614 - Running job: job_1611841796499_0003
2021-01-28 13:53:59 INFO  Job:1635 - Job job_1611841796499_0003 running in uber mode : false
2021-01-28 13:53:59 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 13:54:09 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 13:54:10 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 13:54:11 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 13:54:15 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 13:54:21 INFO  Job:1653 - Job job_1611841796499_0003 completed successfully
2021-01-28 13:54:21 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101061
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36312
		Total time spent by all reduces in occupied slots (ms)=6474
		Total time spent by all map tasks (ms)=18156
		Total time spent by all reduce tasks (ms)=3237
		Total vcore-milliseconds taken by all map tasks=18156
		Total vcore-milliseconds taken by all reduce tasks=3237
		Total megabyte-milliseconds taken by all map tasks=37183488
		Total megabyte-milliseconds taken by all reduce tasks=6629376
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1140
		CPU time spent (ms)=6260
		Physical memory (bytes) snapshot=1612304384
		Virtual memory (bytes) snapshot=14026854400
		Total committed heap usage (bytes)=1453326336
		Peak Map Physical memory (bytes)=546455552
		Peak Map Virtual memory (bytes)=3509874688
		Peak Reduce Physical memory (bytes)=320483328
		Peak Reduce Virtual memory (bytes)=3525722112
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.89 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210128 13:54:21.733" starttime="20210128 13:54:21.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:54:21.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:54:21.734" starttime="20210128 13:54:21.733"></status>
</kw>
<status status="PASS" endtime="20210128 13:54:21.734" starttime="20210128 13:53:46.484"></status>
</kw>
<msg timestamp="20210128 13:54:21.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:54:21.734" starttime="20210128 13:53:46.484"></status>
</kw>
<msg timestamp="20210128 13:54:21.735" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:53:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:53:48 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 13:54:21.735" starttime="20210128 13:53:46.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:54:21.735" starttime="20210128 13:54:21.735"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:54:21.735" critical="yes" starttime="20210128 13:53:46.464"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:54:21.740" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:54:21.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:54:21.745" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:54:21.745" starttime="20210128 13:54:21.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:54:21.746" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:54:21.746" starttime="20210128 13:54:21.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:54:21.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:54:21.747" starttime="20210128 13:54:21.747"></status>
</kw>
<status status="PASS" endtime="20210128 13:54:21.747" starttime="20210128 13:54:21.737"></status>
</kw>
<msg timestamp="20210128 13:54:21.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:54:21.747" starttime="20210128 13:54:21.737"></status>
</kw>
<msg timestamp="20210128 13:54:21.748" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:54:21.748" starttime="20210128 13:54:21.737"></status>
</kw>
<msg timestamp="20210128 13:54:21.748" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:54:21.748" starttime="20210128 13:54:21.736"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:54:21.748" level="INFO">${random} = 725lAmwT</msg>
<status status="PASS" endtime="20210128 13:54:21.748" starttime="20210128 13:54:21.748"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:54:21.752" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:54:21.752" starttime="20210128 13:54:21.751"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:54:21.752" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:54:21.752" starttime="20210128 13:54:21.752"></status>
</kw>
<status status="PASS" endtime="20210128 13:54:21.752" starttime="20210128 13:54:21.751"></status>
</kw>
<msg timestamp="20210128 13:54:21.753" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:54:21.753" starttime="20210128 13:54:21.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:54:21.753" starttime="20210128 13:54:21.753"></status>
</kw>
<msg timestamp="20210128 13:54:21.754" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 13:54:21.754" starttime="20210128 13:54:21.753"></status>
</kw>
<status status="PASS" endtime="20210128 13:54:21.754" starttime="20210128 13:54:21.750"></status>
</kw>
<msg timestamp="20210128 13:54:21.754" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:54:21.754" starttime="20210128 13:54:21.749"></status>
</kw>
<msg timestamp="20210128 13:54:21.754" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 13:54:21.754" starttime="20210128 13:54:21.749"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:54:21.757" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:54:21.757" starttime="20210128 13:54:21.757"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:54:21.758" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:54:21.758" starttime="20210128 13:54:21.757"></status>
</kw>
<status status="PASS" endtime="20210128 13:54:21.758" starttime="20210128 13:54:21.756"></status>
</kw>
<msg timestamp="20210128 13:54:21.758" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:54:21.758" starttime="20210128 13:54:21.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:54:21.759" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210128 13:54:21.759" starttime="20210128 13:54:21.759"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:54:21.760" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210128 13:54:21.760" starttime="20210128 13:54:21.759"></status>
</kw>
<status status="PASS" endtime="20210128 13:54:21.760" starttime="20210128 13:54:21.758"></status>
</kw>
<msg timestamp="20210128 13:54:21.760" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210128 13:54:21.760" starttime="20210128 13:54:21.758"></status>
</kw>
<status status="PASS" endtime="20210128 13:54:21.760" starttime="20210128 13:54:21.755"></status>
</kw>
<msg timestamp="20210128 13:54:21.760" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 13:54:21.760" starttime="20210128 13:54:21.755"></status>
</kw>
<msg timestamp="20210128 13:54:21.760" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 13:54:21.761" starttime="20210128 13:54:21.754"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 13:54:21.763" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 13:54:21.763" starttime="20210128 13:54:21.763"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:54:21.764" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 13:54:21.764" starttime="20210128 13:54:21.763"></status>
</kw>
<status status="PASS" endtime="20210128 13:54:21.764" starttime="20210128 13:54:21.763"></status>
</kw>
<msg timestamp="20210128 13:54:21.764" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 13:54:21.764" starttime="20210128 13:54:21.762"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:54:21.765" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210128 13:54:21.765" starttime="20210128 13:54:21.765"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:54:21.766" level="INFO">${result} = /wordcount-725lAmwT.txt</msg>
<status status="PASS" endtime="20210128 13:54:21.766" starttime="20210128 13:54:21.766"></status>
</kw>
<status status="PASS" endtime="20210128 13:54:21.766" starttime="20210128 13:54:21.765"></status>
</kw>
<msg timestamp="20210128 13:54:21.766" level="INFO">${path_with_leading} = /wordcount-725lAmwT.txt</msg>
<status status="PASS" endtime="20210128 13:54:21.766" starttime="20210128 13:54:21.764"></status>
</kw>
<status status="PASS" endtime="20210128 13:54:21.767" starttime="20210128 13:54:21.762"></status>
</kw>
<msg timestamp="20210128 13:54:21.767" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-725lAmwT.txt</msg>
<status status="PASS" endtime="20210128 13:54:21.767" starttime="20210128 13:54:21.761"></status>
</kw>
<msg timestamp="20210128 13:54:21.767" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-725lAmwT.txt</msg>
<status status="PASS" endtime="20210128 13:54:21.767" starttime="20210128 13:54:21.761"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:54:21.770" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-725lAmwT.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:54:56.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:54:56.088" level="INFO">${output} = 2021-01-28 13:54:23 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-28 13:54:23 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.2:10200
20...</msg>
<status status="PASS" endtime="20210128 13:54:56.088" starttime="20210128 13:54:21.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:54:56.089" level="INFO">2021-01-28 13:54:23 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-28 13:54:23 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.2:10200
2021-01-28 13:54:23 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611842063890, maxDate=1612446863890, sequenceNumber=4, masterKeyId=2))
2021-01-28 13:54:23 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 bb 9b 98 ca f4 2e 38 bb a3 ca ea f6 2e 40 04 48 01 5a 0d 31 39 36 37 30 37 32 37 32 30 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-28 13:54:23 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611842063890, maxDate=1612446863890, sequenceNumber=4, masterKeyId=2)
2021-01-28 13:54:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 13:54:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:54:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:54:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:54:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:54:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0E32FB51F984-&gt;6a1adab2-7201-4ea5-8942-f65d1ff30515
2021-01-28 13:54:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:54:25 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 13:54:25 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 13:54:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B15826B1764D-&gt;4155bff5-5fe0-4d95-93b5-c948dbe64e7c
2021-01-28 13:54:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:54:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611841796499_0004
2021-01-28 13:54:28 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611842063890, maxDate=1612446863890, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 bb 9b 98 ca f4 2e 38 bb a3 ca ea f6 2e 40 04 48 01 5a 0d 31 39 36 37 30 37 32 37 32 30 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-28 13:54:28 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 13:54:28 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 13:54:28 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-28 13:54:29 INFO  YarnClientImpl:329 - Submitted application application_1611841796499_0004
2021-01-28 13:54:29 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611841796499_0004/
2021-01-28 13:54:29 INFO  Job:1614 - Running job: job_1611841796499_0004
2021-01-28 13:54:36 INFO  Job:1635 - Job job_1611841796499_0004 running in uber mode : false
2021-01-28 13:54:36 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 13:54:45 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 13:54:47 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 13:54:48 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 13:54:52 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 13:54:55 INFO  Job:1653 - Job job_1611841796499_0004 completed successfully
2021-01-28 13:54:55 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163735
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39338
		Total time spent by all reduces in occupied slots (ms)=6838
		Total time spent by all map tasks (ms)=19669
		Total time spent by all reduce tasks (ms)=3419
		Total vcore-milliseconds taken by all map tasks=19669
		Total vcore-milliseconds taken by all reduce tasks=3419
		Total megabyte-milliseconds taken by all map tasks=40282112
		Total megabyte-milliseconds taken by all reduce tasks=7002112
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=944
		CPU time spent (ms)=7210
		Physical memory (bytes) snapshot=1425031168
		Virtual memory (bytes) snapshot=14058082304
		Total committed heap usage (bytes)=1184890880
		Peak Map Physical memory (bytes)=388354048
		Peak Map Virtual memory (bytes)=3510493184
		Peak Reduce Physical memory (bytes)=320344064
		Peak Reduce Virtual memory (bytes)=3530514432
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210128 13:54:56.089" starttime="20210128 13:54:56.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:54:56.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:54:56.090" starttime="20210128 13:54:56.089"></status>
</kw>
<status status="PASS" endtime="20210128 13:54:56.090" starttime="20210128 13:54:21.768"></status>
</kw>
<msg timestamp="20210128 13:54:56.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:54:56.090" starttime="20210128 13:54:21.768"></status>
</kw>
<msg timestamp="20210128 13:54:56.090" level="INFO">${output} = 2021-01-28 13:54:23 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-28 13:54:23 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.2:10200
20...</msg>
<status status="PASS" endtime="20210128 13:54:56.091" starttime="20210128 13:54:21.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 13:54:56.091" starttime="20210128 13:54:56.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:54:56.091" starttime="20210128 13:54:56.091"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:54:56.092" critical="yes" starttime="20210128 13:54:21.736"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 13:54:56.093" starttime="20210128 13:53:46.424"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:52:23.416" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:52:23.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:52:23.422" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:52:23.422" starttime="20210128 13:52:23.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:52:23.422" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:52:23.422" starttime="20210128 13:52:23.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:52:23.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:52:23.423" starttime="20210128 13:52:23.423"></status>
</kw>
<status status="PASS" endtime="20210128 13:52:23.423" starttime="20210128 13:52:23.413"></status>
</kw>
<msg timestamp="20210128 13:52:23.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:52:23.423" starttime="20210128 13:52:23.413"></status>
</kw>
<msg timestamp="20210128 13:52:23.424" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:52:23.424" starttime="20210128 13:52:23.412"></status>
</kw>
<msg timestamp="20210128 13:52:23.424" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:52:23.424" starttime="20210128 13:52:23.412"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:52:23.428" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:52:23.428" starttime="20210128 13:52:23.427"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:52:23.428" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:52:23.428" starttime="20210128 13:52:23.428"></status>
</kw>
<status status="PASS" endtime="20210128 13:52:23.428" starttime="20210128 13:52:23.427"></status>
</kw>
<msg timestamp="20210128 13:52:23.428" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:52:23.428" starttime="20210128 13:52:23.426"></status>
</kw>
<status status="PASS" endtime="20210128 13:52:23.429" starttime="20210128 13:52:23.426"></status>
</kw>
<msg timestamp="20210128 13:52:23.429" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:52:23.429" starttime="20210128 13:52:23.425"></status>
</kw>
<msg timestamp="20210128 13:52:23.429" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:52:23.429" starttime="20210128 13:52:23.424"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:52:23.432" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:53:00.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:53:00.634" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:52:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:52:25 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 13:53:00.634" starttime="20210128 13:52:23.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:53:00.635" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:52:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:52:25 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:52:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:52:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:52:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BBBE08E49A70-&gt;4155bff5-5fe0-4d95-93b5-c948dbe64e7c
2021-01-28 13:52:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-28 13:52:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-749625DE25C2-&gt;6a1adab2-7201-4ea5-8942-f65d1ff30515
2021-01-28 13:52:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-28 13:52:28 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-28 13:52:29 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.2:10200
2021-01-28 13:52:29 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611841949371, maxDate=1612446749371, sequenceNumber=1, masterKeyId=2))
2021-01-28 13:52:29 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b4 9b 91 ca f4 2e 38 b4 a3 c3 ea f6 2e 40 01 48 01 5a 0d 31 39 36 37 30 37 32 37 32 30 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-28 13:52:29 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611841949371, maxDate=1612446749371, sequenceNumber=1, masterKeyId=2)
2021-01-28 13:52:29 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 13:52:30 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 13:52:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611841796499_0001
2021-01-28 13:52:32 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611841949371, maxDate=1612446749371, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b4 9b 91 ca f4 2e 38 b4 a3 c3 ea f6 2e 40 01 48 01 5a 0d 31 39 36 37 30 37 32 37 32 30 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-28 13:52:33 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 13:52:33 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 13:52:33 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-28 13:52:34 INFO  YarnClientImpl:329 - Submitted application application_1611841796499_0001
2021-01-28 13:52:34 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611841796499_0001/
2021-01-28 13:52:34 INFO  Job:1614 - Running job: job_1611841796499_0001
2021-01-28 13:52:43 INFO  Job:1635 - Job job_1611841796499_0001 running in uber mode : false
2021-01-28 13:52:43 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 13:52:52 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 13:52:53 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 13:52:54 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 13:52:58 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 13:52:59 INFO  Job:1653 - Job job_1611841796499_0001 completed successfully
2021-01-28 13:53:00 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101281
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38178
		Total time spent by all reduces in occupied slots (ms)=6300
		Total time spent by all map tasks (ms)=19089
		Total time spent by all reduce tasks (ms)=3150
		Total vcore-milliseconds taken by all map tasks=19089
		Total vcore-milliseconds taken by all reduce tasks=3150
		Total megabyte-milliseconds taken by all map tasks=39094272
		Total megabyte-milliseconds taken by all reduce tasks=6451200
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=857
		CPU time spent (ms)=6240
		Physical memory (bytes) snapshot=1318604800
		Virtual memory (bytes) snapshot=14062080000
		Total committed heap usage (bytes)=1062731776
		Peak Map Physical memory (bytes)=336023552
		Peak Map Virtual memory (bytes)=3516542976
		Peak Reduce Physical memory (bytes)=323657728
		Peak Reduce Virtual memory (bytes)=3529515008
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.271 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210128 13:53:00.635" starttime="20210128 13:53:00.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:53:00.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:53:00.636" starttime="20210128 13:53:00.636"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:00.636" starttime="20210128 13:52:23.430"></status>
</kw>
<msg timestamp="20210128 13:53:00.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:53:00.636" starttime="20210128 13:52:23.429"></status>
</kw>
<msg timestamp="20210128 13:53:00.637" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 13:52:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:52:25 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 13:53:00.637" starttime="20210128 13:52:23.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:53:00.637" starttime="20210128 13:53:00.637"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:53:00.638" critical="yes" starttime="20210128 13:52:23.411"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:53:00.642" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:53:00.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:53:00.647" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:53:00.647" starttime="20210128 13:53:00.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:53:00.648" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:53:00.648" starttime="20210128 13:53:00.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:53:00.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:53:00.648" starttime="20210128 13:53:00.648"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:00.649" starttime="20210128 13:53:00.640"></status>
</kw>
<msg timestamp="20210128 13:53:00.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:53:00.649" starttime="20210128 13:53:00.640"></status>
</kw>
<msg timestamp="20210128 13:53:00.649" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:53:00.649" starttime="20210128 13:53:00.639"></status>
</kw>
<msg timestamp="20210128 13:53:00.649" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 13:53:00.649" starttime="20210128 13:53:00.639"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:53:00.650" level="INFO">${random} = WGMU444i</msg>
<status status="PASS" endtime="20210128 13:53:00.650" starttime="20210128 13:53:00.649"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:53:00.653" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:53:00.653" starttime="20210128 13:53:00.652"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:53:00.653" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:53:00.653" starttime="20210128 13:53:00.653"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:00.653" starttime="20210128 13:53:00.652"></status>
</kw>
<msg timestamp="20210128 13:53:00.654" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:53:00.654" starttime="20210128 13:53:00.652"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:00.654" starttime="20210128 13:53:00.651"></status>
</kw>
<msg timestamp="20210128 13:53:00.654" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:53:00.654" starttime="20210128 13:53:00.651"></status>
</kw>
<msg timestamp="20210128 13:53:00.654" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 13:53:00.654" starttime="20210128 13:53:00.650"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:53:00.657" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:53:00.657" starttime="20210128 13:53:00.656"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:53:00.657" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:53:00.657" starttime="20210128 13:53:00.657"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:00.657" starttime="20210128 13:53:00.656"></status>
</kw>
<msg timestamp="20210128 13:53:00.658" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:53:00.658" starttime="20210128 13:53:00.656"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:00.658" starttime="20210128 13:53:00.655"></status>
</kw>
<msg timestamp="20210128 13:53:00.658" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 13:53:00.658" starttime="20210128 13:53:00.655"></status>
</kw>
<msg timestamp="20210128 13:53:00.658" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 13:53:00.658" starttime="20210128 13:53:00.654"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 13:53:00.661" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 13:53:00.661" starttime="20210128 13:53:00.660"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:53:00.661" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 13:53:00.661" starttime="20210128 13:53:00.661"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:00.661" starttime="20210128 13:53:00.660"></status>
</kw>
<msg timestamp="20210128 13:53:00.661" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 13:53:00.661" starttime="20210128 13:53:00.660"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:00.661" starttime="20210128 13:53:00.659"></status>
</kw>
<msg timestamp="20210128 13:53:00.662" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-WGMU444i.txt</msg>
<status status="PASS" endtime="20210128 13:53:00.662" starttime="20210128 13:53:00.659"></status>
</kw>
<msg timestamp="20210128 13:53:00.662" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-WGMU444i.txt</msg>
<status status="PASS" endtime="20210128 13:53:00.662" starttime="20210128 13:53:00.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:53:00.665" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-WGMU444i.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:53:31.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:53:31.918" level="INFO">${output} = 2021-01-28 13:53:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-28 13:53:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.2:10200
20...</msg>
<status status="PASS" endtime="20210128 13:53:31.918" starttime="20210128 13:53:00.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:53:31.919" level="INFO">2021-01-28 13:53:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-28 13:53:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.2:10200
2021-01-28 13:53:02 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611841982622, maxDate=1612446782622, sequenceNumber=2, masterKeyId=2))
2021-01-28 13:53:02 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d5 a0 93 ca f4 2e 38 d5 a8 c5 ea f6 2e 40 02 48 01 5a 0d 31 39 36 37 30 37 32 37 32 30 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-28 13:53:02 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611841982622, maxDate=1612446782622, sequenceNumber=2, masterKeyId=2)
2021-01-28 13:53:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 13:53:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 13:53:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:53:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 13:53:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:53:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B8430228555E-&gt;6a1adab2-7201-4ea5-8942-f65d1ff30515
2021-01-28 13:53:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:53:04 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 13:53:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EF703E2A3258-&gt;4155bff5-5fe0-4d95-93b5-c948dbe64e7c
2021-01-28 13:53:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:53:06 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 13:53:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611841796499_0002
2021-01-28 13:53:06 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611841982622, maxDate=1612446782622, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d5 a0 93 ca f4 2e 38 d5 a8 c5 ea f6 2e 40 02 48 01 5a 0d 31 39 36 37 30 37 32 37 32 30 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-28 13:53:06 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 13:53:06 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 13:53:06 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-28 13:53:07 INFO  YarnClientImpl:329 - Submitted application application_1611841796499_0002
2021-01-28 13:53:07 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611841796499_0002/
2021-01-28 13:53:07 INFO  Job:1614 - Running job: job_1611841796499_0002
2021-01-28 13:53:14 INFO  Job:1635 - Job job_1611841796499_0002 running in uber mode : false
2021-01-28 13:53:14 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 13:53:23 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 13:53:24 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 13:53:25 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 13:53:28 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 13:53:31 INFO  Job:1653 - Job job_1611841796499_0002 completed successfully
2021-01-28 13:53:31 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163819
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37280
		Total time spent by all reduces in occupied slots (ms)=6606
		Total time spent by all map tasks (ms)=18640
		Total time spent by all reduce tasks (ms)=3303
		Total vcore-milliseconds taken by all map tasks=18640
		Total vcore-milliseconds taken by all reduce tasks=3303
		Total megabyte-milliseconds taken by all map tasks=38174720
		Total megabyte-milliseconds taken by all reduce tasks=6764544
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1523
		CPU time spent (ms)=6640
		Physical memory (bytes) snapshot=1626210304
		Virtual memory (bytes) snapshot=14051647488
		Total committed heap usage (bytes)=1412956160
		Peak Map Physical memory (bytes)=551444480
		Peak Map Virtual memory (bytes)=3509866496
		Peak Reduce Physical memory (bytes)=310480896
		Peak Reduce Virtual memory (bytes)=3529449472
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210128 13:53:31.919" starttime="20210128 13:53:31.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:53:31.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:53:31.919" starttime="20210128 13:53:31.919"></status>
</kw>
<status status="PASS" endtime="20210128 13:53:31.920" starttime="20210128 13:53:00.663"></status>
</kw>
<msg timestamp="20210128 13:53:31.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:53:31.920" starttime="20210128 13:53:00.662"></status>
</kw>
<msg timestamp="20210128 13:53:31.920" level="INFO">${output} = 2021-01-28 13:53:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.12:8032
2021-01-28 13:53:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.2:10200
20...</msg>
<status status="PASS" endtime="20210128 13:53:31.920" starttime="20210128 13:53:00.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 13:53:31.921" starttime="20210128 13:53:31.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 13:53:31.921" starttime="20210128 13:53:31.921"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 13:53:31.921" critical="yes" starttime="20210128 13:53:00.638"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 13:53:31.922" starttime="20210128 13:52:23.370"></status>
</suite>
<status status="PASS" elapsedtime="185159" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
