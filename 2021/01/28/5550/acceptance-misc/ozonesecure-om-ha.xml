<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210128 14:00:33.764" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:57:05.706" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:57:18.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:57:18.226" level="INFO">${output} = 2021-01-28 13:57:08,164 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 13:57:08,318 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 13:57:18.226" starttime="20210128 13:57:05.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:57:18.227" level="INFO">2021-01-28 13:57:08,164 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 13:57:08,318 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:57:08,318 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-28 13:57:08,434 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-28 13:57:08,446 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:09,447 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:10,447 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:11,162 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-28 13:57:11,450 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:11,563 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-28 13:57:12,450 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:13,451 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:14,152 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-28 13:57:14,377 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 13:57:14,378 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-8AEAC4DD2D97-&gt;fc548fdd-7e12-4024-b0cb-a566da3bebd9
2021-01-28 13:57:14,378 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 13:57:14,451 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:15,451 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:16,452 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:17,453 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-28 13:57:17,882 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5608.013728, max=5608.013728, mean=5608.013728, stddev=0.0, median=5608.013728, p75=5608.013728, p95=5608.013728, p98=5608.013728, p99=5608.013728, p999=5608.013728, mean_rate=0.1642208070990847, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-28 13:57:17,882 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2021-01-28 13:57:17,882 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-28 13:57:17,882 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210128 13:57:18.228" starttime="20210128 13:57:18.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:57:18.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:57:18.229" starttime="20210128 13:57:18.229"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:18.229" starttime="20210128 13:57:05.699"></status>
</kw>
<msg timestamp="20210128 13:57:18.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:57:18.230" starttime="20210128 13:57:05.698"></status>
</kw>
<msg timestamp="20210128 13:57:18.230" level="INFO">${result} = 2021-01-28 13:57:08,164 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 13:57:08,318 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 13:57:18.230" starttime="20210128 13:57:05.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210128 13:57:18.231" starttime="20210128 13:57:18.230"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 13:57:18.231" critical="yes" starttime="20210128 13:57:05.697"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:57:18.236" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:57:22.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:57:22.634" level="INFO">${output} = 2021-01-28 13:57:19,902 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 13:57:20,018 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 13:57:22.635" starttime="20210128 13:57:18.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:57:22.636" level="INFO">2021-01-28 13:57:19,902 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 13:57:20,018 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:57:20,018 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-28 13:57:20,147 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-01-28 13:57:20,180 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:21,189 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:22,190 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-28 13:57:22,615 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=264.831233, max=264.831233, mean=264.831233, stddev=0.0, median=264.831233, p75=264.831233, p95=264.831233, p98=264.831233, p99=264.831233, p999=264.831233, mean_rate=0.9594392131527718, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-28 13:57:22,616 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-01-28 13:57:22,616 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-28 13:57:22,616 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210128 13:57:22.636" starttime="20210128 13:57:22.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:57:22.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:57:22.637" starttime="20210128 13:57:22.636"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:22.637" starttime="20210128 13:57:18.234"></status>
</kw>
<msg timestamp="20210128 13:57:22.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:57:22.637" starttime="20210128 13:57:18.234"></status>
</kw>
<msg timestamp="20210128 13:57:22.637" level="INFO">${result} = 2021-01-28 13:57:19,902 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 13:57:20,018 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 13:57:22.637" starttime="20210128 13:57:18.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210128 13:57:22.638" starttime="20210128 13:57:22.637"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 13:57:22.638" critical="yes" starttime="20210128 13:57:18.232"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:57:22.643" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:57:26.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:57:26.922" level="INFO">${output} = 2021-01-28 13:57:24,188 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 13:57:24,275 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 13:57:26.923" starttime="20210128 13:57:22.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:57:26.924" level="INFO">2021-01-28 13:57:24,188 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 13:57:24,275 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:57:24,275 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-28 13:57:24,401 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-01-28 13:57:24,415 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:25,423 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:26,424 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-28 13:57:26,881 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=84.004474, max=84.004474, mean=84.004474, stddev=0.0, median=84.004474, p75=84.004474, p95=84.004474, p98=84.004474, p99=84.004474, p999=84.004474, mean_rate=0.9757099924509317, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-28 13:57:26,881 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-01-28 13:57:26,883 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-28 13:57:26,883 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210128 13:57:26.924" starttime="20210128 13:57:26.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:57:26.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:57:26.924" starttime="20210128 13:57:26.924"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:26.925" starttime="20210128 13:57:22.640"></status>
</kw>
<msg timestamp="20210128 13:57:26.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:57:26.925" starttime="20210128 13:57:22.640"></status>
</kw>
<msg timestamp="20210128 13:57:26.925" level="INFO">${result} = 2021-01-28 13:57:24,188 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 13:57:24,275 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 13:57:26.925" starttime="20210128 13:57:22.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210128 13:57:26.926" starttime="20210128 13:57:26.925"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 13:57:26.926" critical="yes" starttime="20210128 13:57:22.639"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210128 13:57:26.928" starttime="20210128 13:57:05.678"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:57:26.937" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:57:32.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:57:32.811" level="INFO">${output} = 2021-01-28 13:57:28,326 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 13:57:28,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 13:57:32.811" starttime="20210128 13:57:26.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:57:32.812" level="INFO">2021-01-28 13:57:28,326 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 13:57:28,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-28 13:57:28,458 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-28 13:57:28,582 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-28 13:57:28,600 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:29,610 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:30,610 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 13:57:30,789 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-28 13:57:31,610 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-28 13:57:32,464 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=94.750384, max=94.750384, mean=94.750384, stddev=0.0, median=94.750384, p75=94.750384, p95=94.750384, p98=94.750384, p99=94.750384, p999=94.750384, mean_rate=0.9739537496634989, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-28 13:57:32,466 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-01-28 13:57:32,479 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-28 13:57:32,479 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210128 13:57:32.812" starttime="20210128 13:57:32.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:57:32.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:57:32.814" starttime="20210128 13:57:32.812"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:32.814" starttime="20210128 13:57:26.935"></status>
</kw>
<msg timestamp="20210128 13:57:32.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:57:32.814" starttime="20210128 13:57:26.935"></status>
</kw>
<msg timestamp="20210128 13:57:32.814" level="INFO">${result} = 2021-01-28 13:57:28,326 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 13:57:28,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 13:57:32.814" starttime="20210128 13:57:26.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210128 13:57:32.815" starttime="20210128 13:57:32.814"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 13:57:32.815" critical="yes" starttime="20210128 13:57:26.934"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210128 13:57:32.816" starttime="20210128 13:57:26.930"></status>
</suite>
<status status="PASS" endtime="20210128 13:57:32.818" starttime="20210128 13:57:05.638"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:56:58.338" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:56:58.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:56:58.339" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:56:58.339" starttime="20210128 13:56:58.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:56:58.346" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:56:58.346" starttime="20210128 13:56:58.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:56:58.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:56:58.347" starttime="20210128 13:56:58.346"></status>
</kw>
<status status="PASS" endtime="20210128 13:56:58.347" starttime="20210128 13:56:58.329"></status>
</kw>
<msg timestamp="20210128 13:56:58.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:56:58.347" starttime="20210128 13:56:58.329"></status>
</kw>
<msg timestamp="20210128 13:56:58.347" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:56:58.347" starttime="20210128 13:56:58.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:56:58.348" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:56:58.348" starttime="20210128 13:56:58.348"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:56:58.359" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:56:58.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:56:58.371" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:56:58.371" starttime="20210128 13:56:58.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:56:58.372" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:56:58.372" starttime="20210128 13:56:58.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:56:58.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:56:58.373" starttime="20210128 13:56:58.372"></status>
</kw>
<status status="PASS" endtime="20210128 13:56:58.373" starttime="20210128 13:56:58.351"></status>
</kw>
<msg timestamp="20210128 13:56:58.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:56:58.377" starttime="20210128 13:56:58.351"></status>
</kw>
<status status="PASS" endtime="20210128 13:56:58.378" starttime="20210128 13:56:58.350"></status>
</kw>
<status status="PASS" endtime="20210128 13:56:58.378" starttime="20210128 13:56:58.348"></status>
</kw>
<status status="PASS" endtime="20210128 13:56:58.378" starttime="20210128 13:56:58.325"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:56:58.378" critical="yes" starttime="20210128 13:56:58.324"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210128 13:56:58.379" starttime="20210128 13:56:58.238"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 13:57:37.580" level="INFO">${random} = 86142</msg>
<status status="PASS" endtime="20210128 13:57:37.581" starttime="20210128 13:57:37.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210128 13:57:37.582" level="INFO">${source} = 86142-source</msg>
<status status="PASS" endtime="20210128 13:57:37.582" starttime="20210128 13:57:37.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210128 13:57:37.582" level="INFO">${target} = 86142-target</msg>
<status status="PASS" endtime="20210128 13:57:37.583" starttime="20210128 13:57:37.582"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:57:37.587" level="INFO">Running command 'ozone sh volume create 86142-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:57:40.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:57:40.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:57:40.348" starttime="20210128 13:57:37.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:57:40.349" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:57:40.349" starttime="20210128 13:57:40.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:57:40.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:57:40.349" starttime="20210128 13:57:40.349"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:40.349" starttime="20210128 13:57:37.583"></status>
</kw>
<msg timestamp="20210128 13:57:40.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:57:40.350" starttime="20210128 13:57:37.583"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:40.350" starttime="20210128 13:57:37.583"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:57:40.353" level="INFO">Running command 'ozone sh volume create 86142-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:57:43.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:57:43.553" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:57:43.553" starttime="20210128 13:57:40.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:57:43.554" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:57:43.554" starttime="20210128 13:57:43.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:57:43.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:57:43.555" starttime="20210128 13:57:43.554"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:43.555" starttime="20210128 13:57:40.351"></status>
</kw>
<msg timestamp="20210128 13:57:43.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:57:43.555" starttime="20210128 13:57:40.350"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:43.555" starttime="20210128 13:57:40.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:57:43.559" level="INFO">Running command 'ozone sh bucket create 86142-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:57:46.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:57:46.596" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:57:46.596" starttime="20210128 13:57:43.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:57:46.597" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:57:46.597" starttime="20210128 13:57:46.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:57:46.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:57:46.598" starttime="20210128 13:57:46.597"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:46.598" starttime="20210128 13:57:43.557"></status>
</kw>
<msg timestamp="20210128 13:57:46.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:57:46.598" starttime="20210128 13:57:43.557"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:46.598" starttime="20210128 13:57:43.556"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:57:46.601" level="INFO">Running command 'ozone sh key put 86142-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:57:51.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:57:51.244" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:57:51.244" starttime="20210128 13:57:46.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:57:51.245" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:57:51.245" starttime="20210128 13:57:51.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:57:51.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:57:51.245" starttime="20210128 13:57:51.245"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:51.245" starttime="20210128 13:57:46.599"></status>
</kw>
<msg timestamp="20210128 13:57:51.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:57:51.246" starttime="20210128 13:57:46.599"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:51.246" starttime="20210128 13:57:46.598"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:57:51.249" level="INFO">Running command 'ozone sh bucket create 86142-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:57:55.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:57:55.286" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:57:55.286" starttime="20210128 13:57:51.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:57:55.287" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:57:55.287" starttime="20210128 13:57:55.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:57:55.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:57:55.287" starttime="20210128 13:57:55.287"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:55.288" starttime="20210128 13:57:51.247"></status>
</kw>
<msg timestamp="20210128 13:57:55.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:57:55.288" starttime="20210128 13:57:51.246"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:55.288" starttime="20210128 13:57:51.246"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:57:55.291" level="INFO">Running command 'ozone sh bucket link 86142-source/readable-bucket 86142-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:57:58.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:57:58.138" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:57:58.139" starttime="20210128 13:57:55.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:57:58.139" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:57:58.139" starttime="20210128 13:57:58.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:57:58.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:57:58.140" starttime="20210128 13:57:58.140"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:58.140" starttime="20210128 13:57:55.289"></status>
</kw>
<msg timestamp="20210128 13:57:58.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:57:58.140" starttime="20210128 13:57:55.289"></status>
</kw>
<status status="PASS" endtime="20210128 13:57:58.140" starttime="20210128 13:57:55.288"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:57:58.143" level="INFO">Running command 'ozone sh bucket link 86142-source/readable-bucket 86142-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:00.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:00.983" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:00.983" starttime="20210128 13:57:58.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:00.984" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:00.984" starttime="20210128 13:58:00.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:00.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:00.985" starttime="20210128 13:58:00.985"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:00.985" starttime="20210128 13:57:58.141"></status>
</kw>
<msg timestamp="20210128 13:58:00.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:00.985" starttime="20210128 13:57:58.141"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:00.986" starttime="20210128 13:57:58.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:00.988" level="INFO">Running command 'ozone sh bucket link 86142-source/unreadable-bucket 86142-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:03.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:03.900" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:03.900" starttime="20210128 13:58:00.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:03.901" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:03.901" starttime="20210128 13:58:03.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:03.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:03.902" starttime="20210128 13:58:03.901"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:03.902" starttime="20210128 13:58:00.986"></status>
</kw>
<msg timestamp="20210128 13:58:03.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:03.902" starttime="20210128 13:58:00.986"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:03.902" starttime="20210128 13:58:00.986"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:03.905" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 86142-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:06.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:06.802" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:58:06.802" starttime="20210128 13:58:03.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:06.803" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:58:06.803" starttime="20210128 13:58:06.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:06.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:06.804" starttime="20210128 13:58:06.803"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:06.804" starttime="20210128 13:58:03.903"></status>
</kw>
<msg timestamp="20210128 13:58:06.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:06.804" starttime="20210128 13:58:03.903"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:06.804" starttime="20210128 13:58:03.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:06.808" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 86142-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:09.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:09.631" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:58:09.631" starttime="20210128 13:58:06.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:09.632" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:58:09.632" starttime="20210128 13:58:09.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:09.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:09.632" starttime="20210128 13:58:09.632"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:09.633" starttime="20210128 13:58:06.805"></status>
</kw>
<msg timestamp="20210128 13:58:09.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:09.633" starttime="20210128 13:58:06.805"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:09.633" starttime="20210128 13:58:06.804"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:09.636" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 86142-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:12.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:12.479" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:58:12.479" starttime="20210128 13:58:09.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:12.480" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:58:12.480" starttime="20210128 13:58:12.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:12.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:12.481" starttime="20210128 13:58:12.481"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:12.481" starttime="20210128 13:58:09.634"></status>
</kw>
<msg timestamp="20210128 13:58:12.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:12.481" starttime="20210128 13:58:09.634"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:12.482" starttime="20210128 13:58:09.633"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:12.485" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 86142-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:15.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:15.307" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:58:15.307" starttime="20210128 13:58:12.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:15.308" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:58:15.308" starttime="20210128 13:58:15.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:15.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:15.309" starttime="20210128 13:58:15.308"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:15.309" starttime="20210128 13:58:12.482"></status>
</kw>
<msg timestamp="20210128 13:58:15.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:15.309" starttime="20210128 13:58:12.482"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:15.309" starttime="20210128 13:58:12.482"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:15.312" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 86142-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:18.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:18.188" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:58:18.188" starttime="20210128 13:58:15.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:18.189" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:58:18.189" starttime="20210128 13:58:18.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:18.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:18.190" starttime="20210128 13:58:18.189"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:18.190" starttime="20210128 13:58:15.310"></status>
</kw>
<msg timestamp="20210128 13:58:18.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:18.190" starttime="20210128 13:58:15.310"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:18.190" starttime="20210128 13:58:15.309"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:18.190" starttime="20210128 13:57:43.556"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:18.191" starttime="20210128 13:57:43.555"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:18.191" starttime="20210128 13:57:37.580"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:18.196" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:18.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:18.198" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:58:18.198" starttime="20210128 13:58:18.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:18.199" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:58:18.199" starttime="20210128 13:58:18.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:18.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:18.200" starttime="20210128 13:58:18.199"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:18.200" starttime="20210128 13:58:18.194"></status>
</kw>
<msg timestamp="20210128 13:58:18.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:18.200" starttime="20210128 13:58:18.193"></status>
</kw>
<msg timestamp="20210128 13:58:18.200" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:58:18.200" starttime="20210128 13:58:18.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:58:18.201" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:58:18.201" starttime="20210128 13:58:18.200"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:18.204" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:18.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:18.220" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:18.220" starttime="20210128 13:58:18.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:18.221" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:18.221" starttime="20210128 13:58:18.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:18.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:18.222" starttime="20210128 13:58:18.221"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:18.222" starttime="20210128 13:58:18.203"></status>
</kw>
<msg timestamp="20210128 13:58:18.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:18.222" starttime="20210128 13:58:18.202"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:18.222" starttime="20210128 13:58:18.202"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:18.222" starttime="20210128 13:58:18.202"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:18.222" starttime="20210128 13:58:18.192"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:18.222" starttime="20210128 13:58:18.192"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:18.226" level="INFO">Running command 'ozone sh bucket link 86142-source/no-such-bucket 86142-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:21.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:21.022" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:21.022" starttime="20210128 13:58:18.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:21.023" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:21.023" starttime="20210128 13:58:21.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:21.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:21.024" starttime="20210128 13:58:21.023"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:21.024" starttime="20210128 13:58:18.223"></status>
</kw>
<msg timestamp="20210128 13:58:21.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:21.024" starttime="20210128 13:58:18.223"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:21.024" starttime="20210128 13:58:18.223"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:21.026" level="INFO">Running command 'ozone sh key list 86142-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:23.759" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 13:58:23.759" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210128 13:58:23.759" starttime="20210128 13:58:21.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:23.760" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210128 13:58:23.760" starttime="20210128 13:58:23.760"></status>
</kw>
<msg timestamp="20210128 13:58:23.761" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210128 13:58:23.761" starttime="20210128 13:58:21.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210128 13:58:23.761" starttime="20210128 13:58:23.761"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:58:23.761" critical="yes" starttime="20210128 13:58:18.191"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:23.767" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:23.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:23.769" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:58:23.769" starttime="20210128 13:58:23.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:23.770" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:58:23.770" starttime="20210128 13:58:23.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:23.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:23.770" starttime="20210128 13:58:23.770"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:23.770" starttime="20210128 13:58:23.764"></status>
</kw>
<msg timestamp="20210128 13:58:23.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:23.771" starttime="20210128 13:58:23.764"></status>
</kw>
<msg timestamp="20210128 13:58:23.771" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:58:23.771" starttime="20210128 13:58:23.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:58:23.771" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:58:23.772" starttime="20210128 13:58:23.771"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:23.775" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:23.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:23.784" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:23.784" starttime="20210128 13:58:23.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:23.785" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:23.785" starttime="20210128 13:58:23.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:23.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:23.786" starttime="20210128 13:58:23.785"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:23.786" starttime="20210128 13:58:23.773"></status>
</kw>
<msg timestamp="20210128 13:58:23.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:23.786" starttime="20210128 13:58:23.772"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:23.786" starttime="20210128 13:58:23.772"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:23.786" starttime="20210128 13:58:23.772"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:23.786" starttime="20210128 13:58:23.763"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:23.787" starttime="20210128 13:58:23.763"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:23.790" level="INFO">Running command 'ozone sh bucket link 86142-source/bucket1 86142-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:26.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:26.597" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:26.597" starttime="20210128 13:58:23.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:26.598" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:26.598" starttime="20210128 13:58:26.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:26.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:26.599" starttime="20210128 13:58:26.598"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:26.599" starttime="20210128 13:58:23.788"></status>
</kw>
<msg timestamp="20210128 13:58:26.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:26.599" starttime="20210128 13:58:23.787"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:26.599" starttime="20210128 13:58:23.787"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:26.603" level="INFO">Running command 'ozone sh bucket create 86142-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:29.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:29.588" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:29.588" starttime="20210128 13:58:26.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:29.589" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:29.589" starttime="20210128 13:58:29.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:29.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:29.590" starttime="20210128 13:58:29.589"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:29.590" starttime="20210128 13:58:26.600"></status>
</kw>
<msg timestamp="20210128 13:58:29.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:29.590" starttime="20210128 13:58:26.600"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:29.590" starttime="20210128 13:58:26.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:29.594" level="INFO">Running command 'ozone sh key put 86142-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:34.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:34.512" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:34.512" starttime="20210128 13:58:29.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:34.513" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:34.513" starttime="20210128 13:58:34.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:34.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:34.514" starttime="20210128 13:58:34.514"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:34.514" starttime="20210128 13:58:29.592"></status>
</kw>
<msg timestamp="20210128 13:58:34.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:34.514" starttime="20210128 13:58:29.591"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:34.515" starttime="20210128 13:58:29.591"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210128 13:58:34.516" level="INFO">${postfix} = 24848</msg>
<status status="PASS" endtime="20210128 13:58:34.516" starttime="20210128 13:58:34.516"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210128 13:58:34.517" level="INFO">${tmpfile} = /tmp/tempkey-24848</msg>
<status status="PASS" endtime="20210128 13:58:34.517" starttime="20210128 13:58:34.516"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:34.520" level="INFO">Running command 'ozone sh key get -f 86142-target/link1/key1 /tmp/tempkey-24848 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:39.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:39.098" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:39.098" starttime="20210128 13:58:34.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:39.099" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:39.099" starttime="20210128 13:58:39.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:39.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:39.100" starttime="20210128 13:58:39.099"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:39.100" starttime="20210128 13:58:34.518"></status>
</kw>
<msg timestamp="20210128 13:58:39.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:39.100" starttime="20210128 13:58:34.517"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:39.100" starttime="20210128 13:58:34.517"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210128 13:58:39.102" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-24848 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:39.105" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210128 13:58:39.105" starttime="20210128 13:58:39.101"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:39.109" level="INFO">Running command 'rm -f /tmp/tempkey-24848 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:39.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:39.111" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:39.111" starttime="20210128 13:58:39.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:39.112" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:39.112" starttime="20210128 13:58:39.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:39.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:39.112" starttime="20210128 13:58:39.112"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:39.113" starttime="20210128 13:58:39.106"></status>
</kw>
<msg timestamp="20210128 13:58:39.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:39.113" starttime="20210128 13:58:39.106"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:39.113" starttime="20210128 13:58:39.105"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:58:39.114" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210128 13:58:39.114" starttime="20210128 13:58:39.113"></status>
</kw>
<msg timestamp="20210128 13:58:39.114" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210128 13:58:39.114" starttime="20210128 13:58:34.515"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:58:39.114" starttime="20210128 13:58:39.114"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:39.114" starttime="20210128 13:58:34.515"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:58:39.115" critical="yes" starttime="20210128 13:58:23.762"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:39.119" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:39.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:39.121" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:58:39.121" starttime="20210128 13:58:39.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:39.122" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:58:39.122" starttime="20210128 13:58:39.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:39.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:39.123" starttime="20210128 13:58:39.122"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:39.123" starttime="20210128 13:58:39.117"></status>
</kw>
<msg timestamp="20210128 13:58:39.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:39.123" starttime="20210128 13:58:39.117"></status>
</kw>
<msg timestamp="20210128 13:58:39.124" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:58:39.124" starttime="20210128 13:58:39.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:58:39.124" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:58:39.124" starttime="20210128 13:58:39.124"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:39.128" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:39.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:39.138" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:39.138" starttime="20210128 13:58:39.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:39.139" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:39.139" starttime="20210128 13:58:39.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:39.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:39.139" starttime="20210128 13:58:39.139"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:39.140" starttime="20210128 13:58:39.126"></status>
</kw>
<msg timestamp="20210128 13:58:39.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:39.140" starttime="20210128 13:58:39.125"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:39.140" starttime="20210128 13:58:39.125"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:39.140" starttime="20210128 13:58:39.124"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:39.140" starttime="20210128 13:58:39.116"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:39.140" starttime="20210128 13:58:39.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:39.143" level="INFO">Running command 'ozone sh key put 86142-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:43.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:43.919" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:43.919" starttime="20210128 13:58:39.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:43.920" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:43.920" starttime="20210128 13:58:43.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:43.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:43.921" starttime="20210128 13:58:43.920"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:43.921" starttime="20210128 13:58:39.141"></status>
</kw>
<msg timestamp="20210128 13:58:43.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:43.921" starttime="20210128 13:58:39.141"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:43.922" starttime="20210128 13:58:39.140"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210128 13:58:43.923" level="INFO">${postfix} = 58986</msg>
<status status="PASS" endtime="20210128 13:58:43.923" starttime="20210128 13:58:43.923"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210128 13:58:43.923" level="INFO">${tmpfile} = /tmp/tempkey-58986</msg>
<status status="PASS" endtime="20210128 13:58:43.924" starttime="20210128 13:58:43.923"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:43.927" level="INFO">Running command 'ozone sh key get -f 86142-source/bucket1/key2 /tmp/tempkey-58986 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:48.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:48.205" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:48.205" starttime="20210128 13:58:43.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:48.206" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:48.206" starttime="20210128 13:58:48.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:48.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:48.207" starttime="20210128 13:58:48.206"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:48.207" starttime="20210128 13:58:43.924"></status>
</kw>
<msg timestamp="20210128 13:58:48.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:48.208" starttime="20210128 13:58:43.924"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:48.208" starttime="20210128 13:58:43.924"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210128 13:58:48.210" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-58986 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:48.212" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210128 13:58:48.212" starttime="20210128 13:58:48.208"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:48.216" level="INFO">Running command 'rm -f /tmp/tempkey-58986 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:48.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:48.218" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:48.218" starttime="20210128 13:58:48.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:48.218" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:48.219" starttime="20210128 13:58:48.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:48.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:48.219" starttime="20210128 13:58:48.219"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:48.219" starttime="20210128 13:58:48.213"></status>
</kw>
<msg timestamp="20210128 13:58:48.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:48.219" starttime="20210128 13:58:48.213"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:48.220" starttime="20210128 13:58:48.212"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 13:58:48.220" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210128 13:58:48.220" starttime="20210128 13:58:48.220"></status>
</kw>
<msg timestamp="20210128 13:58:48.220" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210128 13:58:48.220" starttime="20210128 13:58:43.922"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:58:48.221" starttime="20210128 13:58:48.221"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:48.221" starttime="20210128 13:58:43.922"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:58:48.221" critical="yes" starttime="20210128 13:58:39.115"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:48.228" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:48.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:48.229" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:58:48.229" starttime="20210128 13:58:48.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:48.230" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:58:48.230" starttime="20210128 13:58:48.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:48.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:48.231" starttime="20210128 13:58:48.230"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:48.231" starttime="20210128 13:58:48.225"></status>
</kw>
<msg timestamp="20210128 13:58:48.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:48.231" starttime="20210128 13:58:48.224"></status>
</kw>
<msg timestamp="20210128 13:58:48.232" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:58:48.232" starttime="20210128 13:58:48.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:58:48.232" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:58:48.232" starttime="20210128 13:58:48.232"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:48.235" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:48.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:48.252" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:48.252" starttime="20210128 13:58:48.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:48.253" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:48.253" starttime="20210128 13:58:48.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:48.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:48.254" starttime="20210128 13:58:48.253"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:48.254" starttime="20210128 13:58:48.233"></status>
</kw>
<msg timestamp="20210128 13:58:48.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:48.254" starttime="20210128 13:58:48.233"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:48.254" starttime="20210128 13:58:48.233"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:48.254" starttime="20210128 13:58:48.232"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:48.254" starttime="20210128 13:58:48.223"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:48.255" starttime="20210128 13:58:48.223"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:48.258" level="INFO">Running command 'ozone sh key list 86142-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:51.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:51.299" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210128 13:58:51.299" starttime="20210128 13:58:48.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:51.300" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210128 13:58:51.300" starttime="20210128 13:58:51.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:51.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:51.301" starttime="20210128 13:58:51.300"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:51.301" starttime="20210128 13:58:48.256"></status>
</kw>
<msg timestamp="20210128 13:58:51.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:51.301" starttime="20210128 13:58:48.256"></status>
</kw>
<msg timestamp="20210128 13:58:51.302" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210128 13:58:51.302" starttime="20210128 13:58:48.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:51.305" level="INFO">Running command 'ozone sh key list 86142-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:54.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:54.332" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210128 13:58:54.332" starttime="20210128 13:58:51.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:54.333" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210128 13:58:54.333" starttime="20210128 13:58:54.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:54.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:54.334" starttime="20210128 13:58:54.334"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:54.334" starttime="20210128 13:58:51.302"></status>
</kw>
<msg timestamp="20210128 13:58:54.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:54.335" starttime="20210128 13:58:51.302"></status>
</kw>
<msg timestamp="20210128 13:58:54.335" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210128 13:58:54.335" starttime="20210128 13:58:51.302"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:58:54.335" starttime="20210128 13:58:54.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210128 13:58:54.336" starttime="20210128 13:58:54.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210128 13:58:54.336" starttime="20210128 13:58:54.336"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:58:54.336" critical="yes" starttime="20210128 13:58:48.222"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:54.342" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:54.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:54.344" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:58:54.344" starttime="20210128 13:58:54.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:54.345" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:58:54.345" starttime="20210128 13:58:54.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:54.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:54.346" starttime="20210128 13:58:54.345"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:54.346" starttime="20210128 13:58:54.339"></status>
</kw>
<msg timestamp="20210128 13:58:54.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:54.346" starttime="20210128 13:58:54.339"></status>
</kw>
<msg timestamp="20210128 13:58:54.346" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:58:54.346" starttime="20210128 13:58:54.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:58:54.347" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:58:54.347" starttime="20210128 13:58:54.347"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:54.351" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:54.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:54.367" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:54.367" starttime="20210128 13:58:54.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:54.368" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:54.368" starttime="20210128 13:58:54.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:54.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:54.369" starttime="20210128 13:58:54.369"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:54.369" starttime="20210128 13:58:54.348"></status>
</kw>
<msg timestamp="20210128 13:58:54.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:54.369" starttime="20210128 13:58:54.348"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:54.370" starttime="20210128 13:58:54.348"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:54.370" starttime="20210128 13:58:54.347"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:54.370" starttime="20210128 13:58:54.338"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:54.370" starttime="20210128 13:58:54.338"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:54.374" level="INFO">Running command 'ozone sh key delete 86142-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:58:57.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:58:57.599" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:58:57.599" starttime="20210128 13:58:54.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:58:57.600" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:58:57.601" starttime="20210128 13:58:57.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:58:57.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:58:57.601" starttime="20210128 13:58:57.601"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:57.601" starttime="20210128 13:58:54.371"></status>
</kw>
<msg timestamp="20210128 13:58:57.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:58:57.602" starttime="20210128 13:58:54.370"></status>
</kw>
<status status="PASS" endtime="20210128 13:58:57.602" starttime="20210128 13:58:54.370"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:58:57.618" level="INFO">Running command 'ozone sh key list 86142-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:01.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:01.130" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210128 13:59:01.130" starttime="20210128 13:58:57.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:01.131" level="INFO">key1</msg>
<status status="PASS" endtime="20210128 13:59:01.131" starttime="20210128 13:59:01.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:01.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:01.132" starttime="20210128 13:59:01.131"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:01.132" starttime="20210128 13:58:57.609"></status>
</kw>
<msg timestamp="20210128 13:59:01.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:01.132" starttime="20210128 13:58:57.608"></status>
</kw>
<msg timestamp="20210128 13:59:01.132" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210128 13:59:01.132" starttime="20210128 13:58:57.602"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:01.133" starttime="20210128 13:59:01.133"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:59:01.133" critical="yes" starttime="20210128 13:58:54.337"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:01.138" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:01.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:01.140" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:59:01.140" starttime="20210128 13:59:01.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:01.141" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:59:01.141" starttime="20210128 13:59:01.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:01.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:01.142" starttime="20210128 13:59:01.141"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:01.142" starttime="20210128 13:59:01.136"></status>
</kw>
<msg timestamp="20210128 13:59:01.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:01.142" starttime="20210128 13:59:01.135"></status>
</kw>
<msg timestamp="20210128 13:59:01.142" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:59:01.142" starttime="20210128 13:59:01.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:59:01.143" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:59:01.143" starttime="20210128 13:59:01.142"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:01.146" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:01.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:01.164" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:01.165" starttime="20210128 13:59:01.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:01.166" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:01.166" starttime="20210128 13:59:01.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:01.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:01.166" starttime="20210128 13:59:01.166"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:01.167" starttime="20210128 13:59:01.144"></status>
</kw>
<msg timestamp="20210128 13:59:01.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:01.167" starttime="20210128 13:59:01.144"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:01.167" starttime="20210128 13:59:01.143"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:01.167" starttime="20210128 13:59:01.143"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:01.167" starttime="20210128 13:59:01.135"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:01.167" starttime="20210128 13:59:01.134"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:01.171" level="INFO">Running command 'ozone sh bucket list 86142-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:04.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:04.239" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210128 13:59:04.239" starttime="20210128 13:59:01.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:04.240" level="INFO">{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:58:20.909Z",
  "modificationTime" : "2021-01-28T13:58:20.909Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:58:03.736Z",
  "modificationTime" : "2021-01-28T13:58:18.097Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:58:26.457Z",
  "modificationTime" : "2021-01-28T13:58:26.457Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:57:58.064Z",
  "modificationTime" : "2021-01-28T13:58:15.163Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:58:00.823Z",
  "modificationTime" : "2021-01-28T13:58:00.823Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 13:59:04.240" starttime="20210128 13:59:04.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:04.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:04.240" starttime="20210128 13:59:04.240"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:04.241" starttime="20210128 13:59:01.168"></status>
</kw>
<msg timestamp="20210128 13:59:04.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:04.241" starttime="20210128 13:59:01.168"></status>
</kw>
<msg timestamp="20210128 13:59:04.241" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210128 13:59:04.241" starttime="20210128 13:59:01.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:04.242" starttime="20210128 13:59:04.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:04.242" starttime="20210128 13:59:04.242"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:59:04.242" critical="yes" starttime="20210128 13:59:01.134"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:04.247" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:04.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:04.249" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:59:04.249" starttime="20210128 13:59:04.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:04.250" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:59:04.250" starttime="20210128 13:59:04.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:04.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:04.251" starttime="20210128 13:59:04.250"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:04.251" starttime="20210128 13:59:04.245"></status>
</kw>
<msg timestamp="20210128 13:59:04.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:04.251" starttime="20210128 13:59:04.245"></status>
</kw>
<msg timestamp="20210128 13:59:04.251" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:59:04.251" starttime="20210128 13:59:04.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:59:04.252" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:59:04.252" starttime="20210128 13:59:04.252"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:04.256" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:04.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:04.272" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:04.272" starttime="20210128 13:59:04.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:04.273" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:04.273" starttime="20210128 13:59:04.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:04.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:04.274" starttime="20210128 13:59:04.273"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:04.274" starttime="20210128 13:59:04.254"></status>
</kw>
<msg timestamp="20210128 13:59:04.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:04.274" starttime="20210128 13:59:04.253"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:04.274" starttime="20210128 13:59:04.253"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:04.274" starttime="20210128 13:59:04.252"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:04.274" starttime="20210128 13:59:04.244"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:04.274" starttime="20210128 13:59:04.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:04.278" level="INFO">Running command 'ozone sh bucket info 86142-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:07.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:07.053" level="INFO">${output} = 86142-source bucket1</msg>
<status status="PASS" endtime="20210128 13:59:07.053" starttime="20210128 13:59:04.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:07.054" level="INFO">86142-source bucket1</msg>
<status status="PASS" endtime="20210128 13:59:07.054" starttime="20210128 13:59:07.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:07.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:07.054" starttime="20210128 13:59:07.054"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:07.055" starttime="20210128 13:59:04.275"></status>
</kw>
<msg timestamp="20210128 13:59:07.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:07.055" starttime="20210128 13:59:04.275"></status>
</kw>
<msg timestamp="20210128 13:59:07.055" level="INFO">${result} = 86142-source bucket1</msg>
<status status="PASS" endtime="20210128 13:59:07.055" starttime="20210128 13:59:04.275"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:07.055" starttime="20210128 13:59:07.055"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:59:07.056" critical="yes" starttime="20210128 13:59:04.243"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:07.061" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:07.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:07.063" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:59:07.063" starttime="20210128 13:59:07.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:07.064" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:59:07.064" starttime="20210128 13:59:07.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:07.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:07.065" starttime="20210128 13:59:07.064"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:07.065" starttime="20210128 13:59:07.059"></status>
</kw>
<msg timestamp="20210128 13:59:07.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:07.065" starttime="20210128 13:59:07.059"></status>
</kw>
<msg timestamp="20210128 13:59:07.065" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:59:07.066" starttime="20210128 13:59:07.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:59:07.066" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:59:07.066" starttime="20210128 13:59:07.066"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:07.069" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:07.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:07.088" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:07.088" starttime="20210128 13:59:07.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:07.089" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:07.089" starttime="20210128 13:59:07.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:07.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:07.090" starttime="20210128 13:59:07.089"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:07.090" starttime="20210128 13:59:07.067"></status>
</kw>
<msg timestamp="20210128 13:59:07.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:07.090" starttime="20210128 13:59:07.067"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:07.090" starttime="20210128 13:59:07.066"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:07.091" starttime="20210128 13:59:07.066"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:07.091" starttime="20210128 13:59:07.058"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:07.091" starttime="20210128 13:59:07.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:07.094" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 86142-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:10.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:10.069" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:59:10.069" starttime="20210128 13:59:07.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:10.071" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:59:10.071" starttime="20210128 13:59:10.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:10.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:10.071" starttime="20210128 13:59:10.071"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:10.072" starttime="20210128 13:59:07.092"></status>
</kw>
<msg timestamp="20210128 13:59:10.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:10.072" starttime="20210128 13:59:07.091"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:10.072" starttime="20210128 13:59:07.091"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:10.076" level="INFO">Running command 'ozone sh bucket getacl 86142-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:13.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:13.173" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210128 13:59:13.173" starttime="20210128 13:59:10.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:13.174" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210128 13:59:13.174" starttime="20210128 13:59:13.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:13.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:13.175" starttime="20210128 13:59:13.174"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:13.175" starttime="20210128 13:59:10.074"></status>
</kw>
<msg timestamp="20210128 13:59:13.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:13.175" starttime="20210128 13:59:10.073"></status>
</kw>
<msg timestamp="20210128 13:59:13.175" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210128 13:59:13.175" starttime="20210128 13:59:10.073"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:13.176" starttime="20210128 13:59:13.176"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:13.176" starttime="20210128 13:59:10.072"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:13.180" level="INFO">Running command 'ozone sh bucket getacl 86142-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:16.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:16.053" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:16.053" starttime="20210128 13:59:13.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:16.054" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:16.055" starttime="20210128 13:59:16.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:16.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:16.055" starttime="20210128 13:59:16.055"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:16.055" starttime="20210128 13:59:13.178"></status>
</kw>
<msg timestamp="20210128 13:59:16.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:16.055" starttime="20210128 13:59:13.178"></status>
</kw>
<msg timestamp="20210128 13:59:16.056" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210128 13:59:16.056" starttime="20210128 13:59:13.177"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:16.056" starttime="20210128 13:59:16.056"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:16.056" starttime="20210128 13:59:13.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:16.059" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 86142-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:19.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:19.031" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:59:19.031" starttime="20210128 13:59:16.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:19.032" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 13:59:19.032" starttime="20210128 13:59:19.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:19.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:19.033" starttime="20210128 13:59:19.032"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:19.033" starttime="20210128 13:59:16.057"></status>
</kw>
<msg timestamp="20210128 13:59:19.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:19.033" starttime="20210128 13:59:16.057"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:19.033" starttime="20210128 13:59:16.056"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:19.037" level="INFO">Running command 'ozone sh bucket getacl 86142-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:21.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:21.992" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:21.992" starttime="20210128 13:59:19.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:21.993" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:21.993" starttime="20210128 13:59:21.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:21.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:21.994" starttime="20210128 13:59:21.993"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:21.994" starttime="20210128 13:59:19.035"></status>
</kw>
<msg timestamp="20210128 13:59:21.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:21.994" starttime="20210128 13:59:19.035"></status>
</kw>
<msg timestamp="20210128 13:59:21.994" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210128 13:59:21.994" starttime="20210128 13:59:19.034"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:21.995" starttime="20210128 13:59:21.994"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:21.995" starttime="20210128 13:59:19.034"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:21.999" level="INFO">Running command 'ozone sh bucket getacl 86142-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:24.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:24.914" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210128 13:59:24.914" starttime="20210128 13:59:21.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:24.915" level="INFO">READ</msg>
<status status="PASS" endtime="20210128 13:59:24.915" starttime="20210128 13:59:24.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:24.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:24.916" starttime="20210128 13:59:24.915"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:24.916" starttime="20210128 13:59:21.996"></status>
</kw>
<msg timestamp="20210128 13:59:24.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:24.916" starttime="20210128 13:59:21.996"></status>
</kw>
<msg timestamp="20210128 13:59:24.917" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210128 13:59:24.917" starttime="20210128 13:59:21.996"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:24.917" starttime="20210128 13:59:24.917"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:24.917" starttime="20210128 13:59:21.995"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:59:24.918" critical="yes" starttime="20210128 13:59:07.057"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:24.923" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:24.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:24.925" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:59:24.925" starttime="20210128 13:59:24.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:24.926" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:59:24.926" starttime="20210128 13:59:24.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:24.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:24.927" starttime="20210128 13:59:24.926"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:24.927" starttime="20210128 13:59:24.921"></status>
</kw>
<msg timestamp="20210128 13:59:24.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:24.927" starttime="20210128 13:59:24.920"></status>
</kw>
<msg timestamp="20210128 13:59:24.927" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:59:24.927" starttime="20210128 13:59:24.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:59:24.928" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:59:24.928" starttime="20210128 13:59:24.928"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:24.931" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:24.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:24.942" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:24.942" starttime="20210128 13:59:24.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:24.943" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:24.943" starttime="20210128 13:59:24.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:24.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:24.944" starttime="20210128 13:59:24.943"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:24.944" starttime="20210128 13:59:24.929"></status>
</kw>
<msg timestamp="20210128 13:59:24.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:24.944" starttime="20210128 13:59:24.929"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:24.944" starttime="20210128 13:59:24.929"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:24.944" starttime="20210128 13:59:24.928"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:24.944" starttime="20210128 13:59:24.919"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:24.945" starttime="20210128 13:59:24.919"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:24.948" level="INFO">Running command 'ozone sh bucket link 86142-source/bucket2 86142-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:27.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:27.598" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:27.598" starttime="20210128 13:59:24.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:27.599" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:27.599" starttime="20210128 13:59:27.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:27.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:27.600" starttime="20210128 13:59:27.599"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:27.600" starttime="20210128 13:59:24.945"></status>
</kw>
<msg timestamp="20210128 13:59:27.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:27.600" starttime="20210128 13:59:24.945"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:27.600" starttime="20210128 13:59:24.945"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:27.603" level="INFO">Running command 'ozone sh bucket create 86142-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:30.500" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 13:59:30.500" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210128 13:59:30.500" starttime="20210128 13:59:27.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:30.501" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210128 13:59:30.502" starttime="20210128 13:59:30.501"></status>
</kw>
<msg timestamp="20210128 13:59:30.502" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210128 13:59:30.502" starttime="20210128 13:59:27.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:30.503" starttime="20210128 13:59:30.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:30.506" level="INFO">Running command 'ozone sh bucket create 86142-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:33.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:33.360" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:33.360" starttime="20210128 13:59:30.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:33.361" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:33.362" starttime="20210128 13:59:33.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:33.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:33.362" starttime="20210128 13:59:33.362"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:33.363" starttime="20210128 13:59:30.503"></status>
</kw>
<msg timestamp="20210128 13:59:33.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:33.363" starttime="20210128 13:59:30.503"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:33.363" starttime="20210128 13:59:30.503"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:33.366" level="INFO">Running command 'ozone sh bucket link 86142-source/bucket1 86142-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:36.499" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 13:59:36.499" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210128 13:59:36.499" starttime="20210128 13:59:33.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:36.500" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210128 13:59:36.500" starttime="20210128 13:59:36.499"></status>
</kw>
<msg timestamp="20210128 13:59:36.501" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210128 13:59:36.501" starttime="20210128 13:59:33.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:36.501" starttime="20210128 13:59:36.501"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:59:36.501" critical="yes" starttime="20210128 13:59:24.918"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:36.507" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:36.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:36.509" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:59:36.509" starttime="20210128 13:59:36.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:36.510" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:59:36.510" starttime="20210128 13:59:36.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:36.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:36.510" starttime="20210128 13:59:36.510"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.511" starttime="20210128 13:59:36.504"></status>
</kw>
<msg timestamp="20210128 13:59:36.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:36.511" starttime="20210128 13:59:36.504"></status>
</kw>
<msg timestamp="20210128 13:59:36.511" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:59:36.511" starttime="20210128 13:59:36.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:59:36.512" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:59:36.512" starttime="20210128 13:59:36.511"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:36.515" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:36.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:36.528" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:36.528" starttime="20210128 13:59:36.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:36.529" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:36.529" starttime="20210128 13:59:36.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:36.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:36.529" starttime="20210128 13:59:36.529"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.530" starttime="20210128 13:59:36.513"></status>
</kw>
<msg timestamp="20210128 13:59:36.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:36.530" starttime="20210128 13:59:36.513"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.530" starttime="20210128 13:59:36.512"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.530" starttime="20210128 13:59:36.512"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.530" starttime="20210128 13:59:36.503"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.530" starttime="20210128 13:59:36.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:36.534" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:36.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:36.537" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:36.538" starttime="20210128 13:59:36.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:36.538" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:36.538" starttime="20210128 13:59:36.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:36.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:36.539" starttime="20210128 13:59:36.538"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.539" starttime="20210128 13:59:36.532"></status>
</kw>
<msg timestamp="20210128 13:59:36.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:36.539" starttime="20210128 13:59:36.532"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.539" starttime="20210128 13:59:36.532"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:36.542" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:36.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:36.545" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:59:36.545" starttime="20210128 13:59:36.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:36.545" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:59:36.545" starttime="20210128 13:59:36.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:36.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:36.546" starttime="20210128 13:59:36.546"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.546" starttime="20210128 13:59:36.541"></status>
</kw>
<msg timestamp="20210128 13:59:36.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:36.546" starttime="20210128 13:59:36.540"></status>
</kw>
<msg timestamp="20210128 13:59:36.546" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:59:36.546" starttime="20210128 13:59:36.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:59:36.547" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:59:36.547" starttime="20210128 13:59:36.547"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:36.550" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:36.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:36.559" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:36.559" starttime="20210128 13:59:36.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:36.559" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:36.559" starttime="20210128 13:59:36.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:36.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:36.560" starttime="20210128 13:59:36.559"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.560" starttime="20210128 13:59:36.548"></status>
</kw>
<msg timestamp="20210128 13:59:36.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:36.561" starttime="20210128 13:59:36.548"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.561" starttime="20210128 13:59:36.547"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.561" starttime="20210128 13:59:36.547"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.561" starttime="20210128 13:59:36.540"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:36.561" starttime="20210128 13:59:36.539"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:36.563" level="INFO">Running command 'ozone sh key list 86142-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:39.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:39.495" level="INFO">${output} = {
  "volumeName" : "86142-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-28T13:57:49.316Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210128 13:59:39.495" starttime="20210128 13:59:36.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:39.497" level="INFO">{
  "volumeName" : "86142-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-28T13:57:49.316Z",
  "modificationTime" : "2021-01-28T13:57:50.803Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210128 13:59:39.497" starttime="20210128 13:59:39.496"></status>
</kw>
<msg timestamp="20210128 13:59:39.497" level="INFO">${result} = {
  "volumeName" : "86142-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-28T13:57:49.316Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210128 13:59:39.497" starttime="20210128 13:59:36.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:39.498" starttime="20210128 13:59:39.497"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.498" starttime="20210128 13:59:36.531"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.498" starttime="20210128 13:59:36.531"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:59:39.498" critical="yes" starttime="20210128 13:59:36.502"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:39.505" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:39.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:39.507" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:59:39.508" starttime="20210128 13:59:39.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:39.508" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:59:39.508" starttime="20210128 13:59:39.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:39.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:39.509" starttime="20210128 13:59:39.509"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.509" starttime="20210128 13:59:39.503"></status>
</kw>
<msg timestamp="20210128 13:59:39.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:39.509" starttime="20210128 13:59:39.503"></status>
</kw>
<msg timestamp="20210128 13:59:39.510" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:59:39.510" starttime="20210128 13:59:39.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:59:39.510" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:59:39.510" starttime="20210128 13:59:39.510"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:39.515" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:39.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:39.530" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:39.530" starttime="20210128 13:59:39.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:39.531" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:39.531" starttime="20210128 13:59:39.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:39.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:39.532" starttime="20210128 13:59:39.531"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.532" starttime="20210128 13:59:39.512"></status>
</kw>
<msg timestamp="20210128 13:59:39.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:39.532" starttime="20210128 13:59:39.511"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.532" starttime="20210128 13:59:39.511"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.532" starttime="20210128 13:59:39.510"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.533" starttime="20210128 13:59:39.502"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.533" starttime="20210128 13:59:39.501"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:39.536" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:39.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:39.539" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:39.539" starttime="20210128 13:59:39.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:39.540" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:39.540" starttime="20210128 13:59:39.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:39.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:39.541" starttime="20210128 13:59:39.540"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.541" starttime="20210128 13:59:39.534"></status>
</kw>
<msg timestamp="20210128 13:59:39.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:39.541" starttime="20210128 13:59:39.534"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.541" starttime="20210128 13:59:39.533"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:39.544" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:39.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:39.546" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:59:39.546" starttime="20210128 13:59:39.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:39.547" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:59:39.547" starttime="20210128 13:59:39.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:39.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:39.547" starttime="20210128 13:59:39.547"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.548" starttime="20210128 13:59:39.542"></status>
</kw>
<msg timestamp="20210128 13:59:39.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:39.548" starttime="20210128 13:59:39.542"></status>
</kw>
<msg timestamp="20210128 13:59:39.548" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:59:39.548" starttime="20210128 13:59:39.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:59:39.549" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:59:39.549" starttime="20210128 13:59:39.548"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:39.552" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:39.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:39.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:39.560" starttime="20210128 13:59:39.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:39.561" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:39.561" starttime="20210128 13:59:39.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:39.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:39.562" starttime="20210128 13:59:39.561"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.562" starttime="20210128 13:59:39.550"></status>
</kw>
<msg timestamp="20210128 13:59:39.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:39.562" starttime="20210128 13:59:39.549"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.562" starttime="20210128 13:59:39.549"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.562" starttime="20210128 13:59:39.549"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.562" starttime="20210128 13:59:39.541"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:39.562" starttime="20210128 13:59:39.541"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:39.565" level="INFO">Running command 'ozone sh key list 86142-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:42.296" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 13:59:42.296" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 86142-target unreadable-link null</msg>
<status status="PASS" endtime="20210128 13:59:42.296" starttime="20210128 13:59:39.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:42.297" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 86142-target unreadable-link null</msg>
<status status="PASS" endtime="20210128 13:59:42.297" starttime="20210128 13:59:42.297"></status>
</kw>
<msg timestamp="20210128 13:59:42.298" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 86142-target unreadable-link null</msg>
<status status="PASS" endtime="20210128 13:59:42.298" starttime="20210128 13:59:39.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:42.298" starttime="20210128 13:59:42.298"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.298" starttime="20210128 13:59:39.533"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.298" starttime="20210128 13:59:39.533"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:59:42.299" critical="yes" starttime="20210128 13:59:39.500"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:42.303" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:42.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:42.306" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:59:42.306" starttime="20210128 13:59:42.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:42.307" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:59:42.307" starttime="20210128 13:59:42.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:42.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:42.307" starttime="20210128 13:59:42.307"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.307" starttime="20210128 13:59:42.301"></status>
</kw>
<msg timestamp="20210128 13:59:42.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:42.308" starttime="20210128 13:59:42.301"></status>
</kw>
<msg timestamp="20210128 13:59:42.308" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:59:42.308" starttime="20210128 13:59:42.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:59:42.308" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:59:42.308" starttime="20210128 13:59:42.308"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:42.312" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:42.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:42.322" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:42.322" starttime="20210128 13:59:42.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:42.323" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:42.323" starttime="20210128 13:59:42.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:42.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:42.323" starttime="20210128 13:59:42.323"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.324" starttime="20210128 13:59:42.310"></status>
</kw>
<msg timestamp="20210128 13:59:42.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:42.324" starttime="20210128 13:59:42.309"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.324" starttime="20210128 13:59:42.309"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.324" starttime="20210128 13:59:42.309"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.324" starttime="20210128 13:59:42.300"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.324" starttime="20210128 13:59:42.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:42.328" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:42.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:42.331" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:42.331" starttime="20210128 13:59:42.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:42.332" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:42.332" starttime="20210128 13:59:42.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:42.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:42.332" starttime="20210128 13:59:42.332"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.332" starttime="20210128 13:59:42.326"></status>
</kw>
<msg timestamp="20210128 13:59:42.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:42.333" starttime="20210128 13:59:42.325"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.333" starttime="20210128 13:59:42.325"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:42.336" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:42.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:42.338" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:59:42.338" starttime="20210128 13:59:42.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:42.339" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:59:42.339" starttime="20210128 13:59:42.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:42.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:42.340" starttime="20210128 13:59:42.339"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.340" starttime="20210128 13:59:42.334"></status>
</kw>
<msg timestamp="20210128 13:59:42.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:42.340" starttime="20210128 13:59:42.334"></status>
</kw>
<msg timestamp="20210128 13:59:42.340" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:59:42.340" starttime="20210128 13:59:42.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:59:42.341" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:59:42.341" starttime="20210128 13:59:42.341"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:42.346" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:42.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:42.354" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:42.354" starttime="20210128 13:59:42.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:42.355" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:42.355" starttime="20210128 13:59:42.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:42.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:42.355" starttime="20210128 13:59:42.355"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.356" starttime="20210128 13:59:42.342"></status>
</kw>
<msg timestamp="20210128 13:59:42.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:42.356" starttime="20210128 13:59:42.342"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.356" starttime="20210128 13:59:42.342"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.356" starttime="20210128 13:59:42.341"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.356" starttime="20210128 13:59:42.333"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:42.356" starttime="20210128 13:59:42.333"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:42.360" level="INFO">Running command 'ozone sh bucket info 86142-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:45.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:45.296" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210128 13:59:45.296" starttime="20210128 13:59:42.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:45.297" level="INFO">{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:58:03.736Z",
  "modificationTime" : "2021-01-28T13:58:18.097Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 13:59:45.298" starttime="20210128 13:59:45.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:45.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:45.298" starttime="20210128 13:59:45.298"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:45.298" starttime="20210128 13:59:42.357"></status>
</kw>
<msg timestamp="20210128 13:59:45.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:45.299" starttime="20210128 13:59:42.357"></status>
</kw>
<msg timestamp="20210128 13:59:45.299" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210128 13:59:45.299" starttime="20210128 13:59:42.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:45.299" starttime="20210128 13:59:45.299"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:45.300" starttime="20210128 13:59:45.299"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:45.302" level="INFO">Running command 'ozone sh key list 86142-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:48.050" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 13:59:48.050" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 86142-source unreadable-bucket </msg>
<status status="PASS" endtime="20210128 13:59:48.050" starttime="20210128 13:59:45.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:48.051" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 86142-source unreadable-bucket </msg>
<status status="PASS" endtime="20210128 13:59:48.051" starttime="20210128 13:59:48.051"></status>
</kw>
<msg timestamp="20210128 13:59:48.052" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 86142-source unreadable-bucket </msg>
<status status="PASS" endtime="20210128 13:59:48.052" starttime="20210128 13:59:45.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:48.052" starttime="20210128 13:59:48.052"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:48.053" starttime="20210128 13:59:42.325"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:48.053" starttime="20210128 13:59:42.324"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:59:48.053" critical="yes" starttime="20210128 13:59:42.299"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:48.058" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:48.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:48.060" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:59:48.061" starttime="20210128 13:59:48.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:48.061" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:59:48.062" starttime="20210128 13:59:48.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:48.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:48.062" starttime="20210128 13:59:48.062"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:48.063" starttime="20210128 13:59:48.056"></status>
</kw>
<msg timestamp="20210128 13:59:48.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:48.063" starttime="20210128 13:59:48.055"></status>
</kw>
<msg timestamp="20210128 13:59:48.063" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:59:48.063" starttime="20210128 13:59:48.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:59:48.064" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:59:48.064" starttime="20210128 13:59:48.063"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:48.067" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:48.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:48.076" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:48.076" starttime="20210128 13:59:48.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:48.077" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:48.077" starttime="20210128 13:59:48.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:48.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:48.077" starttime="20210128 13:59:48.077"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:48.078" starttime="20210128 13:59:48.065"></status>
</kw>
<msg timestamp="20210128 13:59:48.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:48.078" starttime="20210128 13:59:48.065"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:48.078" starttime="20210128 13:59:48.064"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:48.078" starttime="20210128 13:59:48.064"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:48.078" starttime="20210128 13:59:48.055"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:48.078" starttime="20210128 13:59:48.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:48.081" level="INFO">Running command 'ozone sh bucket link 86142-target/loop1 86142-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:51.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:51.134" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:51.134" starttime="20210128 13:59:48.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:51.135" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:51.135" starttime="20210128 13:59:51.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:51.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:51.135" starttime="20210128 13:59:51.135"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:51.136" starttime="20210128 13:59:48.079"></status>
</kw>
<msg timestamp="20210128 13:59:51.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:51.136" starttime="20210128 13:59:48.079"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:51.136" starttime="20210128 13:59:48.078"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:51.139" level="INFO">Running command 'ozone sh bucket link 86142-target/loop2 86142-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:54.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:54.157" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:54.157" starttime="20210128 13:59:51.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:54.159" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:54.159" starttime="20210128 13:59:54.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:54.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:54.159" starttime="20210128 13:59:54.159"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:54.159" starttime="20210128 13:59:51.137"></status>
</kw>
<msg timestamp="20210128 13:59:54.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:54.160" starttime="20210128 13:59:51.137"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:54.160" starttime="20210128 13:59:51.136"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:54.163" level="INFO">Running command 'ozone sh bucket link 86142-target/loop3 86142-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:57.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:57.218" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:57.218" starttime="20210128 13:59:54.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:57.220" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:57.220" starttime="20210128 13:59:57.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:57.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:57.220" starttime="20210128 13:59:57.220"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:57.221" starttime="20210128 13:59:54.161"></status>
</kw>
<msg timestamp="20210128 13:59:57.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:57.221" starttime="20210128 13:59:54.160"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:57.221" starttime="20210128 13:59:54.160"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:57.223" level="INFO">Running command 'ozone sh key list 86142-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:59.800" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 13:59:59.800" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210128 13:59:59.800" starttime="20210128 13:59:57.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:59.801" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210128 13:59:59.801" starttime="20210128 13:59:59.800"></status>
</kw>
<msg timestamp="20210128 13:59:59.801" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210128 13:59:59.801" starttime="20210128 13:59:57.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210128 13:59:59.801" starttime="20210128 13:59:59.801"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 13:59:59.802" critical="yes" starttime="20210128 13:59:48.053"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:59.807" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:59.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:59.809" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 13:59:59.809" starttime="20210128 13:59:59.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:59.810" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 13:59:59.810" starttime="20210128 13:59:59.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:59.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:59.811" starttime="20210128 13:59:59.810"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:59.811" starttime="20210128 13:59:59.804"></status>
</kw>
<msg timestamp="20210128 13:59:59.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:59.811" starttime="20210128 13:59:59.804"></status>
</kw>
<msg timestamp="20210128 13:59:59.811" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 13:59:59.811" starttime="20210128 13:59:59.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 13:59:59.812" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 13:59:59.812" starttime="20210128 13:59:59.811"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:59.815" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 13:59:59.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 13:59:59.826" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 13:59:59.826" starttime="20210128 13:59:59.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 13:59:59.827" level="INFO"></msg>
<status status="PASS" endtime="20210128 13:59:59.827" starttime="20210128 13:59:59.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 13:59:59.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 13:59:59.827" starttime="20210128 13:59:59.827"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:59.828" starttime="20210128 13:59:59.813"></status>
</kw>
<msg timestamp="20210128 13:59:59.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 13:59:59.828" starttime="20210128 13:59:59.813"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:59.828" starttime="20210128 13:59:59.812"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:59.828" starttime="20210128 13:59:59.812"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:59.828" starttime="20210128 13:59:59.803"></status>
</kw>
<status status="PASS" endtime="20210128 13:59:59.828" starttime="20210128 13:59:59.803"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 13:59:59.832" level="INFO">Running command 'ozone sh bucket link 86142-source/bucket1 86142-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 14:00:02.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 14:00:02.766" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 14:00:02.766" starttime="20210128 13:59:59.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 14:00:02.767" level="INFO"></msg>
<status status="PASS" endtime="20210128 14:00:02.767" starttime="20210128 14:00:02.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 14:00:02.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 14:00:02.768" starttime="20210128 14:00:02.767"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:02.768" starttime="20210128 13:59:59.829"></status>
</kw>
<msg timestamp="20210128 14:00:02.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 14:00:02.768" starttime="20210128 13:59:59.829"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:02.768" starttime="20210128 13:59:59.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 14:00:02.771" level="INFO">Running command 'ozone sh key put 86142-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 14:00:10.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 14:00:10.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 14:00:10.265" starttime="20210128 14:00:02.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 14:00:10.266" level="INFO"></msg>
<status status="PASS" endtime="20210128 14:00:10.266" starttime="20210128 14:00:10.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 14:00:10.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 14:00:10.266" starttime="20210128 14:00:10.266"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:10.267" starttime="20210128 14:00:02.769"></status>
</kw>
<msg timestamp="20210128 14:00:10.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 14:00:10.267" starttime="20210128 14:00:02.769"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:10.267" starttime="20210128 14:00:02.768"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210128 14:00:10.269" level="INFO">${postfix} = 95367</msg>
<status status="PASS" endtime="20210128 14:00:10.269" starttime="20210128 14:00:10.268"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210128 14:00:10.269" level="INFO">${tmpfile} = /tmp/tempkey-95367</msg>
<status status="PASS" endtime="20210128 14:00:10.269" starttime="20210128 14:00:10.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 14:00:10.272" level="INFO">Running command 'ozone sh key get -f 86142-target/link1/key3 /tmp/tempkey-95367 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 14:00:15.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 14:00:15.055" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 14:00:15.055" starttime="20210128 14:00:10.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 14:00:15.056" level="INFO"></msg>
<status status="PASS" endtime="20210128 14:00:15.056" starttime="20210128 14:00:15.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 14:00:15.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 14:00:15.057" starttime="20210128 14:00:15.056"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:15.057" starttime="20210128 14:00:10.270"></status>
</kw>
<msg timestamp="20210128 14:00:15.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 14:00:15.057" starttime="20210128 14:00:10.270"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:15.057" starttime="20210128 14:00:10.269"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210128 14:00:15.059" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-95367 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 14:00:15.061" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210128 14:00:15.061" starttime="20210128 14:00:15.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 14:00:15.065" level="INFO">Running command 'rm -f /tmp/tempkey-95367 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 14:00:15.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 14:00:15.067" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 14:00:15.067" starttime="20210128 14:00:15.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 14:00:15.068" level="INFO"></msg>
<status status="PASS" endtime="20210128 14:00:15.068" starttime="20210128 14:00:15.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 14:00:15.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 14:00:15.068" starttime="20210128 14:00:15.068"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:15.068" starttime="20210128 14:00:15.063"></status>
</kw>
<msg timestamp="20210128 14:00:15.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 14:00:15.068" starttime="20210128 14:00:15.062"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:15.069" starttime="20210128 14:00:15.062"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 14:00:15.069" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210128 14:00:15.069" starttime="20210128 14:00:15.069"></status>
</kw>
<msg timestamp="20210128 14:00:15.069" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210128 14:00:15.069" starttime="20210128 14:00:10.268"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210128 14:00:15.070" starttime="20210128 14:00:15.069"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:15.070" starttime="20210128 14:00:10.267"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 14:00:15.070" critical="yes" starttime="20210128 13:59:59.802"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 14:00:15.075" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 14:00:15.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 14:00:15.077" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 14:00:15.077" starttime="20210128 14:00:15.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 14:00:15.078" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 14:00:15.078" starttime="20210128 14:00:15.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 14:00:15.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 14:00:15.078" starttime="20210128 14:00:15.078"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:15.079" starttime="20210128 14:00:15.073"></status>
</kw>
<msg timestamp="20210128 14:00:15.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 14:00:15.079" starttime="20210128 14:00:15.072"></status>
</kw>
<msg timestamp="20210128 14:00:15.079" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 14:00:15.079" starttime="20210128 14:00:15.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 14:00:15.079" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 14:00:15.079" starttime="20210128 14:00:15.079"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 14:00:15.082" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 14:00:15.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 14:00:15.092" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 14:00:15.092" starttime="20210128 14:00:15.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 14:00:15.093" level="INFO"></msg>
<status status="PASS" endtime="20210128 14:00:15.093" starttime="20210128 14:00:15.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 14:00:15.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 14:00:15.093" starttime="20210128 14:00:15.093"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:15.094" starttime="20210128 14:00:15.081"></status>
</kw>
<msg timestamp="20210128 14:00:15.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 14:00:15.094" starttime="20210128 14:00:15.080"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:15.094" starttime="20210128 14:00:15.080"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:15.094" starttime="20210128 14:00:15.080"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:15.094" starttime="20210128 14:00:15.072"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:15.094" starttime="20210128 14:00:15.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 14:00:15.097" level="INFO">Running command 'ozone sh bucket delete 86142-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 14:00:17.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 14:00:17.820" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 14:00:17.820" starttime="20210128 14:00:15.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 14:00:17.821" level="INFO"></msg>
<status status="PASS" endtime="20210128 14:00:17.821" starttime="20210128 14:00:17.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 14:00:17.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 14:00:17.822" starttime="20210128 14:00:17.821"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:17.822" starttime="20210128 14:00:15.095"></status>
</kw>
<msg timestamp="20210128 14:00:17.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 14:00:17.822" starttime="20210128 14:00:15.095"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:17.822" starttime="20210128 14:00:15.094"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 14:00:17.826" level="INFO">Running command 'ozone sh bucket list 86142-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 14:00:20.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 14:00:20.912" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T...</msg>
<status status="PASS" endtime="20210128 14:00:20.912" starttime="20210128 14:00:17.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 14:00:20.913" level="INFO">{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:59:33.161Z",
  "modificationTime" : "2021-01-28T13:59:33.161Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:58:20.909Z",
  "modificationTime" : "2021-01-28T13:58:20.909Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:58:03.736Z",
  "modificationTime" : "2021-01-28T13:58:18.097Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:59:27.462Z",
  "modificationTime" : "2021-01-28T13:59:27.462Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T14:00:02.604Z",
  "modificationTime" : "2021-01-28T14:00:02.604Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:59:56.988Z",
  "modificationTime" : "2021-01-28T13:59:56.988Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:59:51.042Z",
  "modificationTime" : "2021-01-28T13:59:51.042Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:59:54.033Z",
  "modificationTime" : "2021-01-28T13:59:54.033Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:57:58.064Z",
  "modificationTime" : "2021-01-28T13:58:15.163Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T13:58:00.823Z",
  "modificationTime" : "2021-01-28T13:58:00.823Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "86142-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 14:00:20.913" starttime="20210128 14:00:20.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 14:00:20.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 14:00:20.914" starttime="20210128 14:00:20.914"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:20.914" starttime="20210128 14:00:17.823"></status>
</kw>
<msg timestamp="20210128 14:00:20.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 14:00:20.915" starttime="20210128 14:00:17.823"></status>
</kw>
<msg timestamp="20210128 14:00:20.915" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "86142-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T...</msg>
<status status="PASS" endtime="20210128 14:00:20.915" starttime="20210128 14:00:17.823"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210128 14:00:20.915" starttime="20210128 14:00:20.915"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 14:00:20.919" level="INFO">Running command 'ozone sh key list 86142-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 14:00:24.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 14:00:24.319" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210128 14:00:24.319" starttime="20210128 14:00:20.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 14:00:24.320" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210128 14:00:24.320" starttime="20210128 14:00:24.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 14:00:24.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 14:00:24.321" starttime="20210128 14:00:24.320"></status>
</kw>
<status status="PASS" endtime="20210128 14:00:24.321" starttime="20210128 14:00:20.916"></status>
</kw>
<msg timestamp="20210128 14:00:24.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 14:00:24.321" starttime="20210128 14:00:20.916"></status>
</kw>
<msg timestamp="20210128 14:00:24.321" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210128 14:00:24.321" starttime="20210128 14:00:20.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210128 14:00:24.322" starttime="20210128 14:00:24.322"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 14:00:24.322" critical="yes" starttime="20210128 14:00:15.071"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210128 14:00:24.324" starttime="20210128 13:57:37.537"></status>
</suite>
<status status="PASS" elapsedtime="194108" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
