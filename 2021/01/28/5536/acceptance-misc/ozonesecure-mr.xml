<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210128 02:30:56.739" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:27:01.051" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:27:04.642" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 02:27:04.643" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 02:27:04.643" starttime="20210128 02:27:01.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:27:04.644" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 02:27:04.644" starttime="20210128 02:27:04.643"></status>
</kw>
<msg timestamp="20210128 02:27:04.644" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 02:27:04.644" starttime="20210128 02:27:01.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:27:04.649" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:27:08.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:27:08.041" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:27:08.041" starttime="20210128 02:27:04.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:27:08.042" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:27:08.042" starttime="20210128 02:27:08.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:27:08.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:27:08.043" starttime="20210128 02:27:08.043"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:08.043" starttime="20210128 02:27:04.646"></status>
</kw>
<msg timestamp="20210128 02:27:08.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:27:08.044" starttime="20210128 02:27:04.646"></status>
</kw>
<msg timestamp="20210128 02:27:08.044" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210128 02:27:08.044" starttime="20210128 02:27:04.645"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210128 02:27:08.044" starttime="20210128 02:27:08.044"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:08.044" starttime="20210128 02:27:04.645"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:08.044" starttime="20210128 02:27:04.645"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:27:08.048" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:27:11.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:27:11.096" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:27:11.096" starttime="20210128 02:27:08.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:27:11.097" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:27:11.097" starttime="20210128 02:27:11.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:27:11.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:27:11.097" starttime="20210128 02:27:11.097"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:11.098" starttime="20210128 02:27:08.046"></status>
</kw>
<msg timestamp="20210128 02:27:11.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:27:11.098" starttime="20210128 02:27:08.046"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:11.098" starttime="20210128 02:27:08.045"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:11.098" starttime="20210128 02:27:08.045"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:11.098" starttime="20210128 02:27:08.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210128 02:27:11.099" starttime="20210128 02:27:11.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:27:11.102" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:27:14.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:27:14.125" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:27...</msg>
<status status="PASS" endtime="20210128 02:27:14.125" starttime="20210128 02:27:11.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:27:14.126" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:27:10.938Z",
  "modificationTime" : "2021-01-28T02:27:10.938Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 02:27:14.126" starttime="20210128 02:27:14.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:27:14.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:27:14.127" starttime="20210128 02:27:14.126"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:14.127" starttime="20210128 02:27:11.100"></status>
</kw>
<msg timestamp="20210128 02:27:14.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:27:14.127" starttime="20210128 02:27:11.100"></status>
</kw>
<msg timestamp="20210128 02:27:14.127" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:27...</msg>
<status status="PASS" endtime="20210128 02:27:14.127" starttime="20210128 02:27:11.099"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210128 02:27:14.128" starttime="20210128 02:27:14.127"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:27:14.131" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:27:14.131" starttime="20210128 02:27:14.131"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:27:14.131" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:27:14.131" starttime="20210128 02:27:14.131"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:14.132" starttime="20210128 02:27:14.130"></status>
</kw>
<msg timestamp="20210128 02:27:14.132" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:27:14.132" starttime="20210128 02:27:14.130"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:14.132" starttime="20210128 02:27:14.129"></status>
</kw>
<msg timestamp="20210128 02:27:14.132" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 02:27:14.132" starttime="20210128 02:27:14.129"></status>
</kw>
<msg timestamp="20210128 02:27:14.132" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 02:27:14.132" starttime="20210128 02:27:14.128"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:27:14.135" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:27:17.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:27:17.246" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:27:17.246" starttime="20210128 02:27:14.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:27:17.247" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:27:17.247" starttime="20210128 02:27:17.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:27:17.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:27:17.248" starttime="20210128 02:27:17.247"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:17.248" starttime="20210128 02:27:14.133"></status>
</kw>
<msg timestamp="20210128 02:27:17.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:27:17.248" starttime="20210128 02:27:14.133"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:17.248" starttime="20210128 02:27:14.132"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:27:17.252" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:27:24.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:27:24.695" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:27:24.695" starttime="20210128 02:27:17.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:27:24.696" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:27:24.696" starttime="20210128 02:27:24.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:27:24.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:27:24.697" starttime="20210128 02:27:24.696"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:24.697" starttime="20210128 02:27:17.249"></status>
</kw>
<msg timestamp="20210128 02:27:24.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:27:24.697" starttime="20210128 02:27:17.249"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:24.698" starttime="20210128 02:27:17.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:27:24.701" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:27:29.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:27:29.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:27:29.556" starttime="20210128 02:27:24.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:27:29.558" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:27:29.558" starttime="20210128 02:27:29.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:27:29.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:27:29.559" starttime="20210128 02:27:29.558"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:29.559" starttime="20210128 02:27:24.699"></status>
</kw>
<msg timestamp="20210128 02:27:29.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:27:29.559" starttime="20210128 02:27:24.698"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:29.560" starttime="20210128 02:27:24.698"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:27:29.565" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:27:34.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:27:34.269" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:27:34.270" starttime="20210128 02:27:29.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:27:34.271" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:27:34.271" starttime="20210128 02:27:34.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:27:34.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:27:34.271" starttime="20210128 02:27:34.271"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:34.272" starttime="20210128 02:27:29.561"></status>
</kw>
<msg timestamp="20210128 02:27:34.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:27:34.272" starttime="20210128 02:27:29.561"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:34.272" starttime="20210128 02:27:29.560"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:27:34.272" critical="yes" starttime="20210128 02:27:01.047"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:27:34.277" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:27:34.277" starttime="20210128 02:27:34.277"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:27:34.278" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:27:34.278" starttime="20210128 02:27:34.277"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:34.278" starttime="20210128 02:27:34.276"></status>
</kw>
<msg timestamp="20210128 02:27:34.278" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:27:34.278" starttime="20210128 02:27:34.276"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:34.278" starttime="20210128 02:27:34.275"></status>
</kw>
<msg timestamp="20210128 02:27:34.278" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 02:27:34.278" starttime="20210128 02:27:34.274"></status>
</kw>
<msg timestamp="20210128 02:27:34.279" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 02:27:34.279" starttime="20210128 02:27:34.274"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:27:34.281" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:27:37.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:27:37.231" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:27:37.231" starttime="20210128 02:27:34.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:27:37.232" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:27:37.232" starttime="20210128 02:27:37.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:27:37.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:27:37.233" starttime="20210128 02:27:37.233"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:37.233" starttime="20210128 02:27:34.279"></status>
</kw>
<msg timestamp="20210128 02:27:37.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:27:37.234" starttime="20210128 02:27:34.279"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:37.234" starttime="20210128 02:27:34.279"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:27:37.237" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:27:40.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:27:40.421" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:27:40.421" starttime="20210128 02:27:37.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:27:40.422" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:27:40.422" starttime="20210128 02:27:40.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:27:40.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:27:40.423" starttime="20210128 02:27:40.422"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:40.423" starttime="20210128 02:27:37.235"></status>
</kw>
<msg timestamp="20210128 02:27:40.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:27:40.423" starttime="20210128 02:27:37.234"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:40.423" starttime="20210128 02:27:37.234"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:27:40.424" critical="yes" starttime="20210128 02:27:34.273"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210128 02:27:40.425" starttime="20210128 02:27:00.996"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:29:27.414" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:29:27.414" starttime="20210128 02:29:27.414"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:29:27.415" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:29:27.415" starttime="20210128 02:29:27.415"></status>
</kw>
<status status="PASS" endtime="20210128 02:29:27.415" starttime="20210128 02:29:27.414"></status>
</kw>
<msg timestamp="20210128 02:29:27.415" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:29:27.415" starttime="20210128 02:29:27.413"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:29:27.416" starttime="20210128 02:29:27.416"></status>
</kw>
<msg timestamp="20210128 02:29:27.416" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 02:29:27.416" starttime="20210128 02:29:27.415"></status>
</kw>
<status status="PASS" endtime="20210128 02:29:27.416" starttime="20210128 02:29:27.412"></status>
</kw>
<msg timestamp="20210128 02:29:27.417" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:29:27.417" starttime="20210128 02:29:27.412"></status>
</kw>
<msg timestamp="20210128 02:29:27.417" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:29:27.417" starttime="20210128 02:29:27.411"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:29:27.417" level="INFO">${random} = 08990</msg>
<status status="PASS" endtime="20210128 02:29:27.417" starttime="20210128 02:29:27.417"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:29:27.424" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-08990 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:29:30.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:29:30.639" level="INFO">${output} = 2021-01-28 02:29:29 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:29:29 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 02:29:30.639" starttime="20210128 02:29:27.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:29:30.640" level="INFO">2021-01-28 02:29:29 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:29:29 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:29:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:29:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:29:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A7852FC6BFFC-&gt;ac2d2cf7-3407-48c9-8ac8-d70beb977b57
2021-01-28 02:29:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210128 02:29:30.640" starttime="20210128 02:29:30.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:29:30.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:29:30.641" starttime="20210128 02:29:30.640"></status>
</kw>
<status status="PASS" endtime="20210128 02:29:30.641" starttime="20210128 02:29:27.418"></status>
</kw>
<msg timestamp="20210128 02:29:30.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:29:30.641" starttime="20210128 02:29:27.418"></status>
</kw>
<msg timestamp="20210128 02:29:30.641" level="INFO">${result} = 2021-01-28 02:29:29 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:29:29 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 02:29:30.641" starttime="20210128 02:29:27.417"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:29:30.645" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:29:32.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:29:32.387" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:29 ofs://om/volume1/bucket1/ozone-08990
-rw-...</msg>
<status status="PASS" endtime="20210128 02:29:32.387" starttime="20210128 02:29:30.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:29:32.388" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:29 ofs://om/volume1/bucket1/ozone-08990
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:28 ofs://om/volume1/bucket1/ozone-94946
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:27 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:29 ofs://om/volume1/bucket1/wordcount-KA9sVrVf.txt</msg>
<status status="PASS" endtime="20210128 02:29:32.388" starttime="20210128 02:29:32.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:29:32.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:29:32.388" starttime="20210128 02:29:32.388"></status>
</kw>
<status status="PASS" endtime="20210128 02:29:32.389" starttime="20210128 02:29:30.643"></status>
</kw>
<msg timestamp="20210128 02:29:32.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:29:32.389" starttime="20210128 02:29:30.642"></status>
</kw>
<msg timestamp="20210128 02:29:32.389" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:29 ofs://om/volume1/bucket1/ozone-08990
-rw-...</msg>
<status status="PASS" endtime="20210128 02:29:32.389" starttime="20210128 02:29:30.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:29:32.390" starttime="20210128 02:29:32.389"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 02:29:32.390" critical="yes" starttime="20210128 02:29:27.410"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 02:29:32.391" starttime="20210128 02:29:27.361"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:28:01.568" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:28:01.568" starttime="20210128 02:28:01.567"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:28:01.568" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:28:01.569" starttime="20210128 02:28:01.568"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:01.569" starttime="20210128 02:28:01.567"></status>
</kw>
<msg timestamp="20210128 02:28:01.569" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:28:01.569" starttime="20210128 02:28:01.567"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:01.569" starttime="20210128 02:28:01.566"></status>
</kw>
<msg timestamp="20210128 02:28:01.569" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:28:01.569" starttime="20210128 02:28:01.565"></status>
</kw>
<msg timestamp="20210128 02:28:01.569" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:28:01.569" starttime="20210128 02:28:01.564"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:28:01.570" level="INFO">${random} = 94946</msg>
<status status="PASS" endtime="20210128 02:28:01.570" starttime="20210128 02:28:01.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:28:01.574" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-94946 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:28:05.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:28:05.519" level="INFO">${output} = 2021-01-28 02:28:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:28:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 02:28:05.520" starttime="20210128 02:28:01.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:28:05.521" level="INFO">2021-01-28 02:28:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:28:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:28:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:28:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:28:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A32BAE4A742C-&gt;7e73bebd-a2d9-4345-8756-cd31f863ca7c
2021-01-28 02:28:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210128 02:28:05.521" starttime="20210128 02:28:05.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:28:05.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:28:05.522" starttime="20210128 02:28:05.522"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:05.522" starttime="20210128 02:28:01.571"></status>
</kw>
<msg timestamp="20210128 02:28:05.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:28:05.522" starttime="20210128 02:28:01.570"></status>
</kw>
<msg timestamp="20210128 02:28:05.522" level="INFO">${result} = 2021-01-28 02:28:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:28:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 02:28:05.522" starttime="20210128 02:28:01.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:28:05.525" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:28:07.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:28:07.257" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:28 o3fs://bucket1.volume1.om/ozone-94946
dr...</msg>
<status status="PASS" endtime="20210128 02:28:07.257" starttime="20210128 02:28:05.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:28:07.258" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:28 o3fs://bucket1.volume1.om/ozone-94946
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:27 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 02:28:07.258" starttime="20210128 02:28:07.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:28:07.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:28:07.259" starttime="20210128 02:28:07.258"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:07.259" starttime="20210128 02:28:05.523"></status>
</kw>
<msg timestamp="20210128 02:28:07.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:28:07.259" starttime="20210128 02:28:05.523"></status>
</kw>
<msg timestamp="20210128 02:28:07.259" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:28 o3fs://bucket1.volume1.om/ozone-94946
dr...</msg>
<status status="PASS" endtime="20210128 02:28:07.259" starttime="20210128 02:28:05.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:28:07.260" starttime="20210128 02:28:07.260"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 02:28:07.260" critical="yes" starttime="20210128 02:28:01.564"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 02:28:07.261" starttime="20210128 02:28:01.515"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:27:56.805" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:27:56.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:27:56.808" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210128 02:27:56.809" starttime="20210128 02:27:56.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:27:56.810" level="INFO">rm</msg>
<status status="PASS" endtime="20210128 02:27:56.810" starttime="20210128 02:27:56.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:27:56.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:27:56.810" starttime="20210128 02:27:56.810"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:56.810" starttime="20210128 02:27:56.802"></status>
</kw>
<msg timestamp="20210128 02:27:56.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:27:56.811" starttime="20210128 02:27:56.801"></status>
</kw>
<msg timestamp="20210128 02:27:56.811" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210128 02:27:56.811" starttime="20210128 02:27:56.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:27:56.812" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:27:56.812" starttime="20210128 02:27:56.811"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:27:56.815" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:27:56.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:27:56.827" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:27:56.827" starttime="20210128 02:27:56.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:27:56.828" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:27:56.828" starttime="20210128 02:27:56.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:27:56.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:27:56.829" starttime="20210128 02:27:56.828"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:56.829" starttime="20210128 02:27:56.813"></status>
</kw>
<msg timestamp="20210128 02:27:56.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:27:56.830" starttime="20210128 02:27:56.813"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:56.830" starttime="20210128 02:27:56.812"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:56.830" starttime="20210128 02:27:56.812"></status>
</kw>
<status status="PASS" endtime="20210128 02:27:56.830" starttime="20210128 02:27:56.801"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:27:56.830" critical="yes" starttime="20210128 02:27:56.800"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210128 02:27:56.831" starttime="20210128 02:27:56.761"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:26:56.314" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:26:56.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:26:56.317" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210128 02:26:56.317" starttime="20210128 02:26:56.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:26:56.318" level="INFO">om</msg>
<status status="PASS" endtime="20210128 02:26:56.318" starttime="20210128 02:26:56.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:26:56.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:26:56.318" starttime="20210128 02:26:56.318"></status>
</kw>
<status status="PASS" endtime="20210128 02:26:56.319" starttime="20210128 02:26:56.311"></status>
</kw>
<msg timestamp="20210128 02:26:56.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:26:56.319" starttime="20210128 02:26:56.311"></status>
</kw>
<msg timestamp="20210128 02:26:56.319" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210128 02:26:56.319" starttime="20210128 02:26:56.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:26:56.319" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:26:56.319" starttime="20210128 02:26:56.319"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:26:56.323" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:26:56.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:26:56.334" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:26:56.334" starttime="20210128 02:26:56.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:26:56.335" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:26:56.335" starttime="20210128 02:26:56.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:26:56.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:26:56.335" starttime="20210128 02:26:56.335"></status>
</kw>
<status status="PASS" endtime="20210128 02:26:56.335" starttime="20210128 02:26:56.321"></status>
</kw>
<msg timestamp="20210128 02:26:56.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:26:56.336" starttime="20210128 02:26:56.320"></status>
</kw>
<status status="PASS" endtime="20210128 02:26:56.336" starttime="20210128 02:26:56.320"></status>
</kw>
<status status="PASS" endtime="20210128 02:26:56.336" starttime="20210128 02:26:56.320"></status>
</kw>
<status status="PASS" endtime="20210128 02:26:56.336" starttime="20210128 02:26:56.310"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:26:56.336" critical="yes" starttime="20210128 02:26:56.309"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210128 02:26:56.337" starttime="20210128 02:26:56.269"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:29:37.106" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:29:37.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:29:37.113" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:29:37.113" starttime="20210128 02:29:37.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:29:37.114" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:29:37.114" starttime="20210128 02:29:37.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:29:37.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:29:37.115" starttime="20210128 02:29:37.114"></status>
</kw>
<status status="PASS" endtime="20210128 02:29:37.115" starttime="20210128 02:29:37.102"></status>
</kw>
<msg timestamp="20210128 02:29:37.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:29:37.115" starttime="20210128 02:29:37.102"></status>
</kw>
<msg timestamp="20210128 02:29:37.115" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:29:37.115" starttime="20210128 02:29:37.102"></status>
</kw>
<msg timestamp="20210128 02:29:37.115" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:29:37.115" starttime="20210128 02:29:37.101"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:29:37.120" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:29:37.120" starttime="20210128 02:29:37.119"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:29:37.120" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:29:37.120" starttime="20210128 02:29:37.120"></status>
</kw>
<status status="PASS" endtime="20210128 02:29:37.120" starttime="20210128 02:29:37.119"></status>
</kw>
<msg timestamp="20210128 02:29:37.120" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:29:37.121" starttime="20210128 02:29:37.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:29:37.121" starttime="20210128 02:29:37.121"></status>
</kw>
<msg timestamp="20210128 02:29:37.121" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 02:29:37.122" starttime="20210128 02:29:37.121"></status>
</kw>
<status status="PASS" endtime="20210128 02:29:37.122" starttime="20210128 02:29:37.118"></status>
</kw>
<msg timestamp="20210128 02:29:37.122" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:29:37.122" starttime="20210128 02:29:37.116"></status>
</kw>
<msg timestamp="20210128 02:29:37.122" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:29:37.122" starttime="20210128 02:29:37.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:29:37.125" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:30:13.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:30:13.215" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:29:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:29:39 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 02:30:13.215" starttime="20210128 02:29:37.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:30:13.216" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:29:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:29:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:29:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:29:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:29:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7BD5D083071B-&gt;7e73bebd-a2d9-4345-8756-cd31f863ca7c
2021-01-28 02:29:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-28 02:29:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7D179BD413C2-&gt;ac2d2cf7-3407-48c9-8ac8-d70beb977b57
2021-01-28 02:29:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-28 02:29:42 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.9:8032
2021-01-28 02:29:43 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
2021-01-28 02:29:43 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611800983287, maxDate=1612405783287, sequenceNumber=3, masterKeyId=2))
2021-01-28 02:29:43 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 99 ed cc b6 f4 2e 38 99 f5 fe d6 f6 2e 40 03 48 01 5a 0d 32 30 36 36 39 38 33 30 33 38 35 31 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-28 02:29:43 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611800983287, maxDate=1612405783287, sequenceNumber=3, masterKeyId=2)
2021-01-28 02:29:43 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 02:29:43 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 02:29:43 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 02:29:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611800766721_0003
2021-01-28 02:29:46 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 99 ed cc b6 f4 2e 38 99 f5 fe d6 f6 2e 40 03 48 01 5a 0d 32 30 36 36 39 38 33 30 33 38 35 31 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611800983287, maxDate=1612405783287, sequenceNumber=3, masterKeyId=2)]
2021-01-28 02:29:46 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 02:29:46 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 02:29:46 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-28 02:29:47 INFO  YarnClientImpl:329 - Submitted application application_1611800766721_0003
2021-01-28 02:29:47 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611800766721_0003/
2021-01-28 02:29:47 INFO  Job:1614 - Running job: job_1611800766721_0003
2021-01-28 02:29:54 INFO  Job:1635 - Job job_1611800766721_0003 running in uber mode : false
2021-01-28 02:29:54 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 02:30:03 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 02:30:05 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 02:30:09 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 02:30:12 INFO  Job:1653 - Job job_1611800766721_0003 completed successfully
2021-01-28 02:30:12 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101065
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39456
		Total time spent by all reduces in occupied slots (ms)=6554
		Total time spent by all map tasks (ms)=19728
		Total time spent by all reduce tasks (ms)=3277
		Total vcore-milliseconds taken by all map tasks=19728
		Total vcore-milliseconds taken by all reduce tasks=3277
		Total megabyte-milliseconds taken by all map tasks=40402944
		Total megabyte-milliseconds taken by all reduce tasks=6711296
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1478
		CPU time spent (ms)=6740
		Physical memory (bytes) snapshot=1560735744
		Virtual memory (bytes) snapshot=14026989568
		Total committed heap usage (bytes)=1396703232
		Peak Map Physical memory (bytes)=526462976
		Peak Map Virtual memory (bytes)=3508260864
		Peak Reduce Physical memory (bytes)=319840256
		Peak Reduce Virtual memory (bytes)=3526860800
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.865 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210128 02:30:13.216" starttime="20210128 02:30:13.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:30:13.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:30:13.217" starttime="20210128 02:30:13.216"></status>
</kw>
<status status="PASS" endtime="20210128 02:30:13.217" starttime="20210128 02:29:37.123"></status>
</kw>
<msg timestamp="20210128 02:30:13.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:30:13.217" starttime="20210128 02:29:37.123"></status>
</kw>
<msg timestamp="20210128 02:30:13.217" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:29:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:29:39 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 02:30:13.217" starttime="20210128 02:29:37.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:30:13.218" starttime="20210128 02:30:13.217"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:30:13.218" critical="yes" starttime="20210128 02:29:37.101"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:30:13.223" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:30:13.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:30:13.228" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:30:13.228" starttime="20210128 02:30:13.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:30:13.228" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:30:13.229" starttime="20210128 02:30:13.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:30:13.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:30:13.229" starttime="20210128 02:30:13.229"></status>
</kw>
<status status="PASS" endtime="20210128 02:30:13.229" starttime="20210128 02:30:13.221"></status>
</kw>
<msg timestamp="20210128 02:30:13.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:30:13.229" starttime="20210128 02:30:13.220"></status>
</kw>
<msg timestamp="20210128 02:30:13.230" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:30:13.230" starttime="20210128 02:30:13.220"></status>
</kw>
<msg timestamp="20210128 02:30:13.230" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:30:13.230" starttime="20210128 02:30:13.220"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:30:13.230" level="INFO">${random} = 5GlYNqDZ</msg>
<status status="PASS" endtime="20210128 02:30:13.230" starttime="20210128 02:30:13.230"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:30:13.234" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:30:13.234" starttime="20210128 02:30:13.233"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:30:13.234" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:30:13.234" starttime="20210128 02:30:13.234"></status>
</kw>
<status status="PASS" endtime="20210128 02:30:13.234" starttime="20210128 02:30:13.233"></status>
</kw>
<msg timestamp="20210128 02:30:13.235" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:30:13.235" starttime="20210128 02:30:13.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:30:13.236" starttime="20210128 02:30:13.235"></status>
</kw>
<msg timestamp="20210128 02:30:13.236" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 02:30:13.236" starttime="20210128 02:30:13.235"></status>
</kw>
<status status="PASS" endtime="20210128 02:30:13.236" starttime="20210128 02:30:13.232"></status>
</kw>
<msg timestamp="20210128 02:30:13.236" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:30:13.236" starttime="20210128 02:30:13.231"></status>
</kw>
<msg timestamp="20210128 02:30:13.236" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:30:13.236" starttime="20210128 02:30:13.230"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:30:13.239" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:30:13.239" starttime="20210128 02:30:13.239"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:30:13.240" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:30:13.240" starttime="20210128 02:30:13.239"></status>
</kw>
<status status="PASS" endtime="20210128 02:30:13.240" starttime="20210128 02:30:13.239"></status>
</kw>
<msg timestamp="20210128 02:30:13.240" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:30:13.240" starttime="20210128 02:30:13.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:30:13.241" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210128 02:30:13.241" starttime="20210128 02:30:13.241"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:30:13.242" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210128 02:30:13.242" starttime="20210128 02:30:13.241"></status>
</kw>
<status status="PASS" endtime="20210128 02:30:13.242" starttime="20210128 02:30:13.240"></status>
</kw>
<msg timestamp="20210128 02:30:13.242" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210128 02:30:13.242" starttime="20210128 02:30:13.240"></status>
</kw>
<status status="PASS" endtime="20210128 02:30:13.242" starttime="20210128 02:30:13.238"></status>
</kw>
<msg timestamp="20210128 02:30:13.242" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 02:30:13.242" starttime="20210128 02:30:13.237"></status>
</kw>
<msg timestamp="20210128 02:30:13.243" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 02:30:13.243" starttime="20210128 02:30:13.237"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:30:13.245" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:30:13.245" starttime="20210128 02:30:13.245"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:30:13.246" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:30:13.246" starttime="20210128 02:30:13.245"></status>
</kw>
<status status="PASS" endtime="20210128 02:30:13.246" starttime="20210128 02:30:13.244"></status>
</kw>
<msg timestamp="20210128 02:30:13.246" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:30:13.246" starttime="20210128 02:30:13.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:30:13.247" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210128 02:30:13.247" starttime="20210128 02:30:13.247"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:30:13.248" level="INFO">${result} = /wordcount-5GlYNqDZ.txt</msg>
<status status="PASS" endtime="20210128 02:30:13.248" starttime="20210128 02:30:13.247"></status>
</kw>
<status status="PASS" endtime="20210128 02:30:13.248" starttime="20210128 02:30:13.247"></status>
</kw>
<msg timestamp="20210128 02:30:13.248" level="INFO">${path_with_leading} = /wordcount-5GlYNqDZ.txt</msg>
<status status="PASS" endtime="20210128 02:30:13.248" starttime="20210128 02:30:13.246"></status>
</kw>
<status status="PASS" endtime="20210128 02:30:13.248" starttime="20210128 02:30:13.244"></status>
</kw>
<msg timestamp="20210128 02:30:13.248" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-5GlYNqDZ.txt</msg>
<status status="PASS" endtime="20210128 02:30:13.248" starttime="20210128 02:30:13.243"></status>
</kw>
<msg timestamp="20210128 02:30:13.248" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-5GlYNqDZ.txt</msg>
<status status="PASS" endtime="20210128 02:30:13.248" starttime="20210128 02:30:13.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:30:13.252" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-5GlYNqDZ.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:30:49.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:30:49.294" level="INFO">${output} = 2021-01-28 02:30:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.9:8032
2021-01-28 02:30:15 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
20...</msg>
<status status="PASS" endtime="20210128 02:30:49.294" starttime="20210128 02:30:13.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:30:49.295" level="INFO">2021-01-28 02:30:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.9:8032
2021-01-28 02:30:15 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
2021-01-28 02:30:15 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611801015467, maxDate=1612405815467, sequenceNumber=4, masterKeyId=2))
2021-01-28 02:30:15 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 dc e8 ce b6 f4 2e 38 dc f0 80 d7 f6 2e 40 04 48 01 5a 0d 32 30 36 36 39 38 33 30 33 38 35 31 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-28 02:30:15 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611801015467, maxDate=1612405815467, sequenceNumber=4, masterKeyId=2)
2021-01-28 02:30:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 02:30:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:30:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:30:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:30:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:30:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-95CB19835444-&gt;7e73bebd-a2d9-4345-8756-cd31f863ca7c
2021-01-28 02:30:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:30:19 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 02:30:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FFDCA116E7F5-&gt;ac2d2cf7-3407-48c9-8ac8-d70beb977b57
2021-01-28 02:30:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:30:22 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 02:30:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611800766721_0004
2021-01-28 02:30:24 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 dc e8 ce b6 f4 2e 38 dc f0 80 d7 f6 2e 40 04 48 01 5a 0d 32 30 36 36 39 38 33 30 33 38 35 31 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611801015467, maxDate=1612405815467, sequenceNumber=4, masterKeyId=2)]
2021-01-28 02:30:24 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 02:30:24 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 02:30:24 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-28 02:30:25 INFO  YarnClientImpl:329 - Submitted application application_1611800766721_0004
2021-01-28 02:30:25 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611800766721_0004/
2021-01-28 02:30:25 INFO  Job:1614 - Running job: job_1611800766721_0004
2021-01-28 02:30:32 INFO  Job:1635 - Job job_1611800766721_0004 running in uber mode : false
2021-01-28 02:30:32 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 02:30:41 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 02:30:43 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 02:30:44 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 02:30:47 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 02:30:48 INFO  Job:1653 - Job job_1611800766721_0004 completed successfully
2021-01-28 02:30:48 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163731
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40280
		Total time spent by all reduces in occupied slots (ms)=6710
		Total time spent by all map tasks (ms)=20140
		Total time spent by all reduce tasks (ms)=3355
		Total vcore-milliseconds taken by all map tasks=20140
		Total vcore-milliseconds taken by all reduce tasks=3355
		Total megabyte-milliseconds taken by all map tasks=41246720
		Total megabyte-milliseconds taken by all reduce tasks=6871040
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1477
		CPU time spent (ms)=7410
		Physical memory (bytes) snapshot=1646518272
		Virtual memory (bytes) snapshot=14055251968
		Total committed heap usage (bytes)=1442840576
		Peak Map Physical memory (bytes)=548696064
		Peak Map Virtual memory (bytes)=3511656448
		Peak Reduce Physical memory (bytes)=323944448
		Peak Reduce Virtual memory (bytes)=3524210688
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210128 02:30:49.295" starttime="20210128 02:30:49.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:30:49.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:30:49.296" starttime="20210128 02:30:49.295"></status>
</kw>
<status status="PASS" endtime="20210128 02:30:49.296" starttime="20210128 02:30:13.249"></status>
</kw>
<msg timestamp="20210128 02:30:49.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:30:49.296" starttime="20210128 02:30:13.249"></status>
</kw>
<msg timestamp="20210128 02:30:49.297" level="INFO">${output} = 2021-01-28 02:30:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.9:8032
2021-01-28 02:30:15 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
20...</msg>
<status status="PASS" endtime="20210128 02:30:49.297" starttime="20210128 02:30:13.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 02:30:49.298" starttime="20210128 02:30:49.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:30:49.298" starttime="20210128 02:30:49.298"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:30:49.298" critical="yes" starttime="20210128 02:30:13.219"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 02:30:49.299" starttime="20210128 02:29:37.053"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:28:12.060" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:28:12.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:28:12.066" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:28:12.066" starttime="20210128 02:28:12.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:28:12.067" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:28:12.067" starttime="20210128 02:28:12.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:28:12.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:28:12.068" starttime="20210128 02:28:12.067"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:12.068" starttime="20210128 02:28:12.057"></status>
</kw>
<msg timestamp="20210128 02:28:12.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:28:12.068" starttime="20210128 02:28:12.056"></status>
</kw>
<msg timestamp="20210128 02:28:12.068" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:28:12.068" starttime="20210128 02:28:12.056"></status>
</kw>
<msg timestamp="20210128 02:28:12.068" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:28:12.068" starttime="20210128 02:28:12.055"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:28:12.072" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:28:12.072" starttime="20210128 02:28:12.072"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:28:12.073" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:28:12.073" starttime="20210128 02:28:12.072"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:12.073" starttime="20210128 02:28:12.072"></status>
</kw>
<msg timestamp="20210128 02:28:12.073" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:28:12.073" starttime="20210128 02:28:12.071"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:12.073" starttime="20210128 02:28:12.070"></status>
</kw>
<msg timestamp="20210128 02:28:12.073" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:28:12.073" starttime="20210128 02:28:12.069"></status>
</kw>
<msg timestamp="20210128 02:28:12.074" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:28:12.074" starttime="20210128 02:28:12.068"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:28:12.077" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:28:49.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:28:49.960" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:28:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:28:13 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 02:28:49.961" starttime="20210128 02:28:12.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:28:49.962" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:28:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:28:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:28:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:28:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:28:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0C4458E040B7-&gt;ac2d2cf7-3407-48c9-8ac8-d70beb977b57
2021-01-28 02:28:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-28 02:28:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C00938427AA4-&gt;7e73bebd-a2d9-4345-8756-cd31f863ca7c
2021-01-28 02:28:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-28 02:28:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.9:8032
2021-01-28 02:28:15 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
2021-01-28 02:28:16 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611800896305, maxDate=1612405696305, sequenceNumber=1, masterKeyId=2))
2021-01-28 02:28:16 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9b c4 c7 b6 f4 2e 38 9b cc f9 d6 f6 2e 40 01 48 01 5a 0d 32 30 36 36 39 38 33 30 33 38 35 31 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-28 02:28:16 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611800896305, maxDate=1612405696305, sequenceNumber=1, masterKeyId=2)
2021-01-28 02:28:19 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 02:28:19 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 02:28:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611800766721_0001
2021-01-28 02:28:22 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9b c4 c7 b6 f4 2e 38 9b cc f9 d6 f6 2e 40 01 48 01 5a 0d 32 30 36 36 39 38 33 30 33 38 35 31 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611800896305, maxDate=1612405696305, sequenceNumber=1, masterKeyId=2)]
2021-01-28 02:28:22 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 02:28:22 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 02:28:22 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-28 02:28:23 INFO  YarnClientImpl:329 - Submitted application application_1611800766721_0001
2021-01-28 02:28:23 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611800766721_0001/
2021-01-28 02:28:23 INFO  Job:1614 - Running job: job_1611800766721_0001
2021-01-28 02:28:33 INFO  Job:1635 - Job job_1611800766721_0001 running in uber mode : false
2021-01-28 02:28:33 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 02:28:43 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 02:28:44 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 02:28:45 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 02:28:48 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 02:28:49 INFO  Job:1653 - Job job_1611800766721_0001 completed successfully
2021-01-28 02:28:49 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101269
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40744
		Total time spent by all reduces in occupied slots (ms)=6686
		Total time spent by all map tasks (ms)=20372
		Total time spent by all reduce tasks (ms)=3343
		Total vcore-milliseconds taken by all map tasks=20372
		Total vcore-milliseconds taken by all reduce tasks=3343
		Total megabyte-milliseconds taken by all map tasks=41721856
		Total megabyte-milliseconds taken by all reduce tasks=6846464
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=971
		CPU time spent (ms)=6410
		Physical memory (bytes) snapshot=1371877376
		Virtual memory (bytes) snapshot=14043324416
		Total committed heap usage (bytes)=1123549184
		Peak Map Physical memory (bytes)=387092480
		Peak Map Virtual memory (bytes)=3507593216
		Peak Reduce Physical memory (bytes)=322269184
		Peak Reduce Virtual memory (bytes)=3523936256
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.775 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210128 02:28:49.962" starttime="20210128 02:28:49.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:28:49.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:28:49.966" starttime="20210128 02:28:49.964"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:49.966" starttime="20210128 02:28:12.074"></status>
</kw>
<msg timestamp="20210128 02:28:49.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:28:49.966" starttime="20210128 02:28:12.074"></status>
</kw>
<msg timestamp="20210128 02:28:49.967" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:28:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:28:13 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 02:28:49.967" starttime="20210128 02:28:12.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:28:49.967" starttime="20210128 02:28:49.967"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:28:49.969" critical="yes" starttime="20210128 02:28:12.055"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:28:49.980" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:28:49.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:28:49.989" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:28:49.989" starttime="20210128 02:28:49.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:28:49.991" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:28:49.991" starttime="20210128 02:28:49.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:28:49.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:28:49.992" starttime="20210128 02:28:49.991"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:49.992" starttime="20210128 02:28:49.975"></status>
</kw>
<msg timestamp="20210128 02:28:49.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:28:49.992" starttime="20210128 02:28:49.975"></status>
</kw>
<msg timestamp="20210128 02:28:49.992" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:28:49.993" starttime="20210128 02:28:49.974"></status>
</kw>
<msg timestamp="20210128 02:28:49.993" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:28:49.993" starttime="20210128 02:28:49.972"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:28:49.994" level="INFO">${random} = KA9sVrVf</msg>
<status status="PASS" endtime="20210128 02:28:49.994" starttime="20210128 02:28:49.993"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:28:49.997" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:28:49.997" starttime="20210128 02:28:49.997"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:28:49.998" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:28:49.998" starttime="20210128 02:28:49.998"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:49.998" starttime="20210128 02:28:49.997"></status>
</kw>
<msg timestamp="20210128 02:28:49.998" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:28:49.998" starttime="20210128 02:28:49.996"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:49.999" starttime="20210128 02:28:49.995"></status>
</kw>
<msg timestamp="20210128 02:28:49.999" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:28:49.999" starttime="20210128 02:28:49.995"></status>
</kw>
<msg timestamp="20210128 02:28:49.999" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:28:49.999" starttime="20210128 02:28:49.994"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:28:50.003" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:28:50.003" starttime="20210128 02:28:50.002"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:28:50.003" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:28:50.003" starttime="20210128 02:28:50.003"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:50.004" starttime="20210128 02:28:50.002"></status>
</kw>
<msg timestamp="20210128 02:28:50.004" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:28:50.004" starttime="20210128 02:28:50.001"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:50.004" starttime="20210128 02:28:50.001"></status>
</kw>
<msg timestamp="20210128 02:28:50.004" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 02:28:50.004" starttime="20210128 02:28:50.000"></status>
</kw>
<msg timestamp="20210128 02:28:50.004" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 02:28:50.004" starttime="20210128 02:28:49.999"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:28:50.008" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:28:50.008" starttime="20210128 02:28:50.007"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:28:50.008" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:28:50.008" starttime="20210128 02:28:50.008"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:50.009" starttime="20210128 02:28:50.007"></status>
</kw>
<msg timestamp="20210128 02:28:50.009" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:28:50.009" starttime="20210128 02:28:50.006"></status>
</kw>
<status status="PASS" endtime="20210128 02:28:50.009" starttime="20210128 02:28:50.006"></status>
</kw>
<msg timestamp="20210128 02:28:50.009" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-KA9sVrVf.txt</msg>
<status status="PASS" endtime="20210128 02:28:50.009" starttime="20210128 02:28:50.005"></status>
</kw>
<msg timestamp="20210128 02:28:50.009" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-KA9sVrVf.txt</msg>
<status status="PASS" endtime="20210128 02:28:50.010" starttime="20210128 02:28:50.005"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:28:50.013" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-KA9sVrVf.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:29:21.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:29:21.790" level="INFO">${output} = 2021-01-28 02:28:51 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.9:8032
2021-01-28 02:28:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
20...</msg>
<status status="PASS" endtime="20210128 02:29:21.790" starttime="20210128 02:28:50.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:29:21.791" level="INFO">2021-01-28 02:28:51 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.9:8032
2021-01-28 02:28:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
2021-01-28 02:28:52 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611800932222, maxDate=1612405732222, sequenceNumber=2, masterKeyId=2))
2021-01-28 02:28:52 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9f de c9 b6 f4 2e 38 9f e6 fb d6 f6 2e 40 02 48 01 5a 0d 32 30 36 36 39 38 33 30 33 38 35 31 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-28 02:28:52 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611800932222, maxDate=1612405732222, sequenceNumber=2, masterKeyId=2)
2021-01-28 02:28:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 02:28:52 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:28:52 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:28:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:28:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:28:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-885FC29D1797-&gt;7e73bebd-a2d9-4345-8756-cd31f863ca7c
2021-01-28 02:28:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:28:53 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 02:28:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-43BB83367CBB-&gt;ac2d2cf7-3407-48c9-8ac8-d70beb977b57
2021-01-28 02:28:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:28:53 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 02:28:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611800766721_0002
2021-01-28 02:28:54 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9f de c9 b6 f4 2e 38 9f e6 fb d6 f6 2e 40 02 48 01 5a 0d 32 30 36 36 39 38 33 30 33 38 35 31 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611800932222, maxDate=1612405732222, sequenceNumber=2, masterKeyId=2)]
2021-01-28 02:28:54 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 02:28:54 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 02:28:54 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-28 02:28:54 INFO  YarnClientImpl:329 - Submitted application application_1611800766721_0002
2021-01-28 02:28:54 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611800766721_0002/
2021-01-28 02:28:54 INFO  Job:1614 - Running job: job_1611800766721_0002
2021-01-28 02:29:03 INFO  Job:1635 - Job job_1611800766721_0002 running in uber mode : false
2021-01-28 02:29:03 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 02:29:12 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 02:29:14 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 02:29:15 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 02:29:18 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 02:29:21 INFO  Job:1653 - Job job_1611800766721_0002 completed successfully
2021-01-28 02:29:21 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163815
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41568
		Total time spent by all reduces in occupied slots (ms)=6782
		Total time spent by all map tasks (ms)=20784
		Total time spent by all reduce tasks (ms)=3391
		Total vcore-milliseconds taken by all map tasks=20784
		Total vcore-milliseconds taken by all reduce tasks=3391
		Total megabyte-milliseconds taken by all map tasks=42565632
		Total megabyte-milliseconds taken by all reduce tasks=6944768
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1321
		CPU time spent (ms)=6870
		Physical memory (bytes) snapshot=1640497152
		Virtual memory (bytes) snapshot=14042533888
		Total committed heap usage (bytes)=1494745088
		Peak Map Physical memory (bytes)=541573120
		Peak Map Virtual memory (bytes)=3508928512
		Peak Reduce Physical memory (bytes)=315904000
		Peak Reduce Virtual memory (bytes)=3528589312
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210128 02:29:21.791" starttime="20210128 02:29:21.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:29:21.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:29:21.792" starttime="20210128 02:29:21.792"></status>
</kw>
<status status="PASS" endtime="20210128 02:29:21.792" starttime="20210128 02:28:50.010"></status>
</kw>
<msg timestamp="20210128 02:29:21.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:29:21.793" starttime="20210128 02:28:50.010"></status>
</kw>
<msg timestamp="20210128 02:29:21.793" level="INFO">${output} = 2021-01-28 02:28:51 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.9:8032
2021-01-28 02:28:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
20...</msg>
<status status="PASS" endtime="20210128 02:29:21.793" starttime="20210128 02:28:50.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 02:29:21.794" starttime="20210128 02:29:21.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:29:21.794" starttime="20210128 02:29:21.794"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:29:21.794" critical="yes" starttime="20210128 02:28:49.971"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 02:29:21.796" starttime="20210128 02:28:12.005"></status>
</suite>
<status status="PASS" elapsedtime="192380" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
