<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210128 02:36:38.143" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:33:10.902" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:33:22.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:33:22.129" level="INFO">${output} = 2021-01-28 02:33:12,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 02:33:12,523 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 02:33:22.129" starttime="20210128 02:33:10.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:33:22.130" level="INFO">2021-01-28 02:33:12,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 02:33:12,523 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:33:12,523 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-28 02:33:12,690 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-28 02:33:12,709 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:13,712 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:14,415 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-28 02:33:14,712 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:14,991 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-28 02:33:15,718 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:16,724 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:17,725 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:17,814 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-28 02:33:18,256 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:33:18,257 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-2B5A3CF5272C-&gt;feb6bea5-edd2-410b-8ad4-c920818f117a
2021-01-28 02:33:18,257 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:33:18,725 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:19,726 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:20,726 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:21,727 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-28 02:33:21,783 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5813.943187, max=5813.943187, mean=5813.943187, stddev=0.0, median=5813.943187, p75=5813.943187, p95=5813.943187, p98=5813.943187, p99=5813.943187, p999=5813.943187, mean_rate=0.1522849618496772, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-28 02:33:21,788 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2021-01-28 02:33:21,788 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-28 02:33:21,788 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210128 02:33:22.130" starttime="20210128 02:33:22.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:33:22.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:33:22.131" starttime="20210128 02:33:22.131"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:22.131" starttime="20210128 02:33:10.899"></status>
</kw>
<msg timestamp="20210128 02:33:22.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:33:22.132" starttime="20210128 02:33:10.899"></status>
</kw>
<msg timestamp="20210128 02:33:22.132" level="INFO">${result} = 2021-01-28 02:33:12,371 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 02:33:12,523 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 02:33:22.132" starttime="20210128 02:33:10.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210128 02:33:22.132" starttime="20210128 02:33:22.132"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 02:33:22.133" critical="yes" starttime="20210128 02:33:10.897"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:33:22.139" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:33:26.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:33:26.253" level="INFO">${output} = 2021-01-28 02:33:23,712 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 02:33:23,879 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 02:33:26.253" starttime="20210128 02:33:22.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:33:26.254" level="INFO">2021-01-28 02:33:23,712 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 02:33:23,879 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:33:23,879 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-28 02:33:24,023 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-01-28 02:33:24,040 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:25,052 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:26,052 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-28 02:33:26,212 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=219.814317, max=219.814317, mean=219.814317, stddev=0.0, median=219.814317, p75=219.814317, p95=219.814317, p98=219.814317, p99=219.814317, p999=219.814317, mean_rate=0.989895781356793, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-28 02:33:26,217 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-01-28 02:33:26,217 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-28 02:33:26,217 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210128 02:33:26.255" starttime="20210128 02:33:26.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:33:26.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:33:26.255" starttime="20210128 02:33:26.255"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:26.256" starttime="20210128 02:33:22.135"></status>
</kw>
<msg timestamp="20210128 02:33:26.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:33:26.256" starttime="20210128 02:33:22.135"></status>
</kw>
<msg timestamp="20210128 02:33:26.256" level="INFO">${result} = 2021-01-28 02:33:23,712 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 02:33:23,879 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 02:33:26.256" starttime="20210128 02:33:22.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210128 02:33:26.257" starttime="20210128 02:33:26.256"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 02:33:26.257" critical="yes" starttime="20210128 02:33:22.134"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:33:26.262" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:33:30.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:33:30.640" level="INFO">${output} = 2021-01-28 02:33:27,886 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 02:33:28,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 02:33:30.640" starttime="20210128 02:33:26.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:33:30.641" level="INFO">2021-01-28 02:33:27,886 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 02:33:28,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:33:28,027 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-28 02:33:28,186 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-01-28 02:33:28,203 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:29,210 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:30,211 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-28 02:33:30,618 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=58.009523, max=58.009523, mean=58.009523, stddev=0.0, median=58.009523, p75=58.009523, p95=58.009523, p98=58.009523, p99=58.009523, p999=58.009523, mean_rate=0.9569543383275643, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-28 02:33:30,618 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-01-28 02:33:30,619 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-28 02:33:30,619 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210128 02:33:30.641" starttime="20210128 02:33:30.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:33:30.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:33:30.642" starttime="20210128 02:33:30.641"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:30.642" starttime="20210128 02:33:26.259"></status>
</kw>
<msg timestamp="20210128 02:33:30.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:33:30.642" starttime="20210128 02:33:26.259"></status>
</kw>
<msg timestamp="20210128 02:33:30.642" level="INFO">${result} = 2021-01-28 02:33:27,886 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 02:33:28,027 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 02:33:30.642" starttime="20210128 02:33:26.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210128 02:33:30.643" starttime="20210128 02:33:30.643"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 02:33:30.643" critical="yes" starttime="20210128 02:33:26.257"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210128 02:33:30.644" starttime="20210128 02:33:10.882"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:33:30.655" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:33:36.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:33:36.666" level="INFO">${output} = 2021-01-28 02:33:32,258 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 02:33:32,407 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 02:33:36.666" starttime="20210128 02:33:30.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:33:36.667" level="INFO">2021-01-28 02:33:32,258 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 02:33:32,407 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:33:32,407 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-28 02:33:32,563 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-28 02:33:32,574 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:33,577 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:34,513 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-28 02:33:34,577 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-28 02:33:35,577 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-28 02:33:36,312 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=53.625923, max=53.625923, mean=53.625923, stddev=0.0, median=53.625923, p75=53.625923, p95=53.625923, p98=53.625923, p99=53.625923, p999=53.625923, mean_rate=0.9880042677081465, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-28 02:33:36,312 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-01-28 02:33:36,312 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-28 02:33:36,312 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210128 02:33:36.667" starttime="20210128 02:33:36.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:33:36.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:33:36.669" starttime="20210128 02:33:36.668"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:36.670" starttime="20210128 02:33:30.652"></status>
</kw>
<msg timestamp="20210128 02:33:36.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:33:36.670" starttime="20210128 02:33:30.652"></status>
</kw>
<msg timestamp="20210128 02:33:36.670" level="INFO">${result} = 2021-01-28 02:33:32,258 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-28 02:33:32,407 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210128 02:33:36.670" starttime="20210128 02:33:30.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210128 02:33:36.671" starttime="20210128 02:33:36.670"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 02:33:36.671" critical="yes" starttime="20210128 02:33:30.651"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210128 02:33:36.672" starttime="20210128 02:33:30.647"></status>
</suite>
<status status="PASS" endtime="20210128 02:33:36.674" starttime="20210128 02:33:10.854"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:33:05.797" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:33:05.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:33:05.799" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:33:05.799" starttime="20210128 02:33:05.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:33:05.800" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:33:05.800" starttime="20210128 02:33:05.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:33:05.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:33:05.801" starttime="20210128 02:33:05.800"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:05.801" starttime="20210128 02:33:05.793"></status>
</kw>
<msg timestamp="20210128 02:33:05.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:33:05.801" starttime="20210128 02:33:05.792"></status>
</kw>
<msg timestamp="20210128 02:33:05.802" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:33:05.802" starttime="20210128 02:33:05.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:33:05.802" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:33:05.802" starttime="20210128 02:33:05.802"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:33:05.806" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:33:05.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:33:05.816" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:33:05.816" starttime="20210128 02:33:05.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:33:05.817" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:33:05.817" starttime="20210128 02:33:05.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:33:05.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:33:05.817" starttime="20210128 02:33:05.817"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:05.818" starttime="20210128 02:33:05.804"></status>
</kw>
<msg timestamp="20210128 02:33:05.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:33:05.818" starttime="20210128 02:33:05.803"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:05.818" starttime="20210128 02:33:05.803"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:05.818" starttime="20210128 02:33:05.802"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:05.818" starttime="20210128 02:33:05.791"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:33:05.818" critical="yes" starttime="20210128 02:33:05.790"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210128 02:33:05.819" starttime="20210128 02:33:05.735"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:33:41.846" level="INFO">${random} = 79087</msg>
<status status="PASS" endtime="20210128 02:33:41.846" starttime="20210128 02:33:41.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210128 02:33:41.847" level="INFO">${source} = 79087-source</msg>
<status status="PASS" endtime="20210128 02:33:41.847" starttime="20210128 02:33:41.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210128 02:33:41.848" level="INFO">${target} = 79087-target</msg>
<status status="PASS" endtime="20210128 02:33:41.849" starttime="20210128 02:33:41.848"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:33:41.853" level="INFO">Running command 'ozone sh volume create 79087-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:33:44.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:33:44.804" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:33:44.804" starttime="20210128 02:33:41.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:33:44.805" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:33:44.805" starttime="20210128 02:33:44.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:33:44.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:33:44.805" starttime="20210128 02:33:44.805"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:44.806" starttime="20210128 02:33:41.849"></status>
</kw>
<msg timestamp="20210128 02:33:44.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:33:44.806" starttime="20210128 02:33:41.849"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:44.806" starttime="20210128 02:33:41.849"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:33:44.810" level="INFO">Running command 'ozone sh volume create 79087-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:33:47.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:33:47.724" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:33:47.724" starttime="20210128 02:33:44.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:33:47.725" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:33:47.725" starttime="20210128 02:33:47.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:33:47.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:33:47.726" starttime="20210128 02:33:47.726"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:47.726" starttime="20210128 02:33:44.807"></status>
</kw>
<msg timestamp="20210128 02:33:47.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:33:47.727" starttime="20210128 02:33:44.806"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:47.727" starttime="20210128 02:33:44.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:33:47.731" level="INFO">Running command 'ozone sh bucket create 79087-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:33:51.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:33:51.402" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:33:51.403" starttime="20210128 02:33:47.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:33:51.403" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:33:51.403" starttime="20210128 02:33:51.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:33:51.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:33:51.404" starttime="20210128 02:33:51.404"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:51.404" starttime="20210128 02:33:47.729"></status>
</kw>
<msg timestamp="20210128 02:33:51.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:33:51.404" starttime="20210128 02:33:47.728"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:51.405" starttime="20210128 02:33:47.728"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:33:51.408" level="INFO">Running command 'ozone sh key put 79087-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:33:56.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:33:56.628" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:33:56.628" starttime="20210128 02:33:51.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:33:56.629" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:33:56.629" starttime="20210128 02:33:56.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:33:56.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:33:56.629" starttime="20210128 02:33:56.629"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:56.630" starttime="20210128 02:33:51.406"></status>
</kw>
<msg timestamp="20210128 02:33:56.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:33:56.630" starttime="20210128 02:33:51.405"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:56.630" starttime="20210128 02:33:51.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:33:56.633" level="INFO">Running command 'ozone sh bucket create 79087-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:33:59.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:33:59.563" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:33:59.563" starttime="20210128 02:33:56.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:33:59.564" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:33:59.564" starttime="20210128 02:33:59.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:33:59.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:33:59.564" starttime="20210128 02:33:59.564"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:59.565" starttime="20210128 02:33:56.631"></status>
</kw>
<msg timestamp="20210128 02:33:59.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:33:59.565" starttime="20210128 02:33:56.631"></status>
</kw>
<status status="PASS" endtime="20210128 02:33:59.565" starttime="20210128 02:33:56.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:33:59.568" level="INFO">Running command 'ozone sh bucket link 79087-source/readable-bucket 79087-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:02.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:02.596" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:02.596" starttime="20210128 02:33:59.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:02.597" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:02.597" starttime="20210128 02:34:02.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:02.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:02.597" starttime="20210128 02:34:02.597"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:02.598" starttime="20210128 02:33:59.566"></status>
</kw>
<msg timestamp="20210128 02:34:02.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:02.598" starttime="20210128 02:33:59.566"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:02.598" starttime="20210128 02:33:59.565"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:02.601" level="INFO">Running command 'ozone sh bucket link 79087-source/readable-bucket 79087-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:05.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:05.454" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:05.454" starttime="20210128 02:34:02.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:05.455" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:05.455" starttime="20210128 02:34:05.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:05.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:05.456" starttime="20210128 02:34:05.455"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:05.456" starttime="20210128 02:34:02.599"></status>
</kw>
<msg timestamp="20210128 02:34:05.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:05.456" starttime="20210128 02:34:02.599"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:05.456" starttime="20210128 02:34:02.598"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:05.459" level="INFO">Running command 'ozone sh bucket link 79087-source/unreadable-bucket 79087-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:08.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:08.380" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:08.380" starttime="20210128 02:34:05.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:08.381" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:08.381" starttime="20210128 02:34:08.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:08.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:08.382" starttime="20210128 02:34:08.381"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:08.382" starttime="20210128 02:34:05.457"></status>
</kw>
<msg timestamp="20210128 02:34:08.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:08.382" starttime="20210128 02:34:05.457"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:08.382" starttime="20210128 02:34:05.456"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:08.386" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 79087-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:11.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:11.506" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:34:11.506" starttime="20210128 02:34:08.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:11.507" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:34:11.507" starttime="20210128 02:34:11.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:11.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:11.508" starttime="20210128 02:34:11.508"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:11.508" starttime="20210128 02:34:08.383"></status>
</kw>
<msg timestamp="20210128 02:34:11.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:11.509" starttime="20210128 02:34:08.383"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:11.509" starttime="20210128 02:34:08.382"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:11.512" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 79087-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:14.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:14.399" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:34:14.399" starttime="20210128 02:34:11.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:14.400" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:34:14.400" starttime="20210128 02:34:14.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:14.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:14.400" starttime="20210128 02:34:14.400"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:14.401" starttime="20210128 02:34:11.510"></status>
</kw>
<msg timestamp="20210128 02:34:14.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:14.401" starttime="20210128 02:34:11.509"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:14.401" starttime="20210128 02:34:11.509"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:14.404" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 79087-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:17.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:17.277" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:34:17.277" starttime="20210128 02:34:14.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:17.278" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:34:17.278" starttime="20210128 02:34:17.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:17.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:17.278" starttime="20210128 02:34:17.278"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:17.279" starttime="20210128 02:34:14.402"></status>
</kw>
<msg timestamp="20210128 02:34:17.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:17.279" starttime="20210128 02:34:14.402"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:17.279" starttime="20210128 02:34:14.401"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:17.282" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 79087-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:20.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:20.229" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:34:20.229" starttime="20210128 02:34:17.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:20.229" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:34:20.230" starttime="20210128 02:34:20.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:20.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:20.230" starttime="20210128 02:34:20.230"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:20.230" starttime="20210128 02:34:17.280"></status>
</kw>
<msg timestamp="20210128 02:34:20.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:20.230" starttime="20210128 02:34:17.280"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:20.231" starttime="20210128 02:34:17.279"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:20.234" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 79087-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:23.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:23.042" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:34:23.042" starttime="20210128 02:34:20.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:23.043" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:34:23.043" starttime="20210128 02:34:23.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:23.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:23.043" starttime="20210128 02:34:23.043"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:23.044" starttime="20210128 02:34:20.231"></status>
</kw>
<msg timestamp="20210128 02:34:23.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:23.044" starttime="20210128 02:34:20.231"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:23.044" starttime="20210128 02:34:20.231"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:23.044" starttime="20210128 02:33:47.727"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:23.044" starttime="20210128 02:33:47.727"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:23.044" starttime="20210128 02:33:41.845"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:23.050" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:23.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:23.052" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:34:23.052" starttime="20210128 02:34:23.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:23.053" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:34:23.053" starttime="20210128 02:34:23.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:23.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:23.054" starttime="20210128 02:34:23.053"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:23.054" starttime="20210128 02:34:23.047"></status>
</kw>
<msg timestamp="20210128 02:34:23.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:23.054" starttime="20210128 02:34:23.047"></status>
</kw>
<msg timestamp="20210128 02:34:23.054" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:34:23.054" starttime="20210128 02:34:23.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:34:23.055" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:34:23.055" starttime="20210128 02:34:23.054"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:23.058" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:23.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:23.071" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:23.071" starttime="20210128 02:34:23.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:23.072" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:23.072" starttime="20210128 02:34:23.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:23.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:23.072" starttime="20210128 02:34:23.072"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:23.073" starttime="20210128 02:34:23.057"></status>
</kw>
<msg timestamp="20210128 02:34:23.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:23.073" starttime="20210128 02:34:23.056"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:23.073" starttime="20210128 02:34:23.056"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:23.073" starttime="20210128 02:34:23.055"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:23.073" starttime="20210128 02:34:23.046"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:23.073" starttime="20210128 02:34:23.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:23.076" level="INFO">Running command 'ozone sh bucket link 79087-source/no-such-bucket 79087-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:26.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:26.160" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:26.160" starttime="20210128 02:34:23.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:26.161" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:26.161" starttime="20210128 02:34:26.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:26.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:26.161" starttime="20210128 02:34:26.161"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:26.162" starttime="20210128 02:34:23.074"></status>
</kw>
<msg timestamp="20210128 02:34:26.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:26.162" starttime="20210128 02:34:23.074"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:26.162" starttime="20210128 02:34:23.073"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:26.165" level="INFO">Running command 'ozone sh key list 79087-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:29.315" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 02:34:29.315" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210128 02:34:29.315" starttime="20210128 02:34:26.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:29.316" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210128 02:34:29.316" starttime="20210128 02:34:29.316"></status>
</kw>
<msg timestamp="20210128 02:34:29.317" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210128 02:34:29.317" starttime="20210128 02:34:26.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210128 02:34:29.317" starttime="20210128 02:34:29.317"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:34:29.317" critical="yes" starttime="20210128 02:34:23.044"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:29.323" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:29.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:29.326" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:34:29.326" starttime="20210128 02:34:29.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:29.327" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:34:29.327" starttime="20210128 02:34:29.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:29.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:29.328" starttime="20210128 02:34:29.327"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:29.328" starttime="20210128 02:34:29.321"></status>
</kw>
<msg timestamp="20210128 02:34:29.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:29.328" starttime="20210128 02:34:29.321"></status>
</kw>
<msg timestamp="20210128 02:34:29.328" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:34:29.328" starttime="20210128 02:34:29.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:34:29.329" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:34:29.329" starttime="20210128 02:34:29.329"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:29.332" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:29.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:29.345" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:29.345" starttime="20210128 02:34:29.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:29.346" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:29.346" starttime="20210128 02:34:29.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:29.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:29.347" starttime="20210128 02:34:29.346"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:29.347" starttime="20210128 02:34:29.330"></status>
</kw>
<msg timestamp="20210128 02:34:29.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:29.347" starttime="20210128 02:34:29.330"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:29.348" starttime="20210128 02:34:29.330"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:29.348" starttime="20210128 02:34:29.329"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:29.348" starttime="20210128 02:34:29.320"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:29.348" starttime="20210128 02:34:29.319"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:29.352" level="INFO">Running command 'ozone sh bucket link 79087-source/bucket1 79087-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:32.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:32.518" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:32.518" starttime="20210128 02:34:29.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:32.519" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:32.519" starttime="20210128 02:34:32.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:32.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:32.520" starttime="20210128 02:34:32.520"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:32.520" starttime="20210128 02:34:29.349"></status>
</kw>
<msg timestamp="20210128 02:34:32.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:32.520" starttime="20210128 02:34:29.348"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:32.520" starttime="20210128 02:34:29.348"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:32.524" level="INFO">Running command 'ozone sh bucket create 79087-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:35.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:35.530" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:35.530" starttime="20210128 02:34:32.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:35.531" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:35.531" starttime="20210128 02:34:35.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:35.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:35.531" starttime="20210128 02:34:35.531"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:35.531" starttime="20210128 02:34:32.522"></status>
</kw>
<msg timestamp="20210128 02:34:35.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:35.532" starttime="20210128 02:34:32.521"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:35.532" starttime="20210128 02:34:32.521"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:35.535" level="INFO">Running command 'ozone sh key put 79087-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:40.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:40.751" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:40.751" starttime="20210128 02:34:35.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:40.752" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:40.752" starttime="20210128 02:34:40.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:40.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:40.753" starttime="20210128 02:34:40.752"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:40.753" starttime="20210128 02:34:35.533"></status>
</kw>
<msg timestamp="20210128 02:34:40.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:40.753" starttime="20210128 02:34:35.533"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:40.754" starttime="20210128 02:34:35.532"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210128 02:34:40.755" level="INFO">${postfix} = 87265</msg>
<status status="PASS" endtime="20210128 02:34:40.755" starttime="20210128 02:34:40.755"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210128 02:34:40.756" level="INFO">${tmpfile} = /tmp/tempkey-87265</msg>
<status status="PASS" endtime="20210128 02:34:40.756" starttime="20210128 02:34:40.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:40.760" level="INFO">Running command 'ozone sh key get -f 79087-target/link1/key1 /tmp/tempkey-87265 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:45.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:45.264" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:45.264" starttime="20210128 02:34:40.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:45.265" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:45.266" starttime="20210128 02:34:45.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:45.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:45.266" starttime="20210128 02:34:45.266"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:45.266" starttime="20210128 02:34:40.757"></status>
</kw>
<msg timestamp="20210128 02:34:45.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:45.266" starttime="20210128 02:34:40.757"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:45.267" starttime="20210128 02:34:40.756"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210128 02:34:45.269" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-87265 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:45.272" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210128 02:34:45.272" starttime="20210128 02:34:45.267"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:45.276" level="INFO">Running command 'rm -f /tmp/tempkey-87265 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:45.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:45.278" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:45.278" starttime="20210128 02:34:45.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:45.278" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:45.278" starttime="20210128 02:34:45.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:45.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:45.279" starttime="20210128 02:34:45.279"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:45.279" starttime="20210128 02:34:45.273"></status>
</kw>
<msg timestamp="20210128 02:34:45.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:45.279" starttime="20210128 02:34:45.273"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:45.280" starttime="20210128 02:34:45.272"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:34:45.280" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210128 02:34:45.280" starttime="20210128 02:34:45.280"></status>
</kw>
<msg timestamp="20210128 02:34:45.280" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210128 02:34:45.280" starttime="20210128 02:34:40.754"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:34:45.281" starttime="20210128 02:34:45.280"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:45.281" starttime="20210128 02:34:40.754"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:34:45.281" critical="yes" starttime="20210128 02:34:29.318"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:45.286" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:45.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:45.288" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:34:45.288" starttime="20210128 02:34:45.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:45.289" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:34:45.289" starttime="20210128 02:34:45.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:45.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:45.290" starttime="20210128 02:34:45.289"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:45.290" starttime="20210128 02:34:45.283"></status>
</kw>
<msg timestamp="20210128 02:34:45.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:45.290" starttime="20210128 02:34:45.283"></status>
</kw>
<msg timestamp="20210128 02:34:45.290" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:34:45.290" starttime="20210128 02:34:45.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:34:45.291" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:34:45.291" starttime="20210128 02:34:45.291"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:45.295" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:45.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:45.307" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:45.307" starttime="20210128 02:34:45.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:45.308" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:45.308" starttime="20210128 02:34:45.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:45.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:45.308" starttime="20210128 02:34:45.308"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:45.309" starttime="20210128 02:34:45.293"></status>
</kw>
<msg timestamp="20210128 02:34:45.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:45.309" starttime="20210128 02:34:45.292"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:45.309" starttime="20210128 02:34:45.292"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:45.309" starttime="20210128 02:34:45.291"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:45.309" starttime="20210128 02:34:45.283"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:45.309" starttime="20210128 02:34:45.282"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:45.312" level="INFO">Running command 'ozone sh key put 79087-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:50.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:50.269" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:50.269" starttime="20210128 02:34:45.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:50.270" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:50.270" starttime="20210128 02:34:50.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:50.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:50.271" starttime="20210128 02:34:50.270"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:50.271" starttime="20210128 02:34:45.310"></status>
</kw>
<msg timestamp="20210128 02:34:50.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:50.271" starttime="20210128 02:34:45.310"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:50.271" starttime="20210128 02:34:45.310"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210128 02:34:50.273" level="INFO">${postfix} = 94070</msg>
<status status="PASS" endtime="20210128 02:34:50.273" starttime="20210128 02:34:50.272"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210128 02:34:50.273" level="INFO">${tmpfile} = /tmp/tempkey-94070</msg>
<status status="PASS" endtime="20210128 02:34:50.273" starttime="20210128 02:34:50.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:50.276" level="INFO">Running command 'ozone sh key get -f 79087-source/bucket1/key2 /tmp/tempkey-94070 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:54.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:54.958" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:54.958" starttime="20210128 02:34:50.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:54.959" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:54.959" starttime="20210128 02:34:54.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:54.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:54.960" starttime="20210128 02:34:54.959"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:54.960" starttime="20210128 02:34:50.274"></status>
</kw>
<msg timestamp="20210128 02:34:54.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:54.960" starttime="20210128 02:34:50.274"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:54.961" starttime="20210128 02:34:50.273"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210128 02:34:54.963" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-94070 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:54.966" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210128 02:34:54.966" starttime="20210128 02:34:54.961"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:54.969" level="INFO">Running command 'rm -f /tmp/tempkey-94070 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:54.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:54.971" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:54.971" starttime="20210128 02:34:54.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:54.972" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:54.972" starttime="20210128 02:34:54.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:54.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:54.973" starttime="20210128 02:34:54.972"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:54.973" starttime="20210128 02:34:54.967"></status>
</kw>
<msg timestamp="20210128 02:34:54.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:54.973" starttime="20210128 02:34:54.967"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:54.973" starttime="20210128 02:34:54.966"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:34:54.974" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210128 02:34:54.974" starttime="20210128 02:34:54.973"></status>
</kw>
<msg timestamp="20210128 02:34:54.974" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210128 02:34:54.974" starttime="20210128 02:34:50.272"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:34:54.975" starttime="20210128 02:34:54.974"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:54.975" starttime="20210128 02:34:50.271"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:34:54.975" critical="yes" starttime="20210128 02:34:45.282"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:54.980" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:54.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:54.982" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:34:54.982" starttime="20210128 02:34:54.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:54.983" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:34:54.983" starttime="20210128 02:34:54.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:54.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:54.984" starttime="20210128 02:34:54.983"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:54.984" starttime="20210128 02:34:54.978"></status>
</kw>
<msg timestamp="20210128 02:34:54.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:54.984" starttime="20210128 02:34:54.978"></status>
</kw>
<msg timestamp="20210128 02:34:54.984" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:34:54.984" starttime="20210128 02:34:54.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:34:54.985" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:34:54.985" starttime="20210128 02:34:54.984"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:54.988" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:54.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:54.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:34:54.999" starttime="20210128 02:34:54.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:55.000" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:34:55.000" starttime="20210128 02:34:54.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:55.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:55.000" starttime="20210128 02:34:55.000"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:55.000" starttime="20210128 02:34:54.986"></status>
</kw>
<msg timestamp="20210128 02:34:55.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:55.001" starttime="20210128 02:34:54.986"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:55.001" starttime="20210128 02:34:54.985"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:55.001" starttime="20210128 02:34:54.985"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:55.001" starttime="20210128 02:34:54.977"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:55.001" starttime="20210128 02:34:54.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:55.004" level="INFO">Running command 'ozone sh key list 79087-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:34:58.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:34:58.000" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210128 02:34:58.000" starttime="20210128 02:34:55.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:34:58.001" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210128 02:34:58.001" starttime="20210128 02:34:58.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:34:58.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:34:58.002" starttime="20210128 02:34:58.002"></status>
</kw>
<status status="PASS" endtime="20210128 02:34:58.003" starttime="20210128 02:34:55.002"></status>
</kw>
<msg timestamp="20210128 02:34:58.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:34:58.003" starttime="20210128 02:34:55.002"></status>
</kw>
<msg timestamp="20210128 02:34:58.003" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210128 02:34:58.003" starttime="20210128 02:34:55.001"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:34:58.007" level="INFO">Running command 'ozone sh key list 79087-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:01.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:01.432" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210128 02:35:01.432" starttime="20210128 02:34:58.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:01.433" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210128 02:35:01.433" starttime="20210128 02:35:01.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:01.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:01.433" starttime="20210128 02:35:01.433"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:01.434" starttime="20210128 02:34:58.004"></status>
</kw>
<msg timestamp="20210128 02:35:01.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:01.434" starttime="20210128 02:34:58.004"></status>
</kw>
<msg timestamp="20210128 02:35:01.434" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210128 02:35:01.434" starttime="20210128 02:34:58.003"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:01.435" starttime="20210128 02:35:01.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:01.435" starttime="20210128 02:35:01.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:01.435" starttime="20210128 02:35:01.435"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:35:01.436" critical="yes" starttime="20210128 02:34:54.976"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:01.441" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:01.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:01.443" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:35:01.443" starttime="20210128 02:35:01.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:01.444" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:35:01.444" starttime="20210128 02:35:01.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:01.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:01.445" starttime="20210128 02:35:01.445"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:01.445" starttime="20210128 02:35:01.438"></status>
</kw>
<msg timestamp="20210128 02:35:01.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:01.445" starttime="20210128 02:35:01.438"></status>
</kw>
<msg timestamp="20210128 02:35:01.446" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:35:01.446" starttime="20210128 02:35:01.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:35:01.446" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:35:01.446" starttime="20210128 02:35:01.446"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:01.450" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:01.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:01.461" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:01.461" starttime="20210128 02:35:01.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:01.462" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:01.462" starttime="20210128 02:35:01.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:01.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:01.463" starttime="20210128 02:35:01.462"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:01.463" starttime="20210128 02:35:01.448"></status>
</kw>
<msg timestamp="20210128 02:35:01.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:01.463" starttime="20210128 02:35:01.448"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:01.463" starttime="20210128 02:35:01.447"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:01.463" starttime="20210128 02:35:01.447"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:01.464" starttime="20210128 02:35:01.437"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:01.464" starttime="20210128 02:35:01.437"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:01.467" level="INFO">Running command 'ozone sh key delete 79087-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:04.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:04.624" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:04.624" starttime="20210128 02:35:01.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:04.625" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:04.625" starttime="20210128 02:35:04.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:04.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:04.626" starttime="20210128 02:35:04.625"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:04.626" starttime="20210128 02:35:01.465"></status>
</kw>
<msg timestamp="20210128 02:35:04.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:04.626" starttime="20210128 02:35:01.464"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:04.626" starttime="20210128 02:35:01.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:04.630" level="INFO">Running command 'ozone sh key list 79087-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:07.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:07.849" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210128 02:35:07.849" starttime="20210128 02:35:04.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:07.850" level="INFO">key1</msg>
<status status="PASS" endtime="20210128 02:35:07.850" starttime="20210128 02:35:07.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:07.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:07.851" starttime="20210128 02:35:07.851"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:07.851" starttime="20210128 02:35:04.627"></status>
</kw>
<msg timestamp="20210128 02:35:07.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:07.852" starttime="20210128 02:35:04.627"></status>
</kw>
<msg timestamp="20210128 02:35:07.852" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210128 02:35:07.852" starttime="20210128 02:35:04.626"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:07.852" starttime="20210128 02:35:07.852"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:35:07.853" critical="yes" starttime="20210128 02:35:01.436"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:07.857" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:07.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:07.859" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:35:07.859" starttime="20210128 02:35:07.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:07.860" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:35:07.860" starttime="20210128 02:35:07.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:07.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:07.861" starttime="20210128 02:35:07.860"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:07.861" starttime="20210128 02:35:07.855"></status>
</kw>
<msg timestamp="20210128 02:35:07.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:07.861" starttime="20210128 02:35:07.855"></status>
</kw>
<msg timestamp="20210128 02:35:07.861" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:35:07.861" starttime="20210128 02:35:07.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:35:07.862" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:35:07.862" starttime="20210128 02:35:07.862"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:07.866" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:07.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:07.876" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:07.876" starttime="20210128 02:35:07.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:07.877" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:07.877" starttime="20210128 02:35:07.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:07.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:07.878" starttime="20210128 02:35:07.877"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:07.878" starttime="20210128 02:35:07.863"></status>
</kw>
<msg timestamp="20210128 02:35:07.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:07.878" starttime="20210128 02:35:07.863"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:07.878" starttime="20210128 02:35:07.862"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:07.878" starttime="20210128 02:35:07.862"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:07.878" starttime="20210128 02:35:07.854"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:07.878" starttime="20210128 02:35:07.854"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:07.882" level="INFO">Running command 'ozone sh bucket list 79087-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:10.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:10.942" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210128 02:35:10.942" starttime="20210128 02:35:07.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:10.943" level="INFO">{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:34:25.943Z",
  "modificationTime" : "2021-01-28T02:34:25.943Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:34:08.238Z",
  "modificationTime" : "2021-01-28T02:34:22.949Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:34:32.309Z",
  "modificationTime" : "2021-01-28T02:34:32.309Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:34:02.521Z",
  "modificationTime" : "2021-01-28T02:34:20.098Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:34:05.376Z",
  "modificationTime" : "2021-01-28T02:34:05.376Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 02:35:10.943" starttime="20210128 02:35:10.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:10.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:10.944" starttime="20210128 02:35:10.943"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:10.944" starttime="20210128 02:35:07.880"></status>
</kw>
<msg timestamp="20210128 02:35:10.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:10.944" starttime="20210128 02:35:07.879"></status>
</kw>
<msg timestamp="20210128 02:35:10.945" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210128 02:35:10.945" starttime="20210128 02:35:07.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:10.945" starttime="20210128 02:35:10.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:10.946" starttime="20210128 02:35:10.945"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:35:10.946" critical="yes" starttime="20210128 02:35:07.853"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:10.951" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:10.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:10.954" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:35:10.954" starttime="20210128 02:35:10.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:10.955" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:35:10.955" starttime="20210128 02:35:10.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:10.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:10.955" starttime="20210128 02:35:10.955"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:10.955" starttime="20210128 02:35:10.949"></status>
</kw>
<msg timestamp="20210128 02:35:10.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:10.956" starttime="20210128 02:35:10.948"></status>
</kw>
<msg timestamp="20210128 02:35:10.956" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:35:10.956" starttime="20210128 02:35:10.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:35:10.956" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:35:10.956" starttime="20210128 02:35:10.956"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:10.960" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:10.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:10.970" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:10.970" starttime="20210128 02:35:10.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:10.971" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:10.971" starttime="20210128 02:35:10.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:10.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:10.971" starttime="20210128 02:35:10.971"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:10.972" starttime="20210128 02:35:10.958"></status>
</kw>
<msg timestamp="20210128 02:35:10.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:10.972" starttime="20210128 02:35:10.957"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:10.972" starttime="20210128 02:35:10.957"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:10.972" starttime="20210128 02:35:10.957"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:10.972" starttime="20210128 02:35:10.948"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:10.972" starttime="20210128 02:35:10.947"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:10.975" level="INFO">Running command 'ozone sh bucket info 79087-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:14.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:14.347" level="INFO">${output} = 79087-source bucket1</msg>
<status status="PASS" endtime="20210128 02:35:14.347" starttime="20210128 02:35:10.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:14.348" level="INFO">79087-source bucket1</msg>
<status status="PASS" endtime="20210128 02:35:14.348" starttime="20210128 02:35:14.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:14.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:14.348" starttime="20210128 02:35:14.348"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:14.349" starttime="20210128 02:35:10.973"></status>
</kw>
<msg timestamp="20210128 02:35:14.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:14.349" starttime="20210128 02:35:10.973"></status>
</kw>
<msg timestamp="20210128 02:35:14.349" level="INFO">${result} = 79087-source bucket1</msg>
<status status="PASS" endtime="20210128 02:35:14.349" starttime="20210128 02:35:10.973"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:14.350" starttime="20210128 02:35:14.349"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:35:14.350" critical="yes" starttime="20210128 02:35:10.947"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:14.356" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:14.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:14.358" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:35:14.358" starttime="20210128 02:35:14.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:14.359" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:35:14.359" starttime="20210128 02:35:14.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:14.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:14.360" starttime="20210128 02:35:14.359"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:14.360" starttime="20210128 02:35:14.353"></status>
</kw>
<msg timestamp="20210128 02:35:14.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:14.361" starttime="20210128 02:35:14.353"></status>
</kw>
<msg timestamp="20210128 02:35:14.361" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:35:14.361" starttime="20210128 02:35:14.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:35:14.361" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:35:14.361" starttime="20210128 02:35:14.361"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:14.365" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:14.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:14.376" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:14.377" starttime="20210128 02:35:14.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:14.378" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:14.378" starttime="20210128 02:35:14.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:14.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:14.378" starttime="20210128 02:35:14.378"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:14.378" starttime="20210128 02:35:14.363"></status>
</kw>
<msg timestamp="20210128 02:35:14.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:14.379" starttime="20210128 02:35:14.362"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:14.379" starttime="20210128 02:35:14.362"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:14.379" starttime="20210128 02:35:14.362"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:14.379" starttime="20210128 02:35:14.352"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:14.379" starttime="20210128 02:35:14.352"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:14.382" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 79087-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:17.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:17.323" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:35:17.323" starttime="20210128 02:35:14.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:17.324" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:35:17.325" starttime="20210128 02:35:17.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:17.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:17.325" starttime="20210128 02:35:17.325"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:17.325" starttime="20210128 02:35:14.380"></status>
</kw>
<msg timestamp="20210128 02:35:17.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:17.326" starttime="20210128 02:35:14.379"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:17.326" starttime="20210128 02:35:14.379"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:17.330" level="INFO">Running command 'ozone sh bucket getacl 79087-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:20.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:20.685" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210128 02:35:20.685" starttime="20210128 02:35:17.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:20.686" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210128 02:35:20.686" starttime="20210128 02:35:20.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:20.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:20.687" starttime="20210128 02:35:20.686"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:20.687" starttime="20210128 02:35:17.327"></status>
</kw>
<msg timestamp="20210128 02:35:20.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:20.687" starttime="20210128 02:35:17.327"></status>
</kw>
<msg timestamp="20210128 02:35:20.688" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210128 02:35:20.688" starttime="20210128 02:35:17.327"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:20.688" starttime="20210128 02:35:20.688"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:20.688" starttime="20210128 02:35:17.326"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:20.695" level="INFO">Running command 'ozone sh bucket getacl 79087-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:23.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:23.651" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:23.651" starttime="20210128 02:35:20.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:23.652" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:23.652" starttime="20210128 02:35:23.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:23.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:23.652" starttime="20210128 02:35:23.652"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:23.652" starttime="20210128 02:35:20.690"></status>
</kw>
<msg timestamp="20210128 02:35:23.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:23.653" starttime="20210128 02:35:20.690"></status>
</kw>
<msg timestamp="20210128 02:35:23.653" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210128 02:35:23.653" starttime="20210128 02:35:20.689"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:23.653" starttime="20210128 02:35:23.653"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:23.654" starttime="20210128 02:35:20.688"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:23.657" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 79087-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:26.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:26.332" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:35:26.332" starttime="20210128 02:35:23.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:26.333" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210128 02:35:26.333" starttime="20210128 02:35:26.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:26.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:26.334" starttime="20210128 02:35:26.333"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:26.334" starttime="20210128 02:35:23.655"></status>
</kw>
<msg timestamp="20210128 02:35:26.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:26.334" starttime="20210128 02:35:23.654"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:26.334" starttime="20210128 02:35:23.654"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:26.338" level="INFO">Running command 'ozone sh bucket getacl 79087-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:29.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:29.267" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:29.267" starttime="20210128 02:35:26.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:29.268" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:29.268" starttime="20210128 02:35:29.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:29.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:29.269" starttime="20210128 02:35:29.268"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:29.269" starttime="20210128 02:35:26.336"></status>
</kw>
<msg timestamp="20210128 02:35:29.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:29.269" starttime="20210128 02:35:26.336"></status>
</kw>
<msg timestamp="20210128 02:35:29.269" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210128 02:35:29.270" starttime="20210128 02:35:26.335"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:29.270" starttime="20210128 02:35:29.270"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:29.270" starttime="20210128 02:35:26.334"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:29.274" level="INFO">Running command 'ozone sh bucket getacl 79087-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:32.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:32.568" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210128 02:35:32.569" starttime="20210128 02:35:29.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:32.570" level="INFO">READ</msg>
<status status="PASS" endtime="20210128 02:35:32.570" starttime="20210128 02:35:32.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:32.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:32.570" starttime="20210128 02:35:32.570"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:32.571" starttime="20210128 02:35:29.272"></status>
</kw>
<msg timestamp="20210128 02:35:32.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:32.571" starttime="20210128 02:35:29.272"></status>
</kw>
<msg timestamp="20210128 02:35:32.571" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210128 02:35:32.571" starttime="20210128 02:35:29.271"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:32.571" starttime="20210128 02:35:32.571"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:32.571" starttime="20210128 02:35:29.270"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:35:32.572" critical="yes" starttime="20210128 02:35:14.351"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:32.576" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:32.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:32.579" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:35:32.579" starttime="20210128 02:35:32.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:32.580" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:35:32.580" starttime="20210128 02:35:32.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:32.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:32.580" starttime="20210128 02:35:32.580"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:32.580" starttime="20210128 02:35:32.574"></status>
</kw>
<msg timestamp="20210128 02:35:32.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:32.581" starttime="20210128 02:35:32.574"></status>
</kw>
<msg timestamp="20210128 02:35:32.581" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:35:32.581" starttime="20210128 02:35:32.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:35:32.581" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:35:32.581" starttime="20210128 02:35:32.581"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:32.584" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:32.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:32.603" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:32.603" starttime="20210128 02:35:32.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:32.604" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:32.604" starttime="20210128 02:35:32.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:32.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:32.605" starttime="20210128 02:35:32.604"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:32.605" starttime="20210128 02:35:32.582"></status>
</kw>
<msg timestamp="20210128 02:35:32.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:32.605" starttime="20210128 02:35:32.582"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:32.605" starttime="20210128 02:35:32.582"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:32.605" starttime="20210128 02:35:32.581"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:32.605" starttime="20210128 02:35:32.573"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:32.605" starttime="20210128 02:35:32.573"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:32.608" level="INFO">Running command 'ozone sh bucket link 79087-source/bucket2 79087-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:35.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:35.507" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:35.507" starttime="20210128 02:35:32.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:35.508" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:35.508" starttime="20210128 02:35:35.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:35.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:35.509" starttime="20210128 02:35:35.508"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:35.509" starttime="20210128 02:35:32.606"></status>
</kw>
<msg timestamp="20210128 02:35:35.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:35.509" starttime="20210128 02:35:32.606"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:35.509" starttime="20210128 02:35:32.606"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:35.512" level="INFO">Running command 'ozone sh bucket create 79087-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:38.503" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 02:35:38.503" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210128 02:35:38.503" starttime="20210128 02:35:35.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:38.504" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210128 02:35:38.504" starttime="20210128 02:35:38.503"></status>
</kw>
<msg timestamp="20210128 02:35:38.504" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210128 02:35:38.504" starttime="20210128 02:35:35.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:38.505" starttime="20210128 02:35:38.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:38.509" level="INFO">Running command 'ozone sh bucket create 79087-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:41.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:41.418" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:41.418" starttime="20210128 02:35:38.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:41.419" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:41.419" starttime="20210128 02:35:41.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:41.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:41.420" starttime="20210128 02:35:41.420"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:41.420" starttime="20210128 02:35:38.506"></status>
</kw>
<msg timestamp="20210128 02:35:41.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:41.421" starttime="20210128 02:35:38.506"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:41.421" starttime="20210128 02:35:38.505"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:41.424" level="INFO">Running command 'ozone sh bucket link 79087-source/bucket1 79087-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:44.347" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 02:35:44.347" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210128 02:35:44.347" starttime="20210128 02:35:41.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:44.348" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210128 02:35:44.348" starttime="20210128 02:35:44.347"></status>
</kw>
<msg timestamp="20210128 02:35:44.348" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210128 02:35:44.348" starttime="20210128 02:35:41.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:44.349" starttime="20210128 02:35:44.348"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:35:44.349" critical="yes" starttime="20210128 02:35:32.572"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:44.358" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:44.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:44.360" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:35:44.360" starttime="20210128 02:35:44.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:44.361" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:35:44.361" starttime="20210128 02:35:44.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:44.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:44.362" starttime="20210128 02:35:44.361"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.362" starttime="20210128 02:35:44.355"></status>
</kw>
<msg timestamp="20210128 02:35:44.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:44.362" starttime="20210128 02:35:44.355"></status>
</kw>
<msg timestamp="20210128 02:35:44.362" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:35:44.363" starttime="20210128 02:35:44.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:35:44.363" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:35:44.363" starttime="20210128 02:35:44.363"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:44.366" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:44.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:44.378" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:44.378" starttime="20210128 02:35:44.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:44.379" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:44.379" starttime="20210128 02:35:44.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:44.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:44.380" starttime="20210128 02:35:44.380"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.380" starttime="20210128 02:35:44.364"></status>
</kw>
<msg timestamp="20210128 02:35:44.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:44.380" starttime="20210128 02:35:44.364"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.380" starttime="20210128 02:35:44.364"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.380" starttime="20210128 02:35:44.363"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.381" starttime="20210128 02:35:44.354"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.381" starttime="20210128 02:35:44.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:44.385" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:44.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:44.388" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:44.388" starttime="20210128 02:35:44.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:44.389" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:44.389" starttime="20210128 02:35:44.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:44.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:44.389" starttime="20210128 02:35:44.389"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.389" starttime="20210128 02:35:44.382"></status>
</kw>
<msg timestamp="20210128 02:35:44.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:44.390" starttime="20210128 02:35:44.382"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.390" starttime="20210128 02:35:44.382"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:44.393" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:44.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:44.395" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:35:44.395" starttime="20210128 02:35:44.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:44.396" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:35:44.396" starttime="20210128 02:35:44.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:44.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:44.396" starttime="20210128 02:35:44.396"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.396" starttime="20210128 02:35:44.391"></status>
</kw>
<msg timestamp="20210128 02:35:44.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:44.396" starttime="20210128 02:35:44.391"></status>
</kw>
<msg timestamp="20210128 02:35:44.397" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:35:44.397" starttime="20210128 02:35:44.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:35:44.397" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:35:44.397" starttime="20210128 02:35:44.397"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:44.401" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:44.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:44.412" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:44.412" starttime="20210128 02:35:44.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:44.412" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:44.412" starttime="20210128 02:35:44.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:44.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:44.413" starttime="20210128 02:35:44.412"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.413" starttime="20210128 02:35:44.399"></status>
</kw>
<msg timestamp="20210128 02:35:44.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:44.414" starttime="20210128 02:35:44.398"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.414" starttime="20210128 02:35:44.398"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.414" starttime="20210128 02:35:44.397"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.414" starttime="20210128 02:35:44.390"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:44.414" starttime="20210128 02:35:44.390"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:44.416" level="INFO">Running command 'ozone sh key list 79087-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:47.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:47.490" level="INFO">${output} = {
  "volumeName" : "79087-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-28T02:33:54.449Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210128 02:35:47.490" starttime="20210128 02:35:44.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:47.491" level="INFO">{
  "volumeName" : "79087-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-28T02:33:54.449Z",
  "modificationTime" : "2021-01-28T02:33:56.121Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210128 02:35:47.491" starttime="20210128 02:35:47.491"></status>
</kw>
<msg timestamp="20210128 02:35:47.492" level="INFO">${result} = {
  "volumeName" : "79087-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-28T02:33:54.449Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210128 02:35:47.492" starttime="20210128 02:35:44.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:47.492" starttime="20210128 02:35:47.492"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.493" starttime="20210128 02:35:44.381"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.493" starttime="20210128 02:35:44.381"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:35:47.493" critical="yes" starttime="20210128 02:35:44.353"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:47.499" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:47.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:47.501" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:35:47.501" starttime="20210128 02:35:47.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:47.502" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:35:47.502" starttime="20210128 02:35:47.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:47.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:47.503" starttime="20210128 02:35:47.502"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.503" starttime="20210128 02:35:47.496"></status>
</kw>
<msg timestamp="20210128 02:35:47.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:47.503" starttime="20210128 02:35:47.496"></status>
</kw>
<msg timestamp="20210128 02:35:47.503" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:35:47.503" starttime="20210128 02:35:47.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:35:47.504" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:35:47.504" starttime="20210128 02:35:47.504"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:47.507" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:47.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:47.519" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:47.520" starttime="20210128 02:35:47.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:47.520" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:47.520" starttime="20210128 02:35:47.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:47.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:47.521" starttime="20210128 02:35:47.520"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.521" starttime="20210128 02:35:47.505"></status>
</kw>
<msg timestamp="20210128 02:35:47.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:47.521" starttime="20210128 02:35:47.505"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.521" starttime="20210128 02:35:47.504"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.521" starttime="20210128 02:35:47.504"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.522" starttime="20210128 02:35:47.495"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.522" starttime="20210128 02:35:47.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:47.526" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:47.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:47.529" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:47.529" starttime="20210128 02:35:47.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:47.530" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:47.530" starttime="20210128 02:35:47.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:47.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:47.530" starttime="20210128 02:35:47.530"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.531" starttime="20210128 02:35:47.524"></status>
</kw>
<msg timestamp="20210128 02:35:47.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:47.531" starttime="20210128 02:35:47.523"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.531" starttime="20210128 02:35:47.523"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:47.535" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:47.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:47.537" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:35:47.537" starttime="20210128 02:35:47.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:47.537" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:35:47.538" starttime="20210128 02:35:47.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:47.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:47.538" starttime="20210128 02:35:47.538"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.538" starttime="20210128 02:35:47.532"></status>
</kw>
<msg timestamp="20210128 02:35:47.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:47.539" starttime="20210128 02:35:47.532"></status>
</kw>
<msg timestamp="20210128 02:35:47.539" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:35:47.539" starttime="20210128 02:35:47.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:35:47.540" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:35:47.540" starttime="20210128 02:35:47.539"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:47.543" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:47.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:47.554" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:47.554" starttime="20210128 02:35:47.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:47.555" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:47.555" starttime="20210128 02:35:47.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:47.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:47.556" starttime="20210128 02:35:47.555"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.556" starttime="20210128 02:35:47.541"></status>
</kw>
<msg timestamp="20210128 02:35:47.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:47.556" starttime="20210128 02:35:47.541"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.557" starttime="20210128 02:35:47.540"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.557" starttime="20210128 02:35:47.540"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.557" starttime="20210128 02:35:47.532"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:47.557" starttime="20210128 02:35:47.531"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:47.559" level="INFO">Running command 'ozone sh key list 79087-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:50.331" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 02:35:50.332" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 79087-target unreadable-link null</msg>
<status status="PASS" endtime="20210128 02:35:50.332" starttime="20210128 02:35:47.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:50.333" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 79087-target unreadable-link null</msg>
<status status="PASS" endtime="20210128 02:35:50.333" starttime="20210128 02:35:50.332"></status>
</kw>
<msg timestamp="20210128 02:35:50.333" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 79087-target unreadable-link null</msg>
<status status="PASS" endtime="20210128 02:35:50.333" starttime="20210128 02:35:47.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:50.334" starttime="20210128 02:35:50.333"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.334" starttime="20210128 02:35:47.522"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.334" starttime="20210128 02:35:47.522"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:35:50.334" critical="yes" starttime="20210128 02:35:47.494"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:50.339" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:50.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:50.341" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:35:50.342" starttime="20210128 02:35:50.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:50.342" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:35:50.342" starttime="20210128 02:35:50.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:50.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:50.343" starttime="20210128 02:35:50.342"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.343" starttime="20210128 02:35:50.337"></status>
</kw>
<msg timestamp="20210128 02:35:50.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:50.343" starttime="20210128 02:35:50.337"></status>
</kw>
<msg timestamp="20210128 02:35:50.343" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:35:50.343" starttime="20210128 02:35:50.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:35:50.344" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:35:50.344" starttime="20210128 02:35:50.343"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:50.347" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:50.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:50.358" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:50.358" starttime="20210128 02:35:50.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:50.358" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:50.358" starttime="20210128 02:35:50.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:50.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:50.359" starttime="20210128 02:35:50.359"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.359" starttime="20210128 02:35:50.345"></status>
</kw>
<msg timestamp="20210128 02:35:50.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:50.359" starttime="20210128 02:35:50.345"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.360" starttime="20210128 02:35:50.344"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.360" starttime="20210128 02:35:50.344"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.360" starttime="20210128 02:35:50.336"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.360" starttime="20210128 02:35:50.335"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:50.363" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:50.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:50.366" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:50.366" starttime="20210128 02:35:50.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:50.367" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:50.367" starttime="20210128 02:35:50.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:50.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:50.368" starttime="20210128 02:35:50.367"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.368" starttime="20210128 02:35:50.361"></status>
</kw>
<msg timestamp="20210128 02:35:50.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:50.368" starttime="20210128 02:35:50.361"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.368" starttime="20210128 02:35:50.361"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:50.372" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:50.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:50.373" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:35:50.374" starttime="20210128 02:35:50.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:50.374" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:35:50.374" starttime="20210128 02:35:50.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:50.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:50.375" starttime="20210128 02:35:50.374"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.375" starttime="20210128 02:35:50.369"></status>
</kw>
<msg timestamp="20210128 02:35:50.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:50.375" starttime="20210128 02:35:50.369"></status>
</kw>
<msg timestamp="20210128 02:35:50.375" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:35:50.375" starttime="20210128 02:35:50.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:35:50.376" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:35:50.376" starttime="20210128 02:35:50.375"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:50.379" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:50.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:50.389" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:50.389" starttime="20210128 02:35:50.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:50.389" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:50.390" starttime="20210128 02:35:50.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:50.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:50.390" starttime="20210128 02:35:50.390"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.390" starttime="20210128 02:35:50.377"></status>
</kw>
<msg timestamp="20210128 02:35:50.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:50.390" starttime="20210128 02:35:50.377"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.391" starttime="20210128 02:35:50.376"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.391" starttime="20210128 02:35:50.376"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.391" starttime="20210128 02:35:50.369"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:50.391" starttime="20210128 02:35:50.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:50.394" level="INFO">Running command 'ozone sh bucket info 79087-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:53.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:53.665" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210128 02:35:53.665" starttime="20210128 02:35:50.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:53.666" level="INFO">{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:34:08.238Z",
  "modificationTime" : "2021-01-28T02:34:22.949Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 02:35:53.666" starttime="20210128 02:35:53.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:53.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:53.666" starttime="20210128 02:35:53.666"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:53.667" starttime="20210128 02:35:50.392"></status>
</kw>
<msg timestamp="20210128 02:35:53.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:53.667" starttime="20210128 02:35:50.392"></status>
</kw>
<msg timestamp="20210128 02:35:53.667" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210128 02:35:53.667" starttime="20210128 02:35:50.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:53.667" starttime="20210128 02:35:53.667"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:53.668" starttime="20210128 02:35:53.667"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:53.670" level="INFO">Running command 'ozone sh key list 79087-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:56.437" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 02:35:56.437" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 79087-source unreadable-bucket </msg>
<status status="PASS" endtime="20210128 02:35:56.437" starttime="20210128 02:35:53.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:56.438" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 79087-source unreadable-bucket </msg>
<status status="PASS" endtime="20210128 02:35:56.438" starttime="20210128 02:35:56.437"></status>
</kw>
<msg timestamp="20210128 02:35:56.438" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 79087-source unreadable-bucket </msg>
<status status="PASS" endtime="20210128 02:35:56.438" starttime="20210128 02:35:53.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210128 02:35:56.438" starttime="20210128 02:35:56.438"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:56.439" starttime="20210128 02:35:50.360"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:56.439" starttime="20210128 02:35:50.360"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:35:56.439" critical="yes" starttime="20210128 02:35:50.335"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:56.444" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:56.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:56.447" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:35:56.447" starttime="20210128 02:35:56.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:56.448" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:35:56.448" starttime="20210128 02:35:56.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:56.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:56.448" starttime="20210128 02:35:56.448"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:56.448" starttime="20210128 02:35:56.442"></status>
</kw>
<msg timestamp="20210128 02:35:56.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:56.448" starttime="20210128 02:35:56.442"></status>
</kw>
<msg timestamp="20210128 02:35:56.449" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:35:56.449" starttime="20210128 02:35:56.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:35:56.449" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:35:56.449" starttime="20210128 02:35:56.449"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:56.452" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:56.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:56.462" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:56.462" starttime="20210128 02:35:56.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:56.463" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:56.463" starttime="20210128 02:35:56.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:56.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:56.464" starttime="20210128 02:35:56.463"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:56.464" starttime="20210128 02:35:56.450"></status>
</kw>
<msg timestamp="20210128 02:35:56.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:56.464" starttime="20210128 02:35:56.450"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:56.464" starttime="20210128 02:35:56.449"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:56.464" starttime="20210128 02:35:56.449"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:56.465" starttime="20210128 02:35:56.441"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:56.465" starttime="20210128 02:35:56.441"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:56.468" level="INFO">Running command 'ozone sh bucket link 79087-target/loop1 79087-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:35:59.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:35:59.756" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:35:59.756" starttime="20210128 02:35:56.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:35:59.758" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:35:59.758" starttime="20210128 02:35:59.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:35:59.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:35:59.758" starttime="20210128 02:35:59.758"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:59.759" starttime="20210128 02:35:56.465"></status>
</kw>
<msg timestamp="20210128 02:35:59.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:35:59.759" starttime="20210128 02:35:56.465"></status>
</kw>
<status status="PASS" endtime="20210128 02:35:59.759" starttime="20210128 02:35:56.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:35:59.763" level="INFO">Running command 'ozone sh bucket link 79087-target/loop2 79087-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:02.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:02.962" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:36:02.962" starttime="20210128 02:35:59.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:02.963" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:36:02.963" starttime="20210128 02:36:02.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:02.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:02.963" starttime="20210128 02:36:02.963"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:02.964" starttime="20210128 02:35:59.760"></status>
</kw>
<msg timestamp="20210128 02:36:02.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:02.964" starttime="20210128 02:35:59.760"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:02.964" starttime="20210128 02:35:59.759"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:02.967" level="INFO">Running command 'ozone sh bucket link 79087-target/loop3 79087-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:05.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:05.901" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:36:05.901" starttime="20210128 02:36:02.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:05.902" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:36:05.902" starttime="20210128 02:36:05.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:05.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:05.903" starttime="20210128 02:36:05.902"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:05.903" starttime="20210128 02:36:02.965"></status>
</kw>
<msg timestamp="20210128 02:36:05.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:05.903" starttime="20210128 02:36:02.965"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:05.903" starttime="20210128 02:36:02.964"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:05.906" level="INFO">Running command 'ozone sh key list 79087-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:08.768" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 02:36:08.768" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210128 02:36:08.768" starttime="20210128 02:36:05.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:08.769" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210128 02:36:08.769" starttime="20210128 02:36:08.769"></status>
</kw>
<msg timestamp="20210128 02:36:08.770" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210128 02:36:08.770" starttime="20210128 02:36:05.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210128 02:36:08.770" starttime="20210128 02:36:08.770"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:36:08.770" critical="yes" starttime="20210128 02:35:56.440"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:08.776" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:08.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:08.779" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:36:08.779" starttime="20210128 02:36:08.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:08.779" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:36:08.780" starttime="20210128 02:36:08.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:08.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:08.780" starttime="20210128 02:36:08.780"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:08.780" starttime="20210128 02:36:08.773"></status>
</kw>
<msg timestamp="20210128 02:36:08.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:08.780" starttime="20210128 02:36:08.773"></status>
</kw>
<msg timestamp="20210128 02:36:08.781" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:36:08.781" starttime="20210128 02:36:08.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:36:08.781" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:36:08.781" starttime="20210128 02:36:08.781"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:08.784" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:08.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:08.796" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:36:08.796" starttime="20210128 02:36:08.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:08.797" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:36:08.797" starttime="20210128 02:36:08.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:08.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:08.797" starttime="20210128 02:36:08.797"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:08.798" starttime="20210128 02:36:08.782"></status>
</kw>
<msg timestamp="20210128 02:36:08.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:08.798" starttime="20210128 02:36:08.782"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:08.798" starttime="20210128 02:36:08.782"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:08.798" starttime="20210128 02:36:08.781"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:08.798" starttime="20210128 02:36:08.772"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:08.798" starttime="20210128 02:36:08.772"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:08.801" level="INFO">Running command 'ozone sh bucket link 79087-source/bucket1 79087-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:11.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:11.537" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:36:11.537" starttime="20210128 02:36:08.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:11.538" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:36:11.538" starttime="20210128 02:36:11.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:11.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:11.538" starttime="20210128 02:36:11.538"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:11.539" starttime="20210128 02:36:08.799"></status>
</kw>
<msg timestamp="20210128 02:36:11.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:11.539" starttime="20210128 02:36:08.799"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:11.539" starttime="20210128 02:36:08.798"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:11.542" level="INFO">Running command 'ozone sh key put 79087-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:16.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:16.600" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:36:16.600" starttime="20210128 02:36:11.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:16.601" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:36:16.602" starttime="20210128 02:36:16.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:16.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:16.602" starttime="20210128 02:36:16.602"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:16.603" starttime="20210128 02:36:11.540"></status>
</kw>
<msg timestamp="20210128 02:36:16.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:16.603" starttime="20210128 02:36:11.540"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:16.603" starttime="20210128 02:36:11.539"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210128 02:36:16.605" level="INFO">${postfix} = 20875</msg>
<status status="PASS" endtime="20210128 02:36:16.605" starttime="20210128 02:36:16.604"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210128 02:36:16.605" level="INFO">${tmpfile} = /tmp/tempkey-20875</msg>
<status status="PASS" endtime="20210128 02:36:16.605" starttime="20210128 02:36:16.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:16.608" level="INFO">Running command 'ozone sh key get -f 79087-target/link1/key3 /tmp/tempkey-20875 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:20.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:20.882" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:36:20.882" starttime="20210128 02:36:16.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:20.883" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:36:20.883" starttime="20210128 02:36:20.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:20.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:20.884" starttime="20210128 02:36:20.883"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:20.884" starttime="20210128 02:36:16.606"></status>
</kw>
<msg timestamp="20210128 02:36:20.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:20.884" starttime="20210128 02:36:16.606"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:20.885" starttime="20210128 02:36:16.605"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210128 02:36:20.887" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-20875 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:20.889" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210128 02:36:20.889" starttime="20210128 02:36:20.885"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:20.892" level="INFO">Running command 'rm -f /tmp/tempkey-20875 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:20.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:20.894" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:36:20.895" starttime="20210128 02:36:20.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:20.895" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:36:20.895" starttime="20210128 02:36:20.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:20.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:20.896" starttime="20210128 02:36:20.896"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:20.896" starttime="20210128 02:36:20.890"></status>
</kw>
<msg timestamp="20210128 02:36:20.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:20.897" starttime="20210128 02:36:20.890"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:20.897" starttime="20210128 02:36:20.889"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:36:20.897" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210128 02:36:20.897" starttime="20210128 02:36:20.897"></status>
</kw>
<msg timestamp="20210128 02:36:20.898" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210128 02:36:20.898" starttime="20210128 02:36:16.604"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:36:20.899" starttime="20210128 02:36:20.898"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:20.899" starttime="20210128 02:36:16.603"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:36:20.899" critical="yes" starttime="20210128 02:36:08.771"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:20.904" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:20.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:20.907" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210128 02:36:20.907" starttime="20210128 02:36:20.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:20.908" level="INFO">scm</msg>
<status status="PASS" endtime="20210128 02:36:20.908" starttime="20210128 02:36:20.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:20.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:20.909" starttime="20210128 02:36:20.908"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:20.909" starttime="20210128 02:36:20.902"></status>
</kw>
<msg timestamp="20210128 02:36:20.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:20.909" starttime="20210128 02:36:20.902"></status>
</kw>
<msg timestamp="20210128 02:36:20.910" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210128 02:36:20.910" starttime="20210128 02:36:20.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210128 02:36:20.910" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210128 02:36:20.910" starttime="20210128 02:36:20.910"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:20.914" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:20.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:20.926" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:36:20.926" starttime="20210128 02:36:20.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:20.927" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:36:20.927" starttime="20210128 02:36:20.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:20.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:20.927" starttime="20210128 02:36:20.927"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:20.928" starttime="20210128 02:36:20.911"></status>
</kw>
<msg timestamp="20210128 02:36:20.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:20.928" starttime="20210128 02:36:20.911"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:20.928" starttime="20210128 02:36:20.911"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:20.928" starttime="20210128 02:36:20.910"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:20.928" starttime="20210128 02:36:20.901"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:20.928" starttime="20210128 02:36:20.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:20.934" level="INFO">Running command 'ozone sh bucket delete 79087-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:23.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:23.921" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:36:23.921" starttime="20210128 02:36:20.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:23.921" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:36:23.922" starttime="20210128 02:36:23.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:23.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:23.922" starttime="20210128 02:36:23.922"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:23.925" starttime="20210128 02:36:20.929"></status>
</kw>
<msg timestamp="20210128 02:36:23.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:23.925" starttime="20210128 02:36:20.929"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:23.925" starttime="20210128 02:36:20.928"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:23.932" level="INFO">Running command 'ozone sh bucket list 79087-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:27.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:27.093" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T...</msg>
<status status="PASS" endtime="20210128 02:36:27.093" starttime="20210128 02:36:23.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:27.094" level="INFO">{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:35:41.314Z",
  "modificationTime" : "2021-01-28T02:35:41.314Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:34:25.943Z",
  "modificationTime" : "2021-01-28T02:34:25.943Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:34:08.238Z",
  "modificationTime" : "2021-01-28T02:34:22.949Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:35:35.442Z",
  "modificationTime" : "2021-01-28T02:35:35.442Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:36:11.390Z",
  "modificationTime" : "2021-01-28T02:36:11.390Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:36:05.752Z",
  "modificationTime" : "2021-01-28T02:36:05.752Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:35:59.676Z",
  "modificationTime" : "2021-01-28T02:35:59.676Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:36:02.831Z",
  "modificationTime" : "2021-01-28T02:36:02.831Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:34:02.521Z",
  "modificationTime" : "2021-01-28T02:34:20.098Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:34:05.376Z",
  "modificationTime" : "2021-01-28T02:34:05.376Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "79087-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 02:36:27.095" starttime="20210128 02:36:27.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:27.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:27.095" starttime="20210128 02:36:27.095"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:27.095" starttime="20210128 02:36:23.926"></status>
</kw>
<msg timestamp="20210128 02:36:27.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:27.096" starttime="20210128 02:36:23.926"></status>
</kw>
<msg timestamp="20210128 02:36:27.096" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "79087-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T...</msg>
<status status="PASS" endtime="20210128 02:36:27.096" starttime="20210128 02:36:23.925"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210128 02:36:27.096" starttime="20210128 02:36:27.096"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:36:27.105" level="INFO">Running command 'ozone sh key list 79087-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:36:30.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:36:30.260" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210128 02:36:30.260" starttime="20210128 02:36:27.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:36:30.261" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210128 02:36:30.261" starttime="20210128 02:36:30.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:36:30.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:36:30.262" starttime="20210128 02:36:30.262"></status>
</kw>
<status status="PASS" endtime="20210128 02:36:30.262" starttime="20210128 02:36:27.098"></status>
</kw>
<msg timestamp="20210128 02:36:30.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:36:30.262" starttime="20210128 02:36:27.097"></status>
</kw>
<msg timestamp="20210128 02:36:30.263" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210128 02:36:30.263" starttime="20210128 02:36:27.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210128 02:36:30.263" starttime="20210128 02:36:30.263"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:36:30.264" critical="yes" starttime="20210128 02:36:20.900"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210128 02:36:30.266" starttime="20210128 02:33:41.796"></status>
</suite>
<status status="PASS" elapsedtime="194374" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
