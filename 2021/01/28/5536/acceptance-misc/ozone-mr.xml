<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210128 02:11:11.840" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:58:30.680" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:58:32.626" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 01:58:32.626" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 01:58:32.626" starttime="20210128 01:58:30.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:58:32.627" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 01:58:32.627" starttime="20210128 01:58:32.626"></status>
</kw>
<msg timestamp="20210128 01:58:32.627" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 01:58:32.627" starttime="20210128 01:58:30.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:58:32.632" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:58:34.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:58:34.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 01:58:34.488" starttime="20210128 01:58:32.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:58:34.489" level="INFO"></msg>
<status status="PASS" endtime="20210128 01:58:34.489" starttime="20210128 01:58:34.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:58:34.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:58:34.490" starttime="20210128 01:58:34.489"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:34.490" starttime="20210128 01:58:32.629"></status>
</kw>
<msg timestamp="20210128 01:58:34.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:58:34.490" starttime="20210128 01:58:32.629"></status>
</kw>
<msg timestamp="20210128 01:58:34.490" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210128 01:58:34.490" starttime="20210128 01:58:32.628"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210128 01:58:34.491" starttime="20210128 01:58:34.490"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:34.491" starttime="20210128 01:58:32.628"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:34.491" starttime="20210128 01:58:32.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:58:34.496" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:58:36.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:58:36.363" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 01:58:36.363" starttime="20210128 01:58:34.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:58:36.365" level="INFO"></msg>
<status status="PASS" endtime="20210128 01:58:36.365" starttime="20210128 01:58:36.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:58:36.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:58:36.366" starttime="20210128 01:58:36.365"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:36.366" starttime="20210128 01:58:34.493"></status>
</kw>
<msg timestamp="20210128 01:58:36.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:58:36.366" starttime="20210128 01:58:34.492"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:36.366" starttime="20210128 01:58:34.492"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:36.366" starttime="20210128 01:58:34.491"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:36.366" starttime="20210128 01:58:34.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210128 01:58:36.367" starttime="20210128 01:58:36.367"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:58:36.371" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:58:38.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:58:38.350" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T01:58...</msg>
<status status="PASS" endtime="20210128 01:58:38.350" starttime="20210128 01:58:36.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:58:38.351" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T01:58:36.311Z",
  "modificationTime" : "2021-01-28T01:58:36.311Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 01:58:38.351" starttime="20210128 01:58:38.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:58:38.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:58:38.351" starttime="20210128 01:58:38.351"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:38.352" starttime="20210128 01:58:36.368"></status>
</kw>
<msg timestamp="20210128 01:58:38.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:58:38.352" starttime="20210128 01:58:36.368"></status>
</kw>
<msg timestamp="20210128 01:58:38.352" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T01:58...</msg>
<status status="PASS" endtime="20210128 01:58:38.352" starttime="20210128 01:58:36.367"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210128 01:58:38.352" starttime="20210128 01:58:38.352"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 01:58:38.356" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 01:58:38.356" starttime="20210128 01:58:38.356"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 01:58:38.357" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 01:58:38.357" starttime="20210128 01:58:38.357"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:38.357" starttime="20210128 01:58:38.355"></status>
</kw>
<msg timestamp="20210128 01:58:38.357" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 01:58:38.357" starttime="20210128 01:58:38.355"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:38.358" starttime="20210128 01:58:38.354"></status>
</kw>
<msg timestamp="20210128 01:58:38.358" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 01:58:38.358" starttime="20210128 01:58:38.353"></status>
</kw>
<msg timestamp="20210128 01:58:38.358" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 01:58:38.358" starttime="20210128 01:58:38.353"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:58:38.361" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:58:40.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:58:40.351" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 01:58:40.351" starttime="20210128 01:58:38.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:58:40.352" level="INFO"></msg>
<status status="PASS" endtime="20210128 01:58:40.352" starttime="20210128 01:58:40.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:58:40.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:58:40.353" starttime="20210128 01:58:40.352"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:40.353" starttime="20210128 01:58:38.359"></status>
</kw>
<msg timestamp="20210128 01:58:40.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:58:40.353" starttime="20210128 01:58:38.359"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:40.353" starttime="20210128 01:58:38.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:58:40.357" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:58:45.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:58:45.343" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 01:58:45.343" starttime="20210128 01:58:40.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:58:45.344" level="INFO"></msg>
<status status="PASS" endtime="20210128 01:58:45.344" starttime="20210128 01:58:45.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:58:45.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:58:45.345" starttime="20210128 01:58:45.344"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:45.345" starttime="20210128 01:58:40.354"></status>
</kw>
<msg timestamp="20210128 01:58:45.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:58:45.345" starttime="20210128 01:58:40.354"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:45.346" starttime="20210128 01:58:40.353"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:58:45.349" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:58:48.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:58:48.728" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 01:58:48.728" starttime="20210128 01:58:45.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:58:48.729" level="INFO"></msg>
<status status="PASS" endtime="20210128 01:58:48.729" starttime="20210128 01:58:48.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:58:48.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:58:48.729" starttime="20210128 01:58:48.729"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:48.730" starttime="20210128 01:58:45.347"></status>
</kw>
<msg timestamp="20210128 01:58:48.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:58:48.730" starttime="20210128 01:58:45.346"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:48.730" starttime="20210128 01:58:45.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:58:48.734" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:58:52.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:58:52.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 01:58:52.259" starttime="20210128 01:58:48.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:58:52.260" level="INFO"></msg>
<status status="PASS" endtime="20210128 01:58:52.260" starttime="20210128 01:58:52.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:58:52.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:58:52.261" starttime="20210128 01:58:52.261"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:52.261" starttime="20210128 01:58:48.731"></status>
</kw>
<msg timestamp="20210128 01:58:52.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:58:52.262" starttime="20210128 01:58:48.731"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:52.262" starttime="20210128 01:58:48.730"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 01:58:52.262" critical="yes" starttime="20210128 01:58:30.675"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 01:58:52.267" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 01:58:52.267" starttime="20210128 01:58:52.267"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 01:58:52.267" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 01:58:52.267" starttime="20210128 01:58:52.267"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:52.268" starttime="20210128 01:58:52.266"></status>
</kw>
<msg timestamp="20210128 01:58:52.268" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 01:58:52.268" starttime="20210128 01:58:52.266"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:52.268" starttime="20210128 01:58:52.265"></status>
</kw>
<msg timestamp="20210128 01:58:52.268" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 01:58:52.268" starttime="20210128 01:58:52.264"></status>
</kw>
<msg timestamp="20210128 01:58:52.268" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 01:58:52.268" starttime="20210128 01:58:52.264"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:58:52.271" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:58:54.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:58:54.229" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 01:58:54.229" starttime="20210128 01:58:52.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:58:54.230" level="INFO"></msg>
<status status="PASS" endtime="20210128 01:58:54.230" starttime="20210128 01:58:54.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:58:54.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:58:54.231" starttime="20210128 01:58:54.231"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:54.231" starttime="20210128 01:58:52.269"></status>
</kw>
<msg timestamp="20210128 01:58:54.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:58:54.232" starttime="20210128 01:58:52.269"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:54.232" starttime="20210128 01:58:52.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:58:54.235" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:58:56.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:58:56.239" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 01:58:56.239" starttime="20210128 01:58:54.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:58:56.240" level="INFO"></msg>
<status status="PASS" endtime="20210128 01:58:56.241" starttime="20210128 01:58:56.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:58:56.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:58:56.241" starttime="20210128 01:58:56.241"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:56.242" starttime="20210128 01:58:54.233"></status>
</kw>
<msg timestamp="20210128 01:58:56.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:58:56.242" starttime="20210128 01:58:54.232"></status>
</kw>
<status status="PASS" endtime="20210128 01:58:56.242" starttime="20210128 01:58:54.232"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 01:58:56.242" critical="yes" starttime="20210128 01:58:52.263"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210128 01:58:56.243" starttime="20210128 01:58:30.628"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:00:33.041" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:00:33.041" starttime="20210128 02:00:33.041"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:00:33.042" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:00:33.042" starttime="20210128 02:00:33.041"></status>
</kw>
<status status="PASS" endtime="20210128 02:00:33.042" starttime="20210128 02:00:33.040"></status>
</kw>
<msg timestamp="20210128 02:00:33.042" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:00:33.042" starttime="20210128 02:00:33.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:00:33.043" starttime="20210128 02:00:33.042"></status>
</kw>
<msg timestamp="20210128 02:00:33.043" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 02:00:33.043" starttime="20210128 02:00:33.042"></status>
</kw>
<status status="PASS" endtime="20210128 02:00:33.043" starttime="20210128 02:00:33.039"></status>
</kw>
<msg timestamp="20210128 02:00:33.043" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:00:33.043" starttime="20210128 02:00:33.039"></status>
</kw>
<msg timestamp="20210128 02:00:33.044" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:00:33.044" starttime="20210128 02:00:33.038"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:00:33.044" level="INFO">${random} = 36348</msg>
<status status="PASS" endtime="20210128 02:00:33.044" starttime="20210128 02:00:33.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:00:33.051" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-36348 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:00:36.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:00:36.068" level="INFO">${output} = 2021-01-28 02:00:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:00:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 ...</msg>
<status status="PASS" endtime="20210128 02:00:36.068" starttime="20210128 02:00:33.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:00:36.069" level="INFO">2021-01-28 02:00:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:00:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 02:00:34 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-28 02:00:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:00:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C36103E2C32A-&gt;0d5b70cd-c897-444f-94e7-acb98d4326be
2021-01-28 02:00:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210128 02:00:36.070" starttime="20210128 02:00:36.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:00:36.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:00:36.070" starttime="20210128 02:00:36.070"></status>
</kw>
<status status="PASS" endtime="20210128 02:00:36.071" starttime="20210128 02:00:33.045"></status>
</kw>
<msg timestamp="20210128 02:00:36.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:00:36.071" starttime="20210128 02:00:33.045"></status>
</kw>
<msg timestamp="20210128 02:00:36.071" level="INFO">${result} = 2021-01-28 02:00:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:00:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 ...</msg>
<status status="PASS" endtime="20210128 02:00:36.071" starttime="20210128 02:00:33.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:00:36.074" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:00:37.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:00:37.677" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 01:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 01:59 ofs://om/volume1/bucket1/ozone-12152
-rw-...</msg>
<status status="PASS" endtime="20210128 02:00:37.677" starttime="20210128 02:00:36.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:00:37.678" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 01:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 01:59 ofs://om/volume1/bucket1/ozone-12152
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 02:00 ofs://om/volume1/bucket1/ozone-36348
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 01:58 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:00 ofs://om/volume1/bucket1/wordcount-K69DLMjb.txt</msg>
<status status="PASS" endtime="20210128 02:00:37.678" starttime="20210128 02:00:37.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:00:37.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:00:37.679" starttime="20210128 02:00:37.678"></status>
</kw>
<status status="PASS" endtime="20210128 02:00:37.679" starttime="20210128 02:00:36.072"></status>
</kw>
<msg timestamp="20210128 02:00:37.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:00:37.679" starttime="20210128 02:00:36.072"></status>
</kw>
<msg timestamp="20210128 02:00:37.679" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 01:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 01:59 ofs://om/volume1/bucket1/ozone-12152
-rw-...</msg>
<status status="PASS" endtime="20210128 02:00:37.679" starttime="20210128 02:00:36.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:00:37.680" starttime="20210128 02:00:37.680"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 02:00:37.680" critical="yes" starttime="20210128 02:00:33.038"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 02:00:37.681" starttime="20210128 02:00:32.992"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 01:59:00.821" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 01:59:00.821" starttime="20210128 01:59:00.820"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 01:59:00.821" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 01:59:00.821" starttime="20210128 01:59:00.821"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:00.821" starttime="20210128 01:59:00.820"></status>
</kw>
<msg timestamp="20210128 01:59:00.822" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 01:59:00.822" starttime="20210128 01:59:00.819"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:00.822" starttime="20210128 01:59:00.819"></status>
</kw>
<msg timestamp="20210128 01:59:00.822" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 01:59:00.822" starttime="20210128 01:59:00.818"></status>
</kw>
<msg timestamp="20210128 01:59:00.822" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 01:59:00.822" starttime="20210128 01:59:00.817"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 01:59:00.823" level="INFO">${random} = 12152</msg>
<status status="PASS" endtime="20210128 01:59:00.823" starttime="20210128 01:59:00.822"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:59:00.827" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-12152 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:59:03.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:59:03.840" level="INFO">${output} = 2021-01-28 01:59:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 01:59:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 ...</msg>
<status status="PASS" endtime="20210128 01:59:03.840" starttime="20210128 01:59:00.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:59:03.842" level="INFO">2021-01-28 01:59:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 01:59:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 01:59:02 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-28 01:59:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 01:59:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9BC807CFEFA2-&gt;0d5b70cd-c897-444f-94e7-acb98d4326be
2021-01-28 01:59:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210128 01:59:03.842" starttime="20210128 01:59:03.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:59:03.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:59:03.843" starttime="20210128 01:59:03.843"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:03.843" starttime="20210128 01:59:00.823"></status>
</kw>
<msg timestamp="20210128 01:59:03.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:59:03.844" starttime="20210128 01:59:00.823"></status>
</kw>
<msg timestamp="20210128 01:59:03.844" level="INFO">${result} = 2021-01-28 01:59:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 01:59:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 ...</msg>
<status status="PASS" endtime="20210128 01:59:03.844" starttime="20210128 01:59:00.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:59:03.847" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:59:05.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:59:05.405" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 01:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 01:59 o3fs://bucket1.volume1.om/ozone-12152
dr...</msg>
<status status="PASS" endtime="20210128 01:59:05.405" starttime="20210128 01:59:03.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:59:05.406" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 01:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 01:59 o3fs://bucket1.volume1.om/ozone-12152
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 01:58 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 01:59:05.406" starttime="20210128 01:59:05.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:59:05.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:59:05.407" starttime="20210128 01:59:05.406"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:05.407" starttime="20210128 01:59:03.845"></status>
</kw>
<msg timestamp="20210128 01:59:05.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:59:05.407" starttime="20210128 01:59:03.844"></status>
</kw>
<msg timestamp="20210128 01:59:05.407" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 01:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-28 01:59 o3fs://bucket1.volume1.om/ozone-12152
dr...</msg>
<status status="PASS" endtime="20210128 01:59:05.407" starttime="20210128 01:59:03.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 01:59:05.408" starttime="20210128 01:59:05.408"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 01:59:05.408" critical="yes" starttime="20210128 01:59:00.816"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 01:59:05.410" starttime="20210128 01:59:00.772"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:00:42.037" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:00:42.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:00:42.043" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 02:00:42.043" starttime="20210128 02:00:42.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:00:42.044" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 02:00:42.044" starttime="20210128 02:00:42.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:00:42.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:00:42.044" starttime="20210128 02:00:42.044"></status>
</kw>
<status status="PASS" endtime="20210128 02:00:42.045" starttime="20210128 02:00:42.033"></status>
</kw>
<msg timestamp="20210128 02:00:42.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:00:42.045" starttime="20210128 02:00:42.033"></status>
</kw>
<msg timestamp="20210128 02:00:42.045" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 02:00:42.045" starttime="20210128 02:00:42.032"></status>
</kw>
<msg timestamp="20210128 02:00:42.045" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 02:00:42.045" starttime="20210128 02:00:42.032"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:00:42.050" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:00:42.050" starttime="20210128 02:00:42.050"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:00:42.051" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:00:42.051" starttime="20210128 02:00:42.050"></status>
</kw>
<status status="PASS" endtime="20210128 02:00:42.051" starttime="20210128 02:00:42.049"></status>
</kw>
<msg timestamp="20210128 02:00:42.051" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:00:42.051" starttime="20210128 02:00:42.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:00:42.052" starttime="20210128 02:00:42.052"></status>
</kw>
<msg timestamp="20210128 02:00:42.052" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 02:00:42.052" starttime="20210128 02:00:42.051"></status>
</kw>
<status status="PASS" endtime="20210128 02:00:42.053" starttime="20210128 02:00:42.048"></status>
</kw>
<msg timestamp="20210128 02:00:42.053" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:00:42.053" starttime="20210128 02:00:42.046"></status>
</kw>
<msg timestamp="20210128 02:00:42.053" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:00:42.053" starttime="20210128 02:00:42.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:00:42.056" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:01:18.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:01:18.002" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:00:43 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:00:43 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210128 02:01:18.002" starttime="20210128 02:00:42.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:01:18.003" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:00:43 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:00:43 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 02:00:43 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-28 02:00:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:00:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EB8FFCE80AF0-&gt;0d5b70cd-c897-444f-94e7-acb98d4326be
2021-01-28 02:00:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-28 02:00:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EC8ECC4C8612-&gt;78c1e579-8743-4fa0-9bb0-7fa39061d9f2
2021-01-28 02:00:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-28 02:00:47 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.2:8032
2021-01-28 02:00:47 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 02:00:47 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-28 02:00:47 INFO  JobSubmitter:198 - number of splits:3
2021-01-28 02:00:47 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611799073428_0003
2021-01-28 02:00:48 INFO  YarnClientImpl:273 - Submitted application application_1611799073428_0003
2021-01-28 02:00:48 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611799073428_0003/
2021-01-28 02:00:48 INFO  Job:1339 - Running job: job_1611799073428_0003
2021-01-28 02:00:55 INFO  Job:1360 - Job job_1611799073428_0003 running in uber mode : false
2021-01-28 02:00:55 INFO  Job:1367 -  map 0% reduce 0%
2021-01-28 02:01:01 INFO  Job:1367 -  map 33% reduce 0%
2021-01-28 02:01:06 INFO  Job:1367 -  map 67% reduce 0%
2021-01-28 02:01:11 INFO  Job:1367 -  map 100% reduce 0%
2021-01-28 02:01:16 INFO  Job:1367 -  map 100% reduce 100%
2021-01-28 02:01:17 INFO  Job:1378 - Job job_1611799073428_0003 completed successfully
2021-01-28 02:01:17 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610717
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36260
		Total time spent by all reduces in occupied slots (ms)=22760
		Total time spent by all map tasks (ms)=9065
		Total time spent by all reduce tasks (ms)=5690
		Total vcore-milliseconds taken by all map tasks=9065
		Total vcore-milliseconds taken by all reduce tasks=5690
		Total megabyte-milliseconds taken by all map tasks=37130240
		Total megabyte-milliseconds taken by all reduce tasks=23306240
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=570
		CPU time spent (ms)=6220
		Physical memory (bytes) snapshot=1160540160
		Virtual memory (bytes) snapshot=15777558528
		Total committed heap usage (bytes)=1062207488
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.288 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210128 02:01:18.003" starttime="20210128 02:01:18.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:01:18.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:01:18.004" starttime="20210128 02:01:18.003"></status>
</kw>
<status status="PASS" endtime="20210128 02:01:18.004" starttime="20210128 02:00:42.054"></status>
</kw>
<msg timestamp="20210128 02:01:18.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:01:18.004" starttime="20210128 02:00:42.054"></status>
</kw>
<msg timestamp="20210128 02:01:18.005" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:00:43 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:00:43 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210128 02:01:18.005" starttime="20210128 02:00:42.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:01:18.005" starttime="20210128 02:01:18.005"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:01:18.005" critical="yes" starttime="20210128 02:00:42.031"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:01:18.010" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:01:18.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:01:18.015" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 02:01:18.015" starttime="20210128 02:01:18.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:01:18.016" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 02:01:18.016" starttime="20210128 02:01:18.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:01:18.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:01:18.016" starttime="20210128 02:01:18.016"></status>
</kw>
<status status="PASS" endtime="20210128 02:01:18.016" starttime="20210128 02:01:18.008"></status>
</kw>
<msg timestamp="20210128 02:01:18.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:01:18.017" starttime="20210128 02:01:18.008"></status>
</kw>
<msg timestamp="20210128 02:01:18.017" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 02:01:18.017" starttime="20210128 02:01:18.007"></status>
</kw>
<msg timestamp="20210128 02:01:18.017" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 02:01:18.017" starttime="20210128 02:01:18.007"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:01:18.018" level="INFO">${random} = YQ3EQoLG</msg>
<status status="PASS" endtime="20210128 02:01:18.018" starttime="20210128 02:01:18.017"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:01:18.021" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:01:18.021" starttime="20210128 02:01:18.021"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:01:18.022" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:01:18.022" starttime="20210128 02:01:18.021"></status>
</kw>
<status status="PASS" endtime="20210128 02:01:18.022" starttime="20210128 02:01:18.020"></status>
</kw>
<msg timestamp="20210128 02:01:18.022" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:01:18.022" starttime="20210128 02:01:18.020"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:01:18.023" starttime="20210128 02:01:18.023"></status>
</kw>
<msg timestamp="20210128 02:01:18.023" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 02:01:18.023" starttime="20210128 02:01:18.022"></status>
</kw>
<status status="PASS" endtime="20210128 02:01:18.023" starttime="20210128 02:01:18.019"></status>
</kw>
<msg timestamp="20210128 02:01:18.023" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:01:18.023" starttime="20210128 02:01:18.019"></status>
</kw>
<msg timestamp="20210128 02:01:18.024" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:01:18.024" starttime="20210128 02:01:18.018"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:01:18.027" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:01:18.027" starttime="20210128 02:01:18.026"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:01:18.027" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:01:18.027" starttime="20210128 02:01:18.027"></status>
</kw>
<status status="PASS" endtime="20210128 02:01:18.027" starttime="20210128 02:01:18.026"></status>
</kw>
<msg timestamp="20210128 02:01:18.027" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:01:18.028" starttime="20210128 02:01:18.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:01:18.029" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210128 02:01:18.029" starttime="20210128 02:01:18.029"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:01:18.030" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210128 02:01:18.030" starttime="20210128 02:01:18.029"></status>
</kw>
<status status="PASS" endtime="20210128 02:01:18.030" starttime="20210128 02:01:18.028"></status>
</kw>
<msg timestamp="20210128 02:01:18.030" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210128 02:01:18.030" starttime="20210128 02:01:18.028"></status>
</kw>
<status status="PASS" endtime="20210128 02:01:18.030" starttime="20210128 02:01:18.025"></status>
</kw>
<msg timestamp="20210128 02:01:18.030" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 02:01:18.030" starttime="20210128 02:01:18.025"></status>
</kw>
<msg timestamp="20210128 02:01:18.031" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 02:01:18.031" starttime="20210128 02:01:18.024"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:01:18.036" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:01:18.036" starttime="20210128 02:01:18.035"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:01:18.036" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:01:18.036" starttime="20210128 02:01:18.036"></status>
</kw>
<status status="PASS" endtime="20210128 02:01:18.036" starttime="20210128 02:01:18.035"></status>
</kw>
<msg timestamp="20210128 02:01:18.036" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:01:18.036" starttime="20210128 02:01:18.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:01:18.038" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210128 02:01:18.038" starttime="20210128 02:01:18.037"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:01:18.038" level="INFO">${result} = /wordcount-YQ3EQoLG.txt</msg>
<status status="PASS" endtime="20210128 02:01:18.038" starttime="20210128 02:01:18.038"></status>
</kw>
<status status="PASS" endtime="20210128 02:01:18.038" starttime="20210128 02:01:18.037"></status>
</kw>
<msg timestamp="20210128 02:01:18.039" level="INFO">${path_with_leading} = /wordcount-YQ3EQoLG.txt</msg>
<status status="PASS" endtime="20210128 02:01:18.039" starttime="20210128 02:01:18.037"></status>
</kw>
<status status="PASS" endtime="20210128 02:01:18.039" starttime="20210128 02:01:18.033"></status>
</kw>
<msg timestamp="20210128 02:01:18.039" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-YQ3EQoLG.txt</msg>
<status status="PASS" endtime="20210128 02:01:18.039" starttime="20210128 02:01:18.032"></status>
</kw>
<msg timestamp="20210128 02:01:18.039" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-YQ3EQoLG.txt</msg>
<status status="PASS" endtime="20210128 02:01:18.039" starttime="20210128 02:01:18.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:01:18.042" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-YQ3EQoLG.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:01:53.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:01:53.167" level="INFO">${output} = 2021-01-28 02:01:19 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.2:8032
2021-01-28 02:01:19 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210128 02:01:53.167" starttime="20210128 02:01:18.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:01:53.168" level="INFO">2021-01-28 02:01:19 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.2:8032
2021-01-28 02:01:19 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 02:01:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:01:20 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 02:01:20 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-28 02:01:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:01:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8FE600D1F3FF-&gt;0d5b70cd-c897-444f-94e7-acb98d4326be
2021-01-28 02:01:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:01:20 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-28 02:01:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A91D8B5EA415-&gt;78c1e579-8743-4fa0-9bb0-7fa39061d9f2
2021-01-28 02:01:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:01:21 INFO  JobSubmitter:198 - number of splits:3
2021-01-28 02:01:21 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611799073428_0004
2021-01-28 02:01:21 INFO  YarnClientImpl:273 - Submitted application application_1611799073428_0004
2021-01-28 02:01:21 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611799073428_0004/
2021-01-28 02:01:21 INFO  Job:1339 - Running job: job_1611799073428_0004
2021-01-28 02:01:29 INFO  Job:1360 - Job job_1611799073428_0004 running in uber mode : false
2021-01-28 02:01:29 INFO  Job:1367 -  map 0% reduce 0%
2021-01-28 02:01:35 INFO  Job:1367 -  map 33% reduce 0%
2021-01-28 02:01:40 INFO  Job:1367 -  map 67% reduce 0%
2021-01-28 02:01:45 INFO  Job:1367 -  map 100% reduce 0%
2021-01-28 02:01:49 INFO  Job:1367 -  map 100% reduce 100%
2021-01-28 02:01:52 INFO  Job:1378 - Job job_1611799073428_0004 completed successfully
2021-01-28 02:01:52 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36700
		Total time spent by all reduces in occupied slots (ms)=13288
		Total time spent by all map tasks (ms)=9175
		Total time spent by all reduce tasks (ms)=3322
		Total vcore-milliseconds taken by all map tasks=9175
		Total vcore-milliseconds taken by all reduce tasks=3322
		Total megabyte-milliseconds taken by all map tasks=37580800
		Total megabyte-milliseconds taken by all reduce tasks=13606912
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=577
		CPU time spent (ms)=7070
		Physical memory (bytes) snapshot=1187422208
		Virtual memory (bytes) snapshot=15804923904
		Total committed heap usage (bytes)=1061158912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210128 02:01:53.169" starttime="20210128 02:01:53.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:01:53.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:01:53.169" starttime="20210128 02:01:53.169"></status>
</kw>
<status status="PASS" endtime="20210128 02:01:53.170" starttime="20210128 02:01:18.040"></status>
</kw>
<msg timestamp="20210128 02:01:53.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:01:53.170" starttime="20210128 02:01:18.040"></status>
</kw>
<msg timestamp="20210128 02:01:53.170" level="INFO">${output} = 2021-01-28 02:01:19 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.2:8032
2021-01-28 02:01:19 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210128 02:01:53.170" starttime="20210128 02:01:18.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 02:01:53.171" starttime="20210128 02:01:53.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:01:53.171" starttime="20210128 02:01:53.171"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:01:53.171" critical="yes" starttime="20210128 02:01:18.006"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 02:01:53.172" starttime="20210128 02:00:41.985"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:59:09.569" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:59:09.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:59:09.574" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 01:59:09.574" starttime="20210128 01:59:09.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:59:09.575" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 01:59:09.575" starttime="20210128 01:59:09.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:59:09.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:59:09.576" starttime="20210128 01:59:09.575"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:09.576" starttime="20210128 01:59:09.565"></status>
</kw>
<msg timestamp="20210128 01:59:09.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:59:09.576" starttime="20210128 01:59:09.565"></status>
</kw>
<msg timestamp="20210128 01:59:09.576" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 01:59:09.577" starttime="20210128 01:59:09.564"></status>
</kw>
<msg timestamp="20210128 01:59:09.577" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 01:59:09.577" starttime="20210128 01:59:09.564"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 01:59:09.581" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 01:59:09.581" starttime="20210128 01:59:09.580"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 01:59:09.581" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 01:59:09.581" starttime="20210128 01:59:09.581"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:09.582" starttime="20210128 01:59:09.580"></status>
</kw>
<msg timestamp="20210128 01:59:09.582" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 01:59:09.582" starttime="20210128 01:59:09.580"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:09.582" starttime="20210128 01:59:09.579"></status>
</kw>
<msg timestamp="20210128 01:59:09.582" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 01:59:09.582" starttime="20210128 01:59:09.578"></status>
</kw>
<msg timestamp="20210128 01:59:09.582" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 01:59:09.582" starttime="20210128 01:59:09.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:59:09.585" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:59:53.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:59:53.052" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 01:59:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 01:59:11 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210128 01:59:53.052" starttime="20210128 01:59:09.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:59:53.053" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 01:59:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 01:59:11 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 01:59:11 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-28 01:59:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 01:59:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F861889CF6AE-&gt;0d5b70cd-c897-444f-94e7-acb98d4326be
2021-01-28 01:59:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-28 01:59:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-502DEB5E90CF-&gt;78c1e579-8743-4fa0-9bb0-7fa39061d9f2
2021-01-28 01:59:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-28 01:59:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.2:8032
2021-01-28 01:59:15 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-28 01:59:15 INFO  JobSubmitter:198 - number of splits:3
2021-01-28 01:59:15 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611799073428_0001
2021-01-28 01:59:16 INFO  YarnClientImpl:273 - Submitted application application_1611799073428_0001
2021-01-28 01:59:16 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611799073428_0001/
2021-01-28 01:59:16 INFO  Job:1339 - Running job: job_1611799073428_0001
2021-01-28 01:59:25 INFO  Job:1360 - Job job_1611799073428_0001 running in uber mode : false
2021-01-28 01:59:25 INFO  Job:1367 -  map 0% reduce 0%
2021-01-28 01:59:31 INFO  Job:1367 -  map 33% reduce 0%
2021-01-28 01:59:36 INFO  Job:1367 -  map 67% reduce 0%
2021-01-28 01:59:40 INFO  Job:1367 -  map 100% reduce 0%
2021-01-28 01:59:47 INFO  Job:1367 -  map 100% reduce 100%
2021-01-28 01:59:52 INFO  Job:1378 - Job job_1611799073428_0001 completed successfully
2021-01-28 01:59:52 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610921
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37152
		Total time spent by all reduces in occupied slots (ms)=24040
		Total time spent by all map tasks (ms)=9288
		Total time spent by all reduce tasks (ms)=6010
		Total vcore-milliseconds taken by all map tasks=9288
		Total vcore-milliseconds taken by all reduce tasks=6010
		Total megabyte-milliseconds taken by all map tasks=38043648
		Total megabyte-milliseconds taken by all reduce tasks=24616960
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=598
		CPU time spent (ms)=5930
		Physical memory (bytes) snapshot=1140989952
		Virtual memory (bytes) snapshot=15765475328
		Total committed heap usage (bytes)=1063256064
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.156 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210128 01:59:53.054" starttime="20210128 01:59:53.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:59:53.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:59:53.054" starttime="20210128 01:59:53.054"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:53.054" starttime="20210128 01:59:09.583"></status>
</kw>
<msg timestamp="20210128 01:59:53.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:59:53.055" starttime="20210128 01:59:09.583"></status>
</kw>
<msg timestamp="20210128 01:59:53.055" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 01:59:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 01:59:11 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210128 01:59:53.055" starttime="20210128 01:59:09.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 01:59:53.056" starttime="20210128 01:59:53.055"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 01:59:53.056" critical="yes" starttime="20210128 01:59:09.563"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:59:53.060" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 01:59:53.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 01:59:53.067" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 01:59:53.067" starttime="20210128 01:59:53.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 01:59:53.067" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 01:59:53.068" starttime="20210128 01:59:53.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 01:59:53.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 01:59:53.068" starttime="20210128 01:59:53.068"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:53.068" starttime="20210128 01:59:53.058"></status>
</kw>
<msg timestamp="20210128 01:59:53.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 01:59:53.068" starttime="20210128 01:59:53.058"></status>
</kw>
<msg timestamp="20210128 01:59:53.069" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 01:59:53.069" starttime="20210128 01:59:53.058"></status>
</kw>
<msg timestamp="20210128 01:59:53.069" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210128 01:59:53.069" starttime="20210128 01:59:53.057"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 01:59:53.069" level="INFO">${random} = K69DLMjb</msg>
<status status="PASS" endtime="20210128 01:59:53.069" starttime="20210128 01:59:53.069"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 01:59:53.073" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 01:59:53.073" starttime="20210128 01:59:53.072"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 01:59:53.073" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 01:59:53.073" starttime="20210128 01:59:53.073"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:53.073" starttime="20210128 01:59:53.072"></status>
</kw>
<msg timestamp="20210128 01:59:53.073" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 01:59:53.073" starttime="20210128 01:59:53.071"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:53.074" starttime="20210128 01:59:53.071"></status>
</kw>
<msg timestamp="20210128 01:59:53.074" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 01:59:53.074" starttime="20210128 01:59:53.070"></status>
</kw>
<msg timestamp="20210128 01:59:53.074" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 01:59:53.074" starttime="20210128 01:59:53.069"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 01:59:53.077" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 01:59:53.077" starttime="20210128 01:59:53.077"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 01:59:53.078" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 01:59:53.078" starttime="20210128 01:59:53.077"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:53.078" starttime="20210128 01:59:53.076"></status>
</kw>
<msg timestamp="20210128 01:59:53.078" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 01:59:53.078" starttime="20210128 01:59:53.076"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:53.078" starttime="20210128 01:59:53.075"></status>
</kw>
<msg timestamp="20210128 01:59:53.078" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 01:59:53.078" starttime="20210128 01:59:53.075"></status>
</kw>
<msg timestamp="20210128 01:59:53.078" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 01:59:53.078" starttime="20210128 01:59:53.074"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 01:59:53.081" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 01:59:53.081" starttime="20210128 01:59:53.081"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 01:59:53.082" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 01:59:53.082" starttime="20210128 01:59:53.081"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:53.082" starttime="20210128 01:59:53.080"></status>
</kw>
<msg timestamp="20210128 01:59:53.082" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 01:59:53.082" starttime="20210128 01:59:53.080"></status>
</kw>
<status status="PASS" endtime="20210128 01:59:53.082" starttime="20210128 01:59:53.079"></status>
</kw>
<msg timestamp="20210128 01:59:53.082" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-K69DLMjb.txt</msg>
<status status="PASS" endtime="20210128 01:59:53.082" starttime="20210128 01:59:53.079"></status>
</kw>
<msg timestamp="20210128 01:59:53.082" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-K69DLMjb.txt</msg>
<status status="PASS" endtime="20210128 01:59:53.082" starttime="20210128 01:59:53.079"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 01:59:53.085" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-K69DLMjb.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:00:28.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:00:28.477" level="INFO">${output} = 2021-01-28 01:59:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.2:8032
2021-01-28 01:59:55 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210128 02:00:28.477" starttime="20210128 01:59:53.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:00:28.478" level="INFO">2021-01-28 01:59:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.2:8032
2021-01-28 01:59:55 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 01:59:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-28 01:59:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-28 01:59:55 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-28 01:59:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 01:59:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-976112FFD1CE-&gt;0d5b70cd-c897-444f-94e7-acb98d4326be
2021-01-28 01:59:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 01:59:56 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-28 01:59:56 INFO  JobSubmitter:198 - number of splits:3
2021-01-28 01:59:56 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611799073428_0002
2021-01-28 01:59:56 INFO  YarnClientImpl:273 - Submitted application application_1611799073428_0002
2021-01-28 01:59:56 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611799073428_0002/
2021-01-28 01:59:56 INFO  Job:1339 - Running job: job_1611799073428_0002
2021-01-28 02:00:04 INFO  Job:1360 - Job job_1611799073428_0002 running in uber mode : false
2021-01-28 02:00:04 INFO  Job:1367 -  map 0% reduce 0%
2021-01-28 02:00:11 INFO  Job:1367 -  map 33% reduce 0%
2021-01-28 02:00:15 INFO  Job:1367 -  map 67% reduce 0%
2021-01-28 02:00:19 INFO  Job:1367 -  map 100% reduce 0%
2021-01-28 02:00:24 INFO  Job:1367 -  map 100% reduce 100%
2021-01-28 02:00:28 INFO  Job:1378 - Job job_1611799073428_0002 completed successfully
2021-01-28 02:00:28 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35648
		Total time spent by all reduces in occupied slots (ms)=13248
		Total time spent by all map tasks (ms)=8912
		Total time spent by all reduce tasks (ms)=3312
		Total vcore-milliseconds taken by all map tasks=8912
		Total vcore-milliseconds taken by all reduce tasks=3312
		Total megabyte-milliseconds taken by all map tasks=36503552
		Total megabyte-milliseconds taken by all reduce tasks=13565952
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=515
		CPU time spent (ms)=6150
		Physical memory (bytes) snapshot=1180868608
		Virtual memory (bytes) snapshot=15776935936
		Total committed heap usage (bytes)=1053294592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210128 02:00:28.478" starttime="20210128 02:00:28.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:00:28.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:00:28.479" starttime="20210128 02:00:28.479"></status>
</kw>
<status status="PASS" endtime="20210128 02:00:28.479" starttime="20210128 01:59:53.083"></status>
</kw>
<msg timestamp="20210128 02:00:28.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:00:28.480" starttime="20210128 01:59:53.083"></status>
</kw>
<msg timestamp="20210128 02:00:28.480" level="INFO">${output} = 2021-01-28 01:59:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.2:8032
2021-01-28 01:59:55 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210128 02:00:28.480" starttime="20210128 01:59:53.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 02:00:28.481" starttime="20210128 02:00:28.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:00:28.481" starttime="20210128 02:00:28.481"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:00:28.481" critical="yes" starttime="20210128 01:59:53.057"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 02:00:28.482" starttime="20210128 01:59:09.520"></status>
</suite>
<status status="PASS" elapsedtime="185091" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:02:57.583" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:02:59.540" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 02:02:59.541" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 02:02:59.541" starttime="20210128 02:02:57.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:02:59.542" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 02:02:59.542" starttime="20210128 02:02:59.541"></status>
</kw>
<msg timestamp="20210128 02:02:59.542" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 02:02:59.542" starttime="20210128 02:02:57.579"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:02:59.548" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:03:01.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:03:01.656" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:03:01.657" starttime="20210128 02:02:59.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:03:01.658" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:03:01.660" starttime="20210128 02:03:01.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:03:01.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:03:01.660" starttime="20210128 02:03:01.660"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:01.660" starttime="20210128 02:02:59.544"></status>
</kw>
<msg timestamp="20210128 02:03:01.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:03:01.662" starttime="20210128 02:02:59.544"></status>
</kw>
<msg timestamp="20210128 02:03:01.662" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210128 02:03:01.662" starttime="20210128 02:02:59.543"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210128 02:03:01.663" starttime="20210128 02:03:01.662"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:01.663" starttime="20210128 02:02:59.543"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:01.663" starttime="20210128 02:02:59.542"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:03:01.677" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:03:03.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:03:03.453" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:03:03.453" starttime="20210128 02:03:01.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:03:03.454" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:03:03.454" starttime="20210128 02:03:03.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:03:03.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:03:03.455" starttime="20210128 02:03:03.454"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:03.455" starttime="20210128 02:03:01.665"></status>
</kw>
<msg timestamp="20210128 02:03:03.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:03:03.455" starttime="20210128 02:03:01.664"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:03.455" starttime="20210128 02:03:01.664"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:03.456" starttime="20210128 02:03:01.664"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:03.456" starttime="20210128 02:03:01.663"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210128 02:03:03.456" starttime="20210128 02:03:03.456"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:03:03.459" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:03:05.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:03:05.445" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:03...</msg>
<status status="PASS" endtime="20210128 02:03:05.445" starttime="20210128 02:03:03.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:03:05.446" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:03:03.434Z",
  "modificationTime" : "2021-01-28T02:03:03.434Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 02:03:05.446" starttime="20210128 02:03:05.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:03:05.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:03:05.447" starttime="20210128 02:03:05.446"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:05.447" starttime="20210128 02:03:03.457"></status>
</kw>
<msg timestamp="20210128 02:03:05.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:03:05.447" starttime="20210128 02:03:03.457"></status>
</kw>
<msg timestamp="20210128 02:03:05.448" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:03...</msg>
<status status="PASS" endtime="20210128 02:03:05.448" starttime="20210128 02:03:03.456"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210128 02:03:05.448" starttime="20210128 02:03:05.448"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:03:05.451" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:03:05.451" starttime="20210128 02:03:05.451"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:03:05.452" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:03:05.452" starttime="20210128 02:03:05.451"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:05.452" starttime="20210128 02:03:05.450"></status>
</kw>
<msg timestamp="20210128 02:03:05.452" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:03:05.452" starttime="20210128 02:03:05.450"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:05.452" starttime="20210128 02:03:05.449"></status>
</kw>
<msg timestamp="20210128 02:03:05.452" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 02:03:05.452" starttime="20210128 02:03:05.449"></status>
</kw>
<msg timestamp="20210128 02:03:05.453" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 02:03:05.453" starttime="20210128 02:03:05.448"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:03:05.456" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:03:07.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:03:07.393" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:03:07.393" starttime="20210128 02:03:05.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:03:07.394" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:03:07.394" starttime="20210128 02:03:07.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:03:07.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:03:07.395" starttime="20210128 02:03:07.395"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:07.395" starttime="20210128 02:03:05.453"></status>
</kw>
<msg timestamp="20210128 02:03:07.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:03:07.396" starttime="20210128 02:03:05.453"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:07.396" starttime="20210128 02:03:05.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:03:07.400" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:03:15.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:03:15.086" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:03:15.087" starttime="20210128 02:03:07.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:03:15.088" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:03:15.088" starttime="20210128 02:03:15.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:03:15.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:03:15.088" starttime="20210128 02:03:15.088"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:15.089" starttime="20210128 02:03:07.397"></status>
</kw>
<msg timestamp="20210128 02:03:15.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:03:15.089" starttime="20210128 02:03:07.397"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:15.089" starttime="20210128 02:03:07.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:03:15.092" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:03:18.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:03:18.785" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:03:18.785" starttime="20210128 02:03:15.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:03:18.786" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:03:18.786" starttime="20210128 02:03:18.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:03:18.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:03:18.786" starttime="20210128 02:03:18.786"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:18.787" starttime="20210128 02:03:15.090"></status>
</kw>
<msg timestamp="20210128 02:03:18.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:03:18.787" starttime="20210128 02:03:15.090"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:18.787" starttime="20210128 02:03:15.089"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:03:18.791" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:03:22.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:03:22.461" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:03:22.461" starttime="20210128 02:03:18.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:03:22.462" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:03:22.462" starttime="20210128 02:03:22.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:03:22.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:03:22.463" starttime="20210128 02:03:22.462"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:22.463" starttime="20210128 02:03:18.788"></status>
</kw>
<msg timestamp="20210128 02:03:22.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:03:22.463" starttime="20210128 02:03:18.788"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:22.463" starttime="20210128 02:03:18.787"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:03:22.463" critical="yes" starttime="20210128 02:02:57.578"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:03:22.469" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:03:22.469" starttime="20210128 02:03:22.469"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:03:22.470" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:03:22.470" starttime="20210128 02:03:22.469"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:22.470" starttime="20210128 02:03:22.468"></status>
</kw>
<msg timestamp="20210128 02:03:22.470" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:03:22.470" starttime="20210128 02:03:22.468"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:22.471" starttime="20210128 02:03:22.467"></status>
</kw>
<msg timestamp="20210128 02:03:22.471" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 02:03:22.471" starttime="20210128 02:03:22.466"></status>
</kw>
<msg timestamp="20210128 02:03:22.471" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 02:03:22.471" starttime="20210128 02:03:22.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:03:22.474" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:03:24.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:03:24.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:03:24.338" starttime="20210128 02:03:22.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:03:24.339" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:03:24.339" starttime="20210128 02:03:24.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:03:24.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:03:24.339" starttime="20210128 02:03:24.339"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:24.340" starttime="20210128 02:03:22.472"></status>
</kw>
<msg timestamp="20210128 02:03:24.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:03:24.340" starttime="20210128 02:03:22.471"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:24.340" starttime="20210128 02:03:22.471"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:03:24.343" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:03:26.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:03:26.297" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:03:26.298" starttime="20210128 02:03:24.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:03:26.299" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:03:26.299" starttime="20210128 02:03:26.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:03:26.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:03:26.299" starttime="20210128 02:03:26.299"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:26.300" starttime="20210128 02:03:24.341"></status>
</kw>
<msg timestamp="20210128 02:03:26.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:03:26.300" starttime="20210128 02:03:24.341"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:26.300" starttime="20210128 02:03:24.340"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:03:26.300" critical="yes" starttime="20210128 02:03:22.465"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210128 02:03:26.302" starttime="20210128 02:02:57.532"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:04:55.947" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:04:55.947" starttime="20210128 02:04:55.946"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:04:55.947" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:04:55.947" starttime="20210128 02:04:55.947"></status>
</kw>
<status status="PASS" endtime="20210128 02:04:55.948" starttime="20210128 02:04:55.946"></status>
</kw>
<msg timestamp="20210128 02:04:55.948" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:04:55.948" starttime="20210128 02:04:55.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:04:55.949" starttime="20210128 02:04:55.949"></status>
</kw>
<msg timestamp="20210128 02:04:55.949" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 02:04:55.949" starttime="20210128 02:04:55.948"></status>
</kw>
<status status="PASS" endtime="20210128 02:04:55.949" starttime="20210128 02:04:55.945"></status>
</kw>
<msg timestamp="20210128 02:04:55.949" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:04:55.949" starttime="20210128 02:04:55.942"></status>
</kw>
<msg timestamp="20210128 02:04:55.950" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:04:55.950" starttime="20210128 02:04:55.941"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:04:55.951" level="INFO">${random} = 81349</msg>
<status status="PASS" endtime="20210128 02:04:55.951" starttime="20210128 02:04:55.951"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:04:55.956" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-81349 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:04:58.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:04:58.975" level="INFO">${output} = 2021-01-28 02:04:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 02:04:58.975" starttime="20210128 02:04:55.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:04:58.976" level="INFO">2021-01-28 02:04:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-28 02:04:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:04:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:04:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:04:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:04:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-27EE97A49EB6-&gt;ec3439a4-3577-4e7c-b209-8d9f2abf0f7e
2021-01-28 02:04:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:04:58 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 02:04:58.976" starttime="20210128 02:04:58.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:04:58.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:04:58.977" starttime="20210128 02:04:58.976"></status>
</kw>
<status status="PASS" endtime="20210128 02:04:58.977" starttime="20210128 02:04:55.952"></status>
</kw>
<msg timestamp="20210128 02:04:58.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:04:58.977" starttime="20210128 02:04:55.952"></status>
</kw>
<msg timestamp="20210128 02:04:58.977" level="INFO">${result} = 2021-01-28 02:04:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 02:04:58.978" starttime="20210128 02:04:55.951"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:04:58.981" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:05:00.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:05:00.656" level="INFO">${output} = 2021-01-28 02:04:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 02:05:00.656" starttime="20210128 02:04:58.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:05:00.657" level="INFO">2021-01-28 02:04:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:00 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-28 02:03 ofs://om/volume1/bucket1/ozone-05922
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-28 02:04 ofs://om/volume1/bucket1/ozone-81349
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:03 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:04 ofs://om/volume1/bucket1/wordcount-TdogPljF.txt
2021-01-28 02:05:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 02:05:00.657" starttime="20210128 02:05:00.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:05:00.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:05:00.658" starttime="20210128 02:05:00.657"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:00.658" starttime="20210128 02:04:58.979"></status>
</kw>
<msg timestamp="20210128 02:05:00.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:05:00.658" starttime="20210128 02:04:58.978"></status>
</kw>
<msg timestamp="20210128 02:05:00.659" level="INFO">${result} = 2021-01-28 02:04:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 02:05:00.659" starttime="20210128 02:04:58.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:05:00.659" starttime="20210128 02:05:00.659"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 02:05:00.659" critical="yes" starttime="20210128 02:04:55.940"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 02:05:00.660" starttime="20210128 02:04:55.890"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:03:30.677" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:03:30.677" starttime="20210128 02:03:30.677"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:03:30.678" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:03:30.678" starttime="20210128 02:03:30.677"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:30.678" starttime="20210128 02:03:30.677"></status>
</kw>
<msg timestamp="20210128 02:03:30.678" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:03:30.678" starttime="20210128 02:03:30.676"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:30.678" starttime="20210128 02:03:30.676"></status>
</kw>
<msg timestamp="20210128 02:03:30.679" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:03:30.679" starttime="20210128 02:03:30.675"></status>
</kw>
<msg timestamp="20210128 02:03:30.679" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:03:30.679" starttime="20210128 02:03:30.674"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:03:30.679" level="INFO">${random} = 05922</msg>
<status status="PASS" endtime="20210128 02:03:30.679" starttime="20210128 02:03:30.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:03:30.683" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-05922 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:03:36.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:03:36.417" level="INFO">${output} = 2021-01-28 02:03:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 02:03:36.417" starttime="20210128 02:03:30.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:03:36.419" level="INFO">2021-01-28 02:03:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:32 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-28 02:03:32 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:03:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:03:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:03:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:03:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7265FCCD9CA4-&gt;8c9b8565-a6c3-4484-af05-fb207a053fb0
2021-01-28 02:03:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:03:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 02:03:36.419" starttime="20210128 02:03:36.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:03:36.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:03:36.420" starttime="20210128 02:03:36.419"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:36.420" starttime="20210128 02:03:30.680"></status>
</kw>
<msg timestamp="20210128 02:03:36.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:03:36.420" starttime="20210128 02:03:30.680"></status>
</kw>
<msg timestamp="20210128 02:03:36.420" level="INFO">${result} = 2021-01-28 02:03:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 02:03:36.420" starttime="20210128 02:03:30.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:03:36.423" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:03:38.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:03:38.160" level="INFO">${output} = 2021-01-28 02:03:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 02:03:38.160" starttime="20210128 02:03:36.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:03:38.161" level="INFO">2021-01-28 02:03:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:37 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-28 02:03 o3fs://bucket1.volume1.om/ozone-05922
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:03 o3fs://bucket1.volume1.om/user
2021-01-28 02:03:38 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 02:03:38.162" starttime="20210128 02:03:38.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:03:38.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:03:38.162" starttime="20210128 02:03:38.162"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:38.162" starttime="20210128 02:03:36.421"></status>
</kw>
<msg timestamp="20210128 02:03:38.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:03:38.162" starttime="20210128 02:03:36.421"></status>
</kw>
<msg timestamp="20210128 02:03:38.163" level="INFO">${result} = 2021-01-28 02:03:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 02:03:38.163" starttime="20210128 02:03:36.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:03:38.163" starttime="20210128 02:03:38.163"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 02:03:38.163" critical="yes" starttime="20210128 02:03:30.674"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 02:03:38.164" starttime="20210128 02:03:30.627"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:05:04.913" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:05:04.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:05:04.918" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:05:04.918" starttime="20210128 02:05:04.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:05:04.919" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:05:04.919" starttime="20210128 02:05:04.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:05:04.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:05:04.919" starttime="20210128 02:05:04.919"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:04.920" starttime="20210128 02:05:04.909"></status>
</kw>
<msg timestamp="20210128 02:05:04.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:05:04.920" starttime="20210128 02:05:04.908"></status>
</kw>
<msg timestamp="20210128 02:05:04.920" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:05:04.920" starttime="20210128 02:05:04.908"></status>
</kw>
<msg timestamp="20210128 02:05:04.920" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:05:04.920" starttime="20210128 02:05:04.908"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:05:04.925" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:05:04.925" starttime="20210128 02:05:04.924"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:05:04.925" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:05:04.925" starttime="20210128 02:05:04.925"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:04.925" starttime="20210128 02:05:04.924"></status>
</kw>
<msg timestamp="20210128 02:05:04.925" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:05:04.926" starttime="20210128 02:05:04.923"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:05:04.926" starttime="20210128 02:05:04.926"></status>
</kw>
<msg timestamp="20210128 02:05:04.927" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 02:05:04.927" starttime="20210128 02:05:04.926"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:04.927" starttime="20210128 02:05:04.923"></status>
</kw>
<msg timestamp="20210128 02:05:04.927" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:05:04.927" starttime="20210128 02:05:04.921"></status>
</kw>
<msg timestamp="20210128 02:05:04.927" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:05:04.927" starttime="20210128 02:05:04.920"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:05:04.931" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:05:42.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:05:42.339" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:05:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05...</msg>
<status status="PASS" endtime="20210128 02:05:42.339" starttime="20210128 02:05:04.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:05:42.340" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:05:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:06 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-28 02:05:06 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:05:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:05:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:05:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:05:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A90B83F8C3A1-&gt;8c9b8565-a6c3-4484-af05-fb207a053fb0
2021-01-28 02:05:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-28 02:05:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E17687143B11-&gt;ec3439a4-3577-4e7c-b209-8d9f2abf0f7e
2021-01-28 02:05:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-28 02:05:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2021-01-28 02:05:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 02:05:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:08 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 02:05:10 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 02:05:10 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611799351348_0003
2021-01-28 02:05:10 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 02:05:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:11 INFO  Configuration:2752 - resource-types.xml not found
2021-01-28 02:05:11 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-28 02:05:11 INFO  YarnClientImpl:324 - Submitted application application_1611799351348_0003
2021-01-28 02:05:11 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611799351348_0003/
2021-01-28 02:05:11 INFO  Job:1619 - Running job: job_1611799351348_0003
2021-01-28 02:05:18 INFO  Job:1640 - Job job_1611799351348_0003 running in uber mode : false
2021-01-28 02:05:18 INFO  Job:1647 -  map 0% reduce 0%
2021-01-28 02:05:24 INFO  Job:1647 -  map 33% reduce 0%
2021-01-28 02:05:29 INFO  Job:1647 -  map 67% reduce 0%
2021-01-28 02:05:34 INFO  Job:1647 -  map 100% reduce 0%
2021-01-28 02:05:38 INFO  Job:1647 -  map 100% reduce 100%
2021-01-28 02:05:41 INFO  Job:1658 - Job job_1611799351348_0003 completed successfully
2021-01-28 02:05:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:41 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016157
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35464
		Total time spent by all reduces in occupied slots (ms)=13648
		Total time spent by all map tasks (ms)=8866
		Total time spent by all reduce tasks (ms)=3412
		Total vcore-milliseconds taken by all map tasks=8866
		Total vcore-milliseconds taken by all reduce tasks=3412
		Total megabyte-milliseconds taken by all map tasks=36315136
		Total megabyte-milliseconds taken by all reduce tasks=13975552
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=538
		CPU time spent (ms)=5680
		Physical memory (bytes) snapshot=1217941504
		Virtual memory (bytes) snapshot=15779250176
		Total committed heap usage (bytes)=1076363264
		Peak Map Physical memory (bytes)=310951936
		Peak Map Virtual memory (bytes)=3943428096
		Peak Reduce Physical memory (bytes)=290418688
		Peak Reduce Virtual memory (bytes)=3953090560
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.059 seconds
2021-01-28 02:05:41 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-28 02:05:42 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 02:05:42.340" starttime="20210128 02:05:42.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:05:42.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:05:42.341" starttime="20210128 02:05:42.340"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:42.341" starttime="20210128 02:05:04.928"></status>
</kw>
<msg timestamp="20210128 02:05:42.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:05:42.341" starttime="20210128 02:05:04.928"></status>
</kw>
<msg timestamp="20210128 02:05:42.342" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:05:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05...</msg>
<status status="PASS" endtime="20210128 02:05:42.342" starttime="20210128 02:05:04.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:05:42.342" starttime="20210128 02:05:42.342"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:05:42.343" critical="yes" starttime="20210128 02:05:04.907"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:05:42.347" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:05:42.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:05:42.352" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:05:42.352" starttime="20210128 02:05:42.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:05:42.353" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:05:42.353" starttime="20210128 02:05:42.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:05:42.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:05:42.353" starttime="20210128 02:05:42.353"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:42.354" starttime="20210128 02:05:42.345"></status>
</kw>
<msg timestamp="20210128 02:05:42.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:05:42.354" starttime="20210128 02:05:42.345"></status>
</kw>
<msg timestamp="20210128 02:05:42.354" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:05:42.354" starttime="20210128 02:05:42.344"></status>
</kw>
<msg timestamp="20210128 02:05:42.354" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:05:42.354" starttime="20210128 02:05:42.344"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:05:42.355" level="INFO">${random} = XLVTvMCl</msg>
<status status="PASS" endtime="20210128 02:05:42.355" starttime="20210128 02:05:42.354"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:05:42.358" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:05:42.358" starttime="20210128 02:05:42.358"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:05:42.358" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:05:42.358" starttime="20210128 02:05:42.358"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:42.359" starttime="20210128 02:05:42.357"></status>
</kw>
<msg timestamp="20210128 02:05:42.359" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:05:42.359" starttime="20210128 02:05:42.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:05:42.360" starttime="20210128 02:05:42.359"></status>
</kw>
<msg timestamp="20210128 02:05:42.360" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 02:05:42.360" starttime="20210128 02:05:42.359"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:42.360" starttime="20210128 02:05:42.356"></status>
</kw>
<msg timestamp="20210128 02:05:42.360" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:05:42.360" starttime="20210128 02:05:42.355"></status>
</kw>
<msg timestamp="20210128 02:05:42.360" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:05:42.360" starttime="20210128 02:05:42.355"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:05:42.364" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:05:42.364" starttime="20210128 02:05:42.363"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:05:42.364" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:05:42.364" starttime="20210128 02:05:42.364"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:42.364" starttime="20210128 02:05:42.363"></status>
</kw>
<msg timestamp="20210128 02:05:42.364" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:05:42.364" starttime="20210128 02:05:42.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:05:42.366" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210128 02:05:42.366" starttime="20210128 02:05:42.365"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:05:42.366" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210128 02:05:42.366" starttime="20210128 02:05:42.366"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:42.366" starttime="20210128 02:05:42.365"></status>
</kw>
<msg timestamp="20210128 02:05:42.366" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210128 02:05:42.366" starttime="20210128 02:05:42.365"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:42.367" starttime="20210128 02:05:42.362"></status>
</kw>
<msg timestamp="20210128 02:05:42.367" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 02:05:42.367" starttime="20210128 02:05:42.361"></status>
</kw>
<msg timestamp="20210128 02:05:42.367" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 02:05:42.367" starttime="20210128 02:05:42.361"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:05:42.370" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:05:42.370" starttime="20210128 02:05:42.370"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:05:42.371" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:05:42.371" starttime="20210128 02:05:42.370"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:42.371" starttime="20210128 02:05:42.369"></status>
</kw>
<msg timestamp="20210128 02:05:42.371" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:05:42.371" starttime="20210128 02:05:42.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:05:42.372" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210128 02:05:42.372" starttime="20210128 02:05:42.372"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:05:42.373" level="INFO">${result} = /wordcount-XLVTvMCl.txt</msg>
<status status="PASS" endtime="20210128 02:05:42.373" starttime="20210128 02:05:42.372"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:42.373" starttime="20210128 02:05:42.371"></status>
</kw>
<msg timestamp="20210128 02:05:42.373" level="INFO">${path_with_leading} = /wordcount-XLVTvMCl.txt</msg>
<status status="PASS" endtime="20210128 02:05:42.373" starttime="20210128 02:05:42.371"></status>
</kw>
<status status="PASS" endtime="20210128 02:05:42.373" starttime="20210128 02:05:42.368"></status>
</kw>
<msg timestamp="20210128 02:05:42.373" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-XLVTvMCl.txt</msg>
<status status="PASS" endtime="20210128 02:05:42.373" starttime="20210128 02:05:42.368"></status>
</kw>
<msg timestamp="20210128 02:05:42.374" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-XLVTvMCl.txt</msg>
<status status="PASS" endtime="20210128 02:05:42.374" starttime="20210128 02:05:42.367"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:05:42.377" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-XLVTvMCl.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:06:21.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:06:21.431" level="INFO">${output} = 2021-01-28 02:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 02:06:21.431" starttime="20210128 02:05:42.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:06:21.432" level="INFO">2021-01-28 02:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2021-01-28 02:05:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 02:05:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:44 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-28 02:05:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:05:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:05:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:05:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:05:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EAE172381526-&gt;ec3439a4-3577-4e7c-b209-8d9f2abf0f7e
2021-01-28 02:05:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:05:45 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 02:05:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BFA3CEE0A436-&gt;8c9b8565-a6c3-4484-af05-fb207a053fb0
2021-01-28 02:05:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:05:48 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 02:05:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611799351348_0004
2021-01-28 02:05:48 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 02:05:48 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:48 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:48 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:48 INFO  Configuration:2752 - resource-types.xml not found
2021-01-28 02:05:48 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-28 02:05:48 INFO  YarnClientImpl:324 - Submitted application application_1611799351348_0004
2021-01-28 02:05:48 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611799351348_0004/
2021-01-28 02:05:48 INFO  Job:1619 - Running job: job_1611799351348_0004
2021-01-28 02:05:54 INFO  Job:1640 - Job job_1611799351348_0004 running in uber mode : false
2021-01-28 02:05:54 INFO  Job:1647 -  map 0% reduce 0%
2021-01-28 02:06:01 INFO  Job:1647 -  map 33% reduce 0%
2021-01-28 02:06:05 INFO  Job:1647 -  map 67% reduce 0%
2021-01-28 02:06:10 INFO  Job:1647 -  map 100% reduce 0%
2021-01-28 02:06:15 INFO  Job:1647 -  map 100% reduce 100%
2021-01-28 02:06:20 INFO  Job:1658 - Job job_1611799351348_0004 completed successfully
2021-01-28 02:06:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:06:21 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078831
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37272
		Total time spent by all reduces in occupied slots (ms)=13572
		Total time spent by all map tasks (ms)=9318
		Total time spent by all reduce tasks (ms)=3393
		Total vcore-milliseconds taken by all map tasks=9318
		Total vcore-milliseconds taken by all reduce tasks=3393
		Total megabyte-milliseconds taken by all map tasks=38166528
		Total megabyte-milliseconds taken by all reduce tasks=13897728
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=561
		CPU time spent (ms)=6620
		Physical memory (bytes) snapshot=1249280000
		Virtual memory (bytes) snapshot=15801536512
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=320540672
		Peak Map Virtual memory (bytes)=3946569728
		Peak Reduce Physical memory (bytes)=305045504
		Peak Reduce Virtual memory (bytes)=3963473920
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-28 02:06:21 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 02:06:21.432" starttime="20210128 02:06:21.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:06:21.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:06:21.433" starttime="20210128 02:06:21.432"></status>
</kw>
<status status="PASS" endtime="20210128 02:06:21.433" starttime="20210128 02:05:42.375"></status>
</kw>
<msg timestamp="20210128 02:06:21.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:06:21.433" starttime="20210128 02:05:42.374"></status>
</kw>
<msg timestamp="20210128 02:06:21.433" level="INFO">${output} = 2021-01-28 02:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:05:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 02:06:21.433" starttime="20210128 02:05:42.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 02:06:21.434" starttime="20210128 02:06:21.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:06:21.434" starttime="20210128 02:06:21.434"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:06:21.434" critical="yes" starttime="20210128 02:05:42.343"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 02:06:21.435" starttime="20210128 02:05:04.858"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:03:42.481" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:03:42.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:03:42.486" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:03:42.487" starttime="20210128 02:03:42.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:03:42.487" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:03:42.488" starttime="20210128 02:03:42.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:03:42.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:03:42.488" starttime="20210128 02:03:42.488"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:42.488" starttime="20210128 02:03:42.477"></status>
</kw>
<msg timestamp="20210128 02:03:42.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:03:42.489" starttime="20210128 02:03:42.477"></status>
</kw>
<msg timestamp="20210128 02:03:42.489" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:03:42.489" starttime="20210128 02:03:42.477"></status>
</kw>
<msg timestamp="20210128 02:03:42.489" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:03:42.489" starttime="20210128 02:03:42.476"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:03:42.493" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:03:42.494" starttime="20210128 02:03:42.493"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:03:42.494" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:03:42.494" starttime="20210128 02:03:42.494"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:42.494" starttime="20210128 02:03:42.493"></status>
</kw>
<msg timestamp="20210128 02:03:42.494" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:03:42.494" starttime="20210128 02:03:42.492"></status>
</kw>
<status status="PASS" endtime="20210128 02:03:42.495" starttime="20210128 02:03:42.491"></status>
</kw>
<msg timestamp="20210128 02:03:42.495" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:03:42.495" starttime="20210128 02:03:42.490"></status>
</kw>
<msg timestamp="20210128 02:03:42.495" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:03:42.495" starttime="20210128 02:03:42.489"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:03:42.498" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:04:17.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:04:17.951" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:03:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03...</msg>
<status status="PASS" endtime="20210128 02:04:17.952" starttime="20210128 02:03:42.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:04:17.953" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:03:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:44 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-28 02:03:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:03:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:03:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:03:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:03:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6EE8CC009C50-&gt;ec3439a4-3577-4e7c-b209-8d9f2abf0f7e
2021-01-28 02:03:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-28 02:03:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4827F912B1F2-&gt;8c9b8565-a6c3-4484-af05-fb207a053fb0
2021-01-28 02:03:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-28 02:03:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2021-01-28 02:03:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:46 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 02:03:46 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 02:03:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611799351348_0001
2021-01-28 02:03:46 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 02:03:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:46 INFO  Configuration:2752 - resource-types.xml not found
2021-01-28 02:03:46 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-28 02:03:46 INFO  YarnClientImpl:324 - Submitted application application_1611799351348_0001
2021-01-28 02:03:46 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611799351348_0001/
2021-01-28 02:03:46 INFO  Job:1619 - Running job: job_1611799351348_0001
2021-01-28 02:03:56 INFO  Job:1640 - Job job_1611799351348_0001 running in uber mode : false
2021-01-28 02:03:56 INFO  Job:1647 -  map 0% reduce 0%
2021-01-28 02:04:03 INFO  Job:1647 -  map 33% reduce 0%
2021-01-28 02:04:07 INFO  Job:1647 -  map 67% reduce 0%
2021-01-28 02:04:12 INFO  Job:1647 -  map 100% reduce 0%
2021-01-28 02:04:17 INFO  Job:1647 -  map 100% reduce 100%
2021-01-28 02:04:17 INFO  Job:1658 - Job job_1611799351348_0001 completed successfully
2021-01-28 02:04:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016377
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35360
		Total time spent by all reduces in occupied slots (ms)=13364
		Total time spent by all map tasks (ms)=8840
		Total time spent by all reduce tasks (ms)=3341
		Total vcore-milliseconds taken by all map tasks=8840
		Total vcore-milliseconds taken by all reduce tasks=3341
		Total megabyte-milliseconds taken by all map tasks=36208640
		Total megabyte-milliseconds taken by all reduce tasks=13684736
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=573
		CPU time spent (ms)=5420
		Physical memory (bytes) snapshot=1225879552
		Virtual memory (bytes) snapshot=15776784384
		Total committed heap usage (bytes)=1023410176
		Peak Map Physical memory (bytes)=319471616
		Peak Map Virtual memory (bytes)=3944738816
		Peak Reduce Physical memory (bytes)=301064192
		Peak Reduce Virtual memory (bytes)=3962904576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.841 seconds
2021-01-28 02:04:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:17 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-28 02:04:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 02:04:17.953" starttime="20210128 02:04:17.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:04:17.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:04:17.954" starttime="20210128 02:04:17.953"></status>
</kw>
<status status="PASS" endtime="20210128 02:04:17.954" starttime="20210128 02:03:42.496"></status>
</kw>
<msg timestamp="20210128 02:04:17.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:04:17.954" starttime="20210128 02:03:42.496"></status>
</kw>
<msg timestamp="20210128 02:04:17.954" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:03:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:03...</msg>
<status status="PASS" endtime="20210128 02:04:17.954" starttime="20210128 02:03:42.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:04:17.955" starttime="20210128 02:04:17.955"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:04:17.955" critical="yes" starttime="20210128 02:03:42.476"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:04:17.959" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:04:17.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:04:17.963" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:04:17.964" starttime="20210128 02:04:17.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:04:17.964" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:04:17.965" starttime="20210128 02:04:17.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:04:17.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:04:17.965" starttime="20210128 02:04:17.965"></status>
</kw>
<status status="PASS" endtime="20210128 02:04:17.965" starttime="20210128 02:04:17.957"></status>
</kw>
<msg timestamp="20210128 02:04:17.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:04:17.966" starttime="20210128 02:04:17.957"></status>
</kw>
<msg timestamp="20210128 02:04:17.966" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:04:17.966" starttime="20210128 02:04:17.957"></status>
</kw>
<msg timestamp="20210128 02:04:17.966" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210128 02:04:17.966" starttime="20210128 02:04:17.957"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:04:17.966" level="INFO">${random} = TdogPljF</msg>
<status status="PASS" endtime="20210128 02:04:17.966" starttime="20210128 02:04:17.966"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:04:17.970" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:04:17.970" starttime="20210128 02:04:17.969"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:04:17.970" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:04:17.970" starttime="20210128 02:04:17.970"></status>
</kw>
<status status="PASS" endtime="20210128 02:04:17.970" starttime="20210128 02:04:17.969"></status>
</kw>
<msg timestamp="20210128 02:04:17.971" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:04:17.971" starttime="20210128 02:04:17.969"></status>
</kw>
<status status="PASS" endtime="20210128 02:04:17.971" starttime="20210128 02:04:17.968"></status>
</kw>
<msg timestamp="20210128 02:04:17.971" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:04:17.971" starttime="20210128 02:04:17.967"></status>
</kw>
<msg timestamp="20210128 02:04:17.971" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:04:17.971" starttime="20210128 02:04:17.967"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:04:17.974" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:04:17.974" starttime="20210128 02:04:17.974"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:04:17.974" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:04:17.974" starttime="20210128 02:04:17.974"></status>
</kw>
<status status="PASS" endtime="20210128 02:04:17.975" starttime="20210128 02:04:17.973"></status>
</kw>
<msg timestamp="20210128 02:04:17.975" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:04:17.975" starttime="20210128 02:04:17.973"></status>
</kw>
<status status="PASS" endtime="20210128 02:04:17.975" starttime="20210128 02:04:17.972"></status>
</kw>
<msg timestamp="20210128 02:04:17.975" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 02:04:17.975" starttime="20210128 02:04:17.972"></status>
</kw>
<msg timestamp="20210128 02:04:17.975" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 02:04:17.975" starttime="20210128 02:04:17.971"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:04:17.978" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:04:17.978" starttime="20210128 02:04:17.978"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:04:17.979" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:04:17.979" starttime="20210128 02:04:17.978"></status>
</kw>
<status status="PASS" endtime="20210128 02:04:17.979" starttime="20210128 02:04:17.977"></status>
</kw>
<msg timestamp="20210128 02:04:17.979" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:04:17.979" starttime="20210128 02:04:17.977"></status>
</kw>
<status status="PASS" endtime="20210128 02:04:17.979" starttime="20210128 02:04:17.976"></status>
</kw>
<msg timestamp="20210128 02:04:17.979" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-TdogPljF.txt</msg>
<status status="PASS" endtime="20210128 02:04:17.979" starttime="20210128 02:04:17.976"></status>
</kw>
<msg timestamp="20210128 02:04:17.979" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-TdogPljF.txt</msg>
<status status="PASS" endtime="20210128 02:04:17.979" starttime="20210128 02:04:17.975"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:04:17.982" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-TdogPljF.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:04:51.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:04:51.528" level="INFO">${output} = 2021-01-28 02:04:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 02:04:51.528" starttime="20210128 02:04:17.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:04:51.529" level="INFO">2021-01-28 02:04:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2021-01-28 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:19 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-28 02:04:20 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-28 02:04:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:04:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:04:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:04:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F4818A7ED76F-&gt;ec3439a4-3577-4e7c-b209-8d9f2abf0f7e
2021-01-28 02:04:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:04:20 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 02:04:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2F4891FF29FC-&gt;8c9b8565-a6c3-4484-af05-fb207a053fb0
2021-01-28 02:04:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:04:21 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 02:04:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611799351348_0002
2021-01-28 02:04:21 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 02:04:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:21 INFO  Configuration:2752 - resource-types.xml not found
2021-01-28 02:04:21 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-28 02:04:21 INFO  YarnClientImpl:324 - Submitted application application_1611799351348_0002
2021-01-28 02:04:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611799351348_0002/
2021-01-28 02:04:21 INFO  Job:1619 - Running job: job_1611799351348_0002
2021-01-28 02:04:29 INFO  Job:1640 - Job job_1611799351348_0002 running in uber mode : false
2021-01-28 02:04:29 INFO  Job:1647 -  map 0% reduce 0%
2021-01-28 02:04:35 INFO  Job:1647 -  map 33% reduce 0%
2021-01-28 02:04:40 INFO  Job:1647 -  map 67% reduce 0%
2021-01-28 02:04:45 INFO  Job:1647 -  map 100% reduce 0%
2021-01-28 02:04:50 INFO  Job:1647 -  map 100% reduce 100%
2021-01-28 02:04:51 INFO  Job:1658 - Job job_1611799351348_0002 completed successfully
2021-01-28 02:04:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078915
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36624
		Total time spent by all reduces in occupied slots (ms)=12852
		Total time spent by all map tasks (ms)=9156
		Total time spent by all reduce tasks (ms)=3213
		Total vcore-milliseconds taken by all map tasks=9156
		Total vcore-milliseconds taken by all reduce tasks=3213
		Total megabyte-milliseconds taken by all map tasks=37502976
		Total megabyte-milliseconds taken by all reduce tasks=13160448
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=582
		CPU time spent (ms)=5790
		Physical memory (bytes) snapshot=1263452160
		Virtual memory (bytes) snapshot=15799623680
		Total committed heap usage (bytes)=1058537472
		Peak Map Physical memory (bytes)=328802304
		Peak Map Virtual memory (bytes)=3946717184
		Peak Reduce Physical memory (bytes)=300933120
		Peak Reduce Virtual memory (bytes)=3964981248
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-28 02:04:51 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210128 02:04:51.529" starttime="20210128 02:04:51.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:04:51.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:04:51.530" starttime="20210128 02:04:51.530"></status>
</kw>
<status status="PASS" endtime="20210128 02:04:51.530" starttime="20210128 02:04:17.980"></status>
</kw>
<msg timestamp="20210128 02:04:51.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:04:51.530" starttime="20210128 02:04:17.980"></status>
</kw>
<msg timestamp="20210128 02:04:51.531" level="INFO">${output} = 2021-01-28 02:04:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-28 02:04:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210128 02:04:51.531" starttime="20210128 02:04:17.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 02:04:51.531" starttime="20210128 02:04:51.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:04:51.532" starttime="20210128 02:04:51.531"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:04:51.532" critical="yes" starttime="20210128 02:04:17.956"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 02:04:51.533" starttime="20210128 02:03:42.430"></status>
</suite>
<status status="PASS" elapsedtime="186757" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:07:27.559" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:07:38.426" level="INFO">${rc} = 255</msg>
<msg timestamp="20210128 02:07:38.426" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 02:07:38.426" starttime="20210128 02:07:27.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:07:38.427" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 02:07:38.427" starttime="20210128 02:07:38.427"></status>
</kw>
<msg timestamp="20210128 02:07:38.428" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210128 02:07:38.428" starttime="20210128 02:07:27.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:07:38.433" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:07:41.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:07:41.322" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:07:41.322" starttime="20210128 02:07:38.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:07:41.323" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:07:41.323" starttime="20210128 02:07:41.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:07:41.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:07:41.324" starttime="20210128 02:07:41.323"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:41.324" starttime="20210128 02:07:38.430"></status>
</kw>
<msg timestamp="20210128 02:07:41.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:07:41.324" starttime="20210128 02:07:38.429"></status>
</kw>
<msg timestamp="20210128 02:07:41.324" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210128 02:07:41.325" starttime="20210128 02:07:38.429"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210128 02:07:41.325" starttime="20210128 02:07:41.325"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:41.325" starttime="20210128 02:07:38.428"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:41.325" starttime="20210128 02:07:38.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:07:41.329" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:07:43.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:07:43.889" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:07:43.889" starttime="20210128 02:07:41.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:07:43.890" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:07:43.890" starttime="20210128 02:07:43.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:07:43.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:07:43.891" starttime="20210128 02:07:43.890"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:43.891" starttime="20210128 02:07:41.327"></status>
</kw>
<msg timestamp="20210128 02:07:43.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:07:43.891" starttime="20210128 02:07:41.326"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:43.891" starttime="20210128 02:07:41.326"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:43.891" starttime="20210128 02:07:41.326"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:43.891" starttime="20210128 02:07:41.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210128 02:07:43.892" starttime="20210128 02:07:43.892"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:07:43.896" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:07:46.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:07:46.637" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:07...</msg>
<status status="PASS" endtime="20210128 02:07:46.637" starttime="20210128 02:07:43.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:07:46.638" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:07:43.734Z",
  "modificationTime" : "2021-01-28T02:07:43.734Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210128 02:07:46.638" starttime="20210128 02:07:46.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:07:46.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:07:46.639" starttime="20210128 02:07:46.638"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:46.639" starttime="20210128 02:07:43.894"></status>
</kw>
<msg timestamp="20210128 02:07:46.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:07:46.639" starttime="20210128 02:07:43.893"></status>
</kw>
<msg timestamp="20210128 02:07:46.640" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-28T02:07...</msg>
<status status="PASS" endtime="20210128 02:07:46.640" starttime="20210128 02:07:43.892"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210128 02:07:46.640" starttime="20210128 02:07:46.640"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:07:46.643" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:07:46.643" starttime="20210128 02:07:46.643"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:07:46.644" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:07:46.644" starttime="20210128 02:07:46.643"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:46.644" starttime="20210128 02:07:46.643"></status>
</kw>
<msg timestamp="20210128 02:07:46.644" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:07:46.644" starttime="20210128 02:07:46.642"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:46.644" starttime="20210128 02:07:46.642"></status>
</kw>
<msg timestamp="20210128 02:07:46.644" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 02:07:46.644" starttime="20210128 02:07:46.641"></status>
</kw>
<msg timestamp="20210128 02:07:46.645" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210128 02:07:46.645" starttime="20210128 02:07:46.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:07:46.647" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:07:49.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:07:49.384" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:07:49.384" starttime="20210128 02:07:46.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:07:49.385" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:07:49.385" starttime="20210128 02:07:49.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:07:49.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:07:49.386" starttime="20210128 02:07:49.385"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:49.386" starttime="20210128 02:07:46.645"></status>
</kw>
<msg timestamp="20210128 02:07:49.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:07:49.386" starttime="20210128 02:07:46.645"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:49.386" starttime="20210128 02:07:46.645"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:07:49.390" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:07:55.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:07:55.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:07:55.556" starttime="20210128 02:07:49.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:07:55.557" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:07:55.557" starttime="20210128 02:07:55.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:07:55.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:07:55.558" starttime="20210128 02:07:55.557"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:55.558" starttime="20210128 02:07:49.388"></status>
</kw>
<msg timestamp="20210128 02:07:55.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:07:55.558" starttime="20210128 02:07:49.387"></status>
</kw>
<status status="PASS" endtime="20210128 02:07:55.558" starttime="20210128 02:07:49.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:07:55.561" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:08:00.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:08:00.084" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:08:00.084" starttime="20210128 02:07:55.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:08:00.086" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:08:00.086" starttime="20210128 02:08:00.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:08:00.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:08:00.086" starttime="20210128 02:08:00.086"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:00.087" starttime="20210128 02:07:55.559"></status>
</kw>
<msg timestamp="20210128 02:08:00.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:08:00.087" starttime="20210128 02:07:55.559"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:00.087" starttime="20210128 02:07:55.558"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:08:00.090" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:08:04.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:08:04.619" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:08:04.619" starttime="20210128 02:08:00.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:08:04.620" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:08:04.620" starttime="20210128 02:08:04.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:08:04.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:08:04.621" starttime="20210128 02:08:04.621"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:04.621" starttime="20210128 02:08:00.088"></status>
</kw>
<msg timestamp="20210128 02:08:04.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:08:04.621" starttime="20210128 02:08:00.088"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:04.622" starttime="20210128 02:08:00.087"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:08:04.622" critical="yes" starttime="20210128 02:07:27.554"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:08:04.626" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:08:04.626" starttime="20210128 02:08:04.626"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:08:04.626" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:08:04.626" starttime="20210128 02:08:04.626"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:04.627" starttime="20210128 02:08:04.625"></status>
</kw>
<msg timestamp="20210128 02:08:04.627" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:08:04.627" starttime="20210128 02:08:04.625"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:04.627" starttime="20210128 02:08:04.624"></status>
</kw>
<msg timestamp="20210128 02:08:04.627" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 02:08:04.627" starttime="20210128 02:08:04.623"></status>
</kw>
<msg timestamp="20210128 02:08:04.627" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 02:08:04.627" starttime="20210128 02:08:04.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:08:04.630" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:08:07.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:08:07.327" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:08:07.327" starttime="20210128 02:08:04.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:08:07.328" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:08:07.328" starttime="20210128 02:08:07.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:08:07.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:08:07.329" starttime="20210128 02:08:07.329"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:07.329" starttime="20210128 02:08:04.628"></status>
</kw>
<msg timestamp="20210128 02:08:07.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:08:07.329" starttime="20210128 02:08:04.628"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:07.330" starttime="20210128 02:08:04.627"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:08:07.333" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:08:10.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:08:10.169" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210128 02:08:10.169" starttime="20210128 02:08:07.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:08:10.170" level="INFO"></msg>
<status status="PASS" endtime="20210128 02:08:10.170" starttime="20210128 02:08:10.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:08:10.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:08:10.171" starttime="20210128 02:08:10.170"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:10.171" starttime="20210128 02:08:07.331"></status>
</kw>
<msg timestamp="20210128 02:08:10.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:08:10.171" starttime="20210128 02:08:07.330"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:10.171" starttime="20210128 02:08:07.330"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210128 02:08:10.172" critical="yes" starttime="20210128 02:08:04.622"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210128 02:08:10.173" starttime="20210128 02:07:27.498"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:09:43.337" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:09:43.337" starttime="20210128 02:09:43.337"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:09:43.338" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:09:43.338" starttime="20210128 02:09:43.337"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:43.338" starttime="20210128 02:09:43.337"></status>
</kw>
<msg timestamp="20210128 02:09:43.338" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:09:43.338" starttime="20210128 02:09:43.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:09:43.339" starttime="20210128 02:09:43.339"></status>
</kw>
<msg timestamp="20210128 02:09:43.339" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 02:09:43.339" starttime="20210128 02:09:43.338"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:43.339" starttime="20210128 02:09:43.335"></status>
</kw>
<msg timestamp="20210128 02:09:43.340" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:09:43.340" starttime="20210128 02:09:43.335"></status>
</kw>
<msg timestamp="20210128 02:09:43.340" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:09:43.340" starttime="20210128 02:09:43.334"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:09:43.340" level="INFO">${random} = 45547</msg>
<status status="PASS" endtime="20210128 02:09:43.340" starttime="20210128 02:09:43.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:09:43.345" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-45547 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:09:46.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:09:46.530" level="INFO">${output} = 2021-01-28 02:09:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:09:45 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 02:09:46.530" starttime="20210128 02:09:43.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:09:46.531" level="INFO">2021-01-28 02:09:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:09:45 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:09:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:09:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:09:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AC0D20A375F9-&gt;648f9746-c6b5-4806-838d-4a665ca956e3
2021-01-28 02:09:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210128 02:09:46.531" starttime="20210128 02:09:46.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:09:46.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:09:46.532" starttime="20210128 02:09:46.531"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:46.532" starttime="20210128 02:09:43.341"></status>
</kw>
<msg timestamp="20210128 02:09:46.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:09:46.532" starttime="20210128 02:09:43.341"></status>
</kw>
<msg timestamp="20210128 02:09:46.533" level="INFO">${result} = 2021-01-28 02:09:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:09:45 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 02:09:46.533" starttime="20210128 02:09:43.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:09:46.536" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:09:48.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:09:48.155" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:08 ofs://om/volume1/bucket1/ozone-00810
-rw-...</msg>
<status status="PASS" endtime="20210128 02:09:48.155" starttime="20210128 02:09:46.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:09:48.156" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:08 ofs://om/volume1/bucket1/ozone-00810
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:09 ofs://om/volume1/bucket1/ozone-45547
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:08 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:09 ofs://om/volume1/bucket1/wordcount-PC9dXh8F.txt</msg>
<status status="PASS" endtime="20210128 02:09:48.156" starttime="20210128 02:09:48.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:09:48.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:09:48.157" starttime="20210128 02:09:48.157"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:48.157" starttime="20210128 02:09:46.534"></status>
</kw>
<msg timestamp="20210128 02:09:48.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:09:48.157" starttime="20210128 02:09:46.533"></status>
</kw>
<msg timestamp="20210128 02:09:48.158" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:08 ofs://om/volume1/bucket1/ozone-00810
-rw-...</msg>
<status status="PASS" endtime="20210128 02:09:48.158" starttime="20210128 02:09:46.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:09:48.158" starttime="20210128 02:09:48.158"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 02:09:48.158" critical="yes" starttime="20210128 02:09:43.333"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 02:09:48.160" starttime="20210128 02:09:43.286"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:08:14.497" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:08:14.497" starttime="20210128 02:08:14.496"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:08:14.498" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:08:14.498" starttime="20210128 02:08:14.497"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:14.498" starttime="20210128 02:08:14.496"></status>
</kw>
<msg timestamp="20210128 02:08:14.498" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:08:14.498" starttime="20210128 02:08:14.496"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:14.498" starttime="20210128 02:08:14.495"></status>
</kw>
<msg timestamp="20210128 02:08:14.498" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:08:14.498" starttime="20210128 02:08:14.494"></status>
</kw>
<msg timestamp="20210128 02:08:14.498" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:08:14.498" starttime="20210128 02:08:14.494"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:08:14.499" level="INFO">${random} = 00810</msg>
<status status="PASS" endtime="20210128 02:08:14.499" starttime="20210128 02:08:14.499"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:08:14.503" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-00810 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:08:18.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:08:18.094" level="INFO">${output} = 2021-01-28 02:08:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:08:16 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 02:08:18.094" starttime="20210128 02:08:14.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:08:18.096" level="INFO">2021-01-28 02:08:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:08:16 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:08:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:08:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:08:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-391632D0D9AC-&gt;648f9746-c6b5-4806-838d-4a665ca956e3
2021-01-28 02:08:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210128 02:08:18.096" starttime="20210128 02:08:18.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:08:18.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:08:18.097" starttime="20210128 02:08:18.096"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:18.097" starttime="20210128 02:08:14.500"></status>
</kw>
<msg timestamp="20210128 02:08:18.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:08:18.097" starttime="20210128 02:08:14.499"></status>
</kw>
<msg timestamp="20210128 02:08:18.097" level="INFO">${result} = 2021-01-28 02:08:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:08:16 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210128 02:08:18.097" starttime="20210128 02:08:14.499"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:08:18.101" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:08:19.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:08:19.744" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:08 o3fs://bucket1.volume1.om/ozone-00810
dr...</msg>
<status status="PASS" endtime="20210128 02:08:19.744" starttime="20210128 02:08:18.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:08:19.745" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:08 o3fs://bucket1.volume1.om/ozone-00810
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:08 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210128 02:08:19.745" starttime="20210128 02:08:19.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:08:19.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:08:19.745" starttime="20210128 02:08:19.745"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:19.746" starttime="20210128 02:08:18.099"></status>
</kw>
<msg timestamp="20210128 02:08:19.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:08:19.746" starttime="20210128 02:08:18.098"></status>
</kw>
<msg timestamp="20210128 02:08:19.746" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-28 02:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-28 02:08 o3fs://bucket1.volume1.om/ozone-00810
dr...</msg>
<status status="PASS" endtime="20210128 02:08:19.746" starttime="20210128 02:08:18.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:08:19.747" starttime="20210128 02:08:19.746"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210128 02:08:19.747" critical="yes" starttime="20210128 02:08:14.493"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210128 02:08:19.748" starttime="20210128 02:08:14.448"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:09:52.494" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:09:52.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:09:52.500" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:09:52.500" starttime="20210128 02:09:52.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:09:52.501" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:09:52.501" starttime="20210128 02:09:52.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:09:52.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:09:52.502" starttime="20210128 02:09:52.501"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:52.502" starttime="20210128 02:09:52.490"></status>
</kw>
<msg timestamp="20210128 02:09:52.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:09:52.502" starttime="20210128 02:09:52.490"></status>
</kw>
<msg timestamp="20210128 02:09:52.502" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:09:52.502" starttime="20210128 02:09:52.489"></status>
</kw>
<msg timestamp="20210128 02:09:52.502" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:09:52.502" starttime="20210128 02:09:52.489"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:09:52.507" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:09:52.507" starttime="20210128 02:09:52.506"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:09:52.507" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:09:52.507" starttime="20210128 02:09:52.507"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:52.507" starttime="20210128 02:09:52.506"></status>
</kw>
<msg timestamp="20210128 02:09:52.507" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:09:52.508" starttime="20210128 02:09:52.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:09:52.509" starttime="20210128 02:09:52.508"></status>
</kw>
<msg timestamp="20210128 02:09:52.509" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 02:09:52.509" starttime="20210128 02:09:52.508"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:52.509" starttime="20210128 02:09:52.505"></status>
</kw>
<msg timestamp="20210128 02:09:52.509" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:09:52.509" starttime="20210128 02:09:52.503"></status>
</kw>
<msg timestamp="20210128 02:09:52.509" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:09:52.509" starttime="20210128 02:09:52.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:09:52.512" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:10:27.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:10:27.882" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:09:54 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:09:54 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 02:10:27.882" starttime="20210128 02:09:52.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:10:27.883" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:09:54 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:09:54 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:09:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:09:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:09:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-13180F9E40DF-&gt;65ae1e77-2f42-4a46-91b6-6b40fa9db257
2021-01-28 02:09:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-28 02:09:55 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-01-28 02:09:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 02:09:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4560D132B0A1-&gt;648f9746-c6b5-4806-838d-4a665ca956e3
2021-01-28 02:09:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:09:55 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 02:09:58 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 02:09:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611799625211_0003
2021-01-28 02:09:58 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 02:09:58 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 02:09:58 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 02:09:58 INFO  YarnClientImpl:329 - Submitted application application_1611799625211_0003
2021-01-28 02:09:58 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611799625211_0003/
2021-01-28 02:09:58 INFO  Job:1614 - Running job: job_1611799625211_0003
2021-01-28 02:10:06 INFO  Job:1635 - Job job_1611799625211_0003 running in uber mode : false
2021-01-28 02:10:06 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 02:10:12 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 02:10:17 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 02:10:22 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 02:10:26 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 02:10:27 INFO  Job:1653 - Job job_1611799625211_0003 completed successfully
2021-01-28 02:10:27 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091549
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36848
		Total time spent by all reduces in occupied slots (ms)=13868
		Total time spent by all map tasks (ms)=9212
		Total time spent by all reduce tasks (ms)=3467
		Total vcore-milliseconds taken by all map tasks=9212
		Total vcore-milliseconds taken by all reduce tasks=3467
		Total megabyte-milliseconds taken by all map tasks=37732352
		Total megabyte-milliseconds taken by all reduce tasks=14200832
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=582
		CPU time spent (ms)=6500
		Physical memory (bytes) snapshot=1507110912
		Virtual memory (bytes) snapshot=15800561664
		Total committed heap usage (bytes)=1770520576
		Peak Map Physical memory (bytes)=373628928
		Peak Map Virtual memory (bytes)=3946311680
		Peak Reduce Physical memory (bytes)=399310848
		Peak Reduce Virtual memory (bytes)=3973287936
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.078 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210128 02:10:27.883" starttime="20210128 02:10:27.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:10:27.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:10:27.884" starttime="20210128 02:10:27.884"></status>
</kw>
<status status="PASS" endtime="20210128 02:10:27.884" starttime="20210128 02:09:52.510"></status>
</kw>
<msg timestamp="20210128 02:10:27.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:10:27.885" starttime="20210128 02:09:52.510"></status>
</kw>
<msg timestamp="20210128 02:10:27.885" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:09:54 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:09:54 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 02:10:27.885" starttime="20210128 02:09:52.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:10:27.885" starttime="20210128 02:10:27.885"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:10:27.886" critical="yes" starttime="20210128 02:09:52.488"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:10:27.890" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:10:27.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:10:27.895" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:10:27.895" starttime="20210128 02:10:27.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:10:27.896" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:10:27.896" starttime="20210128 02:10:27.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:10:27.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:10:27.897" starttime="20210128 02:10:27.896"></status>
</kw>
<status status="PASS" endtime="20210128 02:10:27.897" starttime="20210128 02:10:27.888"></status>
</kw>
<msg timestamp="20210128 02:10:27.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:10:27.897" starttime="20210128 02:10:27.888"></status>
</kw>
<msg timestamp="20210128 02:10:27.898" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:10:27.898" starttime="20210128 02:10:27.887"></status>
</kw>
<msg timestamp="20210128 02:10:27.898" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:10:27.898" starttime="20210128 02:10:27.887"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:10:27.898" level="INFO">${random} = iFnStYcK</msg>
<status status="PASS" endtime="20210128 02:10:27.898" starttime="20210128 02:10:27.898"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:10:27.902" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:10:27.902" starttime="20210128 02:10:27.902"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:10:27.902" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:10:27.903" starttime="20210128 02:10:27.902"></status>
</kw>
<status status="PASS" endtime="20210128 02:10:27.903" starttime="20210128 02:10:27.901"></status>
</kw>
<msg timestamp="20210128 02:10:27.903" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:10:27.903" starttime="20210128 02:10:27.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210128 02:10:27.904" starttime="20210128 02:10:27.903"></status>
</kw>
<msg timestamp="20210128 02:10:27.904" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210128 02:10:27.904" starttime="20210128 02:10:27.903"></status>
</kw>
<status status="PASS" endtime="20210128 02:10:27.904" starttime="20210128 02:10:27.900"></status>
</kw>
<msg timestamp="20210128 02:10:27.904" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:10:27.904" starttime="20210128 02:10:27.899"></status>
</kw>
<msg timestamp="20210128 02:10:27.905" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210128 02:10:27.905" starttime="20210128 02:10:27.899"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:10:27.908" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:10:27.908" starttime="20210128 02:10:27.907"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:10:27.908" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:10:27.908" starttime="20210128 02:10:27.908"></status>
</kw>
<status status="PASS" endtime="20210128 02:10:27.908" starttime="20210128 02:10:27.907"></status>
</kw>
<msg timestamp="20210128 02:10:27.908" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:10:27.909" starttime="20210128 02:10:27.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:10:27.910" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210128 02:10:27.910" starttime="20210128 02:10:27.910"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:10:27.910" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210128 02:10:27.910" starttime="20210128 02:10:27.910"></status>
</kw>
<status status="PASS" endtime="20210128 02:10:27.911" starttime="20210128 02:10:27.909"></status>
</kw>
<msg timestamp="20210128 02:10:27.911" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210128 02:10:27.911" starttime="20210128 02:10:27.909"></status>
</kw>
<status status="PASS" endtime="20210128 02:10:27.911" starttime="20210128 02:10:27.906"></status>
</kw>
<msg timestamp="20210128 02:10:27.911" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 02:10:27.911" starttime="20210128 02:10:27.905"></status>
</kw>
<msg timestamp="20210128 02:10:27.911" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210128 02:10:27.911" starttime="20210128 02:10:27.905"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210128 02:10:27.914" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210128 02:10:27.914" starttime="20210128 02:10:27.914"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:10:27.914" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210128 02:10:27.914" starttime="20210128 02:10:27.914"></status>
</kw>
<status status="PASS" endtime="20210128 02:10:27.915" starttime="20210128 02:10:27.913"></status>
</kw>
<msg timestamp="20210128 02:10:27.915" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210128 02:10:27.915" starttime="20210128 02:10:27.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:10:27.916" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210128 02:10:27.916" starttime="20210128 02:10:27.916"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:10:27.916" level="INFO">${result} = /wordcount-iFnStYcK.txt</msg>
<status status="PASS" endtime="20210128 02:10:27.917" starttime="20210128 02:10:27.916"></status>
</kw>
<status status="PASS" endtime="20210128 02:10:27.917" starttime="20210128 02:10:27.915"></status>
</kw>
<msg timestamp="20210128 02:10:27.917" level="INFO">${path_with_leading} = /wordcount-iFnStYcK.txt</msg>
<status status="PASS" endtime="20210128 02:10:27.917" starttime="20210128 02:10:27.915"></status>
</kw>
<status status="PASS" endtime="20210128 02:10:27.917" starttime="20210128 02:10:27.912"></status>
</kw>
<msg timestamp="20210128 02:10:27.917" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-iFnStYcK.txt</msg>
<status status="PASS" endtime="20210128 02:10:27.917" starttime="20210128 02:10:27.912"></status>
</kw>
<msg timestamp="20210128 02:10:27.917" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-iFnStYcK.txt</msg>
<status status="PASS" endtime="20210128 02:10:27.917" starttime="20210128 02:10:27.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:10:27.920" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-iFnStYcK.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:11:05.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:11:05.111" level="INFO">${output} = 2021-01-28 02:10:29 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-01-28 02:10:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210128 02:11:05.112" starttime="20210128 02:10:27.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:11:05.113" level="INFO">2021-01-28 02:10:29 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-01-28 02:10:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 02:10:29 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:10:30 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:10:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:10:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:10:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-26BE9941C39C-&gt;65ae1e77-2f42-4a46-91b6-6b40fa9db257
2021-01-28 02:10:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:10:31 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 02:10:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AB9AF343BD23-&gt;648f9746-c6b5-4806-838d-4a665ca956e3
2021-01-28 02:10:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:10:31 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 02:10:33 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611799625211_0004
2021-01-28 02:10:33 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 02:10:34 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 02:10:34 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 02:10:34 INFO  YarnClientImpl:329 - Submitted application application_1611799625211_0004
2021-01-28 02:10:34 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611799625211_0004/
2021-01-28 02:10:34 INFO  Job:1614 - Running job: job_1611799625211_0004
2021-01-28 02:10:41 INFO  Job:1635 - Job job_1611799625211_0004 running in uber mode : false
2021-01-28 02:10:41 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 02:10:47 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 02:10:52 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 02:10:57 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 02:11:01 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 02:11:04 INFO  Job:1653 - Job job_1611799625211_0004 completed successfully
2021-01-28 02:11:04 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154231
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37540
		Total time spent by all reduces in occupied slots (ms)=13520
		Total time spent by all map tasks (ms)=9385
		Total time spent by all reduce tasks (ms)=3380
		Total vcore-milliseconds taken by all map tasks=9385
		Total vcore-milliseconds taken by all reduce tasks=3380
		Total megabyte-milliseconds taken by all map tasks=38440960
		Total megabyte-milliseconds taken by all reduce tasks=13844480
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=570
		CPU time spent (ms)=6720
		Physical memory (bytes) snapshot=1513365504
		Virtual memory (bytes) snapshot=15798431744
		Total committed heap usage (bytes)=1781530624
		Peak Map Physical memory (bytes)=376061952
		Peak Map Virtual memory (bytes)=3944448000
		Peak Reduce Physical memory (bytes)=398229504
		Peak Reduce Virtual memory (bytes)=3974197248
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210128 02:11:05.113" starttime="20210128 02:11:05.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:11:05.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:11:05.113" starttime="20210128 02:11:05.113"></status>
</kw>
<status status="PASS" endtime="20210128 02:11:05.114" starttime="20210128 02:10:27.918"></status>
</kw>
<msg timestamp="20210128 02:11:05.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:11:05.114" starttime="20210128 02:10:27.918"></status>
</kw>
<msg timestamp="20210128 02:11:05.114" level="INFO">${output} = 2021-01-28 02:10:29 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-01-28 02:10:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210128 02:11:05.114" starttime="20210128 02:10:27.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 02:11:05.115" starttime="20210128 02:11:05.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:11:05.115" starttime="20210128 02:11:05.115"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:11:05.115" critical="yes" starttime="20210128 02:10:27.886"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 02:11:05.116" starttime="20210128 02:09:52.442"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:08:24.081" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:08:24.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:08:24.087" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:08:24.087" starttime="20210128 02:08:24.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:08:24.088" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:08:24.088" starttime="20210128 02:08:24.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:08:24.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:08:24.088" starttime="20210128 02:08:24.088"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:24.089" starttime="20210128 02:08:24.077"></status>
</kw>
<msg timestamp="20210128 02:08:24.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:08:24.089" starttime="20210128 02:08:24.077"></status>
</kw>
<msg timestamp="20210128 02:08:24.089" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:08:24.089" starttime="20210128 02:08:24.076"></status>
</kw>
<msg timestamp="20210128 02:08:24.089" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:08:24.089" starttime="20210128 02:08:24.076"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:08:24.093" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:08:24.093" starttime="20210128 02:08:24.093"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:08:24.094" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:08:24.094" starttime="20210128 02:08:24.093"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:24.094" starttime="20210128 02:08:24.092"></status>
</kw>
<msg timestamp="20210128 02:08:24.094" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:08:24.094" starttime="20210128 02:08:24.092"></status>
</kw>
<status status="PASS" endtime="20210128 02:08:24.094" starttime="20210128 02:08:24.091"></status>
</kw>
<msg timestamp="20210128 02:08:24.095" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:08:24.095" starttime="20210128 02:08:24.090"></status>
</kw>
<msg timestamp="20210128 02:08:24.095" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:08:24.095" starttime="20210128 02:08:24.089"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:08:24.097" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:09:05.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:09:05.643" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:08:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:08:26 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 02:09:05.644" starttime="20210128 02:08:24.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:09:05.645" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:08:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:08:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:08:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:08:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:08:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5610B61F5CAB-&gt;65ae1e77-2f42-4a46-91b6-6b40fa9db257
2021-01-28 02:08:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-28 02:08:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-631B59542B27-&gt;648f9746-c6b5-4806-838d-4a665ca956e3
2021-01-28 02:08:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-28 02:08:29 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-01-28 02:08:30 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 02:08:32 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 02:08:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611799625211_0001
2021-01-28 02:08:32 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 02:08:33 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 02:08:33 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 02:08:33 INFO  YarnClientImpl:329 - Submitted application application_1611799625211_0001
2021-01-28 02:08:33 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611799625211_0001/
2021-01-28 02:08:33 INFO  Job:1614 - Running job: job_1611799625211_0001
2021-01-28 02:08:42 INFO  Job:1635 - Job job_1611799625211_0001 running in uber mode : false
2021-01-28 02:08:42 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 02:08:48 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 02:08:53 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 02:08:58 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 02:09:03 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 02:09:04 INFO  Job:1653 - Job job_1611799625211_0001 completed successfully
2021-01-28 02:09:05 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091761
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35168
		Total time spent by all reduces in occupied slots (ms)=13856
		Total time spent by all map tasks (ms)=8792
		Total time spent by all reduce tasks (ms)=3464
		Total vcore-milliseconds taken by all map tasks=8792
		Total vcore-milliseconds taken by all reduce tasks=3464
		Total megabyte-milliseconds taken by all map tasks=36012032
		Total megabyte-milliseconds taken by all reduce tasks=14188544
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=567
		CPU time spent (ms)=5800
		Physical memory (bytes) snapshot=1508749312
		Virtual memory (bytes) snapshot=15805952000
		Total committed heap usage (bytes)=1794637824
		Peak Map Physical memory (bytes)=378413056
		Peak Map Virtual memory (bytes)=3954618368
		Peak Reduce Physical memory (bytes)=401776640
		Peak Reduce Virtual memory (bytes)=3974332416
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.508 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210128 02:09:05.645" starttime="20210128 02:09:05.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:09:05.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:09:05.646" starttime="20210128 02:09:05.645"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:05.646" starttime="20210128 02:08:24.096"></status>
</kw>
<msg timestamp="20210128 02:09:05.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:09:05.646" starttime="20210128 02:08:24.095"></status>
</kw>
<msg timestamp="20210128 02:09:05.647" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-28 02:08:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:08:26 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210128 02:09:05.647" starttime="20210128 02:08:24.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:09:05.647" starttime="20210128 02:09:05.647"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:09:05.647" critical="yes" starttime="20210128 02:08:24.075"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:09:05.652" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:09:05.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:09:05.658" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:09:05.658" starttime="20210128 02:09:05.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:09:05.659" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:09:05.659" starttime="20210128 02:09:05.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:09:05.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:09:05.660" starttime="20210128 02:09:05.659"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:05.660" starttime="20210128 02:09:05.650"></status>
</kw>
<msg timestamp="20210128 02:09:05.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:09:05.660" starttime="20210128 02:09:05.650"></status>
</kw>
<msg timestamp="20210128 02:09:05.660" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:09:05.660" starttime="20210128 02:09:05.649"></status>
</kw>
<msg timestamp="20210128 02:09:05.661" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210128 02:09:05.661" starttime="20210128 02:09:05.649"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210128 02:09:05.661" level="INFO">${random} = PC9dXh8F</msg>
<status status="PASS" endtime="20210128 02:09:05.661" starttime="20210128 02:09:05.661"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:09:05.665" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:09:05.665" starttime="20210128 02:09:05.664"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:09:05.665" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:09:05.665" starttime="20210128 02:09:05.665"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:05.666" starttime="20210128 02:09:05.664"></status>
</kw>
<msg timestamp="20210128 02:09:05.666" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:09:05.666" starttime="20210128 02:09:05.663"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:05.666" starttime="20210128 02:09:05.662"></status>
</kw>
<msg timestamp="20210128 02:09:05.666" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:09:05.666" starttime="20210128 02:09:05.662"></status>
</kw>
<msg timestamp="20210128 02:09:05.666" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210128 02:09:05.666" starttime="20210128 02:09:05.661"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:09:05.670" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:09:05.670" starttime="20210128 02:09:05.669"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:09:05.670" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:09:05.670" starttime="20210128 02:09:05.670"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:05.670" starttime="20210128 02:09:05.669"></status>
</kw>
<msg timestamp="20210128 02:09:05.670" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:09:05.670" starttime="20210128 02:09:05.668"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:05.671" starttime="20210128 02:09:05.668"></status>
</kw>
<msg timestamp="20210128 02:09:05.671" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 02:09:05.671" starttime="20210128 02:09:05.667"></status>
</kw>
<msg timestamp="20210128 02:09:05.671" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210128 02:09:05.671" starttime="20210128 02:09:05.666"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210128 02:09:05.674" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210128 02:09:05.674" starttime="20210128 02:09:05.674"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210128 02:09:05.675" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210128 02:09:05.675" starttime="20210128 02:09:05.674"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:05.675" starttime="20210128 02:09:05.673"></status>
</kw>
<msg timestamp="20210128 02:09:05.675" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210128 02:09:05.675" starttime="20210128 02:09:05.673"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:05.675" starttime="20210128 02:09:05.672"></status>
</kw>
<msg timestamp="20210128 02:09:05.675" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-PC9dXh8F.txt</msg>
<status status="PASS" endtime="20210128 02:09:05.675" starttime="20210128 02:09:05.672"></status>
</kw>
<msg timestamp="20210128 02:09:05.676" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-PC9dXh8F.txt</msg>
<status status="PASS" endtime="20210128 02:09:05.676" starttime="20210128 02:09:05.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210128 02:09:05.679" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-PC9dXh8F.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210128 02:09:38.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210128 02:09:38.905" level="INFO">${output} = 2021-01-28 02:09:07 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-01-28 02:09:07 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210128 02:09:38.906" starttime="20210128 02:09:05.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210128 02:09:38.907" level="INFO">2021-01-28 02:09:07 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-01-28 02:09:07 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-28 02:09:07 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-28 02:09:07 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-28 02:09:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-28 02:09:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-28 02:09:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6F705D8F9ED8-&gt;65ae1e77-2f42-4a46-91b6-6b40fa9db257
2021-01-28 02:09:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:09:08 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-28 02:09:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-12DF283F5E67-&gt;648f9746-c6b5-4806-838d-4a665ca956e3
2021-01-28 02:09:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-28 02:09:09 INFO  JobSubmitter:202 - number of splits:3
2021-01-28 02:09:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611799625211_0002
2021-01-28 02:09:09 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-28 02:09:10 INFO  Configuration:2795 - resource-types.xml not found
2021-01-28 02:09:10 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-28 02:09:10 INFO  YarnClientImpl:329 - Submitted application application_1611799625211_0002
2021-01-28 02:09:10 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611799625211_0002/
2021-01-28 02:09:10 INFO  Job:1614 - Running job: job_1611799625211_0002
2021-01-28 02:09:17 INFO  Job:1635 - Job job_1611799625211_0002 running in uber mode : false
2021-01-28 02:09:17 INFO  Job:1642 -  map 0% reduce 0%
2021-01-28 02:09:23 INFO  Job:1642 -  map 33% reduce 0%
2021-01-28 02:09:28 INFO  Job:1642 -  map 67% reduce 0%
2021-01-28 02:09:33 INFO  Job:1642 -  map 100% reduce 0%
2021-01-28 02:09:37 INFO  Job:1642 -  map 100% reduce 100%
2021-01-28 02:09:38 INFO  Job:1653 - Job job_1611799625211_0002 completed successfully
2021-01-28 02:09:38 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154315
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36188
		Total time spent by all reduces in occupied slots (ms)=13140
		Total time spent by all map tasks (ms)=9047
		Total time spent by all reduce tasks (ms)=3285
		Total vcore-milliseconds taken by all map tasks=9047
		Total vcore-milliseconds taken by all reduce tasks=3285
		Total megabyte-milliseconds taken by all map tasks=37056512
		Total megabyte-milliseconds taken by all reduce tasks=13455360
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=593
		CPU time spent (ms)=6060
		Physical memory (bytes) snapshot=1518395392
		Virtual memory (bytes) snapshot=15806222336
		Total committed heap usage (bytes)=1797783552
		Peak Map Physical memory (bytes)=374902784
		Peak Map Virtual memory (bytes)=3947532288
		Peak Reduce Physical memory (bytes)=398340096
		Peak Reduce Virtual memory (bytes)=3972227072
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210128 02:09:38.907" starttime="20210128 02:09:38.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210128 02:09:38.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210128 02:09:38.908" starttime="20210128 02:09:38.907"></status>
</kw>
<status status="PASS" endtime="20210128 02:09:38.908" starttime="20210128 02:09:05.677"></status>
</kw>
<msg timestamp="20210128 02:09:38.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210128 02:09:38.908" starttime="20210128 02:09:05.677"></status>
</kw>
<msg timestamp="20210128 02:09:38.909" level="INFO">${output} = 2021-01-28 02:09:07 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.6:8032
2021-01-28 02:09:07 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210128 02:09:38.909" starttime="20210128 02:09:05.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210128 02:09:38.909" starttime="20210128 02:09:38.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210128 02:09:38.910" starttime="20210128 02:09:38.910"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210128 02:09:38.910" critical="yes" starttime="20210128 02:09:05.648"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210128 02:09:38.911" starttime="20210128 02:08:24.030"></status>
</suite>
<status status="PASS" elapsedtime="200404" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="572252" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
