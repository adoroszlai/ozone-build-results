<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210106 15:06:24.963" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:02:10.844" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:02:14.902" level="INFO">${rc} = 255</msg>
<msg timestamp="20210106 15:02:14.902" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:14.902" starttime="20210106 15:02:10.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:02:14.903" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210106 15:02:14.904" starttime="20210106 15:02:14.903"></status>
</kw>
<msg timestamp="20210106 15:02:14.904" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:14.904" starttime="20210106 15:02:10.839"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:02:14.910" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:02:18.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:02:18.795" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:18.795" starttime="20210106 15:02:14.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:02:18.797" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:02:18.797" starttime="20210106 15:02:18.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:02:18.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:02:18.797" starttime="20210106 15:02:18.797"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:18.798" starttime="20210106 15:02:14.906"></status>
</kw>
<msg timestamp="20210106 15:02:18.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:02:18.798" starttime="20210106 15:02:14.905"></status>
</kw>
<msg timestamp="20210106 15:02:18.798" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:18.798" starttime="20210106 15:02:14.905"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210106 15:02:18.799" starttime="20210106 15:02:18.798"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:18.799" starttime="20210106 15:02:14.905"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:18.799" starttime="20210106 15:02:14.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:02:18.805" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:02:22.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:02:22.257" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:22.257" starttime="20210106 15:02:18.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:02:22.259" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:02:22.259" starttime="20210106 15:02:22.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:02:22.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:02:22.260" starttime="20210106 15:02:22.259"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:22.260" starttime="20210106 15:02:18.800"></status>
</kw>
<msg timestamp="20210106 15:02:22.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:02:22.260" starttime="20210106 15:02:18.800"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:22.260" starttime="20210106 15:02:18.800"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:22.261" starttime="20210106 15:02:18.799"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:22.261" starttime="20210106 15:02:18.799"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210106 15:02:22.261" starttime="20210106 15:02:22.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:02:22.266" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:02:25.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:02:25.657" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:25.657" starttime="20210106 15:02:22.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:02:25.658" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:02:22.055Z",
  "modificationTime" : "2021-01-06T15:02:22.055Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210106 15:02:25.658" starttime="20210106 15:02:25.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:02:25.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:02:25.658" starttime="20210106 15:02:25.658"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:25.659" starttime="20210106 15:02:22.262"></status>
</kw>
<msg timestamp="20210106 15:02:25.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:02:25.659" starttime="20210106 15:02:22.262"></status>
</kw>
<msg timestamp="20210106 15:02:25.659" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:25.659" starttime="20210106 15:02:22.261"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210106 15:02:25.660" starttime="20210106 15:02:25.659"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 15:02:25.663" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 15:02:25.663" starttime="20210106 15:02:25.663"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:02:25.664" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 15:02:25.664" starttime="20210106 15:02:25.663"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:25.664" starttime="20210106 15:02:25.662"></status>
</kw>
<msg timestamp="20210106 15:02:25.664" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 15:02:25.664" starttime="20210106 15:02:25.662"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:25.664" starttime="20210106 15:02:25.661"></status>
</kw>
<msg timestamp="20210106 15:02:25.664" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210106 15:02:25.664" starttime="20210106 15:02:25.661"></status>
</kw>
<msg timestamp="20210106 15:02:25.664" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210106 15:02:25.665" starttime="20210106 15:02:25.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:02:25.668" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:02:29.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:02:29.299" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:29.299" starttime="20210106 15:02:25.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:02:29.301" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:02:29.301" starttime="20210106 15:02:29.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:02:29.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:02:29.302" starttime="20210106 15:02:29.301"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:29.302" starttime="20210106 15:02:25.665"></status>
</kw>
<msg timestamp="20210106 15:02:29.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:02:29.302" starttime="20210106 15:02:25.665"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:29.302" starttime="20210106 15:02:25.665"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:02:29.306" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:02:37.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:02:37.281" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:37.281" starttime="20210106 15:02:29.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:02:37.282" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:02:37.282" starttime="20210106 15:02:37.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:02:37.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:02:37.286" starttime="20210106 15:02:37.282"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:37.287" starttime="20210106 15:02:29.303"></status>
</kw>
<msg timestamp="20210106 15:02:37.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:02:37.287" starttime="20210106 15:02:29.303"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:37.287" starttime="20210106 15:02:29.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:02:37.291" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:02:43.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:02:43.027" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:43.027" starttime="20210106 15:02:37.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:02:43.028" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:02:43.028" starttime="20210106 15:02:43.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:02:43.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:02:43.029" starttime="20210106 15:02:43.029"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:43.029" starttime="20210106 15:02:37.288"></status>
</kw>
<msg timestamp="20210106 15:02:43.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:02:43.029" starttime="20210106 15:02:37.288"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:43.030" starttime="20210106 15:02:37.287"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:02:43.034" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:02:48.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:02:48.580" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:48.580" starttime="20210106 15:02:43.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:02:48.582" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:02:48.582" starttime="20210106 15:02:48.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:02:48.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:02:48.582" starttime="20210106 15:02:48.582"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:48.582" starttime="20210106 15:02:43.030"></status>
</kw>
<msg timestamp="20210106 15:02:48.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:02:48.583" starttime="20210106 15:02:43.030"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:48.583" starttime="20210106 15:02:43.030"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:02:48.583" critical="yes" starttime="20210106 15:02:10.838"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 15:02:48.592" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 15:02:48.592" starttime="20210106 15:02:48.591"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:02:48.593" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 15:02:48.593" starttime="20210106 15:02:48.592"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:48.593" starttime="20210106 15:02:48.591"></status>
</kw>
<msg timestamp="20210106 15:02:48.593" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 15:02:48.593" starttime="20210106 15:02:48.590"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:48.594" starttime="20210106 15:02:48.589"></status>
</kw>
<msg timestamp="20210106 15:02:48.594" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210106 15:02:48.594" starttime="20210106 15:02:48.589"></status>
</kw>
<msg timestamp="20210106 15:02:48.594" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210106 15:02:48.594" starttime="20210106 15:02:48.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:02:48.598" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:02:51.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:02:51.886" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:51.886" starttime="20210106 15:02:48.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:02:51.887" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:02:51.887" starttime="20210106 15:02:51.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:02:51.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:02:51.888" starttime="20210106 15:02:51.888"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:51.888" starttime="20210106 15:02:48.595"></status>
</kw>
<msg timestamp="20210106 15:02:51.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:02:51.888" starttime="20210106 15:02:48.595"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:51.889" starttime="20210106 15:02:48.594"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:02:51.892" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:02:55.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:02:55.178" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:02:55.178" starttime="20210106 15:02:51.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:02:55.179" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:02:55.179" starttime="20210106 15:02:55.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:02:55.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:02:55.180" starttime="20210106 15:02:55.179"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:55.180" starttime="20210106 15:02:51.889"></status>
</kw>
<msg timestamp="20210106 15:02:55.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:02:55.180" starttime="20210106 15:02:51.889"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:55.181" starttime="20210106 15:02:51.889"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:02:55.181" critical="yes" starttime="20210106 15:02:48.586"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210106 15:02:55.182" starttime="20210106 15:02:10.788"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 15:04:57.160" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 15:04:57.160" starttime="20210106 15:04:57.160"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:04:57.161" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 15:04:57.161" starttime="20210106 15:04:57.160"></status>
</kw>
<status status="PASS" endtime="20210106 15:04:57.161" starttime="20210106 15:04:57.159"></status>
</kw>
<msg timestamp="20210106 15:04:57.161" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 15:04:57.161" starttime="20210106 15:04:57.159"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:04:57.162" starttime="20210106 15:04:57.161"></status>
</kw>
<msg timestamp="20210106 15:04:57.162" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210106 15:04:57.162" starttime="20210106 15:04:57.161"></status>
</kw>
<status status="PASS" endtime="20210106 15:04:57.162" starttime="20210106 15:04:57.158"></status>
</kw>
<msg timestamp="20210106 15:04:57.162" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 15:04:57.162" starttime="20210106 15:04:57.158"></status>
</kw>
<msg timestamp="20210106 15:04:57.162" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 15:04:57.162" starttime="20210106 15:04:57.157"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 15:04:57.163" level="INFO">${random} = 08669</msg>
<status status="PASS" endtime="20210106 15:04:57.163" starttime="20210106 15:04:57.162"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:04:57.168" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-08669 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:05:01.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:05:01.089" level="INFO">${output} = 2021-01-06 15:04:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:04:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210106 15:05:01.089" starttime="20210106 15:04:57.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:05:01.090" level="INFO">2021-01-06 15:04:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:04:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 15:04:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 15:04:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 15:04:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FEDF7733B9E9-&gt;ede053df-d6fa-4b1d-8c42-941b833f7017
2021-01-06 15:04:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210106 15:05:01.090" starttime="20210106 15:05:01.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:05:01.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:05:01.091" starttime="20210106 15:05:01.091"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:01.091" starttime="20210106 15:04:57.163"></status>
</kw>
<msg timestamp="20210106 15:05:01.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:05:01.091" starttime="20210106 15:04:57.163"></status>
</kw>
<msg timestamp="20210106 15:05:01.092" level="INFO">${result} = 2021-01-06 15:04:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:04:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210106 15:05:01.092" starttime="20210106 15:04:57.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:05:01.097" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:05:03.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:05:03.219" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 15:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 15:05 ofs://om/volume1/bucket1/ozone-08669
-rw-...</msg>
<status status="PASS" endtime="20210106 15:05:03.219" starttime="20210106 15:05:01.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:05:03.221" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 15:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 15:05 ofs://om/volume1/bucket1/ozone-08669
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 15:03 ofs://om/volume1/bucket1/ozone-83609
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 15:02 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 15:04 ofs://om/volume1/bucket1/wordcount-ggbwISH4.txt</msg>
<status status="PASS" endtime="20210106 15:05:03.221" starttime="20210106 15:05:03.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:05:03.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:05:03.222" starttime="20210106 15:05:03.221"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:03.222" starttime="20210106 15:05:01.094"></status>
</kw>
<msg timestamp="20210106 15:05:03.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:05:03.222" starttime="20210106 15:05:01.094"></status>
</kw>
<msg timestamp="20210106 15:05:03.223" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 15:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 15:05 ofs://om/volume1/bucket1/ozone-08669
-rw-...</msg>
<status status="PASS" endtime="20210106 15:05:03.223" starttime="20210106 15:05:01.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:05:03.224" starttime="20210106 15:05:03.223"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 15:05:03.224" critical="yes" starttime="20210106 15:04:57.156"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210106 15:05:03.225" starttime="20210106 15:04:57.113"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 15:03:20.946" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 15:03:20.946" starttime="20210106 15:03:20.946"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:03:20.947" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 15:03:20.947" starttime="20210106 15:03:20.946"></status>
</kw>
<status status="PASS" endtime="20210106 15:03:20.947" starttime="20210106 15:03:20.945"></status>
</kw>
<msg timestamp="20210106 15:03:20.947" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 15:03:20.947" starttime="20210106 15:03:20.945"></status>
</kw>
<status status="PASS" endtime="20210106 15:03:20.947" starttime="20210106 15:03:20.944"></status>
</kw>
<msg timestamp="20210106 15:03:20.947" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 15:03:20.947" starttime="20210106 15:03:20.944"></status>
</kw>
<msg timestamp="20210106 15:03:20.948" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 15:03:20.948" starttime="20210106 15:03:20.943"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 15:03:20.948" level="INFO">${random} = 83609</msg>
<status status="PASS" endtime="20210106 15:03:20.948" starttime="20210106 15:03:20.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:03:20.954" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-83609 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:03:25.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:03:25.358" level="INFO">${output} = 2021-01-06 15:03:23 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:03:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210106 15:03:25.358" starttime="20210106 15:03:20.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:03:25.360" level="INFO">2021-01-06 15:03:23 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:03:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 15:03:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 15:03:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 15:03:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-99108F035573-&gt;ede053df-d6fa-4b1d-8c42-941b833f7017
2021-01-06 15:03:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210106 15:03:25.360" starttime="20210106 15:03:25.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:03:25.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:03:25.360" starttime="20210106 15:03:25.360"></status>
</kw>
<status status="PASS" endtime="20210106 15:03:25.361" starttime="20210106 15:03:20.949"></status>
</kw>
<msg timestamp="20210106 15:03:25.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:03:25.361" starttime="20210106 15:03:20.949"></status>
</kw>
<msg timestamp="20210106 15:03:25.361" level="INFO">${result} = 2021-01-06 15:03:23 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:03:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210106 15:03:25.361" starttime="20210106 15:03:20.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:03:25.367" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:03:27.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:03:27.533" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 15:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 15:03 o3fs://bucket1.volume1.om/ozone-83609
dr...</msg>
<status status="PASS" endtime="20210106 15:03:27.533" starttime="20210106 15:03:25.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:03:27.534" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 15:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 15:03 o3fs://bucket1.volume1.om/ozone-83609
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 15:02 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210106 15:03:27.534" starttime="20210106 15:03:27.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:03:27.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:03:27.535" starttime="20210106 15:03:27.535"></status>
</kw>
<status status="PASS" endtime="20210106 15:03:27.535" starttime="20210106 15:03:25.364"></status>
</kw>
<msg timestamp="20210106 15:03:27.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:03:27.536" starttime="20210106 15:03:25.362"></status>
</kw>
<msg timestamp="20210106 15:03:27.536" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 15:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 15:03 o3fs://bucket1.volume1.om/ozone-83609
dr...</msg>
<status status="PASS" endtime="20210106 15:03:27.536" starttime="20210106 15:03:25.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:03:27.537" starttime="20210106 15:03:27.536"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 15:03:27.537" critical="yes" starttime="20210106 15:03:20.942"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210106 15:03:27.539" starttime="20210106 15:03:20.894"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:03:15.146" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:03:15.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:03:15.149" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210106 15:03:15.149" starttime="20210106 15:03:15.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:03:15.150" level="INFO">rm</msg>
<status status="PASS" endtime="20210106 15:03:15.150" starttime="20210106 15:03:15.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:03:15.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:03:15.151" starttime="20210106 15:03:15.150"></status>
</kw>
<status status="PASS" endtime="20210106 15:03:15.151" starttime="20210106 15:03:15.141"></status>
</kw>
<msg timestamp="20210106 15:03:15.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:03:15.152" starttime="20210106 15:03:15.140"></status>
</kw>
<msg timestamp="20210106 15:03:15.152" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210106 15:03:15.152" starttime="20210106 15:03:15.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:03:15.153" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:03:15.153" starttime="20210106 15:03:15.152"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:03:15.157" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:03:15.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:03:15.176" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:03:15.177" starttime="20210106 15:03:15.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:03:15.178" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:03:15.178" starttime="20210106 15:03:15.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:03:15.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:03:15.178" starttime="20210106 15:03:15.178"></status>
</kw>
<status status="PASS" endtime="20210106 15:03:15.179" starttime="20210106 15:03:15.154"></status>
</kw>
<msg timestamp="20210106 15:03:15.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:03:15.179" starttime="20210106 15:03:15.154"></status>
</kw>
<status status="PASS" endtime="20210106 15:03:15.179" starttime="20210106 15:03:15.154"></status>
</kw>
<status status="PASS" endtime="20210106 15:03:15.179" starttime="20210106 15:03:15.153"></status>
</kw>
<status status="PASS" endtime="20210106 15:03:15.179" starttime="20210106 15:03:15.139"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:03:15.180" critical="yes" starttime="20210106 15:03:15.139"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210106 15:03:15.180" starttime="20210106 15:03:15.089"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:02:04.895" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:02:04.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:02:04.899" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210106 15:02:04.899" starttime="20210106 15:02:04.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:02:04.900" level="INFO">om</msg>
<status status="PASS" endtime="20210106 15:02:04.900" starttime="20210106 15:02:04.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:02:04.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:02:04.901" starttime="20210106 15:02:04.900"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:04.901" starttime="20210106 15:02:04.891"></status>
</kw>
<msg timestamp="20210106 15:02:04.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:02:04.901" starttime="20210106 15:02:04.890"></status>
</kw>
<msg timestamp="20210106 15:02:04.901" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210106 15:02:04.901" starttime="20210106 15:02:04.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:02:04.902" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:02:04.902" starttime="20210106 15:02:04.902"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:02:04.906" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:02:04.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:02:04.927" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:02:04.927" starttime="20210106 15:02:04.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:02:04.928" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:02:04.928" starttime="20210106 15:02:04.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:02:04.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:02:04.929" starttime="20210106 15:02:04.929"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:04.929" starttime="20210106 15:02:04.903"></status>
</kw>
<msg timestamp="20210106 15:02:04.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:02:04.930" starttime="20210106 15:02:04.903"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:04.930" starttime="20210106 15:02:04.903"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:04.930" starttime="20210106 15:02:04.902"></status>
</kw>
<status status="PASS" endtime="20210106 15:02:04.930" starttime="20210106 15:02:04.889"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:02:04.930" critical="yes" starttime="20210106 15:02:04.888"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210106 15:02:04.931" starttime="20210106 15:02:04.842"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:05:08.743" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:05:08.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:05:08.750" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:05:08.750" starttime="20210106 15:05:08.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:05:08.751" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:05:08.751" starttime="20210106 15:05:08.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:05:08.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:05:08.752" starttime="20210106 15:05:08.751"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:08.752" starttime="20210106 15:05:08.738"></status>
</kw>
<msg timestamp="20210106 15:05:08.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:05:08.753" starttime="20210106 15:05:08.738"></status>
</kw>
<msg timestamp="20210106 15:05:08.753" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:05:08.753" starttime="20210106 15:05:08.738"></status>
</kw>
<msg timestamp="20210106 15:05:08.753" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:05:08.753" starttime="20210106 15:05:08.737"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 15:05:08.758" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 15:05:08.758" starttime="20210106 15:05:08.758"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:05:08.758" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 15:05:08.759" starttime="20210106 15:05:08.758"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:08.759" starttime="20210106 15:05:08.756"></status>
</kw>
<msg timestamp="20210106 15:05:08.759" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 15:05:08.759" starttime="20210106 15:05:08.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:05:08.760" starttime="20210106 15:05:08.759"></status>
</kw>
<msg timestamp="20210106 15:05:08.760" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210106 15:05:08.760" starttime="20210106 15:05:08.759"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:08.760" starttime="20210106 15:05:08.755"></status>
</kw>
<msg timestamp="20210106 15:05:08.760" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 15:05:08.760" starttime="20210106 15:05:08.754"></status>
</kw>
<msg timestamp="20210106 15:05:08.760" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 15:05:08.760" starttime="20210106 15:05:08.753"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:05:08.764" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:05:43.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:05:43.014" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 15:05:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:05:11 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210106 15:05:43.014" starttime="20210106 15:05:08.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:05:43.015" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-06 15:05:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:05:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 15:05:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 15:05:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 15:05:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EF79377DB991-&gt;ede053df-d6fa-4b1d-8c42-941b833f7017
2021-01-06 15:05:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-06 15:05:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2021-01-06 15:05:12 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
2021-01-06 15:05:13 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1609945512926, maxDate=1610550312926, sequenceNumber=3, masterKeyId=2))
2021-01-06 15:05:13 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 86 f7 eb c1 ed 2e 38 86 ff 9d e2 ef 2e 40 03 48 01 5a 0d 33 33 36 31 33 36 35 38 38 32 34 34 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-06 15:05:13 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1609945512926, maxDate=1610550312926, sequenceNumber=3, masterKeyId=2)
2021-01-06 15:05:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-06 15:05:13 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-06 15:05:13 INFO  JobSubmitter:202 - number of splits:3
2021-01-06 15:05:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1609945273363_0003
2021-01-06 15:05:13 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1609945512926, maxDate=1610550312926, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 86 f7 eb c1 ed 2e 38 86 ff 9d e2 ef 2e 40 03 48 01 5a 0d 33 33 36 31 33 36 35 38 38 32 34 34 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-06 15:05:14 INFO  Configuration:2795 - resource-types.xml not found
2021-01-06 15:05:14 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-06 15:05:14 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-06 15:05:14 INFO  YarnClientImpl:329 - Submitted application application_1609945273363_0003
2021-01-06 15:05:14 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1609945273363_0003/
2021-01-06 15:05:14 INFO  Job:1619 - Running job: job_1609945273363_0003
2021-01-06 15:05:22 INFO  Job:1640 - Job job_1609945273363_0003 running in uber mode : false
2021-01-06 15:05:22 INFO  Job:1647 -  map 0% reduce 0%
2021-01-06 15:05:34 INFO  Job:1647 -  map 33% reduce 0%
2021-01-06 15:05:35 INFO  Job:1647 -  map 67% reduce 0%
2021-01-06 15:05:36 INFO  Job:1647 -  map 100% reduce 0%
2021-01-06 15:05:41 INFO  Job:1647 -  map 100% reduce 100%
2021-01-06 15:05:42 INFO  Job:1658 - Job job_1609945273363_0003 completed successfully
2021-01-06 15:05:42 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065785
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51986
		Total time spent by all reduces in occupied slots (ms)=8436
		Total time spent by all map tasks (ms)=25993
		Total time spent by all reduce tasks (ms)=4218
		Total vcore-milliseconds taken by all map tasks=25993
		Total vcore-milliseconds taken by all reduce tasks=4218
		Total megabyte-milliseconds taken by all map tasks=53233664
		Total megabyte-milliseconds taken by all reduce tasks=8638464
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1279
		CPU time spent (ms)=8520
		Physical memory (bytes) snapshot=1434853376
		Virtual memory (bytes) snapshot=14056124416
		Total committed heap usage (bytes)=1226833920
		Peak Map Physical memory (bytes)=401100800
		Peak Map Virtual memory (bytes)=3512107008
		Peak Reduce Physical memory (bytes)=313516032
		Peak Reduce Virtual memory (bytes)=3525742592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.985 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210106 15:05:43.015" starttime="20210106 15:05:43.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:05:43.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:05:43.016" starttime="20210106 15:05:43.016"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:43.016" starttime="20210106 15:05:08.761"></status>
</kw>
<msg timestamp="20210106 15:05:43.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:05:43.016" starttime="20210106 15:05:08.761"></status>
</kw>
<msg timestamp="20210106 15:05:43.017" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 15:05:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:05:11 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210106 15:05:43.017" starttime="20210106 15:05:08.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 15:05:43.018" starttime="20210106 15:05:43.017"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 15:05:43.018" critical="yes" starttime="20210106 15:05:08.736"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:05:43.023" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:05:43.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:05:43.029" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:05:43.029" starttime="20210106 15:05:43.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:05:43.030" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:05:43.030" starttime="20210106 15:05:43.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:05:43.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:05:43.031" starttime="20210106 15:05:43.030"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:43.031" starttime="20210106 15:05:43.021"></status>
</kw>
<msg timestamp="20210106 15:05:43.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:05:43.031" starttime="20210106 15:05:43.020"></status>
</kw>
<msg timestamp="20210106 15:05:43.031" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:05:43.031" starttime="20210106 15:05:43.020"></status>
</kw>
<msg timestamp="20210106 15:05:43.031" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:05:43.031" starttime="20210106 15:05:43.019"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 15:05:43.032" level="INFO">${random} = 0TuHWngi</msg>
<status status="PASS" endtime="20210106 15:05:43.032" starttime="20210106 15:05:43.032"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 15:05:43.036" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 15:05:43.036" starttime="20210106 15:05:43.035"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:05:43.036" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 15:05:43.036" starttime="20210106 15:05:43.036"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:43.036" starttime="20210106 15:05:43.035"></status>
</kw>
<msg timestamp="20210106 15:05:43.036" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 15:05:43.036" starttime="20210106 15:05:43.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:05:43.037" starttime="20210106 15:05:43.037"></status>
</kw>
<msg timestamp="20210106 15:05:43.037" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210106 15:05:43.037" starttime="20210106 15:05:43.037"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:43.038" starttime="20210106 15:05:43.033"></status>
</kw>
<msg timestamp="20210106 15:05:43.038" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 15:05:43.038" starttime="20210106 15:05:43.033"></status>
</kw>
<msg timestamp="20210106 15:05:43.038" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 15:05:43.038" starttime="20210106 15:05:43.032"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 15:05:43.041" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 15:05:43.041" starttime="20210106 15:05:43.041"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:05:43.042" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 15:05:43.042" starttime="20210106 15:05:43.041"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:43.042" starttime="20210106 15:05:43.040"></status>
</kw>
<msg timestamp="20210106 15:05:43.042" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 15:05:43.042" starttime="20210106 15:05:43.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 15:05:43.043" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210106 15:05:43.043" starttime="20210106 15:05:43.043"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:05:43.044" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210106 15:05:43.044" starttime="20210106 15:05:43.044"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:43.044" starttime="20210106 15:05:43.042"></status>
</kw>
<msg timestamp="20210106 15:05:43.044" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210106 15:05:43.045" starttime="20210106 15:05:43.042"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:43.045" starttime="20210106 15:05:43.039"></status>
</kw>
<msg timestamp="20210106 15:05:43.045" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210106 15:05:43.045" starttime="20210106 15:05:43.039"></status>
</kw>
<msg timestamp="20210106 15:05:43.045" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210106 15:05:43.045" starttime="20210106 15:05:43.038"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 15:05:43.048" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 15:05:43.048" starttime="20210106 15:05:43.048"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:05:43.048" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 15:05:43.048" starttime="20210106 15:05:43.048"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:43.049" starttime="20210106 15:05:43.047"></status>
</kw>
<msg timestamp="20210106 15:05:43.049" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 15:05:43.049" starttime="20210106 15:05:43.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 15:05:43.050" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210106 15:05:43.050" starttime="20210106 15:05:43.050"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:05:43.051" level="INFO">${result} = /wordcount-0TuHWngi.txt</msg>
<status status="PASS" endtime="20210106 15:05:43.051" starttime="20210106 15:05:43.050"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:43.051" starttime="20210106 15:05:43.049"></status>
</kw>
<msg timestamp="20210106 15:05:43.051" level="INFO">${path_with_leading} = /wordcount-0TuHWngi.txt</msg>
<status status="PASS" endtime="20210106 15:05:43.051" starttime="20210106 15:05:43.049"></status>
</kw>
<status status="PASS" endtime="20210106 15:05:43.051" starttime="20210106 15:05:43.046"></status>
</kw>
<msg timestamp="20210106 15:05:43.051" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-0TuHWngi.txt</msg>
<status status="PASS" endtime="20210106 15:05:43.051" starttime="20210106 15:05:43.046"></status>
</kw>
<msg timestamp="20210106 15:05:43.051" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-0TuHWngi.txt</msg>
<status status="PASS" endtime="20210106 15:05:43.051" starttime="20210106 15:05:43.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:05:43.055" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-0TuHWngi.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:06:16.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:06:16.236" level="INFO">${output} = 2021-01-06 15:05:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2021-01-06 15:05:45 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
20...</msg>
<status status="PASS" endtime="20210106 15:06:16.236" starttime="20210106 15:05:43.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:06:16.238" level="INFO">2021-01-06 15:05:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2021-01-06 15:05:45 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
2021-01-06 15:05:45 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1609945545550, maxDate=1610550345550, sequenceNumber=4, masterKeyId=2))
2021-01-06 15:05:45 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c8 f5 ed c1 ed 2e 38 c8 fd 9f e2 ef 2e 40 04 48 01 5a 0d 33 33 36 31 33 36 35 38 38 32 34 34 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-06 15:05:45 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1609945545550, maxDate=1610550345550, sequenceNumber=4, masterKeyId=2)
2021-01-06 15:05:45 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-06 15:05:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:05:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 15:05:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 15:05:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 15:05:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5765EBA5B766-&gt;ede053df-d6fa-4b1d-8c42-941b833f7017
2021-01-06 15:05:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 15:05:47 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-06 15:05:47 INFO  JobSubmitter:202 - number of splits:3
2021-01-06 15:05:47 INFO  JobSubmitter:298 - Submitting tokens for job: job_1609945273363_0004
2021-01-06 15:05:47 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1609945545550, maxDate=1610550345550, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c8 f5 ed c1 ed 2e 38 c8 fd 9f e2 ef 2e 40 04 48 01 5a 0d 33 33 36 31 33 36 35 38 38 32 34 34 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-06 15:05:48 INFO  Configuration:2795 - resource-types.xml not found
2021-01-06 15:05:48 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-06 15:05:48 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-06 15:05:49 INFO  YarnClientImpl:329 - Submitted application application_1609945273363_0004
2021-01-06 15:05:49 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1609945273363_0004/
2021-01-06 15:05:49 INFO  Job:1619 - Running job: job_1609945273363_0004
2021-01-06 15:05:57 INFO  Job:1640 - Job job_1609945273363_0004 running in uber mode : false
2021-01-06 15:05:57 INFO  Job:1647 -  map 0% reduce 0%
2021-01-06 15:06:08 INFO  Job:1647 -  map 33% reduce 0%
2021-01-06 15:06:09 INFO  Job:1647 -  map 67% reduce 0%
2021-01-06 15:06:10 INFO  Job:1647 -  map 100% reduce 0%
2021-01-06 15:06:14 INFO  Job:1647 -  map 100% reduce 100%
2021-01-06 15:06:15 INFO  Job:1658 - Job job_1609945273363_0004 completed successfully
2021-01-06 15:06:15 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128451
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48494
		Total time spent by all reduces in occupied slots (ms)=8434
		Total time spent by all map tasks (ms)=24247
		Total time spent by all reduce tasks (ms)=4217
		Total vcore-milliseconds taken by all map tasks=24247
		Total vcore-milliseconds taken by all reduce tasks=4217
		Total megabyte-milliseconds taken by all map tasks=49657856
		Total megabyte-milliseconds taken by all reduce tasks=8636416
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1133
		CPU time spent (ms)=8140
		Physical memory (bytes) snapshot=1413394432
		Virtual memory (bytes) snapshot=14038777856
		Total committed heap usage (bytes)=1218969600
		Peak Map Physical memory (bytes)=386412544
		Peak Map Virtual memory (bytes)=3507949568
		Peak Reduce Physical memory (bytes)=310513664
		Peak Reduce Virtual memory (bytes)=3528650752
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210106 15:06:16.238" starttime="20210106 15:06:16.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:06:16.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:06:16.239" starttime="20210106 15:06:16.238"></status>
</kw>
<status status="PASS" endtime="20210106 15:06:16.239" starttime="20210106 15:05:43.052"></status>
</kw>
<msg timestamp="20210106 15:06:16.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:06:16.239" starttime="20210106 15:05:43.052"></status>
</kw>
<msg timestamp="20210106 15:06:16.240" level="INFO">${output} = 2021-01-06 15:05:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2021-01-06 15:05:45 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
20...</msg>
<status status="PASS" endtime="20210106 15:06:16.240" starttime="20210106 15:05:43.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210106 15:06:16.240" starttime="20210106 15:06:16.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 15:06:16.241" starttime="20210106 15:06:16.240"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 15:06:16.241" critical="yes" starttime="20210106 15:05:43.019"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210106 15:06:16.242" starttime="20210106 15:05:08.686"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:03:33.226" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:03:33.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:03:33.231" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:03:33.231" starttime="20210106 15:03:33.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:03:33.232" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:03:33.232" starttime="20210106 15:03:33.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:03:33.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:03:33.233" starttime="20210106 15:03:33.233"></status>
</kw>
<status status="PASS" endtime="20210106 15:03:33.233" starttime="20210106 15:03:33.220"></status>
</kw>
<msg timestamp="20210106 15:03:33.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:03:33.233" starttime="20210106 15:03:33.220"></status>
</kw>
<msg timestamp="20210106 15:03:33.234" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:03:33.234" starttime="20210106 15:03:33.219"></status>
</kw>
<msg timestamp="20210106 15:03:33.234" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:03:33.234" starttime="20210106 15:03:33.219"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 15:03:33.238" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 15:03:33.238" starttime="20210106 15:03:33.238"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:03:33.239" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 15:03:33.239" starttime="20210106 15:03:33.238"></status>
</kw>
<status status="PASS" endtime="20210106 15:03:33.239" starttime="20210106 15:03:33.236"></status>
</kw>
<msg timestamp="20210106 15:03:33.239" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 15:03:33.239" starttime="20210106 15:03:33.236"></status>
</kw>
<status status="PASS" endtime="20210106 15:03:33.239" starttime="20210106 15:03:33.235"></status>
</kw>
<msg timestamp="20210106 15:03:33.239" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 15:03:33.239" starttime="20210106 15:03:33.235"></status>
</kw>
<msg timestamp="20210106 15:03:33.239" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 15:03:33.239" starttime="20210106 15:03:33.234"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:03:33.243" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:04:14.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:04:14.240" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 15:03:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:03:35 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210106 15:04:14.240" starttime="20210106 15:03:33.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:04:14.241" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-06 15:03:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:03:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 15:03:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 15:03:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 15:03:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4886D00D4598-&gt;ede053df-d6fa-4b1d-8c42-941b833f7017
2021-01-06 15:03:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-06 15:03:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2021-01-06 15:03:37 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
2021-01-06 15:03:38 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1609945418313, maxDate=1610550218313, sequenceNumber=1, masterKeyId=2))
2021-01-06 15:03:38 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f1 8f e6 c1 ed 2e 38 f1 97 98 e2 ef 2e 40 01 48 01 5a 0d 33 33 36 31 33 36 35 38 38 32 34 34 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-06 15:03:38 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1609945418313, maxDate=1610550218313, sequenceNumber=1, masterKeyId=2)
2021-01-06 15:03:39 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-06 15:03:39 INFO  JobSubmitter:202 - number of splits:3
2021-01-06 15:03:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1609945273363_0001
2021-01-06 15:03:39 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1609945418313, maxDate=1610550218313, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f1 8f e6 c1 ed 2e 38 f1 97 98 e2 ef 2e 40 01 48 01 5a 0d 33 33 36 31 33 36 35 38 38 32 34 34 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-06 15:03:40 INFO  Configuration:2795 - resource-types.xml not found
2021-01-06 15:03:40 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-06 15:03:40 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-06 15:03:41 INFO  YarnClientImpl:329 - Submitted application application_1609945273363_0001
2021-01-06 15:03:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1609945273363_0001/
2021-01-06 15:03:41 INFO  Job:1619 - Running job: job_1609945273363_0001
2021-01-06 15:03:53 INFO  Job:1640 - Job job_1609945273363_0001 running in uber mode : false
2021-01-06 15:03:53 INFO  Job:1647 -  map 0% reduce 0%
2021-01-06 15:04:04 INFO  Job:1647 -  map 33% reduce 0%
2021-01-06 15:04:06 INFO  Job:1647 -  map 67% reduce 0%
2021-01-06 15:04:07 INFO  Job:1647 -  map 100% reduce 0%
2021-01-06 15:04:11 INFO  Job:1647 -  map 100% reduce 100%
2021-01-06 15:04:13 INFO  Job:1658 - Job job_1609945273363_0001 completed successfully
2021-01-06 15:04:13 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52304
		Total time spent by all reduces in occupied slots (ms)=8714
		Total time spent by all map tasks (ms)=26152
		Total time spent by all reduce tasks (ms)=4357
		Total vcore-milliseconds taken by all map tasks=26152
		Total vcore-milliseconds taken by all reduce tasks=4357
		Total megabyte-milliseconds taken by all map tasks=53559296
		Total megabyte-milliseconds taken by all reduce tasks=8923136
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1349
		CPU time spent (ms)=8160
		Physical memory (bytes) snapshot=1376141312
		Virtual memory (bytes) snapshot=14057472000
		Total committed heap usage (bytes)=1170735104
		Peak Map Physical memory (bytes)=393289728
		Peak Map Virtual memory (bytes)=3510231040
		Peak Reduce Physical memory (bytes)=313450496
		Peak Reduce Virtual memory (bytes)=3530231808
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.283 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210106 15:04:14.241" starttime="20210106 15:04:14.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:04:14.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:04:14.243" starttime="20210106 15:04:14.242"></status>
</kw>
<status status="PASS" endtime="20210106 15:04:14.243" starttime="20210106 15:03:33.240"></status>
</kw>
<msg timestamp="20210106 15:04:14.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:04:14.243" starttime="20210106 15:03:33.240"></status>
</kw>
<msg timestamp="20210106 15:04:14.244" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 15:03:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:03:35 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210106 15:04:14.244" starttime="20210106 15:03:33.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 15:04:14.244" starttime="20210106 15:04:14.244"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 15:04:14.245" critical="yes" starttime="20210106 15:03:33.218"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:04:14.251" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:04:14.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:04:14.259" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:04:14.259" starttime="20210106 15:04:14.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:04:14.260" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:04:14.260" starttime="20210106 15:04:14.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:04:14.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:04:14.261" starttime="20210106 15:04:14.261"></status>
</kw>
<status status="PASS" endtime="20210106 15:04:14.261" starttime="20210106 15:04:14.248"></status>
</kw>
<msg timestamp="20210106 15:04:14.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:04:14.262" starttime="20210106 15:04:14.248"></status>
</kw>
<msg timestamp="20210106 15:04:14.262" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:04:14.262" starttime="20210106 15:04:14.247"></status>
</kw>
<msg timestamp="20210106 15:04:14.262" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 15:04:14.262" starttime="20210106 15:04:14.247"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 15:04:14.263" level="INFO">${random} = ggbwISH4</msg>
<status status="PASS" endtime="20210106 15:04:14.263" starttime="20210106 15:04:14.262"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 15:04:14.267" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 15:04:14.267" starttime="20210106 15:04:14.266"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:04:14.267" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 15:04:14.268" starttime="20210106 15:04:14.267"></status>
</kw>
<status status="PASS" endtime="20210106 15:04:14.268" starttime="20210106 15:04:14.266"></status>
</kw>
<msg timestamp="20210106 15:04:14.268" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 15:04:14.268" starttime="20210106 15:04:14.265"></status>
</kw>
<status status="PASS" endtime="20210106 15:04:14.268" starttime="20210106 15:04:14.264"></status>
</kw>
<msg timestamp="20210106 15:04:14.268" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 15:04:14.268" starttime="20210106 15:04:14.264"></status>
</kw>
<msg timestamp="20210106 15:04:14.268" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 15:04:14.268" starttime="20210106 15:04:14.263"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 15:04:14.272" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 15:04:14.272" starttime="20210106 15:04:14.272"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:04:14.273" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 15:04:14.273" starttime="20210106 15:04:14.272"></status>
</kw>
<status status="PASS" endtime="20210106 15:04:14.273" starttime="20210106 15:04:14.271"></status>
</kw>
<msg timestamp="20210106 15:04:14.273" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 15:04:14.273" starttime="20210106 15:04:14.271"></status>
</kw>
<status status="PASS" endtime="20210106 15:04:14.273" starttime="20210106 15:04:14.270"></status>
</kw>
<msg timestamp="20210106 15:04:14.273" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210106 15:04:14.273" starttime="20210106 15:04:14.269"></status>
</kw>
<msg timestamp="20210106 15:04:14.273" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210106 15:04:14.273" starttime="20210106 15:04:14.268"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 15:04:14.276" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 15:04:14.276" starttime="20210106 15:04:14.276"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:04:14.277" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 15:04:14.277" starttime="20210106 15:04:14.276"></status>
</kw>
<status status="PASS" endtime="20210106 15:04:14.277" starttime="20210106 15:04:14.275"></status>
</kw>
<msg timestamp="20210106 15:04:14.277" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 15:04:14.277" starttime="20210106 15:04:14.275"></status>
</kw>
<status status="PASS" endtime="20210106 15:04:14.277" starttime="20210106 15:04:14.274"></status>
</kw>
<msg timestamp="20210106 15:04:14.277" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-ggbwISH4.txt</msg>
<status status="PASS" endtime="20210106 15:04:14.277" starttime="20210106 15:04:14.274"></status>
</kw>
<msg timestamp="20210106 15:04:14.278" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-ggbwISH4.txt</msg>
<status status="PASS" endtime="20210106 15:04:14.278" starttime="20210106 15:04:14.274"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:04:14.282" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-ggbwISH4.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:04:50.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:04:50.482" level="INFO">${output} = 2021-01-06 15:04:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2021-01-06 15:04:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
20...</msg>
<status status="PASS" endtime="20210106 15:04:50.482" starttime="20210106 15:04:14.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:04:50.483" level="INFO">2021-01-06 15:04:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2021-01-06 15:04:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
2021-01-06 15:04:16 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1609945456869, maxDate=1610550256869, sequenceNumber=2, masterKeyId=2))
2021-01-06 15:04:16 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e7 c0 e8 c1 ed 2e 38 e7 c8 9a e2 ef 2e 40 02 48 01 5a 0d 33 33 36 31 33 36 35 38 38 32 34 34 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-06 15:04:16 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1609945456869, maxDate=1610550256869, sequenceNumber=2, masterKeyId=2)
2021-01-06 15:04:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-06 15:04:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 15:04:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 15:04:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 15:04:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 15:04:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-072ECD7324CD-&gt;ede053df-d6fa-4b1d-8c42-941b833f7017
2021-01-06 15:04:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 15:04:18 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-06 15:04:19 INFO  JobSubmitter:202 - number of splits:3
2021-01-06 15:04:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1609945273363_0002
2021-01-06 15:04:19 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1609945456869, maxDate=1610550256869, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e7 c0 e8 c1 ed 2e 38 e7 c8 9a e2 ef 2e 40 02 48 01 5a 0d 33 33 36 31 33 36 35 38 38 32 34 34 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-06 15:04:20 INFO  Configuration:2795 - resource-types.xml not found
2021-01-06 15:04:20 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-06 15:04:20 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-06 15:04:21 INFO  YarnClientImpl:329 - Submitted application application_1609945273363_0002
2021-01-06 15:04:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1609945273363_0002/
2021-01-06 15:04:21 INFO  Job:1619 - Running job: job_1609945273363_0002
2021-01-06 15:04:29 INFO  Job:1640 - Job job_1609945273363_0002 running in uber mode : false
2021-01-06 15:04:29 INFO  Job:1647 -  map 0% reduce 0%
2021-01-06 15:04:40 INFO  Job:1647 -  map 33% reduce 0%
2021-01-06 15:04:42 INFO  Job:1647 -  map 67% reduce 0%
2021-01-06 15:04:43 INFO  Job:1647 -  map 100% reduce 0%
2021-01-06 15:04:48 INFO  Job:1647 -  map 100% reduce 100%
2021-01-06 15:04:49 INFO  Job:1658 - Job job_1609945273363_0002 completed successfully
2021-01-06 15:04:50 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128535
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=54014
		Total time spent by all reduces in occupied slots (ms)=10352
		Total time spent by all map tasks (ms)=27007
		Total time spent by all reduce tasks (ms)=5176
		Total vcore-milliseconds taken by all map tasks=27007
		Total vcore-milliseconds taken by all reduce tasks=5176
		Total megabyte-milliseconds taken by all map tasks=55310336
		Total megabyte-milliseconds taken by all reduce tasks=10600448
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1880
		CPU time spent (ms)=9150
		Physical memory (bytes) snapshot=1619902464
		Virtual memory (bytes) snapshot=14039351296
		Total committed heap usage (bytes)=1509949440
		Peak Map Physical memory (bytes)=550563840
		Peak Map Virtual memory (bytes)=3513561088
		Peak Reduce Physical memory (bytes)=311734272
		Peak Reduce Virtual memory (bytes)=3529539584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210106 15:04:50.484" starttime="20210106 15:04:50.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:04:50.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:04:50.484" starttime="20210106 15:04:50.484"></status>
</kw>
<status status="PASS" endtime="20210106 15:04:50.485" starttime="20210106 15:04:14.279"></status>
</kw>
<msg timestamp="20210106 15:04:50.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:04:50.485" starttime="20210106 15:04:14.278"></status>
</kw>
<msg timestamp="20210106 15:04:50.485" level="INFO">${output} = 2021-01-06 15:04:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2021-01-06 15:04:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
20...</msg>
<status status="PASS" endtime="20210106 15:04:50.485" starttime="20210106 15:04:14.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210106 15:04:50.486" starttime="20210106 15:04:50.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 15:04:50.486" starttime="20210106 15:04:50.486"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 15:04:50.486" critical="yes" starttime="20210106 15:04:14.246"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210106 15:04:50.488" starttime="20210106 15:03:33.174"></status>
</suite>
<status status="PASS" elapsedtime="202201" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
