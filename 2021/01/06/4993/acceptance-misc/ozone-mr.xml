<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210106 14:29:11.954" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:15:20.942" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:15:23.272" level="INFO">${rc} = 255</msg>
<msg timestamp="20210106 14:15:23.272" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210106 14:15:23.272" starttime="20210106 14:15:20.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:15:23.273" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210106 14:15:23.273" starttime="20210106 14:15:23.272"></status>
</kw>
<msg timestamp="20210106 14:15:23.274" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210106 14:15:23.274" starttime="20210106 14:15:20.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:15:23.281" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:15:25.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:15:25.427" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:15:25.427" starttime="20210106 14:15:23.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:15:25.428" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:15:25.429" starttime="20210106 14:15:25.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:15:25.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:15:25.429" starttime="20210106 14:15:25.429"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:25.430" starttime="20210106 14:15:23.276"></status>
</kw>
<msg timestamp="20210106 14:15:25.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:15:25.430" starttime="20210106 14:15:23.276"></status>
</kw>
<msg timestamp="20210106 14:15:25.430" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210106 14:15:25.430" starttime="20210106 14:15:23.275"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210106 14:15:25.430" starttime="20210106 14:15:25.430"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:25.431" starttime="20210106 14:15:23.275"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:25.431" starttime="20210106 14:15:23.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:15:25.435" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:15:27.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:15:27.552" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:15:27.552" starttime="20210106 14:15:25.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:15:27.553" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:15:27.553" starttime="20210106 14:15:27.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:15:27.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:15:27.554" starttime="20210106 14:15:27.554"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:27.554" starttime="20210106 14:15:25.432"></status>
</kw>
<msg timestamp="20210106 14:15:27.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:15:27.555" starttime="20210106 14:15:25.432"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:27.555" starttime="20210106 14:15:25.432"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:27.555" starttime="20210106 14:15:25.431"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:27.555" starttime="20210106 14:15:25.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210106 14:15:27.556" starttime="20210106 14:15:27.555"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:15:27.560" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:15:29.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:15:29.727" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T14:15...</msg>
<status status="PASS" endtime="20210106 14:15:29.727" starttime="20210106 14:15:27.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:15:29.729" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T14:15:27.492Z",
  "modificationTime" : "2021-01-06T14:15:27.492Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210106 14:15:29.729" starttime="20210106 14:15:29.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:15:29.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:15:29.729" starttime="20210106 14:15:29.729"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:29.730" starttime="20210106 14:15:27.557"></status>
</kw>
<msg timestamp="20210106 14:15:29.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:15:29.730" starttime="20210106 14:15:27.557"></status>
</kw>
<msg timestamp="20210106 14:15:29.730" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T14:15...</msg>
<status status="PASS" endtime="20210106 14:15:29.730" starttime="20210106 14:15:27.556"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210106 14:15:29.731" starttime="20210106 14:15:29.730"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:15:29.734" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:15:29.734" starttime="20210106 14:15:29.734"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:15:29.735" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:15:29.735" starttime="20210106 14:15:29.735"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:29.735" starttime="20210106 14:15:29.733"></status>
</kw>
<msg timestamp="20210106 14:15:29.735" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:15:29.735" starttime="20210106 14:15:29.733"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:29.736" starttime="20210106 14:15:29.732"></status>
</kw>
<msg timestamp="20210106 14:15:29.736" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210106 14:15:29.736" starttime="20210106 14:15:29.732"></status>
</kw>
<msg timestamp="20210106 14:15:29.736" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210106 14:15:29.736" starttime="20210106 14:15:29.731"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:15:29.740" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:15:31.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:15:31.990" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:15:31.990" starttime="20210106 14:15:29.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:15:31.992" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:15:31.992" starttime="20210106 14:15:31.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:15:31.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:15:31.993" starttime="20210106 14:15:31.992"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:31.993" starttime="20210106 14:15:29.737"></status>
</kw>
<msg timestamp="20210106 14:15:31.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:15:31.993" starttime="20210106 14:15:29.736"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:31.993" starttime="20210106 14:15:29.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:15:31.997" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:15:37.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:15:37.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:15:37.315" starttime="20210106 14:15:31.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:15:37.317" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:15:37.317" starttime="20210106 14:15:37.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:15:37.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:15:37.317" starttime="20210106 14:15:37.317"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:37.318" starttime="20210106 14:15:31.994"></status>
</kw>
<msg timestamp="20210106 14:15:37.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:15:37.318" starttime="20210106 14:15:31.994"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:37.318" starttime="20210106 14:15:31.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:15:37.322" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:15:41.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:15:41.227" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:15:41.227" starttime="20210106 14:15:37.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:15:41.228" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:15:41.228" starttime="20210106 14:15:41.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:15:41.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:15:41.229" starttime="20210106 14:15:41.229"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:41.229" starttime="20210106 14:15:37.319"></status>
</kw>
<msg timestamp="20210106 14:15:41.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:15:41.229" starttime="20210106 14:15:37.319"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:41.230" starttime="20210106 14:15:37.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:15:41.234" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:15:47.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:15:47.701" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:15:47.701" starttime="20210106 14:15:41.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:15:47.703" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:15:47.703" starttime="20210106 14:15:47.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:15:47.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:15:47.703" starttime="20210106 14:15:47.703"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:47.704" starttime="20210106 14:15:41.231"></status>
</kw>
<msg timestamp="20210106 14:15:47.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:15:47.704" starttime="20210106 14:15:41.230"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:47.704" starttime="20210106 14:15:41.230"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 14:15:47.704" critical="yes" starttime="20210106 14:15:20.934"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:15:47.710" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:15:47.710" starttime="20210106 14:15:47.709"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:15:47.711" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:15:47.711" starttime="20210106 14:15:47.710"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:47.711" starttime="20210106 14:15:47.709"></status>
</kw>
<msg timestamp="20210106 14:15:47.711" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:15:47.711" starttime="20210106 14:15:47.708"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:47.711" starttime="20210106 14:15:47.708"></status>
</kw>
<msg timestamp="20210106 14:15:47.711" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210106 14:15:47.711" starttime="20210106 14:15:47.707"></status>
</kw>
<msg timestamp="20210106 14:15:47.711" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210106 14:15:47.712" starttime="20210106 14:15:47.706"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:15:47.715" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:15:49.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:15:49.772" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:15:49.772" starttime="20210106 14:15:47.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:15:49.774" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:15:49.774" starttime="20210106 14:15:49.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:15:49.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:15:49.774" starttime="20210106 14:15:49.774"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:49.775" starttime="20210106 14:15:47.712"></status>
</kw>
<msg timestamp="20210106 14:15:49.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:15:49.775" starttime="20210106 14:15:47.712"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:49.775" starttime="20210106 14:15:47.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:15:49.779" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:15:51.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:15:51.931" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:15:51.931" starttime="20210106 14:15:49.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:15:51.932" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:15:51.932" starttime="20210106 14:15:51.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:15:51.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:15:51.933" starttime="20210106 14:15:51.932"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:51.933" starttime="20210106 14:15:49.776"></status>
</kw>
<msg timestamp="20210106 14:15:51.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:15:51.933" starttime="20210106 14:15:49.776"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:51.933" starttime="20210106 14:15:49.775"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 14:15:51.934" critical="yes" starttime="20210106 14:15:47.705"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210106 14:15:51.935" starttime="20210106 14:15:20.879"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:17:28.716" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:17:28.716" starttime="20210106 14:17:28.716"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:17:28.717" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:17:28.717" starttime="20210106 14:17:28.716"></status>
</kw>
<status status="PASS" endtime="20210106 14:17:28.717" starttime="20210106 14:17:28.715"></status>
</kw>
<msg timestamp="20210106 14:17:28.717" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:17:28.717" starttime="20210106 14:17:28.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:17:28.718" starttime="20210106 14:17:28.718"></status>
</kw>
<msg timestamp="20210106 14:17:28.718" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210106 14:17:28.718" starttime="20210106 14:17:28.717"></status>
</kw>
<status status="PASS" endtime="20210106 14:17:28.718" starttime="20210106 14:17:28.714"></status>
</kw>
<msg timestamp="20210106 14:17:28.718" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:17:28.719" starttime="20210106 14:17:28.714"></status>
</kw>
<msg timestamp="20210106 14:17:28.719" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:17:28.719" starttime="20210106 14:17:28.713"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:17:28.719" level="INFO">${random} = 25262</msg>
<status status="PASS" endtime="20210106 14:17:28.719" starttime="20210106 14:17:28.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:17:28.724" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-25262 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:17:32.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:17:32.204" level="INFO">${output} = 2021-01-06 14:17:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:17:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-06 ...</msg>
<status status="PASS" endtime="20210106 14:17:32.204" starttime="20210106 14:17:28.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:17:32.206" level="INFO">2021-01-06 14:17:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:17:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-06 14:17:30 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-06 14:17:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:17:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-46BF8FF18188-&gt;1e68eeee-edd4-4932-9c73-899c4e578b76
2021-01-06 14:17:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210106 14:17:32.206" starttime="20210106 14:17:32.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:17:32.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:17:32.207" starttime="20210106 14:17:32.207"></status>
</kw>
<status status="PASS" endtime="20210106 14:17:32.207" starttime="20210106 14:17:28.720"></status>
</kw>
<msg timestamp="20210106 14:17:32.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:17:32.208" starttime="20210106 14:17:28.720"></status>
</kw>
<msg timestamp="20210106 14:17:32.208" level="INFO">${result} = 2021-01-06 14:17:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:17:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-06 ...</msg>
<status status="PASS" endtime="20210106 14:17:32.208" starttime="20210106 14:17:28.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:17:32.215" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:17:34.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:17:34.110" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:15 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-06 14:17 ofs://om/volume1/bucket1/ozone-25262
-rw-...</msg>
<status status="PASS" endtime="20210106 14:17:34.110" starttime="20210106 14:17:32.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:17:34.112" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:15 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-06 14:17 ofs://om/volume1/bucket1/ozone-25262
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-06 14:16 ofs://om/volume1/bucket1/ozone-98767
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:15 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:16 ofs://om/volume1/bucket1/wordcount-Ivennjd7.txt</msg>
<status status="PASS" endtime="20210106 14:17:34.112" starttime="20210106 14:17:34.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:17:34.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:17:34.112" starttime="20210106 14:17:34.112"></status>
</kw>
<status status="PASS" endtime="20210106 14:17:34.113" starttime="20210106 14:17:32.211"></status>
</kw>
<msg timestamp="20210106 14:17:34.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:17:34.113" starttime="20210106 14:17:32.211"></status>
</kw>
<msg timestamp="20210106 14:17:34.113" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:15 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-06 14:17 ofs://om/volume1/bucket1/ozone-25262
-rw-...</msg>
<status status="PASS" endtime="20210106 14:17:34.113" starttime="20210106 14:17:32.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:17:34.114" starttime="20210106 14:17:34.113"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:17:34.114" critical="yes" starttime="20210106 14:17:28.712"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210106 14:17:34.115" starttime="20210106 14:17:28.664"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:15:57.396" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:15:57.396" starttime="20210106 14:15:57.396"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:15:57.397" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:15:57.397" starttime="20210106 14:15:57.397"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:57.397" starttime="20210106 14:15:57.396"></status>
</kw>
<msg timestamp="20210106 14:15:57.397" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:15:57.397" starttime="20210106 14:15:57.395"></status>
</kw>
<status status="PASS" endtime="20210106 14:15:57.398" starttime="20210106 14:15:57.394"></status>
</kw>
<msg timestamp="20210106 14:15:57.398" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:15:57.398" starttime="20210106 14:15:57.394"></status>
</kw>
<msg timestamp="20210106 14:15:57.398" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:15:57.398" starttime="20210106 14:15:57.393"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:15:57.398" level="INFO">${random} = 98767</msg>
<status status="PASS" endtime="20210106 14:15:57.398" starttime="20210106 14:15:57.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:15:57.404" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-98767 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:16:00.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:16:00.924" level="INFO">${output} = 2021-01-06 14:15:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:15:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-06 ...</msg>
<status status="PASS" endtime="20210106 14:16:00.924" starttime="20210106 14:15:57.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:16:00.925" level="INFO">2021-01-06 14:15:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:15:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-06 14:15:59 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-06 14:15:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:15:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F2A92B96CE85-&gt;1e68eeee-edd4-4932-9c73-899c4e578b76
2021-01-06 14:15:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210106 14:16:00.925" starttime="20210106 14:16:00.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:16:00.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:16:00.926" starttime="20210106 14:16:00.925"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:00.926" starttime="20210106 14:15:57.399"></status>
</kw>
<msg timestamp="20210106 14:16:00.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:16:00.927" starttime="20210106 14:15:57.399"></status>
</kw>
<msg timestamp="20210106 14:16:00.927" level="INFO">${result} = 2021-01-06 14:15:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:15:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-06 ...</msg>
<status status="PASS" endtime="20210106 14:16:00.927" starttime="20210106 14:15:57.399"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:16:00.932" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:16:02.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:16:02.698" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:15 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-06 14:16 o3fs://bucket1.volume1.om/ozone-98767
dr...</msg>
<status status="PASS" endtime="20210106 14:16:02.698" starttime="20210106 14:16:00.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:16:02.700" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:15 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-06 14:16 o3fs://bucket1.volume1.om/ozone-98767
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:15 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210106 14:16:02.700" starttime="20210106 14:16:02.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:16:02.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:16:02.700" starttime="20210106 14:16:02.700"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:02.701" starttime="20210106 14:16:00.929"></status>
</kw>
<msg timestamp="20210106 14:16:02.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:16:02.701" starttime="20210106 14:16:00.928"></status>
</kw>
<msg timestamp="20210106 14:16:02.701" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:15 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-06 14:16 o3fs://bucket1.volume1.om/ozone-98767
dr...</msg>
<status status="PASS" endtime="20210106 14:16:02.701" starttime="20210106 14:16:00.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:16:02.702" starttime="20210106 14:16:02.701"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:16:02.702" critical="yes" starttime="20210106 14:15:57.392"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210106 14:16:02.703" starttime="20210106 14:15:57.343"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:17:39.113" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:17:39.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:17:39.122" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:17:39.122" starttime="20210106 14:17:39.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:17:39.123" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:17:39.123" starttime="20210106 14:17:39.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:17:39.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:17:39.124" starttime="20210106 14:17:39.124"></status>
</kw>
<status status="PASS" endtime="20210106 14:17:39.124" starttime="20210106 14:17:39.108"></status>
</kw>
<msg timestamp="20210106 14:17:39.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:17:39.125" starttime="20210106 14:17:39.108"></status>
</kw>
<msg timestamp="20210106 14:17:39.125" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:17:39.125" starttime="20210106 14:17:39.108"></status>
</kw>
<msg timestamp="20210106 14:17:39.125" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:17:39.125" starttime="20210106 14:17:39.107"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:17:39.130" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:17:39.130" starttime="20210106 14:17:39.129"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:17:39.130" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:17:39.130" starttime="20210106 14:17:39.130"></status>
</kw>
<status status="PASS" endtime="20210106 14:17:39.130" starttime="20210106 14:17:39.128"></status>
</kw>
<msg timestamp="20210106 14:17:39.130" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:17:39.130" starttime="20210106 14:17:39.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:17:39.131" starttime="20210106 14:17:39.131"></status>
</kw>
<msg timestamp="20210106 14:17:39.131" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210106 14:17:39.131" starttime="20210106 14:17:39.130"></status>
</kw>
<status status="PASS" endtime="20210106 14:17:39.131" starttime="20210106 14:17:39.126"></status>
</kw>
<msg timestamp="20210106 14:17:39.132" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:17:39.132" starttime="20210106 14:17:39.126"></status>
</kw>
<msg timestamp="20210106 14:17:39.132" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:17:39.132" starttime="20210106 14:17:39.125"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:17:39.136" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:18:14.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:18:14.735" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:17:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:17:41 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210106 14:18:14.735" starttime="20210106 14:17:39.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:18:14.737" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:17:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:17:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-06 14:17:41 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-06 14:17:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:17:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-691AB17F0C64-&gt;1e68eeee-edd4-4932-9c73-899c4e578b76
2021-01-06 14:17:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-06 14:17:42 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2021-01-06 14:17:42 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-06 14:17:42 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-06 14:17:43 INFO  JobSubmitter:198 - number of splits:3
2021-01-06 14:17:43 INFO  JobSubmitter:287 - Submitting tokens for job: job_1609942486428_0003
2021-01-06 14:17:43 INFO  YarnClientImpl:273 - Submitted application application_1609942486428_0003
2021-01-06 14:17:43 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1609942486428_0003/
2021-01-06 14:17:43 INFO  Job:1339 - Running job: job_1609942486428_0003
2021-01-06 14:17:51 INFO  Job:1360 - Job job_1609942486428_0003 running in uber mode : false
2021-01-06 14:17:51 INFO  Job:1367 -  map 0% reduce 0%
2021-01-06 14:17:58 INFO  Job:1367 -  map 33% reduce 0%
2021-01-06 14:18:03 INFO  Job:1367 -  map 67% reduce 0%
2021-01-06 14:18:09 INFO  Job:1367 -  map 100% reduce 0%
2021-01-06 14:18:14 INFO  Job:1367 -  map 100% reduce 100%
2021-01-06 14:18:14 INFO  Job:1378 - Job job_1609942486428_0003 completed successfully
2021-01-06 14:18:14 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610717
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43588
		Total time spent by all reduces in occupied slots (ms)=15012
		Total time spent by all map tasks (ms)=10897
		Total time spent by all reduce tasks (ms)=3753
		Total vcore-milliseconds taken by all map tasks=10897
		Total vcore-milliseconds taken by all reduce tasks=3753
		Total megabyte-milliseconds taken by all map tasks=44634112
		Total megabyte-milliseconds taken by all reduce tasks=15372288
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=711
		CPU time spent (ms)=7070
		Physical memory (bytes) snapshot=1162960896
		Virtual memory (bytes) snapshot=15777120256
		Total committed heap usage (bytes)=1061158912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.734 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210106 14:18:14.737" starttime="20210106 14:18:14.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:18:14.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:18:14.737" starttime="20210106 14:18:14.737"></status>
</kw>
<status status="PASS" endtime="20210106 14:18:14.738" starttime="20210106 14:17:39.133"></status>
</kw>
<msg timestamp="20210106 14:18:14.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:18:14.738" starttime="20210106 14:17:39.132"></status>
</kw>
<msg timestamp="20210106 14:18:14.738" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:17:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:17:41 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210106 14:18:14.738" starttime="20210106 14:17:39.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 14:18:14.739" starttime="20210106 14:18:14.738"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 14:18:14.739" critical="yes" starttime="20210106 14:17:39.106"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:18:14.744" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:18:14.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:18:14.750" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:18:14.751" starttime="20210106 14:18:14.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:18:14.752" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:18:14.752" starttime="20210106 14:18:14.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:18:14.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:18:14.752" starttime="20210106 14:18:14.752"></status>
</kw>
<status status="PASS" endtime="20210106 14:18:14.753" starttime="20210106 14:18:14.741"></status>
</kw>
<msg timestamp="20210106 14:18:14.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:18:14.753" starttime="20210106 14:18:14.741"></status>
</kw>
<msg timestamp="20210106 14:18:14.753" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:18:14.753" starttime="20210106 14:18:14.741"></status>
</kw>
<msg timestamp="20210106 14:18:14.753" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:18:14.753" starttime="20210106 14:18:14.740"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:18:14.754" level="INFO">${random} = NSc1mf8D</msg>
<status status="PASS" endtime="20210106 14:18:14.754" starttime="20210106 14:18:14.754"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:18:14.758" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:18:14.758" starttime="20210106 14:18:14.757"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:18:14.758" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:18:14.758" starttime="20210106 14:18:14.758"></status>
</kw>
<status status="PASS" endtime="20210106 14:18:14.758" starttime="20210106 14:18:14.757"></status>
</kw>
<msg timestamp="20210106 14:18:14.758" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:18:14.758" starttime="20210106 14:18:14.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:18:14.759" starttime="20210106 14:18:14.759"></status>
</kw>
<msg timestamp="20210106 14:18:14.759" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210106 14:18:14.759" starttime="20210106 14:18:14.759"></status>
</kw>
<status status="PASS" endtime="20210106 14:18:14.760" starttime="20210106 14:18:14.755"></status>
</kw>
<msg timestamp="20210106 14:18:14.760" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:18:14.760" starttime="20210106 14:18:14.755"></status>
</kw>
<msg timestamp="20210106 14:18:14.760" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:18:14.760" starttime="20210106 14:18:14.754"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:18:14.763" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:18:14.763" starttime="20210106 14:18:14.762"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:18:14.763" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:18:14.763" starttime="20210106 14:18:14.763"></status>
</kw>
<status status="PASS" endtime="20210106 14:18:14.764" starttime="20210106 14:18:14.762"></status>
</kw>
<msg timestamp="20210106 14:18:14.764" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:18:14.764" starttime="20210106 14:18:14.762"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:18:14.765" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210106 14:18:14.765" starttime="20210106 14:18:14.765"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:18:14.766" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210106 14:18:14.766" starttime="20210106 14:18:14.765"></status>
</kw>
<status status="PASS" endtime="20210106 14:18:14.766" starttime="20210106 14:18:14.764"></status>
</kw>
<msg timestamp="20210106 14:18:14.766" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210106 14:18:14.766" starttime="20210106 14:18:14.764"></status>
</kw>
<status status="PASS" endtime="20210106 14:18:14.766" starttime="20210106 14:18:14.761"></status>
</kw>
<msg timestamp="20210106 14:18:14.766" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210106 14:18:14.766" starttime="20210106 14:18:14.761"></status>
</kw>
<msg timestamp="20210106 14:18:14.767" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210106 14:18:14.767" starttime="20210106 14:18:14.760"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:18:14.769" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:18:14.769" starttime="20210106 14:18:14.769"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:18:14.770" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:18:14.770" starttime="20210106 14:18:14.770"></status>
</kw>
<status status="PASS" endtime="20210106 14:18:14.770" starttime="20210106 14:18:14.769"></status>
</kw>
<msg timestamp="20210106 14:18:14.770" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:18:14.770" starttime="20210106 14:18:14.768"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:18:14.772" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210106 14:18:14.772" starttime="20210106 14:18:14.771"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:18:14.772" level="INFO">${result} = /wordcount-NSc1mf8D.txt</msg>
<status status="PASS" endtime="20210106 14:18:14.772" starttime="20210106 14:18:14.772"></status>
</kw>
<status status="PASS" endtime="20210106 14:18:14.772" starttime="20210106 14:18:14.771"></status>
</kw>
<msg timestamp="20210106 14:18:14.773" level="INFO">${path_with_leading} = /wordcount-NSc1mf8D.txt</msg>
<status status="PASS" endtime="20210106 14:18:14.773" starttime="20210106 14:18:14.770"></status>
</kw>
<status status="PASS" endtime="20210106 14:18:14.773" starttime="20210106 14:18:14.768"></status>
</kw>
<msg timestamp="20210106 14:18:14.773" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-NSc1mf8D.txt</msg>
<status status="PASS" endtime="20210106 14:18:14.773" starttime="20210106 14:18:14.767"></status>
</kw>
<msg timestamp="20210106 14:18:14.773" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-NSc1mf8D.txt</msg>
<status status="PASS" endtime="20210106 14:18:14.773" starttime="20210106 14:18:14.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:18:14.777" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-NSc1mf8D.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:18:49.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:18:49.944" level="INFO">${output} = 2021-01-06 14:18:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2021-01-06 14:18:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210106 14:18:49.945" starttime="20210106 14:18:14.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:18:49.946" level="INFO">2021-01-06 14:18:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2021-01-06 14:18:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-06 14:18:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:18:17 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-06 14:18:17 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-06 14:18:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:18:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1B5EFD996FEA-&gt;1e68eeee-edd4-4932-9c73-899c4e578b76
2021-01-06 14:18:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 14:18:18 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-06 14:18:18 INFO  JobSubmitter:198 - number of splits:3
2021-01-06 14:18:18 INFO  JobSubmitter:287 - Submitting tokens for job: job_1609942486428_0004
2021-01-06 14:18:18 INFO  YarnClientImpl:273 - Submitted application application_1609942486428_0004
2021-01-06 14:18:18 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1609942486428_0004/
2021-01-06 14:18:18 INFO  Job:1339 - Running job: job_1609942486428_0004
2021-01-06 14:18:28 INFO  Job:1360 - Job job_1609942486428_0004 running in uber mode : false
2021-01-06 14:18:28 INFO  Job:1367 -  map 0% reduce 0%
2021-01-06 14:18:34 INFO  Job:1367 -  map 33% reduce 0%
2021-01-06 14:18:39 INFO  Job:1367 -  map 67% reduce 0%
2021-01-06 14:18:44 INFO  Job:1367 -  map 100% reduce 0%
2021-01-06 14:18:48 INFO  Job:1367 -  map 100% reduce 100%
2021-01-06 14:18:49 INFO  Job:1378 - Job job_1609942486428_0004 completed successfully
2021-01-06 14:18:49 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40748
		Total time spent by all reduces in occupied slots (ms)=15336
		Total time spent by all map tasks (ms)=10187
		Total time spent by all reduce tasks (ms)=3834
		Total vcore-milliseconds taken by all map tasks=10187
		Total vcore-milliseconds taken by all reduce tasks=3834
		Total megabyte-milliseconds taken by all map tasks=41725952
		Total megabyte-milliseconds taken by all reduce tasks=15704064
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=723
		CPU time spent (ms)=7090
		Physical memory (bytes) snapshot=1144598528
		Virtual memory (bytes) snapshot=15766933504
		Total committed heap usage (bytes)=1064828928
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210106 14:18:49.946" starttime="20210106 14:18:49.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:18:49.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:18:49.947" starttime="20210106 14:18:49.946"></status>
</kw>
<status status="PASS" endtime="20210106 14:18:49.947" starttime="20210106 14:18:14.774"></status>
</kw>
<msg timestamp="20210106 14:18:49.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:18:49.947" starttime="20210106 14:18:14.774"></status>
</kw>
<msg timestamp="20210106 14:18:49.948" level="INFO">${output} = 2021-01-06 14:18:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2021-01-06 14:18:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210106 14:18:49.948" starttime="20210106 14:18:14.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210106 14:18:49.948" starttime="20210106 14:18:49.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 14:18:49.950" starttime="20210106 14:18:49.949"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 14:18:49.952" critical="yes" starttime="20210106 14:18:14.740"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210106 14:18:49.957" starttime="20210106 14:17:39.062"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:16:08.098" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:16:08.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:16:08.104" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:16:08.104" starttime="20210106 14:16:08.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:16:08.105" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:16:08.105" starttime="20210106 14:16:08.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:16:08.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:16:08.106" starttime="20210106 14:16:08.106"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:08.106" starttime="20210106 14:16:08.093"></status>
</kw>
<msg timestamp="20210106 14:16:08.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:16:08.107" starttime="20210106 14:16:08.093"></status>
</kw>
<msg timestamp="20210106 14:16:08.107" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:16:08.107" starttime="20210106 14:16:08.092"></status>
</kw>
<msg timestamp="20210106 14:16:08.107" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:16:08.107" starttime="20210106 14:16:08.092"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:16:08.112" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:16:08.112" starttime="20210106 14:16:08.111"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:16:08.112" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:16:08.112" starttime="20210106 14:16:08.112"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:08.113" starttime="20210106 14:16:08.110"></status>
</kw>
<msg timestamp="20210106 14:16:08.113" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:16:08.113" starttime="20210106 14:16:08.109"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:08.113" starttime="20210106 14:16:08.108"></status>
</kw>
<msg timestamp="20210106 14:16:08.113" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:16:08.113" starttime="20210106 14:16:08.108"></status>
</kw>
<msg timestamp="20210106 14:16:08.113" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:16:08.113" starttime="20210106 14:16:08.107"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:16:08.117" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:16:48.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:16:48.276" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:16:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:16:10 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210106 14:16:48.276" starttime="20210106 14:16:08.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:16:48.277" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:16:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:16:10 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-06 14:16:10 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-06 14:16:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:16:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0090CB6BFF20-&gt;1e68eeee-edd4-4932-9c73-899c4e578b76
2021-01-06 14:16:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-06 14:16:14 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2021-01-06 14:16:14 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-06 14:16:14 INFO  JobSubmitter:198 - number of splits:3
2021-01-06 14:16:15 INFO  JobSubmitter:287 - Submitting tokens for job: job_1609942486428_0001
2021-01-06 14:16:16 INFO  YarnClientImpl:273 - Submitted application application_1609942486428_0001
2021-01-06 14:16:16 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1609942486428_0001/
2021-01-06 14:16:16 INFO  Job:1339 - Running job: job_1609942486428_0001
2021-01-06 14:16:26 INFO  Job:1360 - Job job_1609942486428_0001 running in uber mode : false
2021-01-06 14:16:26 INFO  Job:1367 -  map 0% reduce 0%
2021-01-06 14:16:33 INFO  Job:1367 -  map 33% reduce 0%
2021-01-06 14:16:37 INFO  Job:1367 -  map 67% reduce 0%
2021-01-06 14:16:42 INFO  Job:1367 -  map 100% reduce 0%
2021-01-06 14:16:46 INFO  Job:1367 -  map 100% reduce 100%
2021-01-06 14:16:47 INFO  Job:1378 - Job job_1609942486428_0001 completed successfully
2021-01-06 14:16:47 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610929
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42720
		Total time spent by all reduces in occupied slots (ms)=15364
		Total time spent by all map tasks (ms)=10680
		Total time spent by all reduce tasks (ms)=3841
		Total vcore-milliseconds taken by all map tasks=10680
		Total vcore-milliseconds taken by all reduce tasks=3841
		Total megabyte-milliseconds taken by all map tasks=43745280
		Total megabyte-milliseconds taken by all reduce tasks=15732736
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=734
		CPU time spent (ms)=7100
		Physical memory (bytes) snapshot=1197522944
		Virtual memory (bytes) snapshot=15800430592
		Total committed heap usage (bytes)=1066401792
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.47 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210106 14:16:48.278" starttime="20210106 14:16:48.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:16:48.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:16:48.279" starttime="20210106 14:16:48.278"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:48.279" starttime="20210106 14:16:08.114"></status>
</kw>
<msg timestamp="20210106 14:16:48.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:16:48.279" starttime="20210106 14:16:08.114"></status>
</kw>
<msg timestamp="20210106 14:16:48.279" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:16:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:16:10 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210106 14:16:48.279" starttime="20210106 14:16:08.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 14:16:48.280" starttime="20210106 14:16:48.280"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 14:16:48.280" critical="yes" starttime="20210106 14:16:08.091"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:16:48.285" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:16:48.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:16:48.291" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:16:48.291" starttime="20210106 14:16:48.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:16:48.292" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:16:48.292" starttime="20210106 14:16:48.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:16:48.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:16:48.292" starttime="20210106 14:16:48.292"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:48.293" starttime="20210106 14:16:48.283"></status>
</kw>
<msg timestamp="20210106 14:16:48.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:16:48.293" starttime="20210106 14:16:48.282"></status>
</kw>
<msg timestamp="20210106 14:16:48.293" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:16:48.293" starttime="20210106 14:16:48.282"></status>
</kw>
<msg timestamp="20210106 14:16:48.293" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210106 14:16:48.293" starttime="20210106 14:16:48.282"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:16:48.294" level="INFO">${random} = Ivennjd7</msg>
<status status="PASS" endtime="20210106 14:16:48.294" starttime="20210106 14:16:48.293"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:16:48.297" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:16:48.297" starttime="20210106 14:16:48.296"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:16:48.297" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:16:48.298" starttime="20210106 14:16:48.297"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:48.298" starttime="20210106 14:16:48.296"></status>
</kw>
<msg timestamp="20210106 14:16:48.298" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:16:48.298" starttime="20210106 14:16:48.295"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:48.298" starttime="20210106 14:16:48.295"></status>
</kw>
<msg timestamp="20210106 14:16:48.298" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:16:48.298" starttime="20210106 14:16:48.294"></status>
</kw>
<msg timestamp="20210106 14:16:48.298" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:16:48.298" starttime="20210106 14:16:48.294"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:16:48.301" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:16:48.301" starttime="20210106 14:16:48.301"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:16:48.301" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:16:48.302" starttime="20210106 14:16:48.301"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:48.302" starttime="20210106 14:16:48.300"></status>
</kw>
<msg timestamp="20210106 14:16:48.302" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:16:48.302" starttime="20210106 14:16:48.300"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:48.302" starttime="20210106 14:16:48.300"></status>
</kw>
<msg timestamp="20210106 14:16:48.302" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210106 14:16:48.302" starttime="20210106 14:16:48.299"></status>
</kw>
<msg timestamp="20210106 14:16:48.302" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210106 14:16:48.302" starttime="20210106 14:16:48.298"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:16:48.305" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:16:48.305" starttime="20210106 14:16:48.304"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:16:48.305" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:16:48.305" starttime="20210106 14:16:48.305"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:48.305" starttime="20210106 14:16:48.304"></status>
</kw>
<msg timestamp="20210106 14:16:48.305" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:16:48.305" starttime="20210106 14:16:48.304"></status>
</kw>
<status status="PASS" endtime="20210106 14:16:48.306" starttime="20210106 14:16:48.303"></status>
</kw>
<msg timestamp="20210106 14:16:48.306" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-Ivennjd7.txt</msg>
<status status="PASS" endtime="20210106 14:16:48.306" starttime="20210106 14:16:48.303"></status>
</kw>
<msg timestamp="20210106 14:16:48.306" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-Ivennjd7.txt</msg>
<status status="PASS" endtime="20210106 14:16:48.306" starttime="20210106 14:16:48.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:16:48.309" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-Ivennjd7.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:17:23.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:17:23.498" level="INFO">${output} = 2021-01-06 14:16:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2021-01-06 14:16:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210106 14:17:23.498" starttime="20210106 14:16:48.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:17:23.499" level="INFO">2021-01-06 14:16:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2021-01-06 14:16:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-06 14:16:50 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:16:50 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-06 14:16:50 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-06 14:16:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:16:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BA006157C36E-&gt;1e68eeee-edd4-4932-9c73-899c4e578b76
2021-01-06 14:16:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 14:16:51 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-06 14:16:52 INFO  JobSubmitter:198 - number of splits:3
2021-01-06 14:16:52 INFO  JobSubmitter:287 - Submitting tokens for job: job_1609942486428_0002
2021-01-06 14:16:52 INFO  YarnClientImpl:273 - Submitted application application_1609942486428_0002
2021-01-06 14:16:52 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1609942486428_0002/
2021-01-06 14:16:52 INFO  Job:1339 - Running job: job_1609942486428_0002
2021-01-06 14:17:00 INFO  Job:1360 - Job job_1609942486428_0002 running in uber mode : false
2021-01-06 14:17:00 INFO  Job:1367 -  map 0% reduce 0%
2021-01-06 14:17:07 INFO  Job:1367 -  map 33% reduce 0%
2021-01-06 14:17:11 INFO  Job:1367 -  map 67% reduce 0%
2021-01-06 14:17:16 INFO  Job:1367 -  map 100% reduce 0%
2021-01-06 14:17:21 INFO  Job:1367 -  map 100% reduce 100%
2021-01-06 14:17:22 INFO  Job:1378 - Job job_1609942486428_0002 completed successfully
2021-01-06 14:17:23 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41084
		Total time spent by all reduces in occupied slots (ms)=14648
		Total time spent by all map tasks (ms)=10271
		Total time spent by all reduce tasks (ms)=3662
		Total vcore-milliseconds taken by all map tasks=10271
		Total vcore-milliseconds taken by all reduce tasks=3662
		Total megabyte-milliseconds taken by all map tasks=42070016
		Total megabyte-milliseconds taken by all reduce tasks=14999552
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=720
		CPU time spent (ms)=7400
		Physical memory (bytes) snapshot=1178005504
		Virtual memory (bytes) snapshot=15795175424
		Total committed heap usage (bytes)=1063780352
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210106 14:17:23.500" starttime="20210106 14:17:23.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:17:23.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:17:23.501" starttime="20210106 14:17:23.500"></status>
</kw>
<status status="PASS" endtime="20210106 14:17:23.501" starttime="20210106 14:16:48.307"></status>
</kw>
<msg timestamp="20210106 14:17:23.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:17:23.501" starttime="20210106 14:16:48.307"></status>
</kw>
<msg timestamp="20210106 14:17:23.502" level="INFO">${output} = 2021-01-06 14:16:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2021-01-06 14:16:50 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210106 14:17:23.502" starttime="20210106 14:16:48.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210106 14:17:23.502" starttime="20210106 14:17:23.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 14:17:23.503" starttime="20210106 14:17:23.503"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 14:17:23.503" critical="yes" starttime="20210106 14:16:48.281"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210106 14:17:23.505" starttime="20210106 14:16:08.041"></status>
</suite>
<status status="PASS" elapsedtime="188226" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:19:58.021" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:00.359" level="INFO">${rc} = 255</msg>
<msg timestamp="20210106 14:20:00.359" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210106 14:20:00.359" starttime="20210106 14:19:58.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:00.360" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210106 14:20:00.360" starttime="20210106 14:20:00.359"></status>
</kw>
<msg timestamp="20210106 14:20:00.361" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210106 14:20:00.361" starttime="20210106 14:19:58.016"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:00.371" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:02.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:20:02.447" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:20:02.447" starttime="20210106 14:20:00.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:02.448" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:20:02.448" starttime="20210106 14:20:02.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:20:02.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:20:02.449" starttime="20210106 14:20:02.448"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:02.449" starttime="20210106 14:20:00.365"></status>
</kw>
<msg timestamp="20210106 14:20:02.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:20:02.449" starttime="20210106 14:20:00.365"></status>
</kw>
<msg timestamp="20210106 14:20:02.449" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210106 14:20:02.449" starttime="20210106 14:20:00.364"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210106 14:20:02.450" starttime="20210106 14:20:02.449"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:02.450" starttime="20210106 14:20:00.364"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:02.450" starttime="20210106 14:20:00.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:02.454" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:04.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:20:04.472" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:20:04.472" starttime="20210106 14:20:02.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:04.473" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:20:04.473" starttime="20210106 14:20:04.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:20:04.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:20:04.474" starttime="20210106 14:20:04.474"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:04.474" starttime="20210106 14:20:02.452"></status>
</kw>
<msg timestamp="20210106 14:20:04.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:20:04.474" starttime="20210106 14:20:02.451"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:04.475" starttime="20210106 14:20:02.451"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:04.475" starttime="20210106 14:20:02.451"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:04.475" starttime="20210106 14:20:02.450"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210106 14:20:04.475" starttime="20210106 14:20:04.475"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:04.481" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:06.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:20:06.470" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T14:20...</msg>
<status status="PASS" endtime="20210106 14:20:06.470" starttime="20210106 14:20:04.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:06.471" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T14:20:04.343Z",
  "modificationTime" : "2021-01-06T14:20:04.343Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210106 14:20:06.471" starttime="20210106 14:20:06.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:20:06.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:20:06.472" starttime="20210106 14:20:06.471"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:06.472" starttime="20210106 14:20:04.477"></status>
</kw>
<msg timestamp="20210106 14:20:06.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:20:06.472" starttime="20210106 14:20:04.476"></status>
</kw>
<msg timestamp="20210106 14:20:06.473" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T14:20...</msg>
<status status="PASS" endtime="20210106 14:20:06.473" starttime="20210106 14:20:04.476"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210106 14:20:06.473" starttime="20210106 14:20:06.473"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:20:06.476" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:20:06.476" starttime="20210106 14:20:06.476"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:20:06.477" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:20:06.477" starttime="20210106 14:20:06.477"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:06.477" starttime="20210106 14:20:06.476"></status>
</kw>
<msg timestamp="20210106 14:20:06.477" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:20:06.477" starttime="20210106 14:20:06.475"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:06.477" starttime="20210106 14:20:06.475"></status>
</kw>
<msg timestamp="20210106 14:20:06.477" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210106 14:20:06.477" starttime="20210106 14:20:06.474"></status>
</kw>
<msg timestamp="20210106 14:20:06.478" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210106 14:20:06.478" starttime="20210106 14:20:06.473"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:06.481" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:08.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:20:08.978" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:20:08.979" starttime="20210106 14:20:06.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:08.980" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:20:08.980" starttime="20210106 14:20:08.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:20:08.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:20:08.981" starttime="20210106 14:20:08.980"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:08.981" starttime="20210106 14:20:06.479"></status>
</kw>
<msg timestamp="20210106 14:20:08.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:20:08.981" starttime="20210106 14:20:06.478"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:08.981" starttime="20210106 14:20:06.478"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:08.985" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:14.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:20:14.135" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:20:14.135" starttime="20210106 14:20:08.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:14.136" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:20:14.136" starttime="20210106 14:20:14.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:20:14.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:20:14.137" starttime="20210106 14:20:14.137"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:14.137" starttime="20210106 14:20:08.982"></status>
</kw>
<msg timestamp="20210106 14:20:14.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:20:14.138" starttime="20210106 14:20:08.982"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:14.138" starttime="20210106 14:20:08.981"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:14.142" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:18.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:20:18.129" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:20:18.129" starttime="20210106 14:20:14.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:18.130" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:20:18.130" starttime="20210106 14:20:18.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:20:18.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:20:18.131" starttime="20210106 14:20:18.130"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:18.131" starttime="20210106 14:20:14.139"></status>
</kw>
<msg timestamp="20210106 14:20:18.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:20:18.132" starttime="20210106 14:20:14.139"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:18.132" starttime="20210106 14:20:14.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:18.136" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:22.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:20:22.119" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:20:22.119" starttime="20210106 14:20:18.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:22.121" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:20:22.121" starttime="20210106 14:20:22.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:20:22.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:20:22.121" starttime="20210106 14:20:22.121"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:22.122" starttime="20210106 14:20:18.133"></status>
</kw>
<msg timestamp="20210106 14:20:22.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:20:22.122" starttime="20210106 14:20:18.133"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:22.122" starttime="20210106 14:20:18.132"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 14:20:22.122" critical="yes" starttime="20210106 14:19:58.015"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:20:22.127" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:20:22.127" starttime="20210106 14:20:22.127"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:20:22.128" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:20:22.128" starttime="20210106 14:20:22.127"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:22.128" starttime="20210106 14:20:22.126"></status>
</kw>
<msg timestamp="20210106 14:20:22.128" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:20:22.128" starttime="20210106 14:20:22.126"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:22.128" starttime="20210106 14:20:22.125"></status>
</kw>
<msg timestamp="20210106 14:20:22.128" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210106 14:20:22.128" starttime="20210106 14:20:22.125"></status>
</kw>
<msg timestamp="20210106 14:20:22.129" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210106 14:20:22.129" starttime="20210106 14:20:22.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:22.132" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:24.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:20:24.358" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:20:24.358" starttime="20210106 14:20:22.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:24.359" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:20:24.359" starttime="20210106 14:20:24.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:20:24.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:20:24.360" starttime="20210106 14:20:24.360"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:24.360" starttime="20210106 14:20:22.129"></status>
</kw>
<msg timestamp="20210106 14:20:24.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:20:24.361" starttime="20210106 14:20:22.129"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:24.361" starttime="20210106 14:20:22.129"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:24.364" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:26.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:20:26.619" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:20:26.619" starttime="20210106 14:20:24.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:26.620" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:20:26.621" starttime="20210106 14:20:26.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:20:26.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:20:26.621" starttime="20210106 14:20:26.621"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:26.621" starttime="20210106 14:20:24.362"></status>
</kw>
<msg timestamp="20210106 14:20:26.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:20:26.622" starttime="20210106 14:20:24.362"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:26.622" starttime="20210106 14:20:24.361"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 14:20:26.622" critical="yes" starttime="20210106 14:20:22.123"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210106 14:20:26.623" starttime="20210106 14:19:57.964"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:22:13.621" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:22:13.621" starttime="20210106 14:22:13.620"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:22:13.621" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:22:13.621" starttime="20210106 14:22:13.621"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:13.621" starttime="20210106 14:22:13.620"></status>
</kw>
<msg timestamp="20210106 14:22:13.622" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:22:13.622" starttime="20210106 14:22:13.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:22:13.622" starttime="20210106 14:22:13.622"></status>
</kw>
<msg timestamp="20210106 14:22:13.622" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210106 14:22:13.623" starttime="20210106 14:22:13.622"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:13.623" starttime="20210106 14:22:13.619"></status>
</kw>
<msg timestamp="20210106 14:22:13.623" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:22:13.623" starttime="20210106 14:22:13.618"></status>
</kw>
<msg timestamp="20210106 14:22:13.623" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:22:13.623" starttime="20210106 14:22:13.617"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:22:13.624" level="INFO">${random} = 06450</msg>
<status status="PASS" endtime="20210106 14:22:13.624" starttime="20210106 14:22:13.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:22:13.629" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-06450 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:22:17.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:22:17.086" level="INFO">${output} = 2021-01-06 14:22:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210106 14:22:17.086" starttime="20210106 14:22:13.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:22:17.087" level="INFO">2021-01-06 14:22:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-06 14:22:15 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:22:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:22:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 14:22:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:22:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4D22ABBA0349-&gt;0cf9edc5-eff0-4a12-92e8-d91235bbeb8c
2021-01-06 14:22:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 14:22:16 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210106 14:22:17.088" starttime="20210106 14:22:17.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:22:17.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:22:17.088" starttime="20210106 14:22:17.088"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:17.088" starttime="20210106 14:22:13.624"></status>
</kw>
<msg timestamp="20210106 14:22:17.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:22:17.089" starttime="20210106 14:22:13.624"></status>
</kw>
<msg timestamp="20210106 14:22:17.089" level="INFO">${result} = 2021-01-06 14:22:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210106 14:22:17.089" starttime="20210106 14:22:13.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:22:17.095" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:22:19.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:22:19.059" level="INFO">${output} = 2021-01-06 14:22:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:18 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210106 14:22:19.059" starttime="20210106 14:22:17.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:22:19.060" level="INFO">2021-01-06 14:22:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:18 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-06 14:22 ofs://om/volume1/bucket1/ozone-06450
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-06 14:20 ofs://om/volume1/bucket1/ozone-74773
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:20 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:21 ofs://om/volume1/bucket1/wordcount-0fdhHylN.txt
2021-01-06 14:22:19 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210106 14:22:19.061" starttime="20210106 14:22:19.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:22:19.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:22:19.061" starttime="20210106 14:22:19.061"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:19.062" starttime="20210106 14:22:17.092"></status>
</kw>
<msg timestamp="20210106 14:22:19.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:22:19.062" starttime="20210106 14:22:17.091"></status>
</kw>
<msg timestamp="20210106 14:22:19.062" level="INFO">${result} = 2021-01-06 14:22:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:18 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210106 14:22:19.062" starttime="20210106 14:22:17.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:22:19.063" starttime="20210106 14:22:19.062"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:22:19.063" critical="yes" starttime="20210106 14:22:13.616"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210106 14:22:19.064" starttime="20210106 14:22:13.568"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:20:31.927" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:20:31.927" starttime="20210106 14:20:31.926"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:20:31.927" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:20:31.927" starttime="20210106 14:20:31.927"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:31.927" starttime="20210106 14:20:31.926"></status>
</kw>
<msg timestamp="20210106 14:20:31.927" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:20:31.927" starttime="20210106 14:20:31.925"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:31.928" starttime="20210106 14:20:31.924"></status>
</kw>
<msg timestamp="20210106 14:20:31.928" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:20:31.928" starttime="20210106 14:20:31.924"></status>
</kw>
<msg timestamp="20210106 14:20:31.928" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:20:31.928" starttime="20210106 14:20:31.923"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:20:31.929" level="INFO">${random} = 74773</msg>
<status status="PASS" endtime="20210106 14:20:31.929" starttime="20210106 14:20:31.928"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:31.934" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-74773 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:35.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:20:35.841" level="INFO">${output} = 2021-01-06 14:20:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:33 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210106 14:20:35.841" starttime="20210106 14:20:31.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:35.843" level="INFO">2021-01-06 14:20:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:33 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-06 14:20:33 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:20:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:20:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 14:20:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:20:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-63C7632B6F4C-&gt;0cf9edc5-eff0-4a12-92e8-d91235bbeb8c
2021-01-06 14:20:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 14:20:35 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210106 14:20:35.843" starttime="20210106 14:20:35.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:20:35.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:20:35.843" starttime="20210106 14:20:35.843"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:35.844" starttime="20210106 14:20:31.930"></status>
</kw>
<msg timestamp="20210106 14:20:35.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:20:35.844" starttime="20210106 14:20:31.929"></status>
</kw>
<msg timestamp="20210106 14:20:35.844" level="INFO">${result} = 2021-01-06 14:20:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:33 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210106 14:20:35.844" starttime="20210106 14:20:31.929"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:35.849" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:37.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:20:37.679" level="INFO">${output} = 2021-01-06 14:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210106 14:20:37.679" starttime="20210106 14:20:35.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:37.680" level="INFO">2021-01-06 14:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:37 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-06 14:20 o3fs://bucket1.volume1.om/ozone-74773
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:20 o3fs://bucket1.volume1.om/user
2021-01-06 14:20:37 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210106 14:20:37.680" starttime="20210106 14:20:37.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:20:37.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:20:37.681" starttime="20210106 14:20:37.680"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:37.681" starttime="20210106 14:20:35.846"></status>
</kw>
<msg timestamp="20210106 14:20:37.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:20:37.681" starttime="20210106 14:20:35.845"></status>
</kw>
<msg timestamp="20210106 14:20:37.681" level="INFO">${result} = 2021-01-06 14:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210106 14:20:37.681" starttime="20210106 14:20:35.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:20:37.682" starttime="20210106 14:20:37.682"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:20:37.682" critical="yes" starttime="20210106 14:20:31.922"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210106 14:20:37.683" starttime="20210106 14:20:31.872"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:22:24.243" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:22:24.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:22:24.248" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:22:24.248" starttime="20210106 14:22:24.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:22:24.249" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:22:24.249" starttime="20210106 14:22:24.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:22:24.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:22:24.250" starttime="20210106 14:22:24.249"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:24.250" starttime="20210106 14:22:24.239"></status>
</kw>
<msg timestamp="20210106 14:22:24.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:22:24.250" starttime="20210106 14:22:24.238"></status>
</kw>
<msg timestamp="20210106 14:22:24.250" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:22:24.250" starttime="20210106 14:22:24.238"></status>
</kw>
<msg timestamp="20210106 14:22:24.250" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:22:24.250" starttime="20210106 14:22:24.238"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:22:24.255" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:22:24.255" starttime="20210106 14:22:24.255"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:22:24.256" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:22:24.256" starttime="20210106 14:22:24.255"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:24.256" starttime="20210106 14:22:24.253"></status>
</kw>
<msg timestamp="20210106 14:22:24.256" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:22:24.256" starttime="20210106 14:22:24.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:22:24.257" starttime="20210106 14:22:24.257"></status>
</kw>
<msg timestamp="20210106 14:22:24.257" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210106 14:22:24.257" starttime="20210106 14:22:24.256"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:24.257" starttime="20210106 14:22:24.252"></status>
</kw>
<msg timestamp="20210106 14:22:24.257" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:22:24.257" starttime="20210106 14:22:24.252"></status>
</kw>
<msg timestamp="20210106 14:22:24.258" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:22:24.258" starttime="20210106 14:22:24.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:22:24.261" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:22:59.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:22:59.892" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:22:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22...</msg>
<status status="PASS" endtime="20210106 14:22:59.892" starttime="20210106 14:22:24.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:22:59.894" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:22:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:26 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-06 14:22:26 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:22:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:22:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 14:22:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:22:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1365435C4A35-&gt;0cf9edc5-eff0-4a12-92e8-d91235bbeb8c
2021-01-06 14:22:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-06 14:22:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:27 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-01-06 14:22:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-06 14:22:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:27 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-06 14:22:28 INFO  JobSubmitter:202 - number of splits:3
2021-01-06 14:22:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1609942774697_0003
2021-01-06 14:22:28 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-06 14:22:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:28 INFO  Configuration:2752 - resource-types.xml not found
2021-01-06 14:22:28 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-06 14:22:28 INFO  YarnClientImpl:324 - Submitted application application_1609942774697_0003
2021-01-06 14:22:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1609942774697_0003/
2021-01-06 14:22:28 INFO  Job:1619 - Running job: job_1609942774697_0003
2021-01-06 14:22:36 INFO  Job:1640 - Job job_1609942774697_0003 running in uber mode : false
2021-01-06 14:22:36 INFO  Job:1647 -  map 0% reduce 0%
2021-01-06 14:22:43 INFO  Job:1647 -  map 33% reduce 0%
2021-01-06 14:22:49 INFO  Job:1647 -  map 67% reduce 0%
2021-01-06 14:22:54 INFO  Job:1647 -  map 100% reduce 0%
2021-01-06 14:22:58 INFO  Job:1647 -  map 100% reduce 100%
2021-01-06 14:22:59 INFO  Job:1658 - Job job_1609942774697_0003 completed successfully
2021-01-06 14:22:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:59 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016165
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41240
		Total time spent by all reduces in occupied slots (ms)=15056
		Total time spent by all map tasks (ms)=10310
		Total time spent by all reduce tasks (ms)=3764
		Total vcore-milliseconds taken by all map tasks=10310
		Total vcore-milliseconds taken by all reduce tasks=3764
		Total megabyte-milliseconds taken by all map tasks=42229760
		Total megabyte-milliseconds taken by all reduce tasks=15417344
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=693
		CPU time spent (ms)=7460
		Physical memory (bytes) snapshot=1250656256
		Virtual memory (bytes) snapshot=15808667648
		Total committed heap usage (bytes)=1086849024
		Peak Map Physical memory (bytes)=314339328
		Peak Map Virtual memory (bytes)=3949744128
		Peak Reduce Physical memory (bytes)=311410688
		Peak Reduce Virtual memory (bytes)=3964719104
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.921 seconds
2021-01-06 14:22:59 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-06 14:22:59 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210106 14:22:59.894" starttime="20210106 14:22:59.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:22:59.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:22:59.895" starttime="20210106 14:22:59.894"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:59.895" starttime="20210106 14:22:24.259"></status>
</kw>
<msg timestamp="20210106 14:22:59.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:22:59.895" starttime="20210106 14:22:24.258"></status>
</kw>
<msg timestamp="20210106 14:22:59.896" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:22:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22...</msg>
<status status="PASS" endtime="20210106 14:22:59.896" starttime="20210106 14:22:24.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 14:22:59.896" starttime="20210106 14:22:59.896"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 14:22:59.896" critical="yes" starttime="20210106 14:22:24.237"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:22:59.902" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:22:59.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:22:59.907" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:22:59.907" starttime="20210106 14:22:59.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:22:59.908" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:22:59.908" starttime="20210106 14:22:59.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:22:59.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:22:59.909" starttime="20210106 14:22:59.909"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:59.909" starttime="20210106 14:22:59.899"></status>
</kw>
<msg timestamp="20210106 14:22:59.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:22:59.909" starttime="20210106 14:22:59.899"></status>
</kw>
<msg timestamp="20210106 14:22:59.910" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:22:59.910" starttime="20210106 14:22:59.898"></status>
</kw>
<msg timestamp="20210106 14:22:59.910" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:22:59.910" starttime="20210106 14:22:59.898"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:22:59.910" level="INFO">${random} = qvWFZm6s</msg>
<status status="PASS" endtime="20210106 14:22:59.910" starttime="20210106 14:22:59.910"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:22:59.914" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:22:59.914" starttime="20210106 14:22:59.914"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:22:59.915" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:22:59.915" starttime="20210106 14:22:59.914"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:59.915" starttime="20210106 14:22:59.913"></status>
</kw>
<msg timestamp="20210106 14:22:59.915" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:22:59.915" starttime="20210106 14:22:59.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:22:59.916" starttime="20210106 14:22:59.916"></status>
</kw>
<msg timestamp="20210106 14:22:59.916" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210106 14:22:59.916" starttime="20210106 14:22:59.915"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:59.916" starttime="20210106 14:22:59.912"></status>
</kw>
<msg timestamp="20210106 14:22:59.916" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:22:59.916" starttime="20210106 14:22:59.911"></status>
</kw>
<msg timestamp="20210106 14:22:59.917" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:22:59.917" starttime="20210106 14:22:59.911"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:22:59.920" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:22:59.920" starttime="20210106 14:22:59.919"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:22:59.920" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:22:59.920" starttime="20210106 14:22:59.920"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:59.920" starttime="20210106 14:22:59.919"></status>
</kw>
<msg timestamp="20210106 14:22:59.920" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:22:59.921" starttime="20210106 14:22:59.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:22:59.922" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210106 14:22:59.922" starttime="20210106 14:22:59.921"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:22:59.922" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210106 14:22:59.922" starttime="20210106 14:22:59.922"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:59.922" starttime="20210106 14:22:59.921"></status>
</kw>
<msg timestamp="20210106 14:22:59.923" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210106 14:22:59.923" starttime="20210106 14:22:59.921"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:59.923" starttime="20210106 14:22:59.918"></status>
</kw>
<msg timestamp="20210106 14:22:59.923" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210106 14:22:59.923" starttime="20210106 14:22:59.917"></status>
</kw>
<msg timestamp="20210106 14:22:59.923" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210106 14:22:59.923" starttime="20210106 14:22:59.917"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:22:59.926" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:22:59.926" starttime="20210106 14:22:59.926"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:22:59.927" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:22:59.927" starttime="20210106 14:22:59.926"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:59.927" starttime="20210106 14:22:59.926"></status>
</kw>
<msg timestamp="20210106 14:22:59.927" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:22:59.927" starttime="20210106 14:22:59.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:22:59.928" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210106 14:22:59.928" starttime="20210106 14:22:59.928"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:22:59.929" level="INFO">${result} = /wordcount-qvWFZm6s.txt</msg>
<status status="PASS" endtime="20210106 14:22:59.929" starttime="20210106 14:22:59.929"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:59.929" starttime="20210106 14:22:59.928"></status>
</kw>
<msg timestamp="20210106 14:22:59.929" level="INFO">${path_with_leading} = /wordcount-qvWFZm6s.txt</msg>
<status status="PASS" endtime="20210106 14:22:59.929" starttime="20210106 14:22:59.927"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:59.929" starttime="20210106 14:22:59.924"></status>
</kw>
<msg timestamp="20210106 14:22:59.930" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-qvWFZm6s.txt</msg>
<status status="PASS" endtime="20210106 14:22:59.930" starttime="20210106 14:22:59.924"></status>
</kw>
<msg timestamp="20210106 14:22:59.930" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-qvWFZm6s.txt</msg>
<status status="PASS" endtime="20210106 14:22:59.930" starttime="20210106 14:22:59.923"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:22:59.934" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-qvWFZm6s.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:23:38.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:23:38.257" level="INFO">${output} = 2021-01-06 14:23:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210106 14:23:38.257" starttime="20210106 14:22:59.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:23:38.258" level="INFO">2021-01-06 14:23:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-01-06 14:23:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-06 14:23:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:02 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-06 14:23:02 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:23:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:23:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 14:23:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:23:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B6A5056FA0D2-&gt;0cf9edc5-eff0-4a12-92e8-d91235bbeb8c
2021-01-06 14:23:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 14:23:03 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-06 14:23:03 INFO  JobSubmitter:202 - number of splits:3
2021-01-06 14:23:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1609942774697_0004
2021-01-06 14:23:03 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-06 14:23:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:04 INFO  Configuration:2752 - resource-types.xml not found
2021-01-06 14:23:04 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-06 14:23:04 INFO  YarnClientImpl:324 - Submitted application application_1609942774697_0004
2021-01-06 14:23:04 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1609942774697_0004/
2021-01-06 14:23:04 INFO  Job:1619 - Running job: job_1609942774697_0004
2021-01-06 14:23:13 INFO  Job:1640 - Job job_1609942774697_0004 running in uber mode : false
2021-01-06 14:23:13 INFO  Job:1647 -  map 0% reduce 0%
2021-01-06 14:23:19 INFO  Job:1647 -  map 33% reduce 0%
2021-01-06 14:23:25 INFO  Job:1647 -  map 67% reduce 0%
2021-01-06 14:23:31 INFO  Job:1647 -  map 100% reduce 0%
2021-01-06 14:23:36 INFO  Job:1647 -  map 100% reduce 100%
2021-01-06 14:23:37 INFO  Job:1658 - Job job_1609942774697_0004 completed successfully
2021-01-06 14:23:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:37 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078831
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43448
		Total time spent by all reduces in occupied slots (ms)=15324
		Total time spent by all map tasks (ms)=10862
		Total time spent by all reduce tasks (ms)=3831
		Total vcore-milliseconds taken by all map tasks=10862
		Total vcore-milliseconds taken by all reduce tasks=3831
		Total megabyte-milliseconds taken by all map tasks=44490752
		Total megabyte-milliseconds taken by all reduce tasks=15691776
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=687
		CPU time spent (ms)=7350
		Physical memory (bytes) snapshot=1221107712
		Virtual memory (bytes) snapshot=15784026112
		Total committed heap usage (bytes)=1078460416
		Peak Map Physical memory (bytes)=317632512
		Peak Map Virtual memory (bytes)=3946696704
		Peak Reduce Physical memory (bytes)=283357184
		Peak Reduce Virtual memory (bytes)=3951120384
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-06 14:23:37 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210106 14:23:38.259" starttime="20210106 14:23:38.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:23:38.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:23:38.259" starttime="20210106 14:23:38.259"></status>
</kw>
<status status="PASS" endtime="20210106 14:23:38.260" starttime="20210106 14:22:59.931"></status>
</kw>
<msg timestamp="20210106 14:23:38.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:23:38.260" starttime="20210106 14:22:59.931"></status>
</kw>
<msg timestamp="20210106 14:23:38.260" level="INFO">${output} = 2021-01-06 14:23:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:23:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210106 14:23:38.260" starttime="20210106 14:22:59.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210106 14:23:38.261" starttime="20210106 14:23:38.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 14:23:38.261" starttime="20210106 14:23:38.261"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 14:23:38.262" critical="yes" starttime="20210106 14:22:59.897"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210106 14:23:38.263" starttime="20210106 14:22:24.194"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:42.855" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:20:42.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:20:42.865" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:20:42.865" starttime="20210106 14:20:42.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:20:42.867" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:20:42.867" starttime="20210106 14:20:42.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:20:42.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:20:42.868" starttime="20210106 14:20:42.867"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:42.868" starttime="20210106 14:20:42.849"></status>
</kw>
<msg timestamp="20210106 14:20:42.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:20:42.869" starttime="20210106 14:20:42.849"></status>
</kw>
<msg timestamp="20210106 14:20:42.869" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:20:42.869" starttime="20210106 14:20:42.849"></status>
</kw>
<msg timestamp="20210106 14:20:42.869" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:20:42.869" starttime="20210106 14:20:42.848"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:20:42.875" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:20:42.875" starttime="20210106 14:20:42.874"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:20:42.875" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:20:42.875" starttime="20210106 14:20:42.875"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:42.875" starttime="20210106 14:20:42.872"></status>
</kw>
<msg timestamp="20210106 14:20:42.875" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:20:42.876" starttime="20210106 14:20:42.872"></status>
</kw>
<status status="PASS" endtime="20210106 14:20:42.876" starttime="20210106 14:20:42.871"></status>
</kw>
<msg timestamp="20210106 14:20:42.876" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:20:42.876" starttime="20210106 14:20:42.870"></status>
</kw>
<msg timestamp="20210106 14:20:42.876" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:20:42.876" starttime="20210106 14:20:42.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:20:42.881" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:21:25.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:21:25.004" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:20:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20...</msg>
<status status="PASS" endtime="20210106 14:21:25.004" starttime="20210106 14:20:42.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:21:25.005" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:20:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:45 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-06 14:20:45 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:20:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:20:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 14:20:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:20:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EC98588095D3-&gt;0cf9edc5-eff0-4a12-92e8-d91235bbeb8c
2021-01-06 14:20:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-06 14:20:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:49 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-01-06 14:20:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:49 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-06 14:20:49 INFO  JobSubmitter:202 - number of splits:3
2021-01-06 14:20:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1609942774697_0001
2021-01-06 14:20:50 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-06 14:20:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:50 INFO  Configuration:2752 - resource-types.xml not found
2021-01-06 14:20:50 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-06 14:20:50 INFO  YarnClientImpl:324 - Submitted application application_1609942774697_0001
2021-01-06 14:20:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1609942774697_0001/
2021-01-06 14:20:50 INFO  Job:1619 - Running job: job_1609942774697_0001
2021-01-06 14:21:01 INFO  Job:1640 - Job job_1609942774697_0001 running in uber mode : false
2021-01-06 14:21:01 INFO  Job:1647 -  map 0% reduce 0%
2021-01-06 14:21:08 INFO  Job:1647 -  map 33% reduce 0%
2021-01-06 14:21:14 INFO  Job:1647 -  map 67% reduce 0%
2021-01-06 14:21:19 INFO  Job:1647 -  map 100% reduce 0%
2021-01-06 14:21:23 INFO  Job:1647 -  map 100% reduce 100%
2021-01-06 14:21:24 INFO  Job:1658 - Job job_1609942774697_0001 completed successfully
2021-01-06 14:21:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:24 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016377
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42488
		Total time spent by all reduces in occupied slots (ms)=15748
		Total time spent by all map tasks (ms)=10622
		Total time spent by all reduce tasks (ms)=3937
		Total vcore-milliseconds taken by all map tasks=10622
		Total vcore-milliseconds taken by all reduce tasks=3937
		Total megabyte-milliseconds taken by all map tasks=43507712
		Total megabyte-milliseconds taken by all reduce tasks=16125952
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=728
		CPU time spent (ms)=7270
		Physical memory (bytes) snapshot=1286799360
		Virtual memory (bytes) snapshot=15801925632
		Total committed heap usage (bytes)=1080557568
		Peak Map Physical memory (bytes)=327073792
		Peak Map Virtual memory (bytes)=3946352640
		Peak Reduce Physical memory (bytes)=315973632
		Peak Reduce Virtual memory (bytes)=3967086592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.47 seconds
2021-01-06 14:21:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:24 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-06 14:21:24 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210106 14:21:25.005" starttime="20210106 14:21:25.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:21:25.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:21:25.006" starttime="20210106 14:21:25.005"></status>
</kw>
<status status="PASS" endtime="20210106 14:21:25.006" starttime="20210106 14:20:42.877"></status>
</kw>
<msg timestamp="20210106 14:21:25.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:21:25.006" starttime="20210106 14:20:42.877"></status>
</kw>
<msg timestamp="20210106 14:21:25.007" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:20:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:20...</msg>
<status status="PASS" endtime="20210106 14:21:25.007" starttime="20210106 14:20:42.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 14:21:25.007" starttime="20210106 14:21:25.007"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 14:21:25.007" critical="yes" starttime="20210106 14:20:42.847"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:21:25.012" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:21:25.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:21:25.018" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:21:25.018" starttime="20210106 14:21:25.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:21:25.019" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:21:25.019" starttime="20210106 14:21:25.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:21:25.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:21:25.020" starttime="20210106 14:21:25.019"></status>
</kw>
<status status="PASS" endtime="20210106 14:21:25.020" starttime="20210106 14:21:25.010"></status>
</kw>
<msg timestamp="20210106 14:21:25.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:21:25.020" starttime="20210106 14:21:25.010"></status>
</kw>
<msg timestamp="20210106 14:21:25.020" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:21:25.020" starttime="20210106 14:21:25.009"></status>
</kw>
<msg timestamp="20210106 14:21:25.021" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210106 14:21:25.021" starttime="20210106 14:21:25.009"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:21:25.021" level="INFO">${random} = 0fdhHylN</msg>
<status status="PASS" endtime="20210106 14:21:25.021" starttime="20210106 14:21:25.021"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:21:25.024" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:21:25.024" starttime="20210106 14:21:25.024"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:21:25.025" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:21:25.025" starttime="20210106 14:21:25.025"></status>
</kw>
<status status="PASS" endtime="20210106 14:21:25.025" starttime="20210106 14:21:25.024"></status>
</kw>
<msg timestamp="20210106 14:21:25.025" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:21:25.025" starttime="20210106 14:21:25.023"></status>
</kw>
<status status="PASS" endtime="20210106 14:21:25.025" starttime="20210106 14:21:25.023"></status>
</kw>
<msg timestamp="20210106 14:21:25.025" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:21:25.026" starttime="20210106 14:21:25.022"></status>
</kw>
<msg timestamp="20210106 14:21:25.026" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:21:25.026" starttime="20210106 14:21:25.021"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:21:25.028" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:21:25.028" starttime="20210106 14:21:25.028"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:21:25.029" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:21:25.029" starttime="20210106 14:21:25.028"></status>
</kw>
<status status="PASS" endtime="20210106 14:21:25.029" starttime="20210106 14:21:25.028"></status>
</kw>
<msg timestamp="20210106 14:21:25.029" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:21:25.029" starttime="20210106 14:21:25.027"></status>
</kw>
<status status="PASS" endtime="20210106 14:21:25.029" starttime="20210106 14:21:25.027"></status>
</kw>
<msg timestamp="20210106 14:21:25.029" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210106 14:21:25.029" starttime="20210106 14:21:25.026"></status>
</kw>
<msg timestamp="20210106 14:21:25.029" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210106 14:21:25.029" starttime="20210106 14:21:25.026"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:21:25.032" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:21:25.032" starttime="20210106 14:21:25.032"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:21:25.032" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:21:25.032" starttime="20210106 14:21:25.032"></status>
</kw>
<status status="PASS" endtime="20210106 14:21:25.033" starttime="20210106 14:21:25.031"></status>
</kw>
<msg timestamp="20210106 14:21:25.033" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:21:25.033" starttime="20210106 14:21:25.031"></status>
</kw>
<status status="PASS" endtime="20210106 14:21:25.033" starttime="20210106 14:21:25.030"></status>
</kw>
<msg timestamp="20210106 14:21:25.033" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-0fdhHylN.txt</msg>
<status status="PASS" endtime="20210106 14:21:25.033" starttime="20210106 14:21:25.030"></status>
</kw>
<msg timestamp="20210106 14:21:25.033" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-0fdhHylN.txt</msg>
<status status="PASS" endtime="20210106 14:21:25.033" starttime="20210106 14:21:25.030"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:21:25.036" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-0fdhHylN.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:22:08.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:22:08.476" level="INFO">${output} = 2021-01-06 14:21:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:26 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210106 14:22:08.476" starttime="20210106 14:21:25.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:22:08.478" level="INFO">2021-01-06 14:21:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-01-06 14:21:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-06 14:21:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:27 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-06 14:21:27 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-06 14:21:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:21:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 14:21:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:21:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4333094DA076-&gt;0cf9edc5-eff0-4a12-92e8-d91235bbeb8c
2021-01-06 14:21:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 14:21:31 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-06 14:21:31 INFO  JobSubmitter:202 - number of splits:3
2021-01-06 14:21:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1609942774697_0002
2021-01-06 14:21:34 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-06 14:21:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:34 INFO  Configuration:2752 - resource-types.xml not found
2021-01-06 14:21:34 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-06 14:21:34 INFO  YarnClientImpl:324 - Submitted application application_1609942774697_0002
2021-01-06 14:21:34 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1609942774697_0002/
2021-01-06 14:21:34 INFO  Job:1619 - Running job: job_1609942774697_0002
2021-01-06 14:21:42 INFO  Job:1640 - Job job_1609942774697_0002 running in uber mode : false
2021-01-06 14:21:42 INFO  Job:1647 -  map 0% reduce 0%
2021-01-06 14:21:48 INFO  Job:1647 -  map 33% reduce 0%
2021-01-06 14:21:54 INFO  Job:1647 -  map 67% reduce 0%
2021-01-06 14:22:00 INFO  Job:1647 -  map 100% reduce 0%
2021-01-06 14:22:04 INFO  Job:1647 -  map 100% reduce 100%
2021-01-06 14:22:07 INFO  Job:1658 - Job job_1609942774697_0002 completed successfully
2021-01-06 14:22:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:22:08 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078915
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41536
		Total time spent by all reduces in occupied slots (ms)=14760
		Total time spent by all map tasks (ms)=10384
		Total time spent by all reduce tasks (ms)=3690
		Total vcore-milliseconds taken by all map tasks=10384
		Total vcore-milliseconds taken by all reduce tasks=3690
		Total megabyte-milliseconds taken by all map tasks=42532864
		Total megabyte-milliseconds taken by all reduce tasks=15114240
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=695
		CPU time spent (ms)=6730
		Physical memory (bytes) snapshot=1199796224
		Virtual memory (bytes) snapshot=15754366976
		Total committed heap usage (bytes)=1074266112
		Peak Map Physical memory (bytes)=315248640
		Peak Map Virtual memory (bytes)=3939803136
		Peak Reduce Physical memory (bytes)=291696640
		Peak Reduce Virtual memory (bytes)=3955806208
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-06 14:22:08 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210106 14:22:08.478" starttime="20210106 14:22:08.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:22:08.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:22:08.479" starttime="20210106 14:22:08.479"></status>
</kw>
<status status="PASS" endtime="20210106 14:22:08.480" starttime="20210106 14:21:25.034"></status>
</kw>
<msg timestamp="20210106 14:22:08.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:22:08.480" starttime="20210106 14:21:25.034"></status>
</kw>
<msg timestamp="20210106 14:22:08.483" level="INFO">${output} = 2021-01-06 14:21:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-06 14:21:26 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210106 14:22:08.483" starttime="20210106 14:21:25.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210106 14:22:08.483" starttime="20210106 14:22:08.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 14:22:08.484" starttime="20210106 14:22:08.484"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 14:22:08.484" critical="yes" starttime="20210106 14:21:25.008"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210106 14:22:08.488" starttime="20210106 14:20:42.799"></status>
</suite>
<status status="PASS" elapsedtime="199724" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:25:08.626" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:25:13.666" level="INFO">${rc} = 255</msg>
<msg timestamp="20210106 14:25:13.666" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210106 14:25:13.666" starttime="20210106 14:25:08.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:25:13.667" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210106 14:25:13.668" starttime="20210106 14:25:13.667"></status>
</kw>
<msg timestamp="20210106 14:25:13.668" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210106 14:25:13.668" starttime="20210106 14:25:08.620"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:25:13.674" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:25:16.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:25:16.895" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:25:16.895" starttime="20210106 14:25:13.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:25:16.897" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:25:16.897" starttime="20210106 14:25:16.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:25:16.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:25:16.897" starttime="20210106 14:25:16.897"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:16.898" starttime="20210106 14:25:13.670"></status>
</kw>
<msg timestamp="20210106 14:25:16.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:25:16.898" starttime="20210106 14:25:13.670"></status>
</kw>
<msg timestamp="20210106 14:25:16.898" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210106 14:25:16.898" starttime="20210106 14:25:13.669"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210106 14:25:16.898" starttime="20210106 14:25:16.898"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:16.899" starttime="20210106 14:25:13.669"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:16.899" starttime="20210106 14:25:13.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:25:16.903" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:25:20.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:25:20.083" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:25:20.083" starttime="20210106 14:25:16.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:25:20.085" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:25:20.085" starttime="20210106 14:25:20.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:25:20.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:25:20.086" starttime="20210106 14:25:20.085"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:20.086" starttime="20210106 14:25:16.900"></status>
</kw>
<msg timestamp="20210106 14:25:20.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:25:20.086" starttime="20210106 14:25:16.900"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:20.086" starttime="20210106 14:25:16.900"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:20.087" starttime="20210106 14:25:16.899"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:20.087" starttime="20210106 14:25:16.899"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210106 14:25:20.087" starttime="20210106 14:25:20.087"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:25:20.092" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:25:23.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:25:23.320" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T14:25...</msg>
<status status="PASS" endtime="20210106 14:25:23.320" starttime="20210106 14:25:20.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:25:23.321" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T14:25:19.797Z",
  "modificationTime" : "2021-01-06T14:25:19.797Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210106 14:25:23.321" starttime="20210106 14:25:23.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:25:23.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:25:23.322" starttime="20210106 14:25:23.321"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:23.322" starttime="20210106 14:25:20.088"></status>
</kw>
<msg timestamp="20210106 14:25:23.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:25:23.322" starttime="20210106 14:25:20.088"></status>
</kw>
<msg timestamp="20210106 14:25:23.323" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T14:25...</msg>
<status status="PASS" endtime="20210106 14:25:23.323" starttime="20210106 14:25:20.087"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210106 14:25:23.323" starttime="20210106 14:25:23.323"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:25:23.327" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:25:23.327" starttime="20210106 14:25:23.326"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:25:23.327" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:25:23.327" starttime="20210106 14:25:23.327"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:23.327" starttime="20210106 14:25:23.326"></status>
</kw>
<msg timestamp="20210106 14:25:23.328" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:25:23.328" starttime="20210106 14:25:23.325"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:23.328" starttime="20210106 14:25:23.325"></status>
</kw>
<msg timestamp="20210106 14:25:23.328" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210106 14:25:23.328" starttime="20210106 14:25:23.324"></status>
</kw>
<msg timestamp="20210106 14:25:23.328" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210106 14:25:23.328" starttime="20210106 14:25:23.323"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:25:23.332" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:25:26.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:25:26.680" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:25:26.680" starttime="20210106 14:25:23.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:25:26.681" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:25:26.681" starttime="20210106 14:25:26.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:25:26.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:25:26.682" starttime="20210106 14:25:26.682"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:26.683" starttime="20210106 14:25:23.329"></status>
</kw>
<msg timestamp="20210106 14:25:26.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:25:26.683" starttime="20210106 14:25:23.329"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:26.683" starttime="20210106 14:25:23.328"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:25:26.687" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:25:33.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:25:33.428" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:25:33.428" starttime="20210106 14:25:26.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:25:33.429" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:25:33.429" starttime="20210106 14:25:33.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:25:33.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:25:33.430" starttime="20210106 14:25:33.429"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:33.430" starttime="20210106 14:25:26.684"></status>
</kw>
<msg timestamp="20210106 14:25:33.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:25:33.430" starttime="20210106 14:25:26.684"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:33.430" starttime="20210106 14:25:26.683"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:25:33.435" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:25:38.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:25:38.153" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:25:38.153" starttime="20210106 14:25:33.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:25:38.154" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:25:38.154" starttime="20210106 14:25:38.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:25:38.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:25:38.155" starttime="20210106 14:25:38.154"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:38.155" starttime="20210106 14:25:33.432"></status>
</kw>
<msg timestamp="20210106 14:25:38.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:25:38.156" starttime="20210106 14:25:33.431"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:38.156" starttime="20210106 14:25:33.431"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:25:38.160" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:25:43.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:25:43.416" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:25:43.416" starttime="20210106 14:25:38.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:25:43.418" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:25:43.418" starttime="20210106 14:25:43.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:25:43.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:25:43.418" starttime="20210106 14:25:43.418"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:43.419" starttime="20210106 14:25:38.157"></status>
</kw>
<msg timestamp="20210106 14:25:43.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:25:43.419" starttime="20210106 14:25:38.157"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:43.419" starttime="20210106 14:25:38.156"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 14:25:43.419" critical="yes" starttime="20210106 14:25:08.619"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:25:43.427" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:25:43.427" starttime="20210106 14:25:43.426"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:25:43.428" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:25:43.428" starttime="20210106 14:25:43.428"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:43.429" starttime="20210106 14:25:43.425"></status>
</kw>
<msg timestamp="20210106 14:25:43.429" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:25:43.429" starttime="20210106 14:25:43.425"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:43.429" starttime="20210106 14:25:43.424"></status>
</kw>
<msg timestamp="20210106 14:25:43.429" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210106 14:25:43.429" starttime="20210106 14:25:43.423"></status>
</kw>
<msg timestamp="20210106 14:25:43.429" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210106 14:25:43.429" starttime="20210106 14:25:43.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:25:43.433" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:25:46.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:25:46.773" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:25:46.773" starttime="20210106 14:25:43.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:25:46.774" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:25:46.774" starttime="20210106 14:25:46.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:25:46.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:25:46.775" starttime="20210106 14:25:46.774"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:46.775" starttime="20210106 14:25:43.430"></status>
</kw>
<msg timestamp="20210106 14:25:46.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:25:46.775" starttime="20210106 14:25:43.430"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:46.775" starttime="20210106 14:25:43.429"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:25:46.779" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:25:50.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:25:50.102" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:25:50.102" starttime="20210106 14:25:46.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:25:50.104" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:25:50.104" starttime="20210106 14:25:50.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:25:50.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:25:50.104" starttime="20210106 14:25:50.104"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:50.105" starttime="20210106 14:25:46.776"></status>
</kw>
<msg timestamp="20210106 14:25:50.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:25:50.105" starttime="20210106 14:25:46.776"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:50.105" starttime="20210106 14:25:46.776"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 14:25:50.106" critical="yes" starttime="20210106 14:25:43.420"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210106 14:25:50.107" starttime="20210106 14:25:08.566"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:27:31.913" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:27:31.913" starttime="20210106 14:27:31.913"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:27:31.914" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:27:31.914" starttime="20210106 14:27:31.913"></status>
</kw>
<status status="PASS" endtime="20210106 14:27:31.914" starttime="20210106 14:27:31.913"></status>
</kw>
<msg timestamp="20210106 14:27:31.914" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:27:31.914" starttime="20210106 14:27:31.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:27:31.915" starttime="20210106 14:27:31.915"></status>
</kw>
<msg timestamp="20210106 14:27:31.915" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210106 14:27:31.915" starttime="20210106 14:27:31.914"></status>
</kw>
<status status="PASS" endtime="20210106 14:27:31.915" starttime="20210106 14:27:31.912"></status>
</kw>
<msg timestamp="20210106 14:27:31.915" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:27:31.915" starttime="20210106 14:27:31.911"></status>
</kw>
<msg timestamp="20210106 14:27:31.915" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:27:31.915" starttime="20210106 14:27:31.910"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:27:31.916" level="INFO">${random} = 19674</msg>
<status status="PASS" endtime="20210106 14:27:31.916" starttime="20210106 14:27:31.916"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:27:31.921" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-19674 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:27:35.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:27:35.492" level="INFO">${output} = 2021-01-06 14:27:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:27:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210106 14:27:35.492" starttime="20210106 14:27:31.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:27:35.493" level="INFO">2021-01-06 14:27:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:27:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:27:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 14:27:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:27:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F942DC7C8A76-&gt;0218cde8-e0b9-4eda-a334-6a8eeb63aa99
2021-01-06 14:27:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210106 14:27:35.493" starttime="20210106 14:27:35.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:27:35.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:27:35.494" starttime="20210106 14:27:35.493"></status>
</kw>
<status status="PASS" endtime="20210106 14:27:35.494" starttime="20210106 14:27:31.917"></status>
</kw>
<msg timestamp="20210106 14:27:35.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:27:35.495" starttime="20210106 14:27:31.916"></status>
</kw>
<msg timestamp="20210106 14:27:35.495" level="INFO">${result} = 2021-01-06 14:27:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:27:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210106 14:27:35.495" starttime="20210106 14:27:31.916"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:27:35.500" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:27:37.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:27:37.359" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 14:27 ofs://om/volume1/bucket1/ozone-19674
-rw-...</msg>
<status status="PASS" endtime="20210106 14:27:37.359" starttime="20210106 14:27:35.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:27:37.360" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 14:27 ofs://om/volume1/bucket1/ozone-19674
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 14:25 ofs://om/volume1/bucket1/ozone-48957
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:25 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:27 ofs://om/volume1/bucket1/wordcount-0wrCQ02T.txt</msg>
<status status="PASS" endtime="20210106 14:27:37.360" starttime="20210106 14:27:37.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:27:37.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:27:37.361" starttime="20210106 14:27:37.360"></status>
</kw>
<status status="PASS" endtime="20210106 14:27:37.361" starttime="20210106 14:27:35.498"></status>
</kw>
<msg timestamp="20210106 14:27:37.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:27:37.361" starttime="20210106 14:27:35.497"></status>
</kw>
<msg timestamp="20210106 14:27:37.361" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 14:27 ofs://om/volume1/bucket1/ozone-19674
-rw-...</msg>
<status status="PASS" endtime="20210106 14:27:37.361" starttime="20210106 14:27:35.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:27:37.362" starttime="20210106 14:27:37.362"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:27:37.362" critical="yes" starttime="20210106 14:27:31.909"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210106 14:27:37.363" starttime="20210106 14:27:31.866"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:25:55.238" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:25:55.238" starttime="20210106 14:25:55.237"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:25:55.238" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:25:55.239" starttime="20210106 14:25:55.238"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:55.239" starttime="20210106 14:25:55.237"></status>
</kw>
<msg timestamp="20210106 14:25:55.239" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:25:55.239" starttime="20210106 14:25:55.237"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:55.239" starttime="20210106 14:25:55.236"></status>
</kw>
<msg timestamp="20210106 14:25:55.239" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:25:55.239" starttime="20210106 14:25:55.235"></status>
</kw>
<msg timestamp="20210106 14:25:55.239" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:25:55.239" starttime="20210106 14:25:55.234"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:25:55.240" level="INFO">${random} = 48957</msg>
<status status="PASS" endtime="20210106 14:25:55.240" starttime="20210106 14:25:55.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:25:55.246" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-48957 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:25:59.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:25:59.133" level="INFO">${output} = 2021-01-06 14:25:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:25:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210106 14:25:59.133" starttime="20210106 14:25:55.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:25:59.135" level="INFO">2021-01-06 14:25:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:25:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:25:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 14:25:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:25:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3C27799F1886-&gt;0218cde8-e0b9-4eda-a334-6a8eeb63aa99
2021-01-06 14:25:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210106 14:25:59.135" starttime="20210106 14:25:59.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:25:59.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:25:59.136" starttime="20210106 14:25:59.135"></status>
</kw>
<status status="PASS" endtime="20210106 14:25:59.136" starttime="20210106 14:25:55.241"></status>
</kw>
<msg timestamp="20210106 14:25:59.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:25:59.136" starttime="20210106 14:25:55.240"></status>
</kw>
<msg timestamp="20210106 14:25:59.136" level="INFO">${result} = 2021-01-06 14:25:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:25:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210106 14:25:59.136" starttime="20210106 14:25:55.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:25:59.142" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:26:01.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:26:01.077" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 14:25 o3fs://bucket1.volume1.om/ozone-48957
dr...</msg>
<status status="PASS" endtime="20210106 14:26:01.077" starttime="20210106 14:25:59.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:26:01.078" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 14:25 o3fs://bucket1.volume1.om/ozone-48957
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:25 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210106 14:26:01.078" starttime="20210106 14:26:01.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:26:01.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:26:01.079" starttime="20210106 14:26:01.079"></status>
</kw>
<status status="PASS" endtime="20210106 14:26:01.079" starttime="20210106 14:25:59.139"></status>
</kw>
<msg timestamp="20210106 14:26:01.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:26:01.080" starttime="20210106 14:25:59.137"></status>
</kw>
<msg timestamp="20210106 14:26:01.080" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-06 14:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2021-01-06 14:25 o3fs://bucket1.volume1.om/ozone-48957
dr...</msg>
<status status="PASS" endtime="20210106 14:26:01.080" starttime="20210106 14:25:59.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:26:01.080" starttime="20210106 14:26:01.080"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:26:01.081" critical="yes" starttime="20210106 14:25:55.233"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210106 14:26:01.082" starttime="20210106 14:25:55.184"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:27:42.411" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:27:42.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:27:42.416" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:27:42.416" starttime="20210106 14:27:42.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:27:42.417" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:27:42.417" starttime="20210106 14:27:42.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:27:42.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:27:42.418" starttime="20210106 14:27:42.417"></status>
</kw>
<status status="PASS" endtime="20210106 14:27:42.418" starttime="20210106 14:27:42.406"></status>
</kw>
<msg timestamp="20210106 14:27:42.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:27:42.418" starttime="20210106 14:27:42.406"></status>
</kw>
<msg timestamp="20210106 14:27:42.418" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:27:42.418" starttime="20210106 14:27:42.405"></status>
</kw>
<msg timestamp="20210106 14:27:42.419" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:27:42.419" starttime="20210106 14:27:42.405"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:27:42.423" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:27:42.423" starttime="20210106 14:27:42.423"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:27:42.424" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:27:42.424" starttime="20210106 14:27:42.424"></status>
</kw>
<status status="PASS" endtime="20210106 14:27:42.424" starttime="20210106 14:27:42.421"></status>
</kw>
<msg timestamp="20210106 14:27:42.424" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:27:42.424" starttime="20210106 14:27:42.421"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:27:42.425" starttime="20210106 14:27:42.425"></status>
</kw>
<msg timestamp="20210106 14:27:42.425" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210106 14:27:42.425" starttime="20210106 14:27:42.424"></status>
</kw>
<status status="PASS" endtime="20210106 14:27:42.425" starttime="20210106 14:27:42.420"></status>
</kw>
<msg timestamp="20210106 14:27:42.425" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:27:42.426" starttime="20210106 14:27:42.420"></status>
</kw>
<msg timestamp="20210106 14:27:42.426" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:27:42.426" starttime="20210106 14:27:42.419"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:27:42.429" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:28:21.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:28:21.314" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:27:44 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:27:44 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210106 14:28:21.314" starttime="20210106 14:27:42.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:28:21.316" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:27:44 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:27:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:27:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 14:27:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:27:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4DF985E9E8C3-&gt;0218cde8-e0b9-4eda-a334-6a8eeb63aa99
2021-01-06 14:27:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-06 14:27:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2021-01-06 14:27:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-06 14:27:46 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-06 14:27:46 INFO  JobSubmitter:202 - number of splits:3
2021-01-06 14:27:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1609943077879_0003
2021-01-06 14:27:46 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-06 14:27:47 INFO  Configuration:2795 - resource-types.xml not found
2021-01-06 14:27:47 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-06 14:27:47 INFO  YarnClientImpl:329 - Submitted application application_1609943077879_0003
2021-01-06 14:27:47 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1609943077879_0003/
2021-01-06 14:27:47 INFO  Job:1619 - Running job: job_1609943077879_0003
2021-01-06 14:27:54 INFO  Job:1640 - Job job_1609943077879_0003 running in uber mode : false
2021-01-06 14:27:54 INFO  Job:1647 -  map 0% reduce 0%
2021-01-06 14:28:01 INFO  Job:1647 -  map 33% reduce 0%
2021-01-06 14:28:07 INFO  Job:1647 -  map 67% reduce 0%
2021-01-06 14:28:13 INFO  Job:1647 -  map 100% reduce 0%
2021-01-06 14:28:17 INFO  Job:1647 -  map 100% reduce 100%
2021-01-06 14:28:20 INFO  Job:1658 - Job job_1609943077879_0003 completed successfully
2021-01-06 14:28:20 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056261
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41900
		Total time spent by all reduces in occupied slots (ms)=15452
		Total time spent by all map tasks (ms)=10475
		Total time spent by all reduce tasks (ms)=3863
		Total vcore-milliseconds taken by all map tasks=10475
		Total vcore-milliseconds taken by all reduce tasks=3863
		Total megabyte-milliseconds taken by all map tasks=42905600
		Total megabyte-milliseconds taken by all reduce tasks=15822848
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=751
		CPU time spent (ms)=7500
		Physical memory (bytes) snapshot=1487749120
		Virtual memory (bytes) snapshot=15794364416
		Total committed heap usage (bytes)=1727004672
		Peak Map Physical memory (bytes)=370491392
		Peak Map Virtual memory (bytes)=3946524672
		Peak Reduce Physical memory (bytes)=390787072
		Peak Reduce Virtual memory (bytes)=3964002304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.068 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210106 14:28:21.316" starttime="20210106 14:28:21.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:28:21.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:28:21.317" starttime="20210106 14:28:21.316"></status>
</kw>
<status status="PASS" endtime="20210106 14:28:21.317" starttime="20210106 14:27:42.427"></status>
</kw>
<msg timestamp="20210106 14:28:21.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:28:21.317" starttime="20210106 14:27:42.426"></status>
</kw>
<msg timestamp="20210106 14:28:21.318" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:27:44 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:27:44 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210106 14:28:21.318" starttime="20210106 14:27:42.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 14:28:21.318" starttime="20210106 14:28:21.318"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 14:28:21.318" critical="yes" starttime="20210106 14:27:42.404"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:28:21.324" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:28:21.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:28:21.331" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:28:21.331" starttime="20210106 14:28:21.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:28:21.332" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:28:21.332" starttime="20210106 14:28:21.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:28:21.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:28:21.333" starttime="20210106 14:28:21.332"></status>
</kw>
<status status="PASS" endtime="20210106 14:28:21.333" starttime="20210106 14:28:21.321"></status>
</kw>
<msg timestamp="20210106 14:28:21.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:28:21.333" starttime="20210106 14:28:21.321"></status>
</kw>
<msg timestamp="20210106 14:28:21.334" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:28:21.334" starttime="20210106 14:28:21.320"></status>
</kw>
<msg timestamp="20210106 14:28:21.334" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:28:21.334" starttime="20210106 14:28:21.320"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:28:21.334" level="INFO">${random} = 0yZtIjLh</msg>
<status status="PASS" endtime="20210106 14:28:21.334" starttime="20210106 14:28:21.334"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:28:21.338" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:28:21.339" starttime="20210106 14:28:21.338"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:28:21.339" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:28:21.339" starttime="20210106 14:28:21.339"></status>
</kw>
<status status="PASS" endtime="20210106 14:28:21.339" starttime="20210106 14:28:21.337"></status>
</kw>
<msg timestamp="20210106 14:28:21.339" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:28:21.339" starttime="20210106 14:28:21.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210106 14:28:21.340" starttime="20210106 14:28:21.340"></status>
</kw>
<msg timestamp="20210106 14:28:21.340" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210106 14:28:21.340" starttime="20210106 14:28:21.340"></status>
</kw>
<status status="PASS" endtime="20210106 14:28:21.341" starttime="20210106 14:28:21.336"></status>
</kw>
<msg timestamp="20210106 14:28:21.341" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:28:21.341" starttime="20210106 14:28:21.335"></status>
</kw>
<msg timestamp="20210106 14:28:21.341" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210106 14:28:21.341" starttime="20210106 14:28:21.334"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:28:21.344" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:28:21.344" starttime="20210106 14:28:21.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:28:21.344" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:28:21.344" starttime="20210106 14:28:21.344"></status>
</kw>
<status status="PASS" endtime="20210106 14:28:21.345" starttime="20210106 14:28:21.343"></status>
</kw>
<msg timestamp="20210106 14:28:21.345" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:28:21.345" starttime="20210106 14:28:21.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:28:21.346" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210106 14:28:21.346" starttime="20210106 14:28:21.346"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:28:21.347" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210106 14:28:21.347" starttime="20210106 14:28:21.346"></status>
</kw>
<status status="PASS" endtime="20210106 14:28:21.347" starttime="20210106 14:28:21.345"></status>
</kw>
<msg timestamp="20210106 14:28:21.347" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210106 14:28:21.347" starttime="20210106 14:28:21.345"></status>
</kw>
<status status="PASS" endtime="20210106 14:28:21.347" starttime="20210106 14:28:21.342"></status>
</kw>
<msg timestamp="20210106 14:28:21.347" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210106 14:28:21.347" starttime="20210106 14:28:21.342"></status>
</kw>
<msg timestamp="20210106 14:28:21.348" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210106 14:28:21.348" starttime="20210106 14:28:21.341"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210106 14:28:21.350" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210106 14:28:21.350" starttime="20210106 14:28:21.350"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:28:21.351" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210106 14:28:21.351" starttime="20210106 14:28:21.351"></status>
</kw>
<status status="PASS" endtime="20210106 14:28:21.351" starttime="20210106 14:28:21.350"></status>
</kw>
<msg timestamp="20210106 14:28:21.351" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210106 14:28:21.351" starttime="20210106 14:28:21.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:28:21.353" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210106 14:28:21.353" starttime="20210106 14:28:21.352"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:28:21.353" level="INFO">${result} = /wordcount-0yZtIjLh.txt</msg>
<status status="PASS" endtime="20210106 14:28:21.353" starttime="20210106 14:28:21.353"></status>
</kw>
<status status="PASS" endtime="20210106 14:28:21.353" starttime="20210106 14:28:21.352"></status>
</kw>
<msg timestamp="20210106 14:28:21.353" level="INFO">${path_with_leading} = /wordcount-0yZtIjLh.txt</msg>
<status status="PASS" endtime="20210106 14:28:21.353" starttime="20210106 14:28:21.351"></status>
</kw>
<status status="PASS" endtime="20210106 14:28:21.354" starttime="20210106 14:28:21.349"></status>
</kw>
<msg timestamp="20210106 14:28:21.354" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-0yZtIjLh.txt</msg>
<status status="PASS" endtime="20210106 14:28:21.354" starttime="20210106 14:28:21.348"></status>
</kw>
<msg timestamp="20210106 14:28:21.354" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-0yZtIjLh.txt</msg>
<status status="PASS" endtime="20210106 14:28:21.354" starttime="20210106 14:28:21.348"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:28:21.359" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-0yZtIjLh.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:29:04.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:29:04.131" level="INFO">${output} = 2021-01-06 14:28:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2021-01-06 14:28:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210106 14:29:04.131" starttime="20210106 14:28:21.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:29:04.132" level="INFO">2021-01-06 14:28:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2021-01-06 14:28:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-06 14:28:23 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:28:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:28:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 14:28:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:28:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A426C351896B-&gt;0218cde8-e0b9-4eda-a334-6a8eeb63aa99
2021-01-06 14:28:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 14:28:24 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-06 14:28:27 INFO  JobSubmitter:202 - number of splits:3
2021-01-06 14:28:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1609943077879_0004
2021-01-06 14:28:27 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-06 14:28:28 INFO  Configuration:2795 - resource-types.xml not found
2021-01-06 14:28:28 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-06 14:28:28 INFO  YarnClientImpl:329 - Submitted application application_1609943077879_0004
2021-01-06 14:28:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1609943077879_0004/
2021-01-06 14:28:28 INFO  Job:1619 - Running job: job_1609943077879_0004
2021-01-06 14:28:36 INFO  Job:1640 - Job job_1609943077879_0004 running in uber mode : false
2021-01-06 14:28:36 INFO  Job:1647 -  map 0% reduce 0%
2021-01-06 14:28:43 INFO  Job:1647 -  map 33% reduce 0%
2021-01-06 14:28:49 INFO  Job:1647 -  map 67% reduce 0%
2021-01-06 14:28:54 INFO  Job:1647 -  map 100% reduce 0%
2021-01-06 14:29:00 INFO  Job:1647 -  map 100% reduce 100%
2021-01-06 14:29:03 INFO  Job:1658 - Job job_1609943077879_0004 completed successfully
2021-01-06 14:29:03 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118947
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42760
		Total time spent by all reduces in occupied slots (ms)=16056
		Total time spent by all map tasks (ms)=10690
		Total time spent by all reduce tasks (ms)=4014
		Total vcore-milliseconds taken by all map tasks=10690
		Total vcore-milliseconds taken by all reduce tasks=4014
		Total megabyte-milliseconds taken by all map tasks=43786240
		Total megabyte-milliseconds taken by all reduce tasks=16441344
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=790
		CPU time spent (ms)=8250
		Physical memory (bytes) snapshot=1527984128
		Virtual memory (bytes) snapshot=15812739072
		Total committed heap usage (bytes)=1720713216
		Peak Map Physical memory (bytes)=389058560
		Peak Map Virtual memory (bytes)=3953541120
		Peak Reduce Physical memory (bytes)=388493312
		Peak Reduce Virtual memory (bytes)=3967016960
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210106 14:29:04.133" starttime="20210106 14:29:04.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:29:04.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:29:04.134" starttime="20210106 14:29:04.133"></status>
</kw>
<status status="PASS" endtime="20210106 14:29:04.134" starttime="20210106 14:28:21.355"></status>
</kw>
<msg timestamp="20210106 14:29:04.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:29:04.134" starttime="20210106 14:28:21.355"></status>
</kw>
<msg timestamp="20210106 14:29:04.134" level="INFO">${output} = 2021-01-06 14:28:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2021-01-06 14:28:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210106 14:29:04.134" starttime="20210106 14:28:21.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210106 14:29:04.135" starttime="20210106 14:29:04.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 14:29:04.135" starttime="20210106 14:29:04.135"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 14:29:04.136" critical="yes" starttime="20210106 14:28:21.319"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210106 14:29:04.137" starttime="20210106 14:27:42.352"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:26:06.371" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:26:06.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:26:06.377" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:26:06.377" starttime="20210106 14:26:06.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:26:06.378" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:26:06.378" starttime="20210106 14:26:06.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:26:06.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:26:06.379" starttime="20210106 14:26:06.379"></status>
</kw>
<status status="PASS" endtime="20210106 14:26:06.379" starttime="20210106 14:26:06.367"></status>
</kw>
<msg timestamp="20210106 14:26:06.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:26:06.379" starttime="20210106 14:26:06.366"></status>
</kw>
<msg timestamp="20210106 14:26:06.380" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:26:06.380" starttime="20210106 14:26:06.366"></status>
</kw>
<msg timestamp="20210106 14:26:06.380" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:26:06.380" starttime="20210106 14:26:06.366"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:26:06.385" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:26:06.385" starttime="20210106 14:26:06.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:26:06.385" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:26:06.386" starttime="20210106 14:26:06.385"></status>
</kw>
<status status="PASS" endtime="20210106 14:26:06.386" starttime="20210106 14:26:06.383"></status>
</kw>
<msg timestamp="20210106 14:26:06.386" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:26:06.386" starttime="20210106 14:26:06.382"></status>
</kw>
<status status="PASS" endtime="20210106 14:26:06.386" starttime="20210106 14:26:06.381"></status>
</kw>
<msg timestamp="20210106 14:26:06.386" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:26:06.386" starttime="20210106 14:26:06.381"></status>
</kw>
<msg timestamp="20210106 14:26:06.386" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:26:06.386" starttime="20210106 14:26:06.380"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:26:06.390" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:26:50.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:26:50.117" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:26:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:26:08 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210106 14:26:50.117" starttime="20210106 14:26:06.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:26:50.118" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:26:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:26:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:26:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 14:26:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:26:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C0CE35679F31-&gt;0218cde8-e0b9-4eda-a334-6a8eeb63aa99
2021-01-06 14:26:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-06 14:26:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2021-01-06 14:26:12 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-06 14:26:13 INFO  JobSubmitter:202 - number of splits:3
2021-01-06 14:26:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1609943077879_0001
2021-01-06 14:26:13 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-06 14:26:13 INFO  Configuration:2795 - resource-types.xml not found
2021-01-06 14:26:13 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-06 14:26:13 INFO  YarnClientImpl:329 - Submitted application application_1609943077879_0001
2021-01-06 14:26:13 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1609943077879_0001/
2021-01-06 14:26:13 INFO  Job:1619 - Running job: job_1609943077879_0001
2021-01-06 14:26:24 INFO  Job:1640 - Job job_1609943077879_0001 running in uber mode : false
2021-01-06 14:26:24 INFO  Job:1647 -  map 0% reduce 0%
2021-01-06 14:26:31 INFO  Job:1647 -  map 33% reduce 0%
2021-01-06 14:26:37 INFO  Job:1647 -  map 67% reduce 0%
2021-01-06 14:26:43 INFO  Job:1647 -  map 100% reduce 0%
2021-01-06 14:26:48 INFO  Job:1647 -  map 100% reduce 100%
2021-01-06 14:26:49 INFO  Job:1658 - Job job_1609943077879_0001 completed successfully
2021-01-06 14:26:49 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056481
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42424
		Total time spent by all reduces in occupied slots (ms)=16640
		Total time spent by all map tasks (ms)=10606
		Total time spent by all reduce tasks (ms)=4160
		Total vcore-milliseconds taken by all map tasks=10606
		Total vcore-milliseconds taken by all reduce tasks=4160
		Total megabyte-milliseconds taken by all map tasks=43442176
		Total megabyte-milliseconds taken by all reduce tasks=17039360
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=729
		CPU time spent (ms)=7880
		Physical memory (bytes) snapshot=1515872256
		Virtual memory (bytes) snapshot=15803162624
		Total committed heap usage (bytes)=1749549056
		Peak Map Physical memory (bytes)=385961984
		Peak Map Virtual memory (bytes)=3946086400
		Peak Reduce Physical memory (bytes)=388993024
		Peak Reduce Virtual memory (bytes)=3965726720
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.376 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210106 14:26:50.118" starttime="20210106 14:26:50.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:26:50.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:26:50.119" starttime="20210106 14:26:50.118"></status>
</kw>
<status status="PASS" endtime="20210106 14:26:50.119" starttime="20210106 14:26:06.387"></status>
</kw>
<msg timestamp="20210106 14:26:50.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:26:50.120" starttime="20210106 14:26:06.387"></status>
</kw>
<msg timestamp="20210106 14:26:50.120" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-06 14:26:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:26:08 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210106 14:26:50.120" starttime="20210106 14:26:06.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 14:26:50.121" starttime="20210106 14:26:50.120"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 14:26:50.121" critical="yes" starttime="20210106 14:26:06.365"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:26:50.127" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:26:50.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:26:50.136" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:26:50.136" starttime="20210106 14:26:50.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:26:50.137" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:26:50.137" starttime="20210106 14:26:50.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:26:50.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:26:50.138" starttime="20210106 14:26:50.137"></status>
</kw>
<status status="PASS" endtime="20210106 14:26:50.138" starttime="20210106 14:26:50.123"></status>
</kw>
<msg timestamp="20210106 14:26:50.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:26:50.138" starttime="20210106 14:26:50.123"></status>
</kw>
<msg timestamp="20210106 14:26:50.138" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:26:50.138" starttime="20210106 14:26:50.123"></status>
</kw>
<msg timestamp="20210106 14:26:50.139" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20210106 14:26:50.139" starttime="20210106 14:26:50.122"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:26:50.139" level="INFO">${random} = 0wrCQ02T</msg>
<status status="PASS" endtime="20210106 14:26:50.139" starttime="20210106 14:26:50.139"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:26:50.142" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:26:50.143" starttime="20210106 14:26:50.142"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:26:50.143" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:26:50.143" starttime="20210106 14:26:50.143"></status>
</kw>
<status status="PASS" endtime="20210106 14:26:50.143" starttime="20210106 14:26:50.142"></status>
</kw>
<msg timestamp="20210106 14:26:50.143" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:26:50.143" starttime="20210106 14:26:50.141"></status>
</kw>
<status status="PASS" endtime="20210106 14:26:50.143" starttime="20210106 14:26:50.140"></status>
</kw>
<msg timestamp="20210106 14:26:50.144" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:26:50.144" starttime="20210106 14:26:50.140"></status>
</kw>
<msg timestamp="20210106 14:26:50.144" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210106 14:26:50.144" starttime="20210106 14:26:50.139"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:26:50.146" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:26:50.147" starttime="20210106 14:26:50.146"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:26:50.147" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:26:50.147" starttime="20210106 14:26:50.147"></status>
</kw>
<status status="PASS" endtime="20210106 14:26:50.147" starttime="20210106 14:26:50.146"></status>
</kw>
<msg timestamp="20210106 14:26:50.147" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:26:50.147" starttime="20210106 14:26:50.145"></status>
</kw>
<status status="PASS" endtime="20210106 14:26:50.148" starttime="20210106 14:26:50.145"></status>
</kw>
<msg timestamp="20210106 14:26:50.148" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210106 14:26:50.148" starttime="20210106 14:26:50.144"></status>
</kw>
<msg timestamp="20210106 14:26:50.148" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210106 14:26:50.148" starttime="20210106 14:26:50.144"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210106 14:26:50.150" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210106 14:26:50.150" starttime="20210106 14:26:50.150"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 14:26:50.151" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210106 14:26:50.151" starttime="20210106 14:26:50.151"></status>
</kw>
<status status="PASS" endtime="20210106 14:26:50.151" starttime="20210106 14:26:50.150"></status>
</kw>
<msg timestamp="20210106 14:26:50.151" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210106 14:26:50.151" starttime="20210106 14:26:50.149"></status>
</kw>
<status status="PASS" endtime="20210106 14:26:50.152" starttime="20210106 14:26:50.149"></status>
</kw>
<msg timestamp="20210106 14:26:50.152" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-0wrCQ02T.txt</msg>
<status status="PASS" endtime="20210106 14:26:50.152" starttime="20210106 14:26:50.148"></status>
</kw>
<msg timestamp="20210106 14:26:50.152" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-0wrCQ02T.txt</msg>
<status status="PASS" endtime="20210106 14:26:50.152" starttime="20210106 14:26:50.148"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:26:50.155" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-0wrCQ02T.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:27:26.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:27:26.741" level="INFO">${output} = 2021-01-06 14:26:51 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2021-01-06 14:26:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210106 14:27:26.741" starttime="20210106 14:26:50.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:27:26.742" level="INFO">2021-01-06 14:26:51 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2021-01-06 14:26:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-06 14:26:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2021-01-06 14:26:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:26:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-06 14:26:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:26:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BD376032F06A-&gt;0218cde8-e0b9-4eda-a334-6a8eeb63aa99
2021-01-06 14:26:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 14:26:53 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-06 14:26:53 INFO  JobSubmitter:202 - number of splits:3
2021-01-06 14:26:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1609943077879_0002
2021-01-06 14:26:54 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-06 14:26:54 INFO  Configuration:2795 - resource-types.xml not found
2021-01-06 14:26:54 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2021-01-06 14:26:54 INFO  YarnClientImpl:329 - Submitted application application_1609943077879_0002
2021-01-06 14:26:54 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1609943077879_0002/
2021-01-06 14:26:54 INFO  Job:1619 - Running job: job_1609943077879_0002
2021-01-06 14:27:02 INFO  Job:1640 - Job job_1609943077879_0002 running in uber mode : false
2021-01-06 14:27:02 INFO  Job:1647 -  map 0% reduce 0%
2021-01-06 14:27:10 INFO  Job:1647 -  map 33% reduce 0%
2021-01-06 14:27:16 INFO  Job:1647 -  map 67% reduce 0%
2021-01-06 14:27:21 INFO  Job:1647 -  map 100% reduce 0%
2021-01-06 14:27:25 INFO  Job:1647 -  map 100% reduce 100%
2021-01-06 14:27:26 INFO  Job:1658 - Job job_1609943077879_0002 completed successfully
2021-01-06 14:27:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1119035
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41648
		Total time spent by all reduces in occupied slots (ms)=15796
		Total time spent by all map tasks (ms)=10412
		Total time spent by all reduce tasks (ms)=3949
		Total vcore-milliseconds taken by all map tasks=10412
		Total vcore-milliseconds taken by all reduce tasks=3949
		Total megabyte-milliseconds taken by all map tasks=42647552
		Total megabyte-milliseconds taken by all reduce tasks=16175104
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=750
		CPU time spent (ms)=7240
		Physical memory (bytes) snapshot=1433108480
		Virtual memory (bytes) snapshot=15763365888
		Total committed heap usage (bytes)=1706557440
		Peak Map Physical memory (bytes)=366432256
		Peak Map Virtual memory (bytes)=3944439808
		Peak Reduce Physical memory (bytes)=386740224
		Peak Reduce Virtual memory (bytes)=3967664128
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210106 14:27:26.743" starttime="20210106 14:27:26.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:27:26.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:27:26.744" starttime="20210106 14:27:26.743"></status>
</kw>
<status status="PASS" endtime="20210106 14:27:26.744" starttime="20210106 14:26:50.153"></status>
</kw>
<msg timestamp="20210106 14:27:26.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:27:26.747" starttime="20210106 14:26:50.153"></status>
</kw>
<msg timestamp="20210106 14:27:26.747" level="INFO">${output} = 2021-01-06 14:26:51 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.8:8032
2021-01-06 14:26:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210106 14:27:26.748" starttime="20210106 14:26:50.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210106 14:27:26.750" starttime="20210106 14:27:26.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210106 14:27:26.753" starttime="20210106 14:27:26.752"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210106 14:27:26.754" critical="yes" starttime="20210106 14:26:50.122"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210106 14:27:26.759" starttime="20210106 14:26:06.317"></status>
</suite>
<status status="PASS" elapsedtime="215163" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="603113" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
