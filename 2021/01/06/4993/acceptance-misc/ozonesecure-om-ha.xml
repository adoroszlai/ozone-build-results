<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210106 15:13:21.093" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:09:13.689" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:09:27.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:09:27.520" level="INFO">${output} = 2021-01-06 15:09:15,489 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 15:09:15,670 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210106 15:09:27.520" starttime="20210106 15:09:13.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:09:27.521" level="INFO">2021-01-06 15:09:15,489 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 15:09:15,670 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-06 15:09:15,671 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-06 15:09:15,831 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-06 15:09:15,847 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2021-01-06 15:09:16,858 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:17,858 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:18,859 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:19,115 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2021-01-06 15:09:19,574 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 15:09:19,859 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:20,860 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:21,861 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:22,408 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-06 15:09:22,801 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 15:09:22,804 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3A6308A3B533-&gt;dddceaa2-4ed5-46bc-a997-8ec05f743327
2021-01-06 15:09:22,812 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 15:09:22,862 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:23,867 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:24,867 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:25,869 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:26,869 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-06 15:09:27,097 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=6421.960675, max=6421.960675, mean=6421.960675, stddev=0.0, median=6421.960675, p75=6421.960675, p95=6421.960675, p98=6421.960675, p99=6421.960675, p999=6421.960675, mean_rate=0.13878676582778457, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-06 15:09:27,098 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2021-01-06 15:09:27,107 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-06 15:09:27,107 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210106 15:09:27.522" starttime="20210106 15:09:27.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:09:27.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:09:27.522" starttime="20210106 15:09:27.522"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:27.523" starttime="20210106 15:09:13.683"></status>
</kw>
<msg timestamp="20210106 15:09:27.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:09:27.523" starttime="20210106 15:09:13.683"></status>
</kw>
<msg timestamp="20210106 15:09:27.523" level="INFO">${result} = 2021-01-06 15:09:15,489 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 15:09:15,670 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210106 15:09:27.523" starttime="20210106 15:09:13.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210106 15:09:27.524" starttime="20210106 15:09:27.524"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 15:09:27.524" critical="yes" starttime="20210106 15:09:13.681"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:09:27.543" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:09:33.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:09:33.031" level="INFO">${output} = 2021-01-06 15:09:29,922 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 15:09:30,103 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210106 15:09:33.031" starttime="20210106 15:09:27.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:09:33.032" level="INFO">2021-01-06 15:09:29,922 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 15:09:30,103 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-06 15:09:30,103 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-06 15:09:30,264 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-01-06 15:09:30,277 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2021-01-06 15:09:31,286 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:32,287 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-06 15:09:33,019 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=321.311575, max=321.311575, mean=321.311575, stddev=0.0, median=321.311575, p75=321.311575, p95=321.311575, p98=321.311575, p99=321.311575, p999=321.311575, mean_rate=0.8757036885562354, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-06 15:09:33,020 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-01-06 15:09:33,020 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-06 15:09:33,020 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210106 15:09:33.032" starttime="20210106 15:09:33.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:09:33.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:09:33.033" starttime="20210106 15:09:33.032"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:33.033" starttime="20210106 15:09:27.539"></status>
</kw>
<msg timestamp="20210106 15:09:33.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:09:33.033" starttime="20210106 15:09:27.539"></status>
</kw>
<msg timestamp="20210106 15:09:33.033" level="INFO">${result} = 2021-01-06 15:09:29,922 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 15:09:30,103 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210106 15:09:33.033" starttime="20210106 15:09:27.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210106 15:09:33.034" starttime="20210106 15:09:33.033"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 15:09:33.034" critical="yes" starttime="20210106 15:09:27.527"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:09:33.040" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:09:37.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:09:37.940" level="INFO">${output} = 2021-01-06 15:09:34,856 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 15:09:35,025 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210106 15:09:37.941" starttime="20210106 15:09:33.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:09:37.942" level="INFO">2021-01-06 15:09:34,856 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 15:09:35,025 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-06 15:09:35,026 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-06 15:09:35,180 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-01-06 15:09:35,201 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2021-01-06 15:09:36,206 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:37,207 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-06 15:09:37,835 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=114.705971, max=114.705971, mean=114.705971, stddev=0.0, median=114.705971, p75=114.705971, p95=114.705971, p98=114.705971, p99=114.705971, p999=114.705971, mean_rate=0.8868780824318004, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-06 15:09:37,836 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-01-06 15:09:37,837 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-06 15:09:37,837 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210106 15:09:37.942" starttime="20210106 15:09:37.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:09:37.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:09:37.942" starttime="20210106 15:09:37.942"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:37.943" starttime="20210106 15:09:33.037"></status>
</kw>
<msg timestamp="20210106 15:09:37.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:09:37.943" starttime="20210106 15:09:33.037"></status>
</kw>
<msg timestamp="20210106 15:09:37.943" level="INFO">${result} = 2021-01-06 15:09:34,856 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 15:09:35,025 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210106 15:09:37.943" starttime="20210106 15:09:33.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210106 15:09:37.944" starttime="20210106 15:09:37.944"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 15:09:37.944" critical="yes" starttime="20210106 15:09:33.035"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210106 15:09:37.945" starttime="20210106 15:09:13.664"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:09:37.956" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:09:44.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:09:44.879" level="INFO">${output} = 2021-01-06 15:09:39,650 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 15:09:39,838 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210106 15:09:44.879" starttime="20210106 15:09:37.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:09:44.881" level="INFO">2021-01-06 15:09:39,650 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 15:09:39,838 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-06 15:09:39,839 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-06 15:09:39,988 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-06 15:09:40,007 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2021-01-06 15:09:41,016 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:42,016 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:42,573 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-06 15:09:43,017 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-06 15:09:44,019 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-06 15:09:44,549 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=65.162701, max=65.162701, mean=65.162701, stddev=0.0, median=65.162701, p75=65.162701, p95=65.162701, p98=65.162701, p99=65.162701, p999=65.162701, mean_rate=0.9570832894410949, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-06 15:09:44,550 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-01-06 15:09:44,550 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-06 15:09:44,550 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210106 15:09:44.881" starttime="20210106 15:09:44.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:09:44.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:09:44.883" starttime="20210106 15:09:44.882"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:44.883" starttime="20210106 15:09:37.954"></status>
</kw>
<msg timestamp="20210106 15:09:44.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:09:44.883" starttime="20210106 15:09:37.953"></status>
</kw>
<msg timestamp="20210106 15:09:44.883" level="INFO">${result} = 2021-01-06 15:09:39,650 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 15:09:39,838 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210106 15:09:44.884" starttime="20210106 15:09:37.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210106 15:09:44.884" starttime="20210106 15:09:44.884"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 15:09:44.884" critical="yes" starttime="20210106 15:09:37.952"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210106 15:09:44.885" starttime="20210106 15:09:37.947"></status>
</suite>
<status status="PASS" endtime="20210106 15:09:44.888" starttime="20210106 15:09:13.636"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:09:07.250" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:09:07.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:09:07.254" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:09:07.254" starttime="20210106 15:09:07.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:09:07.255" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:09:07.255" starttime="20210106 15:09:07.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:09:07.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:09:07.256" starttime="20210106 15:09:07.256"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:07.256" starttime="20210106 15:09:07.244"></status>
</kw>
<msg timestamp="20210106 15:09:07.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:09:07.257" starttime="20210106 15:09:07.243"></status>
</kw>
<msg timestamp="20210106 15:09:07.257" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:09:07.257" starttime="20210106 15:09:07.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:09:07.258" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:09:07.258" starttime="20210106 15:09:07.257"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:09:07.266" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:09:07.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:09:07.288" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:09:07.288" starttime="20210106 15:09:07.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:09:07.290" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:09:07.290" starttime="20210106 15:09:07.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:09:07.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:09:07.290" starttime="20210106 15:09:07.290"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:07.291" starttime="20210106 15:09:07.260"></status>
</kw>
<msg timestamp="20210106 15:09:07.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:09:07.291" starttime="20210106 15:09:07.259"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:07.291" starttime="20210106 15:09:07.259"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:07.291" starttime="20210106 15:09:07.258"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:07.291" starttime="20210106 15:09:07.240"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:09:07.292" critical="yes" starttime="20210106 15:09:07.237"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210106 15:09:07.294" starttime="20210106 15:09:07.157"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 15:09:51.061" level="INFO">${random} = 68377</msg>
<status status="PASS" endtime="20210106 15:09:51.061" starttime="20210106 15:09:51.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210106 15:09:51.062" level="INFO">${source} = 68377-source</msg>
<status status="PASS" endtime="20210106 15:09:51.062" starttime="20210106 15:09:51.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210106 15:09:51.063" level="INFO">${target} = 68377-target</msg>
<status status="PASS" endtime="20210106 15:09:51.063" starttime="20210106 15:09:51.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:09:51.068" level="INFO">Running command 'ozone sh volume create 68377-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:09:54.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:09:54.849" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:09:54.849" starttime="20210106 15:09:51.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:09:54.850" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:09:54.850" starttime="20210106 15:09:54.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:09:54.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:09:54.851" starttime="20210106 15:09:54.850"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:54.851" starttime="20210106 15:09:51.064"></status>
</kw>
<msg timestamp="20210106 15:09:54.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:09:54.851" starttime="20210106 15:09:51.064"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:54.851" starttime="20210106 15:09:51.063"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:09:54.856" level="INFO">Running command 'ozone sh volume create 68377-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:09:58.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:09:58.520" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:09:58.520" starttime="20210106 15:09:54.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:09:58.521" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:09:58.521" starttime="20210106 15:09:58.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:09:58.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:09:58.521" starttime="20210106 15:09:58.521"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:58.521" starttime="20210106 15:09:54.852"></status>
</kw>
<msg timestamp="20210106 15:09:58.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:09:58.522" starttime="20210106 15:09:54.852"></status>
</kw>
<status status="PASS" endtime="20210106 15:09:58.522" starttime="20210106 15:09:54.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:09:58.528" level="INFO">Running command 'ozone sh bucket create 68377-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:01.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:01.975" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:01.975" starttime="20210106 15:09:58.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:01.976" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:10:01.976" starttime="20210106 15:10:01.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:01.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:01.976" starttime="20210106 15:10:01.976"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:01.977" starttime="20210106 15:09:58.525"></status>
</kw>
<msg timestamp="20210106 15:10:01.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:01.977" starttime="20210106 15:09:58.524"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:01.977" starttime="20210106 15:09:58.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:01.980" level="INFO">Running command 'ozone sh key put 68377-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:08.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:08.015" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:08.015" starttime="20210106 15:10:01.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:08.016" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:10:08.016" starttime="20210106 15:10:08.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:08.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:08.017" starttime="20210106 15:10:08.016"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:08.017" starttime="20210106 15:10:01.978"></status>
</kw>
<msg timestamp="20210106 15:10:08.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:08.017" starttime="20210106 15:10:01.977"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:08.018" starttime="20210106 15:10:01.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:08.021" level="INFO">Running command 'ozone sh bucket create 68377-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:11.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:11.459" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:11.459" starttime="20210106 15:10:08.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:11.460" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:10:11.460" starttime="20210106 15:10:11.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:11.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:11.461" starttime="20210106 15:10:11.460"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:11.461" starttime="20210106 15:10:08.019"></status>
</kw>
<msg timestamp="20210106 15:10:11.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:11.461" starttime="20210106 15:10:08.018"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:11.462" starttime="20210106 15:10:08.018"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:11.465" level="INFO">Running command 'ozone sh bucket link 68377-source/readable-bucket 68377-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:15.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:15.047" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:15.047" starttime="20210106 15:10:11.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:15.049" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:10:15.049" starttime="20210106 15:10:15.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:15.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:15.050" starttime="20210106 15:10:15.049"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:15.050" starttime="20210106 15:10:11.463"></status>
</kw>
<msg timestamp="20210106 15:10:15.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:15.050" starttime="20210106 15:10:11.462"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:15.050" starttime="20210106 15:10:11.462"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:15.054" level="INFO">Running command 'ozone sh bucket link 68377-source/readable-bucket 68377-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:18.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:18.877" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:18.877" starttime="20210106 15:10:15.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:18.878" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:10:18.878" starttime="20210106 15:10:18.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:18.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:18.878" starttime="20210106 15:10:18.878"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:18.878" starttime="20210106 15:10:15.051"></status>
</kw>
<msg timestamp="20210106 15:10:18.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:18.879" starttime="20210106 15:10:15.051"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:18.879" starttime="20210106 15:10:15.050"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:18.883" level="INFO">Running command 'ozone sh bucket link 68377-source/unreadable-bucket 68377-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:22.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:22.345" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:22.345" starttime="20210106 15:10:18.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:22.346" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:10:22.346" starttime="20210106 15:10:22.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:22.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:22.347" starttime="20210106 15:10:22.346"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:22.347" starttime="20210106 15:10:18.880"></status>
</kw>
<msg timestamp="20210106 15:10:22.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:22.347" starttime="20210106 15:10:18.880"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:22.347" starttime="20210106 15:10:18.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:22.351" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 68377-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:26.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:26.051" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:26.051" starttime="20210106 15:10:22.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:26.052" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210106 15:10:26.052" starttime="20210106 15:10:26.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:26.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:26.053" starttime="20210106 15:10:26.052"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:26.053" starttime="20210106 15:10:22.348"></status>
</kw>
<msg timestamp="20210106 15:10:26.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:26.054" starttime="20210106 15:10:22.348"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:26.054" starttime="20210106 15:10:22.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:26.058" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 68377-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:29.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:29.664" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:29.664" starttime="20210106 15:10:26.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:29.665" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210106 15:10:29.665" starttime="20210106 15:10:29.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:29.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:29.665" starttime="20210106 15:10:29.665"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:29.666" starttime="20210106 15:10:26.055"></status>
</kw>
<msg timestamp="20210106 15:10:29.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:29.666" starttime="20210106 15:10:26.054"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:29.666" starttime="20210106 15:10:26.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:29.670" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 68377-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:33.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:33.188" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:33.189" starttime="20210106 15:10:29.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:33.190" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210106 15:10:33.190" starttime="20210106 15:10:33.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:33.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:33.190" starttime="20210106 15:10:33.190"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:33.190" starttime="20210106 15:10:29.667"></status>
</kw>
<msg timestamp="20210106 15:10:33.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:33.191" starttime="20210106 15:10:29.667"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:33.191" starttime="20210106 15:10:29.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:33.194" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 68377-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:36.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:36.498" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:36.498" starttime="20210106 15:10:33.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:36.499" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210106 15:10:36.499" starttime="20210106 15:10:36.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:36.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:36.500" starttime="20210106 15:10:36.500"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:36.500" starttime="20210106 15:10:33.192"></status>
</kw>
<msg timestamp="20210106 15:10:36.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:36.500" starttime="20210106 15:10:33.192"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:36.501" starttime="20210106 15:10:33.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:36.504" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 68377-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:39.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:39.777" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:39.777" starttime="20210106 15:10:36.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:39.778" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210106 15:10:39.778" starttime="20210106 15:10:39.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:39.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:39.779" starttime="20210106 15:10:39.779"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:39.779" starttime="20210106 15:10:36.502"></status>
</kw>
<msg timestamp="20210106 15:10:39.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:39.779" starttime="20210106 15:10:36.501"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:39.780" starttime="20210106 15:10:36.501"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:39.780" starttime="20210106 15:09:58.522"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:39.780" starttime="20210106 15:09:58.522"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:39.780" starttime="20210106 15:09:51.060"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:39.787" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:39.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:39.789" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:10:39.789" starttime="20210106 15:10:39.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:39.790" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:10:39.790" starttime="20210106 15:10:39.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:39.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:39.791" starttime="20210106 15:10:39.791"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:39.791" starttime="20210106 15:10:39.783"></status>
</kw>
<msg timestamp="20210106 15:10:39.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:39.792" starttime="20210106 15:10:39.783"></status>
</kw>
<msg timestamp="20210106 15:10:39.792" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:10:39.792" starttime="20210106 15:10:39.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:10:39.793" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:10:39.793" starttime="20210106 15:10:39.792"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:39.797" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:39.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:39.816" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:10:39.817" starttime="20210106 15:10:39.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:39.818" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:10:39.818" starttime="20210106 15:10:39.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:39.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:39.819" starttime="20210106 15:10:39.818"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:39.819" starttime="20210106 15:10:39.795"></status>
</kw>
<msg timestamp="20210106 15:10:39.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:39.819" starttime="20210106 15:10:39.794"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:39.819" starttime="20210106 15:10:39.794"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:39.819" starttime="20210106 15:10:39.793"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:39.819" starttime="20210106 15:10:39.782"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:39.819" starttime="20210106 15:10:39.782"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:39.825" level="INFO">Running command 'ozone sh bucket link 68377-source/no-such-bucket 68377-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:43.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:43.260" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:43.261" starttime="20210106 15:10:39.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:43.262" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:10:43.263" starttime="20210106 15:10:43.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:43.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:43.264" starttime="20210106 15:10:43.263"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:43.264" starttime="20210106 15:10:39.821"></status>
</kw>
<msg timestamp="20210106 15:10:43.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:43.264" starttime="20210106 15:10:39.820"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:43.264" starttime="20210106 15:10:39.820"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:43.268" level="INFO">Running command 'ozone sh key list 68377-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:46.980" level="INFO">${rc} = 255</msg>
<msg timestamp="20210106 15:10:46.980" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:46.980" starttime="20210106 15:10:43.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:46.981" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210106 15:10:46.981" starttime="20210106 15:10:46.980"></status>
</kw>
<msg timestamp="20210106 15:10:46.982" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:46.982" starttime="20210106 15:10:43.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210106 15:10:46.982" starttime="20210106 15:10:46.982"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:10:46.983" critical="yes" starttime="20210106 15:10:39.780"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:46.989" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:46.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:46.992" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:10:46.992" starttime="20210106 15:10:46.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:46.993" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:10:46.993" starttime="20210106 15:10:46.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:46.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:46.994" starttime="20210106 15:10:46.993"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:46.994" starttime="20210106 15:10:46.986"></status>
</kw>
<msg timestamp="20210106 15:10:46.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:46.994" starttime="20210106 15:10:46.986"></status>
</kw>
<msg timestamp="20210106 15:10:46.994" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:10:46.995" starttime="20210106 15:10:46.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:10:46.995" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:10:46.995" starttime="20210106 15:10:46.995"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:46.999" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:47.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:47.010" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:10:47.010" starttime="20210106 15:10:46.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:47.012" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:10:47.012" starttime="20210106 15:10:47.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:47.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:47.012" starttime="20210106 15:10:47.012"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:47.013" starttime="20210106 15:10:46.997"></status>
</kw>
<msg timestamp="20210106 15:10:47.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:47.013" starttime="20210106 15:10:46.996"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:47.013" starttime="20210106 15:10:46.996"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:47.013" starttime="20210106 15:10:46.995"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:47.013" starttime="20210106 15:10:46.985"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:47.013" starttime="20210106 15:10:46.984"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:47.018" level="INFO">Running command 'ozone sh bucket link 68377-source/bucket1 68377-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:50.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:50.506" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:50.506" starttime="20210106 15:10:47.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:50.507" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:10:50.507" starttime="20210106 15:10:50.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:50.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:50.508" starttime="20210106 15:10:50.507"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:50.508" starttime="20210106 15:10:47.014"></status>
</kw>
<msg timestamp="20210106 15:10:50.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:50.508" starttime="20210106 15:10:47.014"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:50.509" starttime="20210106 15:10:47.013"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:50.513" level="INFO">Running command 'ozone sh bucket create 68377-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:10:53.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:10:53.705" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:10:53.705" starttime="20210106 15:10:50.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:10:53.706" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:10:53.706" starttime="20210106 15:10:53.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:10:53.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:10:53.707" starttime="20210106 15:10:53.707"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:53.707" starttime="20210106 15:10:50.510"></status>
</kw>
<msg timestamp="20210106 15:10:53.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:10:53.708" starttime="20210106 15:10:50.509"></status>
</kw>
<status status="PASS" endtime="20210106 15:10:53.708" starttime="20210106 15:10:50.509"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:10:53.713" level="INFO">Running command 'ozone sh key put 68377-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:00.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:00.074" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:11:00.074" starttime="20210106 15:10:53.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:00.075" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:11:00.076" starttime="20210106 15:11:00.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:00.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:00.076" starttime="20210106 15:11:00.076"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:00.076" starttime="20210106 15:10:53.709"></status>
</kw>
<msg timestamp="20210106 15:11:00.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:00.077" starttime="20210106 15:10:53.709"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:00.077" starttime="20210106 15:10:53.708"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210106 15:11:00.079" level="INFO">${postfix} = 27030</msg>
<status status="PASS" endtime="20210106 15:11:00.079" starttime="20210106 15:11:00.078"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210106 15:11:00.079" level="INFO">${tmpfile} = /tmp/tempkey-27030</msg>
<status status="PASS" endtime="20210106 15:11:00.079" starttime="20210106 15:11:00.079"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:00.083" level="INFO">Running command 'ozone sh key get -f 68377-target/link1/key1 /tmp/tempkey-27030 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:05.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:05.231" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:11:05.231" starttime="20210106 15:11:00.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:05.234" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:11:05.234" starttime="20210106 15:11:05.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:05.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:05.235" starttime="20210106 15:11:05.235"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:05.236" starttime="20210106 15:11:00.080"></status>
</kw>
<msg timestamp="20210106 15:11:05.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:05.236" starttime="20210106 15:11:00.080"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:05.236" starttime="20210106 15:11:00.079"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210106 15:11:05.239" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-27030 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:05.244" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210106 15:11:05.244" starttime="20210106 15:11:05.236"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:05.250" level="INFO">Running command 'rm -f /tmp/tempkey-27030 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:05.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:05.252" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:11:05.252" starttime="20210106 15:11:05.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:05.253" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:11:05.253" starttime="20210106 15:11:05.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:05.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:05.254" starttime="20210106 15:11:05.253"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:05.254" starttime="20210106 15:11:05.246"></status>
</kw>
<msg timestamp="20210106 15:11:05.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:05.254" starttime="20210106 15:11:05.245"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:05.254" starttime="20210106 15:11:05.244"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:11:05.255" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210106 15:11:05.255" starttime="20210106 15:11:05.254"></status>
</kw>
<msg timestamp="20210106 15:11:05.255" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210106 15:11:05.255" starttime="20210106 15:11:00.078"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:11:05.255" starttime="20210106 15:11:05.255"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:05.256" starttime="20210106 15:11:00.077"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:11:05.256" critical="yes" starttime="20210106 15:10:46.983"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:05.263" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:05.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:05.265" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:11:05.265" starttime="20210106 15:11:05.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:05.266" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:11:05.266" starttime="20210106 15:11:05.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:05.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:05.267" starttime="20210106 15:11:05.267"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:05.267" starttime="20210106 15:11:05.259"></status>
</kw>
<msg timestamp="20210106 15:11:05.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:05.268" starttime="20210106 15:11:05.259"></status>
</kw>
<msg timestamp="20210106 15:11:05.268" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:11:05.268" starttime="20210106 15:11:05.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:11:05.268" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:11:05.268" starttime="20210106 15:11:05.268"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:05.272" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:05.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:05.284" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:11:05.284" starttime="20210106 15:11:05.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:05.285" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:11:05.286" starttime="20210106 15:11:05.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:05.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:05.286" starttime="20210106 15:11:05.286"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:05.286" starttime="20210106 15:11:05.270"></status>
</kw>
<msg timestamp="20210106 15:11:05.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:05.287" starttime="20210106 15:11:05.269"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:05.287" starttime="20210106 15:11:05.269"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:05.287" starttime="20210106 15:11:05.269"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:05.287" starttime="20210106 15:11:05.258"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:05.287" starttime="20210106 15:11:05.257"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:05.298" level="INFO">Running command 'ozone sh key put 68377-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:11.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:11.088" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:11:11.088" starttime="20210106 15:11:05.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:11.092" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:11:11.092" starttime="20210106 15:11:11.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:11.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:11.093" starttime="20210106 15:11:11.093"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:11.094" starttime="20210106 15:11:05.288"></status>
</kw>
<msg timestamp="20210106 15:11:11.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:11.094" starttime="20210106 15:11:05.288"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:11.094" starttime="20210106 15:11:05.287"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210106 15:11:11.096" level="INFO">${postfix} = 41747</msg>
<status status="PASS" endtime="20210106 15:11:11.096" starttime="20210106 15:11:11.095"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210106 15:11:11.096" level="INFO">${tmpfile} = /tmp/tempkey-41747</msg>
<status status="PASS" endtime="20210106 15:11:11.096" starttime="20210106 15:11:11.096"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:11.101" level="INFO">Running command 'ozone sh key get -f 68377-source/bucket1/key2 /tmp/tempkey-41747 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:16.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:16.304" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:11:16.304" starttime="20210106 15:11:11.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:16.305" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:11:16.305" starttime="20210106 15:11:16.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:16.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:16.306" starttime="20210106 15:11:16.305"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:16.306" starttime="20210106 15:11:11.097"></status>
</kw>
<msg timestamp="20210106 15:11:16.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:16.306" starttime="20210106 15:11:11.097"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:16.306" starttime="20210106 15:11:11.097"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210106 15:11:16.309" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-41747 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:16.312" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210106 15:11:16.312" starttime="20210106 15:11:16.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:16.316" level="INFO">Running command 'rm -f /tmp/tempkey-41747 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:16.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:16.319" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:11:16.319" starttime="20210106 15:11:16.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:16.320" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:11:16.320" starttime="20210106 15:11:16.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:16.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:16.321" starttime="20210106 15:11:16.320"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:16.321" starttime="20210106 15:11:16.313"></status>
</kw>
<msg timestamp="20210106 15:11:16.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:16.321" starttime="20210106 15:11:16.313"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:16.321" starttime="20210106 15:11:16.313"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:11:16.322" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210106 15:11:16.322" starttime="20210106 15:11:16.321"></status>
</kw>
<msg timestamp="20210106 15:11:16.322" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210106 15:11:16.322" starttime="20210106 15:11:11.095"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:11:16.322" starttime="20210106 15:11:16.322"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:16.322" starttime="20210106 15:11:11.094"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:11:16.323" critical="yes" starttime="20210106 15:11:05.256"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:16.328" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:16.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:16.331" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:11:16.331" starttime="20210106 15:11:16.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:16.333" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:11:16.333" starttime="20210106 15:11:16.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:16.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:16.333" starttime="20210106 15:11:16.333"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:16.334" starttime="20210106 15:11:16.326"></status>
</kw>
<msg timestamp="20210106 15:11:16.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:16.334" starttime="20210106 15:11:16.326"></status>
</kw>
<msg timestamp="20210106 15:11:16.334" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:11:16.334" starttime="20210106 15:11:16.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:11:16.335" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:11:16.335" starttime="20210106 15:11:16.334"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:16.340" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:16.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:16.351" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:11:16.351" starttime="20210106 15:11:16.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:16.352" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:11:16.352" starttime="20210106 15:11:16.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:16.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:16.353" starttime="20210106 15:11:16.353"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:16.353" starttime="20210106 15:11:16.336"></status>
</kw>
<msg timestamp="20210106 15:11:16.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:16.354" starttime="20210106 15:11:16.336"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:16.354" starttime="20210106 15:11:16.335"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:16.354" starttime="20210106 15:11:16.335"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:16.354" starttime="20210106 15:11:16.324"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:16.354" starttime="20210106 15:11:16.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:16.359" level="INFO">Running command 'ozone sh key list 68377-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:20.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:20.285" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210106 15:11:20.285" starttime="20210106 15:11:16.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:20.287" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210106 15:11:20.287" starttime="20210106 15:11:20.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:20.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:20.287" starttime="20210106 15:11:20.287"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:20.288" starttime="20210106 15:11:16.355"></status>
</kw>
<msg timestamp="20210106 15:11:20.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:20.288" starttime="20210106 15:11:16.355"></status>
</kw>
<msg timestamp="20210106 15:11:20.288" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210106 15:11:20.288" starttime="20210106 15:11:16.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:20.295" level="INFO">Running command 'ozone sh key list 68377-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:23.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:23.941" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210106 15:11:23.942" starttime="20210106 15:11:20.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:23.943" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210106 15:11:23.943" starttime="20210106 15:11:23.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:23.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:23.944" starttime="20210106 15:11:23.943"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:23.944" starttime="20210106 15:11:20.289"></status>
</kw>
<msg timestamp="20210106 15:11:23.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:23.944" starttime="20210106 15:11:20.289"></status>
</kw>
<msg timestamp="20210106 15:11:23.944" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210106 15:11:23.944" starttime="20210106 15:11:20.288"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:11:23.945" starttime="20210106 15:11:23.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210106 15:11:23.945" starttime="20210106 15:11:23.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210106 15:11:23.946" starttime="20210106 15:11:23.945"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:11:23.946" critical="yes" starttime="20210106 15:11:16.323"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:23.954" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:23.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:23.956" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:11:23.956" starttime="20210106 15:11:23.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:23.957" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:11:23.957" starttime="20210106 15:11:23.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:23.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:23.958" starttime="20210106 15:11:23.957"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:23.958" starttime="20210106 15:11:23.949"></status>
</kw>
<msg timestamp="20210106 15:11:23.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:23.958" starttime="20210106 15:11:23.949"></status>
</kw>
<msg timestamp="20210106 15:11:23.958" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:11:23.958" starttime="20210106 15:11:23.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:11:23.959" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:11:23.959" starttime="20210106 15:11:23.958"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:23.963" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:23.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:23.974" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:11:23.974" starttime="20210106 15:11:23.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:23.975" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:11:23.975" starttime="20210106 15:11:23.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:23.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:23.976" starttime="20210106 15:11:23.975"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:23.976" starttime="20210106 15:11:23.960"></status>
</kw>
<msg timestamp="20210106 15:11:23.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:23.976" starttime="20210106 15:11:23.960"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:23.977" starttime="20210106 15:11:23.960"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:23.977" starttime="20210106 15:11:23.959"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:23.977" starttime="20210106 15:11:23.948"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:23.977" starttime="20210106 15:11:23.947"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:23.982" level="INFO">Running command 'ozone sh key delete 68377-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:27.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:27.788" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:11:27.788" starttime="20210106 15:11:23.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:27.789" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:11:27.789" starttime="20210106 15:11:27.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:27.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:27.790" starttime="20210106 15:11:27.789"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:27.790" starttime="20210106 15:11:23.978"></status>
</kw>
<msg timestamp="20210106 15:11:27.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:27.790" starttime="20210106 15:11:23.978"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:27.790" starttime="20210106 15:11:23.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:27.795" level="INFO">Running command 'ozone sh key list 68377-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:31.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:31.729" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210106 15:11:31.729" starttime="20210106 15:11:27.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:31.730" level="INFO">key1</msg>
<status status="PASS" endtime="20210106 15:11:31.730" starttime="20210106 15:11:31.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:31.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:31.731" starttime="20210106 15:11:31.730"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:31.731" starttime="20210106 15:11:27.791"></status>
</kw>
<msg timestamp="20210106 15:11:31.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:31.731" starttime="20210106 15:11:27.791"></status>
</kw>
<msg timestamp="20210106 15:11:31.732" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210106 15:11:31.732" starttime="20210106 15:11:27.791"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210106 15:11:31.732" starttime="20210106 15:11:31.732"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:11:31.732" critical="yes" starttime="20210106 15:11:23.946"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:31.739" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:31.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:31.741" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:11:31.741" starttime="20210106 15:11:31.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:31.742" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:11:31.742" starttime="20210106 15:11:31.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:31.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:31.743" starttime="20210106 15:11:31.743"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:31.744" starttime="20210106 15:11:31.736"></status>
</kw>
<msg timestamp="20210106 15:11:31.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:31.744" starttime="20210106 15:11:31.735"></status>
</kw>
<msg timestamp="20210106 15:11:31.744" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:11:31.744" starttime="20210106 15:11:31.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:11:31.745" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:11:31.745" starttime="20210106 15:11:31.744"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:31.749" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:31.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:31.779" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:11:31.779" starttime="20210106 15:11:31.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:31.780" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:11:31.780" starttime="20210106 15:11:31.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:31.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:31.781" starttime="20210106 15:11:31.781"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:31.781" starttime="20210106 15:11:31.746"></status>
</kw>
<msg timestamp="20210106 15:11:31.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:31.781" starttime="20210106 15:11:31.746"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:31.782" starttime="20210106 15:11:31.745"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:31.782" starttime="20210106 15:11:31.745"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:31.782" starttime="20210106 15:11:31.734"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:31.782" starttime="20210106 15:11:31.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:31.786" level="INFO">Running command 'ozone sh bucket list 68377-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:35.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:35.614" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:11:35.614" starttime="20210106 15:11:31.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:35.615" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:10:43.059Z",
  "modificationTime" : "2021-01-06T15:10:43.059Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:10:22.119Z",
  "modificationTime" : "2021-01-06T15:10:39.617Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:10:50.378Z",
  "modificationTime" : "2021-01-06T15:10:50.378Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:10:14.882Z",
  "modificationTime" : "2021-01-06T15:10:36.406Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:10:18.669Z",
  "modificationTime" : "2021-01-06T15:10:18.669Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210106 15:11:35.615" starttime="20210106 15:11:35.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:35.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:35.616" starttime="20210106 15:11:35.616"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:35.616" starttime="20210106 15:11:31.783"></status>
</kw>
<msg timestamp="20210106 15:11:35.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:35.616" starttime="20210106 15:11:31.783"></status>
</kw>
<msg timestamp="20210106 15:11:35.617" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:11:35.617" starttime="20210106 15:11:31.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210106 15:11:35.617" starttime="20210106 15:11:35.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210106 15:11:35.618" starttime="20210106 15:11:35.618"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:11:35.618" critical="yes" starttime="20210106 15:11:31.733"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:35.627" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:35.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:35.630" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:11:35.630" starttime="20210106 15:11:35.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:35.631" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:11:35.631" starttime="20210106 15:11:35.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:35.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:35.632" starttime="20210106 15:11:35.631"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:35.632" starttime="20210106 15:11:35.624"></status>
</kw>
<msg timestamp="20210106 15:11:35.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:35.632" starttime="20210106 15:11:35.624"></status>
</kw>
<msg timestamp="20210106 15:11:35.632" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:11:35.632" starttime="20210106 15:11:35.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:11:35.633" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:11:35.633" starttime="20210106 15:11:35.632"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:35.640" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:35.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:35.659" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:11:35.659" starttime="20210106 15:11:35.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:35.660" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:11:35.660" starttime="20210106 15:11:35.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:35.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:35.661" starttime="20210106 15:11:35.660"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:35.661" starttime="20210106 15:11:35.634"></status>
</kw>
<msg timestamp="20210106 15:11:35.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:35.661" starttime="20210106 15:11:35.634"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:35.662" starttime="20210106 15:11:35.634"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:35.662" starttime="20210106 15:11:35.633"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:35.662" starttime="20210106 15:11:35.623"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:35.662" starttime="20210106 15:11:35.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:35.666" level="INFO">Running command 'ozone sh bucket info 68377-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:39.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:39.408" level="INFO">${output} = 68377-source bucket1</msg>
<status status="PASS" endtime="20210106 15:11:39.408" starttime="20210106 15:11:35.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:39.409" level="INFO">68377-source bucket1</msg>
<status status="PASS" endtime="20210106 15:11:39.410" starttime="20210106 15:11:39.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:39.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:39.410" starttime="20210106 15:11:39.410"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:39.410" starttime="20210106 15:11:35.663"></status>
</kw>
<msg timestamp="20210106 15:11:39.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:39.411" starttime="20210106 15:11:35.663"></status>
</kw>
<msg timestamp="20210106 15:11:39.411" level="INFO">${result} = 68377-source bucket1</msg>
<status status="PASS" endtime="20210106 15:11:39.411" starttime="20210106 15:11:35.662"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210106 15:11:39.411" starttime="20210106 15:11:39.411"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:11:39.412" critical="yes" starttime="20210106 15:11:35.620"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:39.418" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:39.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:39.421" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:11:39.421" starttime="20210106 15:11:39.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:39.422" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:11:39.422" starttime="20210106 15:11:39.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:39.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:39.422" starttime="20210106 15:11:39.422"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:39.423" starttime="20210106 15:11:39.415"></status>
</kw>
<msg timestamp="20210106 15:11:39.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:39.423" starttime="20210106 15:11:39.414"></status>
</kw>
<msg timestamp="20210106 15:11:39.423" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:11:39.423" starttime="20210106 15:11:39.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:11:39.424" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:11:39.424" starttime="20210106 15:11:39.423"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:39.428" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:39.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:39.446" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:11:39.446" starttime="20210106 15:11:39.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:39.448" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:11:39.448" starttime="20210106 15:11:39.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:39.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:39.449" starttime="20210106 15:11:39.448"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:39.449" starttime="20210106 15:11:39.425"></status>
</kw>
<msg timestamp="20210106 15:11:39.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:39.449" starttime="20210106 15:11:39.425"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:39.449" starttime="20210106 15:11:39.424"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:39.449" starttime="20210106 15:11:39.424"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:39.449" starttime="20210106 15:11:39.414"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:39.450" starttime="20210106 15:11:39.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:39.454" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 68377-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:43.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:43.806" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:11:43.806" starttime="20210106 15:11:39.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:43.808" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210106 15:11:43.808" starttime="20210106 15:11:43.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:43.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:43.809" starttime="20210106 15:11:43.809"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:43.810" starttime="20210106 15:11:39.451"></status>
</kw>
<msg timestamp="20210106 15:11:43.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:43.810" starttime="20210106 15:11:39.450"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:43.810" starttime="20210106 15:11:39.450"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:43.818" level="INFO">Running command 'ozone sh bucket getacl 68377-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:47.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:47.397" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210106 15:11:47.397" starttime="20210106 15:11:43.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:47.398" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210106 15:11:47.399" starttime="20210106 15:11:47.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:47.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:47.399" starttime="20210106 15:11:47.399"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:47.399" starttime="20210106 15:11:43.812"></status>
</kw>
<msg timestamp="20210106 15:11:47.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:47.400" starttime="20210106 15:11:43.812"></status>
</kw>
<msg timestamp="20210106 15:11:47.400" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210106 15:11:47.400" starttime="20210106 15:11:43.811"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:11:47.400" starttime="20210106 15:11:47.400"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:47.400" starttime="20210106 15:11:43.810"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:47.405" level="INFO">Running command 'ozone sh bucket getacl 68377-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:50.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:50.978" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:11:50.978" starttime="20210106 15:11:47.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:50.980" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:11:50.980" starttime="20210106 15:11:50.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:50.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:50.980" starttime="20210106 15:11:50.980"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:50.981" starttime="20210106 15:11:47.402"></status>
</kw>
<msg timestamp="20210106 15:11:50.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:50.981" starttime="20210106 15:11:47.402"></status>
</kw>
<msg timestamp="20210106 15:11:50.981" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210106 15:11:50.981" starttime="20210106 15:11:47.401"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:11:50.982" starttime="20210106 15:11:50.981"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:50.982" starttime="20210106 15:11:47.401"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:50.986" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 68377-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:54.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:54.525" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:11:54.525" starttime="20210106 15:11:50.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:54.526" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210106 15:11:54.526" starttime="20210106 15:11:54.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:54.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:54.527" starttime="20210106 15:11:54.527"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:54.527" starttime="20210106 15:11:50.983"></status>
</kw>
<msg timestamp="20210106 15:11:54.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:54.528" starttime="20210106 15:11:50.983"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:54.528" starttime="20210106 15:11:50.982"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:54.533" level="INFO">Running command 'ozone sh bucket getacl 68377-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:11:58.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:11:58.715" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:11:58.716" starttime="20210106 15:11:54.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:11:58.717" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:11:58.717" starttime="20210106 15:11:58.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:11:58.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:11:58.717" starttime="20210106 15:11:58.717"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:58.718" starttime="20210106 15:11:54.530"></status>
</kw>
<msg timestamp="20210106 15:11:58.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:11:58.718" starttime="20210106 15:11:54.530"></status>
</kw>
<msg timestamp="20210106 15:11:58.718" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210106 15:11:58.718" starttime="20210106 15:11:54.529"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:11:58.719" starttime="20210106 15:11:58.718"></status>
</kw>
<status status="PASS" endtime="20210106 15:11:58.719" starttime="20210106 15:11:54.528"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:11:58.724" level="INFO">Running command 'ozone sh bucket getacl 68377-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:02.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:02.396" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210106 15:12:02.396" starttime="20210106 15:11:58.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:02.397" level="INFO">READ</msg>
<status status="PASS" endtime="20210106 15:12:02.397" starttime="20210106 15:12:02.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:02.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:02.398" starttime="20210106 15:12:02.397"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:02.398" starttime="20210106 15:11:58.721"></status>
</kw>
<msg timestamp="20210106 15:12:02.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:02.398" starttime="20210106 15:11:58.720"></status>
</kw>
<msg timestamp="20210106 15:12:02.398" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210106 15:12:02.398" starttime="20210106 15:11:58.720"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:12:02.399" starttime="20210106 15:12:02.398"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:02.399" starttime="20210106 15:11:58.719"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:12:02.399" critical="yes" starttime="20210106 15:11:39.412"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:02.405" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:02.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:02.408" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:12:02.408" starttime="20210106 15:12:02.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:02.408" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:12:02.408" starttime="20210106 15:12:02.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:02.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:02.409" starttime="20210106 15:12:02.409"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:02.409" starttime="20210106 15:12:02.402"></status>
</kw>
<msg timestamp="20210106 15:12:02.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:02.409" starttime="20210106 15:12:02.402"></status>
</kw>
<msg timestamp="20210106 15:12:02.410" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:12:02.410" starttime="20210106 15:12:02.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:12:02.410" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:12:02.410" starttime="20210106 15:12:02.410"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:02.414" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:02.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:02.432" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:02.432" starttime="20210106 15:12:02.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:02.434" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:02.434" starttime="20210106 15:12:02.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:02.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:02.435" starttime="20210106 15:12:02.434"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:02.435" starttime="20210106 15:12:02.412"></status>
</kw>
<msg timestamp="20210106 15:12:02.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:02.435" starttime="20210106 15:12:02.412"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:02.436" starttime="20210106 15:12:02.411"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:02.436" starttime="20210106 15:12:02.410"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:02.436" starttime="20210106 15:12:02.401"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:02.436" starttime="20210106 15:12:02.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:02.440" level="INFO">Running command 'ozone sh bucket link 68377-source/bucket2 68377-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:06.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:06.003" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:06.003" starttime="20210106 15:12:02.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:06.005" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:12:06.005" starttime="20210106 15:12:06.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:06.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:06.006" starttime="20210106 15:12:06.005"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:06.006" starttime="20210106 15:12:02.437"></status>
</kw>
<msg timestamp="20210106 15:12:06.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:06.006" starttime="20210106 15:12:02.437"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:06.006" starttime="20210106 15:12:02.436"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:06.010" level="INFO">Running command 'ozone sh bucket create 68377-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:09.388" level="INFO">${rc} = 255</msg>
<msg timestamp="20210106 15:12:09.388" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:09.388" starttime="20210106 15:12:06.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:09.390" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210106 15:12:09.390" starttime="20210106 15:12:09.389"></status>
</kw>
<msg timestamp="20210106 15:12:09.390" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:09.390" starttime="20210106 15:12:06.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210106 15:12:09.391" starttime="20210106 15:12:09.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:09.396" level="INFO">Running command 'ozone sh bucket create 68377-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:12.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:12.900" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:12.900" starttime="20210106 15:12:09.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:12.901" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:12:12.902" starttime="20210106 15:12:12.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:12.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:12.902" starttime="20210106 15:12:12.902"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:12.902" starttime="20210106 15:12:09.392"></status>
</kw>
<msg timestamp="20210106 15:12:12.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:12.903" starttime="20210106 15:12:09.391"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:12.903" starttime="20210106 15:12:09.391"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:12.906" level="INFO">Running command 'ozone sh bucket link 68377-source/bucket1 68377-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:16.455" level="INFO">${rc} = 255</msg>
<msg timestamp="20210106 15:12:16.455" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:16.455" starttime="20210106 15:12:12.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:16.456" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210106 15:12:16.456" starttime="20210106 15:12:16.455"></status>
</kw>
<msg timestamp="20210106 15:12:16.456" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:16.457" starttime="20210106 15:12:12.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210106 15:12:16.457" starttime="20210106 15:12:16.457"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:12:16.458" critical="yes" starttime="20210106 15:12:02.400"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:16.470" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:16.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:16.471" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:12:16.471" starttime="20210106 15:12:16.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:16.472" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:12:16.472" starttime="20210106 15:12:16.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:16.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:16.472" starttime="20210106 15:12:16.472"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.473" starttime="20210106 15:12:16.464"></status>
</kw>
<msg timestamp="20210106 15:12:16.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:16.473" starttime="20210106 15:12:16.464"></status>
</kw>
<msg timestamp="20210106 15:12:16.473" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:12:16.473" starttime="20210106 15:12:16.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:12:16.474" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:12:16.474" starttime="20210106 15:12:16.473"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:16.479" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:16.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:16.519" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:16.519" starttime="20210106 15:12:16.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:16.520" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:16.520" starttime="20210106 15:12:16.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:16.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:16.521" starttime="20210106 15:12:16.520"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.521" starttime="20210106 15:12:16.475"></status>
</kw>
<msg timestamp="20210106 15:12:16.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:16.521" starttime="20210106 15:12:16.475"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.522" starttime="20210106 15:12:16.474"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.522" starttime="20210106 15:12:16.474"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.522" starttime="20210106 15:12:16.462"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.522" starttime="20210106 15:12:16.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:16.531" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:16.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:16.535" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:16.535" starttime="20210106 15:12:16.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:16.537" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:16.537" starttime="20210106 15:12:16.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:16.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:16.537" starttime="20210106 15:12:16.537"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.538" starttime="20210106 15:12:16.524"></status>
</kw>
<msg timestamp="20210106 15:12:16.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:16.538" starttime="20210106 15:12:16.524"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.538" starttime="20210106 15:12:16.524"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:16.543" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:16.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:16.546" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:12:16.546" starttime="20210106 15:12:16.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:16.547" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:12:16.547" starttime="20210106 15:12:16.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:16.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:16.548" starttime="20210106 15:12:16.548"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.548" starttime="20210106 15:12:16.540"></status>
</kw>
<msg timestamp="20210106 15:12:16.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:16.549" starttime="20210106 15:12:16.539"></status>
</kw>
<msg timestamp="20210106 15:12:16.549" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:12:16.549" starttime="20210106 15:12:16.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:12:16.549" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:12:16.550" starttime="20210106 15:12:16.549"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:16.554" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:16.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:16.575" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:16.575" starttime="20210106 15:12:16.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:16.576" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:16.576" starttime="20210106 15:12:16.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:16.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:16.578" starttime="20210106 15:12:16.576"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.578" starttime="20210106 15:12:16.551"></status>
</kw>
<msg timestamp="20210106 15:12:16.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:16.578" starttime="20210106 15:12:16.551"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.578" starttime="20210106 15:12:16.550"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.578" starttime="20210106 15:12:16.550"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.578" starttime="20210106 15:12:16.538"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:16.578" starttime="20210106 15:12:16.538"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:16.584" level="INFO">Running command 'ozone sh key list 68377-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:20.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:20.189" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:20.189" starttime="20210106 15:12:16.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:20.190" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "68377-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-06T15:10:05.159Z",
  "modificationTime" : "2021-01-06T15:10:07.374Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210106 15:12:20.190" starttime="20210106 15:12:20.189"></status>
</kw>
<msg timestamp="20210106 15:12:20.191" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:20.191" starttime="20210106 15:12:16.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210106 15:12:20.191" starttime="20210106 15:12:20.191"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.191" starttime="20210106 15:12:16.523"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.191" starttime="20210106 15:12:16.522"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:12:20.192" critical="yes" starttime="20210106 15:12:16.460"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:20.199" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:20.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:20.202" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:12:20.202" starttime="20210106 15:12:20.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:20.203" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:12:20.203" starttime="20210106 15:12:20.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:20.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:20.204" starttime="20210106 15:12:20.204"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.204" starttime="20210106 15:12:20.196"></status>
</kw>
<msg timestamp="20210106 15:12:20.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:20.204" starttime="20210106 15:12:20.196"></status>
</kw>
<msg timestamp="20210106 15:12:20.205" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:12:20.205" starttime="20210106 15:12:20.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:12:20.205" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:12:20.205" starttime="20210106 15:12:20.205"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:20.209" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:20.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:20.249" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:20.249" starttime="20210106 15:12:20.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:20.250" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:20.250" starttime="20210106 15:12:20.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:20.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:20.251" starttime="20210106 15:12:20.250"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.251" starttime="20210106 15:12:20.207"></status>
</kw>
<msg timestamp="20210106 15:12:20.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:20.251" starttime="20210106 15:12:20.206"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.252" starttime="20210106 15:12:20.206"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.252" starttime="20210106 15:12:20.206"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.252" starttime="20210106 15:12:20.195"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.252" starttime="20210106 15:12:20.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:20.259" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:20.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:20.262" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:20.262" starttime="20210106 15:12:20.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:20.263" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:20.263" starttime="20210106 15:12:20.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:20.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:20.264" starttime="20210106 15:12:20.263"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.264" starttime="20210106 15:12:20.254"></status>
</kw>
<msg timestamp="20210106 15:12:20.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:20.264" starttime="20210106 15:12:20.254"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.265" starttime="20210106 15:12:20.253"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:20.269" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:20.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:20.272" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:12:20.272" starttime="20210106 15:12:20.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:20.273" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:12:20.273" starttime="20210106 15:12:20.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:20.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:20.273" starttime="20210106 15:12:20.273"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.274" starttime="20210106 15:12:20.266"></status>
</kw>
<msg timestamp="20210106 15:12:20.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:20.274" starttime="20210106 15:12:20.266"></status>
</kw>
<msg timestamp="20210106 15:12:20.274" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:12:20.274" starttime="20210106 15:12:20.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:12:20.275" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:12:20.275" starttime="20210106 15:12:20.274"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:20.279" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:20.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:20.305" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:20.305" starttime="20210106 15:12:20.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:20.306" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:20.307" starttime="20210106 15:12:20.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:20.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:20.307" starttime="20210106 15:12:20.307"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.307" starttime="20210106 15:12:20.276"></status>
</kw>
<msg timestamp="20210106 15:12:20.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:20.308" starttime="20210106 15:12:20.276"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.308" starttime="20210106 15:12:20.275"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.308" starttime="20210106 15:12:20.275"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.308" starttime="20210106 15:12:20.265"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:20.308" starttime="20210106 15:12:20.265"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:20.312" level="INFO">Running command 'ozone sh key list 68377-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:23.601" level="INFO">${rc} = 255</msg>
<msg timestamp="20210106 15:12:23.601" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:23.601" starttime="20210106 15:12:20.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:23.602" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 68377-target unreadable-link null</msg>
<status status="PASS" endtime="20210106 15:12:23.602" starttime="20210106 15:12:23.601"></status>
</kw>
<msg timestamp="20210106 15:12:23.602" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:23.602" starttime="20210106 15:12:20.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210106 15:12:23.603" starttime="20210106 15:12:23.603"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.603" starttime="20210106 15:12:20.253"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.603" starttime="20210106 15:12:20.252"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:12:23.603" critical="yes" starttime="20210106 15:12:20.193"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:23.609" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:23.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:23.612" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:12:23.612" starttime="20210106 15:12:23.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:23.613" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:12:23.613" starttime="20210106 15:12:23.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:23.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:23.614" starttime="20210106 15:12:23.613"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.614" starttime="20210106 15:12:23.607"></status>
</kw>
<msg timestamp="20210106 15:12:23.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:23.614" starttime="20210106 15:12:23.606"></status>
</kw>
<msg timestamp="20210106 15:12:23.614" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:12:23.614" starttime="20210106 15:12:23.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:12:23.615" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:12:23.615" starttime="20210106 15:12:23.614"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:23.619" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:23.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:23.642" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:23.642" starttime="20210106 15:12:23.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:23.643" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:23.644" starttime="20210106 15:12:23.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:23.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:23.644" starttime="20210106 15:12:23.644"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.644" starttime="20210106 15:12:23.616"></status>
</kw>
<msg timestamp="20210106 15:12:23.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:23.645" starttime="20210106 15:12:23.616"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.645" starttime="20210106 15:12:23.615"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.645" starttime="20210106 15:12:23.615"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.645" starttime="20210106 15:12:23.606"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.645" starttime="20210106 15:12:23.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:23.651" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:23.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:23.654" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:23.655" starttime="20210106 15:12:23.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:23.656" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:23.656" starttime="20210106 15:12:23.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:23.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:23.656" starttime="20210106 15:12:23.656"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.656" starttime="20210106 15:12:23.647"></status>
</kw>
<msg timestamp="20210106 15:12:23.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:23.657" starttime="20210106 15:12:23.647"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.657" starttime="20210106 15:12:23.646"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:23.661" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:23.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:23.664" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:12:23.664" starttime="20210106 15:12:23.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:23.665" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:12:23.665" starttime="20210106 15:12:23.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:23.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:23.665" starttime="20210106 15:12:23.665"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.666" starttime="20210106 15:12:23.659"></status>
</kw>
<msg timestamp="20210106 15:12:23.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:23.666" starttime="20210106 15:12:23.658"></status>
</kw>
<msg timestamp="20210106 15:12:23.666" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:12:23.666" starttime="20210106 15:12:23.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:12:23.667" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:12:23.667" starttime="20210106 15:12:23.666"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:23.671" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:23.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:23.694" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:23.694" starttime="20210106 15:12:23.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:23.695" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:23.695" starttime="20210106 15:12:23.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:23.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:23.696" starttime="20210106 15:12:23.696"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.696" starttime="20210106 15:12:23.668"></status>
</kw>
<msg timestamp="20210106 15:12:23.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:23.696" starttime="20210106 15:12:23.668"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.697" starttime="20210106 15:12:23.667"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.697" starttime="20210106 15:12:23.667"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.697" starttime="20210106 15:12:23.657"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:23.697" starttime="20210106 15:12:23.657"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:23.703" level="INFO">Running command 'ozone sh bucket info 68377-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:27.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:27.878" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:27.878" starttime="20210106 15:12:23.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:27.879" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:10:22.119Z",
  "modificationTime" : "2021-01-06T15:10:39.617Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210106 15:12:27.879" starttime="20210106 15:12:27.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:27.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:27.880" starttime="20210106 15:12:27.879"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:27.880" starttime="20210106 15:12:23.698"></status>
</kw>
<msg timestamp="20210106 15:12:27.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:27.880" starttime="20210106 15:12:23.698"></status>
</kw>
<msg timestamp="20210106 15:12:27.881" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:27.881" starttime="20210106 15:12:23.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210106 15:12:27.881" starttime="20210106 15:12:27.881"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210106 15:12:27.881" starttime="20210106 15:12:27.881"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:27.884" level="INFO">Running command 'ozone sh key list 68377-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:31.319" level="INFO">${rc} = 255</msg>
<msg timestamp="20210106 15:12:31.319" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:31.319" starttime="20210106 15:12:27.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:31.320" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 68377-source unreadable-bucket </msg>
<status status="PASS" endtime="20210106 15:12:31.320" starttime="20210106 15:12:31.320"></status>
</kw>
<msg timestamp="20210106 15:12:31.321" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:31.321" starttime="20210106 15:12:27.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210106 15:12:31.321" starttime="20210106 15:12:31.321"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:31.321" starttime="20210106 15:12:23.646"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:31.321" starttime="20210106 15:12:23.645"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:12:31.322" critical="yes" starttime="20210106 15:12:23.604"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:31.330" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:31.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:31.332" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:12:31.332" starttime="20210106 15:12:31.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:31.333" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:12:31.333" starttime="20210106 15:12:31.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:31.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:31.333" starttime="20210106 15:12:31.333"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:31.334" starttime="20210106 15:12:31.325"></status>
</kw>
<msg timestamp="20210106 15:12:31.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:31.334" starttime="20210106 15:12:31.325"></status>
</kw>
<msg timestamp="20210106 15:12:31.334" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:12:31.334" starttime="20210106 15:12:31.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:12:31.334" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:12:31.335" starttime="20210106 15:12:31.334"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:31.339" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:31.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:31.357" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:31.357" starttime="20210106 15:12:31.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:31.358" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:31.358" starttime="20210106 15:12:31.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:31.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:31.359" starttime="20210106 15:12:31.358"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:31.359" starttime="20210106 15:12:31.336"></status>
</kw>
<msg timestamp="20210106 15:12:31.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:31.359" starttime="20210106 15:12:31.336"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:31.359" starttime="20210106 15:12:31.335"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:31.360" starttime="20210106 15:12:31.335"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:31.360" starttime="20210106 15:12:31.324"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:31.360" starttime="20210106 15:12:31.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:31.364" level="INFO">Running command 'ozone sh bucket link 68377-target/loop1 68377-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:34.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:34.576" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:34.576" starttime="20210106 15:12:31.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:34.577" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:12:34.577" starttime="20210106 15:12:34.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:34.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:34.578" starttime="20210106 15:12:34.578"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:34.578" starttime="20210106 15:12:31.361"></status>
</kw>
<msg timestamp="20210106 15:12:34.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:34.578" starttime="20210106 15:12:31.360"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:34.579" starttime="20210106 15:12:31.360"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:34.583" level="INFO">Running command 'ozone sh bucket link 68377-target/loop2 68377-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:38.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:38.159" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:38.159" starttime="20210106 15:12:34.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:38.160" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:12:38.160" starttime="20210106 15:12:38.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:38.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:38.161" starttime="20210106 15:12:38.161"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:38.161" starttime="20210106 15:12:34.580"></status>
</kw>
<msg timestamp="20210106 15:12:38.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:38.161" starttime="20210106 15:12:34.579"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:38.162" starttime="20210106 15:12:34.579"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:38.166" level="INFO">Running command 'ozone sh bucket link 68377-target/loop3 68377-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:41.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:41.535" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:41.535" starttime="20210106 15:12:38.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:41.536" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:12:41.537" starttime="20210106 15:12:41.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:41.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:41.537" starttime="20210106 15:12:41.537"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:41.538" starttime="20210106 15:12:38.163"></status>
</kw>
<msg timestamp="20210106 15:12:41.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:41.538" starttime="20210106 15:12:38.162"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:41.538" starttime="20210106 15:12:38.162"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:41.541" level="INFO">Running command 'ozone sh key list 68377-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:44.892" level="INFO">${rc} = 255</msg>
<msg timestamp="20210106 15:12:44.892" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:44.892" starttime="20210106 15:12:41.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:44.893" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210106 15:12:44.893" starttime="20210106 15:12:44.892"></status>
</kw>
<msg timestamp="20210106 15:12:44.894" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:44.894" starttime="20210106 15:12:41.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210106 15:12:44.894" starttime="20210106 15:12:44.894"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:12:44.895" critical="yes" starttime="20210106 15:12:31.323"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:44.906" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:44.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:44.909" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:12:44.909" starttime="20210106 15:12:44.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:44.910" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:12:44.910" starttime="20210106 15:12:44.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:44.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:44.911" starttime="20210106 15:12:44.910"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:44.911" starttime="20210106 15:12:44.902"></status>
</kw>
<msg timestamp="20210106 15:12:44.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:44.911" starttime="20210106 15:12:44.901"></status>
</kw>
<msg timestamp="20210106 15:12:44.912" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:12:44.912" starttime="20210106 15:12:44.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:12:44.912" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:12:44.912" starttime="20210106 15:12:44.912"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:44.923" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:44.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:44.936" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:44.936" starttime="20210106 15:12:44.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:44.938" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:44.938" starttime="20210106 15:12:44.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:44.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:44.938" starttime="20210106 15:12:44.938"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:44.939" starttime="20210106 15:12:44.914"></status>
</kw>
<msg timestamp="20210106 15:12:44.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:44.939" starttime="20210106 15:12:44.913"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:44.939" starttime="20210106 15:12:44.913"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:44.939" starttime="20210106 15:12:44.912"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:44.939" starttime="20210106 15:12:44.898"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:44.939" starttime="20210106 15:12:44.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:44.944" level="INFO">Running command 'ozone sh bucket link 68377-source/bucket1 68377-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:48.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:48.652" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:48.653" starttime="20210106 15:12:44.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:48.654" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:12:48.654" starttime="20210106 15:12:48.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:48.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:48.655" starttime="20210106 15:12:48.654"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:48.655" starttime="20210106 15:12:44.940"></status>
</kw>
<msg timestamp="20210106 15:12:48.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:48.655" starttime="20210106 15:12:44.940"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:48.656" starttime="20210106 15:12:44.940"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:48.660" level="INFO">Running command 'ozone sh key put 68377-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:54.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:54.454" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:54.454" starttime="20210106 15:12:48.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:54.455" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:12:54.455" starttime="20210106 15:12:54.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:54.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:54.456" starttime="20210106 15:12:54.456"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:54.456" starttime="20210106 15:12:48.657"></status>
</kw>
<msg timestamp="20210106 15:12:54.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:54.456" starttime="20210106 15:12:48.656"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:54.457" starttime="20210106 15:12:48.656"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210106 15:12:54.459" level="INFO">${postfix} = 48207</msg>
<status status="PASS" endtime="20210106 15:12:54.459" starttime="20210106 15:12:54.458"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210106 15:12:54.460" level="INFO">${tmpfile} = /tmp/tempkey-48207</msg>
<status status="PASS" endtime="20210106 15:12:54.460" starttime="20210106 15:12:54.459"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:54.463" level="INFO">Running command 'ozone sh key get -f 68377-target/link1/key3 /tmp/tempkey-48207 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:59.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:59.921" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:12:59.921" starttime="20210106 15:12:54.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:59.922" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:12:59.923" starttime="20210106 15:12:59.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:59.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:59.923" starttime="20210106 15:12:59.923"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:59.923" starttime="20210106 15:12:54.460"></status>
</kw>
<msg timestamp="20210106 15:12:59.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:59.924" starttime="20210106 15:12:54.460"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:59.924" starttime="20210106 15:12:54.460"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210106 15:12:59.927" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-48207 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:59.931" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210106 15:12:59.931" starttime="20210106 15:12:59.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:59.936" level="INFO">Running command 'rm -f /tmp/tempkey-48207 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:59.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:59.939" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:59.939" starttime="20210106 15:12:59.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:59.940" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:59.940" starttime="20210106 15:12:59.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:59.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:59.941" starttime="20210106 15:12:59.940"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:59.941" starttime="20210106 15:12:59.932"></status>
</kw>
<msg timestamp="20210106 15:12:59.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:59.941" starttime="20210106 15:12:59.932"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:59.941" starttime="20210106 15:12:59.931"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210106 15:12:59.942" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210106 15:12:59.942" starttime="20210106 15:12:59.941"></status>
</kw>
<msg timestamp="20210106 15:12:59.942" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210106 15:12:59.942" starttime="20210106 15:12:54.457"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210106 15:12:59.942" starttime="20210106 15:12:59.942"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:59.943" starttime="20210106 15:12:54.457"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:12:59.943" critical="yes" starttime="20210106 15:12:44.895"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:59.949" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:59.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:59.952" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210106 15:12:59.952" starttime="20210106 15:12:59.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:59.953" level="INFO">scm</msg>
<status status="PASS" endtime="20210106 15:12:59.953" starttime="20210106 15:12:59.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:59.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:59.954" starttime="20210106 15:12:59.953"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:59.954" starttime="20210106 15:12:59.946"></status>
</kw>
<msg timestamp="20210106 15:12:59.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:59.954" starttime="20210106 15:12:59.946"></status>
</kw>
<msg timestamp="20210106 15:12:59.954" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210106 15:12:59.954" starttime="20210106 15:12:59.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210106 15:12:59.955" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210106 15:12:59.955" starttime="20210106 15:12:59.955"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:59.959" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:12:59.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:12:59.970" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 15:12:59.970" starttime="20210106 15:12:59.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:12:59.972" level="INFO"></msg>
<status status="PASS" endtime="20210106 15:12:59.972" starttime="20210106 15:12:59.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:12:59.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:12:59.972" starttime="20210106 15:12:59.972"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:59.973" starttime="20210106 15:12:59.956"></status>
</kw>
<msg timestamp="20210106 15:12:59.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:12:59.973" starttime="20210106 15:12:59.956"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:59.973" starttime="20210106 15:12:59.956"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:59.973" starttime="20210106 15:12:59.955"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:59.973" starttime="20210106 15:12:59.945"></status>
</kw>
<status status="PASS" endtime="20210106 15:12:59.973" starttime="20210106 15:12:59.944"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:12:59.977" level="INFO">Running command 'ozone sh bucket delete 68377-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:13:03.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:13:03.416" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:13:03.416" starttime="20210106 15:12:59.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:13:03.418" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20210106 15:13:03.418" starttime="20210106 15:13:03.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:13:03.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:13:03.418" starttime="20210106 15:13:03.418"></status>
</kw>
<status status="PASS" endtime="20210106 15:13:03.419" starttime="20210106 15:12:59.974"></status>
</kw>
<msg timestamp="20210106 15:13:03.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:13:03.419" starttime="20210106 15:12:59.974"></status>
</kw>
<status status="PASS" endtime="20210106 15:13:03.419" starttime="20210106 15:12:59.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:13:03.423" level="INFO">Running command 'ozone sh bucket list 68377-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:13:07.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:13:07.427" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:13:07.427" starttime="20210106 15:13:03.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:13:07.428" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:12:12.743Z",
  "modificationTime" : "2021-01-06T15:12:12.743Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:10:43.059Z",
  "modificationTime" : "2021-01-06T15:10:43.059Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:10:22.119Z",
  "modificationTime" : "2021-01-06T15:10:39.617Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:12:05.780Z",
  "modificationTime" : "2021-01-06T15:12:05.780Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:12:48.472Z",
  "modificationTime" : "2021-01-06T15:12:48.472Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:12:41.380Z",
  "modificationTime" : "2021-01-06T15:12:41.380Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:12:34.491Z",
  "modificationTime" : "2021-01-06T15:12:34.491Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:12:37.961Z",
  "modificationTime" : "2021-01-06T15:12:37.961Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:10:14.882Z",
  "modificationTime" : "2021-01-06T15:10:36.406Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "68377-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-06T15:10:18.669Z",
  "modificationTime" : "2021-01-06T15:10:18.669Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "68377-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210106 15:13:07.428" starttime="20210106 15:13:07.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:13:07.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:13:07.429" starttime="20210106 15:13:07.428"></status>
</kw>
<status status="PASS" endtime="20210106 15:13:07.429" starttime="20210106 15:13:03.420"></status>
</kw>
<msg timestamp="20210106 15:13:07.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:13:07.430" starttime="20210106 15:13:03.420"></status>
</kw>
<msg timestamp="20210106 15:13:07.430" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20210106 15:13:07.430" starttime="20210106 15:13:03.419"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210106 15:13:07.431" starttime="20210106 15:13:07.430"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 15:13:07.436" level="INFO">Running command 'ozone sh key list 68377-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 15:13:11.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 15:13:11.001" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210106 15:13:11.001" starttime="20210106 15:13:07.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 15:13:11.002" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210106 15:13:11.002" starttime="20210106 15:13:11.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 15:13:11.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 15:13:11.003" starttime="20210106 15:13:11.002"></status>
</kw>
<status status="PASS" endtime="20210106 15:13:11.003" starttime="20210106 15:13:07.432"></status>
</kw>
<msg timestamp="20210106 15:13:11.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 15:13:11.003" starttime="20210106 15:13:07.431"></status>
</kw>
<msg timestamp="20210106 15:13:11.004" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210106 15:13:11.004" starttime="20210106 15:13:07.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210106 15:13:11.004" starttime="20210106 15:13:11.004"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210106 15:13:11.004" critical="yes" starttime="20210106 15:12:59.943"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210106 15:13:11.007" starttime="20210106 15:09:51.012"></status>
</suite>
<status status="PASS" elapsedtime="231384" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
