<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210106 14:58:14.592" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210106 14:54:49.659" starttime="20210106 14:54:49.659"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:54:49.665" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:54:49.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:54:49.751" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 06 Jan 2021 14:54:49 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 06 Jan 2021 11:27:32 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20210106 14:54:49.751" starttime="20210106 14:54:49.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:54:49.752" level="INFO">HTTP/1.1 200 OK
Date: Wed, 06 Jan 2021 14:54:49 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 06 Jan 2021 11:27:32 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210106 14:54:49.752" starttime="20210106 14:54:49.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:54:49.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:54:49.753" starttime="20210106 14:54:49.753"></status>
</kw>
<status status="PASS" endtime="20210106 14:54:49.753" starttime="20210106 14:54:49.660"></status>
</kw>
<msg timestamp="20210106 14:54:49.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:54:49.754" starttime="20210106 14:54:49.660"></status>
</kw>
<msg timestamp="20210106 14:54:49.754" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 06 Jan 2021 14:54:49 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 06 Jan 2021 11:27:32 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20210106 14:54:49.754" starttime="20210106 14:54:49.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20210106 14:54:49.754" starttime="20210106 14:54:49.754"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:54:49.755" critical="yes" starttime="20210106 14:54:49.658"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210106 14:54:49.757" starttime="20210106 14:54:49.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:54:49.764" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:56:00.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:56:00.208" level="INFO">${output} = 2021-01-06 14:54:51,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 14:54:51,512 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210106 14:56:00.208" starttime="20210106 14:54:49.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:56:00.210" level="INFO">2021-01-06 14:54:51,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 14:54:51,512 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-06 14:54:51,512 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-06 14:54:53,776 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2021-01-06 14:54:53,777 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2021-01-06 14:54:53,777 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2021-01-06 14:54:53,777 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2021-01-06 14:54:53,777 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2021-01-06 14:54:53,777 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2021-01-06 14:54:53,777 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2021-01-06 14:54:53,786 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2021-01-06 14:54:53,789 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2021-01-06 14:54:53,801 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-01-06 14:54:53,841 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-28543, with hadoop as owner.
2021-01-06 14:54:54,266 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-52518, with hadoop as owner.
2021-01-06 14:54:54,294 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-43553, with hadoop as owner.
2021-01-06 14:54:54,314 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-78608, with hadoop as owner.
2021-01-06 14:54:54,335 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-77635, with hadoop as owner.
2021-01-06 14:54:54,362 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28543/bucket-0-78853, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,482 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-52518/bucket-0-17723, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,513 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-43553/bucket-0-44343, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,527 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-78608/bucket-0-70231, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,539 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-77635/bucket-0-47879, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,547 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28543/bucket-1-30972, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,578 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-52518/bucket-1-72059, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,596 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-43553/bucket-1-78266, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,616 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-78608/bucket-1-67452, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,636 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-77635/bucket-1-25734, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,654 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28543/bucket-2-23401, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,674 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-52518/bucket-2-23742, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,687 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-43553/bucket-2-74113, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,697 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-78608/bucket-2-61955, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,707 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-77635/bucket-2-07470, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,718 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28543/bucket-3-16327, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,729 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-52518/bucket-3-14113, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,744 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-43553/bucket-3-96513, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,753 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-78608/bucket-3-58578, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,766 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-77635/bucket-3-64185, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,780 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28543/bucket-4-92206, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,791 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-52518/bucket-4-77216, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,811 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-01-06 14:54:54,820 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-43553/bucket-4-72632, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,834 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-78608/bucket-4-92300, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:54,846 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-77635/bucket-4-93762, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-06 14:54:55,811 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-01-06 14:54:56,010 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-06 14:54:56,370 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-06 14:54:56,371 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-8B0A7A8B984B-&gt;0b5a296b-6854-4808-8653-7dcaf8a01dfd
2021-01-06 14:54:56,372 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 14:54:56,811 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-01-06 14:54:57,812 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-01-06 14:54:58,812 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-01-06 14:54:59,813 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-01-06 14:54:59,817 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-05537A5F9A68-&gt;0acb80ab-8eeb-48ba-86ed-a0bd88ae1f10
2021-01-06 14:54:59,817 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-06 14:55:00,815 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2021-01-06 14:55:01,815 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2021-01-06 14:55:02,818 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2021-01-06 14:55:03,819 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2021-01-06 14:55:04,819 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2021-01-06 14:55:05,820 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2021-01-06 14:55:06,831 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2021-01-06 14:55:07,832 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2021-01-06 14:55:08,833 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2021-01-06 14:55:09,833 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2021-01-06 14:55:10,834 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2021-01-06 14:55:11,834 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2021-01-06 14:55:12,835 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2021-01-06 14:55:13,835 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2021-01-06 14:55:14,836 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2021-01-06 14:55:15,836 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2021-01-06 14:55:16,837 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2021-01-06 14:55:17,838 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2021-01-06 14:55:18,843 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2021-01-06 14:55:19,844 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2021-01-06 14:55:20,844 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2021-01-06 14:55:21,845 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2021-01-06 14:55:22,845 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2021-01-06 14:55:23,846 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2021-01-06 14:55:24,848 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2021-01-06 14:55:25,854 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2021-01-06 14:55:26,900 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2021-01-06 14:55:27,901 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2021-01-06 14:55:28,901 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2021-01-06 14:55:29,902 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2021-01-06 14:55:30,902 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2021-01-06 14:55:31,903 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2021-01-06 14:55:32,903 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2021-01-06 14:55:33,904 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2021-01-06 14:55:34,905 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2021-01-06 14:55:35,905 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2021-01-06 14:55:36,905 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2021-01-06 14:55:37,906 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2021-01-06 14:55:38,909 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2021-01-06 14:55:39,911 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2021-01-06 14:55:40,911 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2021-01-06 14:55:41,912 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2021-01-06 14:55:42,912 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2021-01-06 14:55:43,912 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2021-01-06 14:55:44,913 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2021-01-06 14:55:45,913 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2021-01-06 14:55:46,914 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2021-01-06 14:55:47,915 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2021-01-06 14:55:48,915 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2021-01-06 14:55:49,916 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2021-01-06 14:55:50,916 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2021-01-06 14:55:51,919 [Thread-7] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2021-01-06 14:55:52,919 [Thread-7] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2021-01-06 14:55:53,920 [Thread-7] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2021-01-06 14:55:54,920 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,504
Average Time spent in bucket creation: 00:00:00,377
Average Time spent in key creation: 00:00:02,932
Average Time spent in key write: 00:00:01,341
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:08,165
***************************************************</msg>
<status status="PASS" endtime="20210106 14:56:00.210" starttime="20210106 14:56:00.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:56:00.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:56:00.211" starttime="20210106 14:56:00.210"></status>
</kw>
<status status="PASS" endtime="20210106 14:56:00.211" starttime="20210106 14:54:49.759"></status>
</kw>
<msg timestamp="20210106 14:56:00.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:56:00.211" starttime="20210106 14:54:49.759"></status>
</kw>
<msg timestamp="20210106 14:56:00.211" level="INFO">${result} = 2021-01-06 14:54:51,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-06 14:54:51,512 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210106 14:56:00.211" starttime="20210106 14:54:49.757"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20210106 14:56:00.212" starttime="20210106 14:56:00.212"></status>
</kw>
<status status="PASS" endtime="20210106 14:56:00.212" starttime="20210106 14:56:00.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20210106 14:56:00.213" starttime="20210106 14:56:00.212"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:56:00.213" critical="yes" starttime="20210106 14:54:49.755"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210106 14:56:00.214" starttime="20210106 14:54:49.612"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:56:05.194" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:56:07.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:56:07.901" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):...</msg>
<status status="PASS" endtime="20210106 14:56:07.901" starttime="20210106 14:56:05.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:56:07.902" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" endtime="20210106 14:56:07.902" starttime="20210106 14:56:07.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:56:07.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:56:07.903" starttime="20210106 14:56:07.903"></status>
</kw>
<status status="PASS" endtime="20210106 14:56:07.904" starttime="20210106 14:56:05.187"></status>
</kw>
<msg timestamp="20210106 14:56:07.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:56:07.904" starttime="20210106 14:56:05.187"></status>
</kw>
<msg timestamp="20210106 14:56:07.904" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):...</msg>
<status status="PASS" endtime="20210106 14:56:07.904" starttime="20210106 14:56:05.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20210106 14:56:07.905" starttime="20210106 14:56:07.904"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:56:07.905" critical="yes" starttime="20210106 14:56:05.186"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:56:07.910" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:56:10.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:56:10.441" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" endtime="20210106 14:56:10.441" starttime="20210106 14:56:07.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:56:10.443" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" endtime="20210106 14:56:10.443" starttime="20210106 14:56:10.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:56:10.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:56:10.444" starttime="20210106 14:56:10.443"></status>
</kw>
<status status="PASS" endtime="20210106 14:56:10.444" starttime="20210106 14:56:07.907"></status>
</kw>
<msg timestamp="20210106 14:56:10.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:56:10.444" starttime="20210106 14:56:07.907"></status>
</kw>
<msg timestamp="20210106 14:56:10.445" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" endtime="20210106 14:56:10.445" starttime="20210106 14:56:07.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20210106 14:56:10.445" starttime="20210106 14:56:10.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
</arguments>
<status status="PASS" endtime="20210106 14:56:10.446" starttime="20210106 14:56:10.445"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:56:10.446" critical="yes" starttime="20210106 14:56:07.906"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210106 14:56:10.448" starttime="20210106 14:56:05.139"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:56:15.450" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:56:18.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:56:18.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:56:18.420" starttime="20210106 14:56:15.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:56:18.421" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:56:18.422" starttime="20210106 14:56:18.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:56:18.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:56:18.422" starttime="20210106 14:56:18.422"></status>
</kw>
<status status="PASS" endtime="20210106 14:56:18.422" starttime="20210106 14:56:15.439"></status>
</kw>
<msg timestamp="20210106 14:56:18.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:56:18.423" starttime="20210106 14:56:15.439"></status>
</kw>
<msg timestamp="20210106 14:56:18.423" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:56:18.423" starttime="20210106 14:56:15.438"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210106 14:56:18.423" starttime="20210106 14:56:18.423"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:56:18.427" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:56:21.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:56:21.118" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:56:21.118" starttime="20210106 14:56:18.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:56:21.120" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:56:21.120" starttime="20210106 14:56:21.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:56:21.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:56:21.121" starttime="20210106 14:56:21.120"></status>
</kw>
<status status="PASS" endtime="20210106 14:56:21.121" starttime="20210106 14:56:18.424"></status>
</kw>
<msg timestamp="20210106 14:56:21.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:56:21.121" starttime="20210106 14:56:18.424"></status>
</kw>
<msg timestamp="20210106 14:56:21.121" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:56:21.122" starttime="20210106 14:56:18.423"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210106 14:56:21.122" starttime="20210106 14:56:21.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:56:21.128" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:56:26.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:56:26.272" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:56:26.272" starttime="20210106 14:56:21.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:56:26.273" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:56:26.273" starttime="20210106 14:56:26.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:56:26.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:56:26.274" starttime="20210106 14:56:26.273"></status>
</kw>
<status status="PASS" endtime="20210106 14:56:26.274" starttime="20210106 14:56:21.123"></status>
</kw>
<msg timestamp="20210106 14:56:26.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:56:26.274" starttime="20210106 14:56:21.123"></status>
</kw>
<msg timestamp="20210106 14:56:26.274" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:56:26.274" starttime="20210106 14:56:21.122"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210106 14:56:26.275" starttime="20210106 14:56:26.275"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:56:26.275" critical="yes" starttime="20210106 14:56:15.438"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210106 14:56:26.277" starttime="20210106 14:56:15.392"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:57:14.803" level="INFO">${random} = 16181</msg>
<status status="PASS" endtime="20210106 14:57:14.803" starttime="20210106 14:57:14.803"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:57:14.809" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-16181 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:58:07.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:58:07.860" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:58:07.860" starttime="20210106 14:57:14.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:58:07.861" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:58:07.861" starttime="20210106 14:58:07.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:58:07.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:58:07.862" starttime="20210106 14:58:07.861"></status>
</kw>
<status status="PASS" endtime="20210106 14:58:07.862" starttime="20210106 14:57:14.805"></status>
</kw>
<msg timestamp="20210106 14:58:07.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:58:07.862" starttime="20210106 14:57:14.804"></status>
</kw>
<msg timestamp="20210106 14:58:07.862" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:58:07.862" starttime="20210106 14:57:14.804"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210106 14:58:07.863" starttime="20210106 14:58:07.862"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:58:07.863" critical="yes" starttime="20210106 14:57:14.802"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210106 14:58:07.864" starttime="20210106 14:57:14.755"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210106 14:56:33.374" level="INFO">${random} = 88247</msg>
<status status="PASS" endtime="20210106 14:56:33.374" starttime="20210106 14:56:33.373"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210106 14:56:33.380" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-88247 2&gt;&amp;1'.</msg>
<msg timestamp="20210106 14:56:38.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210106 14:56:38.157" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:56:38.157" starttime="20210106 14:56:33.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210106 14:56:38.158" level="INFO"></msg>
<status status="PASS" endtime="20210106 14:56:38.158" starttime="20210106 14:56:38.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210106 14:56:38.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210106 14:56:38.159" starttime="20210106 14:56:38.159"></status>
</kw>
<status status="PASS" endtime="20210106 14:56:38.159" starttime="20210106 14:56:33.375"></status>
</kw>
<msg timestamp="20210106 14:56:38.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210106 14:56:38.160" starttime="20210106 14:56:33.375"></status>
</kw>
<msg timestamp="20210106 14:56:38.160" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210106 14:56:38.160" starttime="20210106 14:56:33.374"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210106 14:56:38.160" starttime="20210106 14:56:38.160"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210106 14:56:38.161" critical="yes" starttime="20210106 14:56:33.372"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210106 14:56:38.162" starttime="20210106 14:56:33.318"></status>
</suite>
<status status="PASS" elapsedtime="144749" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
