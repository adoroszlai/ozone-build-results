<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210124 14:31:04.485" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:25:51.258" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:25:56.593" level="INFO">${rc} = 255</msg>
<msg timestamp="20210124 14:25:56.594" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210124 14:25:56.594" starttime="20210124 14:25:51.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:25:56.595" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210124 14:25:56.595" starttime="20210124 14:25:56.594"></status>
</kw>
<msg timestamp="20210124 14:25:56.595" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210124 14:25:56.595" starttime="20210124 14:25:51.252"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:25:56.602" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:26:01.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:26:01.357" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:26:01.357" starttime="20210124 14:25:56.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:26:01.358" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:26:01.358" starttime="20210124 14:26:01.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:26:01.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:26:01.359" starttime="20210124 14:26:01.358"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:01.360" starttime="20210124 14:25:56.598"></status>
</kw>
<msg timestamp="20210124 14:26:01.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:26:01.360" starttime="20210124 14:25:56.597"></status>
</kw>
<msg timestamp="20210124 14:26:01.360" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210124 14:26:01.360" starttime="20210124 14:25:56.597"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210124 14:26:01.361" starttime="20210124 14:26:01.360"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:01.361" starttime="20210124 14:25:56.596"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:01.361" starttime="20210124 14:25:56.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:26:01.368" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:26:06.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:26:06.122" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:26:06.122" starttime="20210124 14:26:01.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:26:06.124" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:26:06.124" starttime="20210124 14:26:06.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:26:06.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:26:06.125" starttime="20210124 14:26:06.124"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:06.125" starttime="20210124 14:26:01.364"></status>
</kw>
<msg timestamp="20210124 14:26:06.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:26:06.125" starttime="20210124 14:26:01.363"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:06.126" starttime="20210124 14:26:01.363"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:06.126" starttime="20210124 14:26:01.362"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:06.126" starttime="20210124 14:26:01.361"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210124 14:26:06.127" starttime="20210124 14:26:06.126"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:26:06.131" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:26:11.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:26:11.100" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:26...</msg>
<status status="PASS" endtime="20210124 14:26:11.100" starttime="20210124 14:26:06.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:26:11.101" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:26:05.843Z",
  "modificationTime" : "2021-01-24T14:26:05.843Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210124 14:26:11.102" starttime="20210124 14:26:11.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:26:11.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:26:11.103" starttime="20210124 14:26:11.102"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:11.103" starttime="20210124 14:26:06.128"></status>
</kw>
<msg timestamp="20210124 14:26:11.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:26:11.103" starttime="20210124 14:26:06.128"></status>
</kw>
<msg timestamp="20210124 14:26:11.104" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:26...</msg>
<status status="PASS" endtime="20210124 14:26:11.105" starttime="20210124 14:26:06.127"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210124 14:26:11.106" starttime="20210124 14:26:11.105"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210124 14:26:11.111" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210124 14:26:11.111" starttime="20210124 14:26:11.110"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:26:11.111" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210124 14:26:11.111" starttime="20210124 14:26:11.111"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:11.112" starttime="20210124 14:26:11.109"></status>
</kw>
<msg timestamp="20210124 14:26:11.112" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210124 14:26:11.112" starttime="20210124 14:26:11.109"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:11.112" starttime="20210124 14:26:11.108"></status>
</kw>
<msg timestamp="20210124 14:26:11.112" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210124 14:26:11.112" starttime="20210124 14:26:11.107"></status>
</kw>
<msg timestamp="20210124 14:26:11.113" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210124 14:26:11.113" starttime="20210124 14:26:11.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:26:11.117" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:26:15.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:26:15.625" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:26:15.627" starttime="20210124 14:26:11.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:26:15.628" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:26:15.628" starttime="20210124 14:26:15.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:26:15.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:26:15.629" starttime="20210124 14:26:15.628"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:15.629" starttime="20210124 14:26:11.114"></status>
</kw>
<msg timestamp="20210124 14:26:15.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:26:15.629" starttime="20210124 14:26:11.113"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:15.630" starttime="20210124 14:26:11.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:26:15.635" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:26:26.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:26:26.320" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:26:26.320" starttime="20210124 14:26:15.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:26:26.321" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:26:26.321" starttime="20210124 14:26:26.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:26:26.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:26:26.322" starttime="20210124 14:26:26.322"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:26.323" starttime="20210124 14:26:15.631"></status>
</kw>
<msg timestamp="20210124 14:26:26.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:26:26.323" starttime="20210124 14:26:15.631"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:26.323" starttime="20210124 14:26:15.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:26:26.333" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:26:34.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:26:34.097" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:26:34.097" starttime="20210124 14:26:26.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:26:34.099" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:26:34.099" starttime="20210124 14:26:34.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:26:34.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:26:34.102" starttime="20210124 14:26:34.099"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:34.102" starttime="20210124 14:26:26.324"></status>
</kw>
<msg timestamp="20210124 14:26:34.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:26:34.103" starttime="20210124 14:26:26.324"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:34.104" starttime="20210124 14:26:26.323"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:26:34.112" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:26:40.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:26:40.743" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:26:40.743" starttime="20210124 14:26:34.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:26:40.744" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:26:40.744" starttime="20210124 14:26:40.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:26:40.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:26:40.746" starttime="20210124 14:26:40.745"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:40.747" starttime="20210124 14:26:34.107"></status>
</kw>
<msg timestamp="20210124 14:26:40.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:26:40.748" starttime="20210124 14:26:34.106"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:40.749" starttime="20210124 14:26:34.104"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:26:40.750" critical="yes" starttime="20210124 14:25:51.251"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210124 14:26:40.760" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210124 14:26:40.760" starttime="20210124 14:26:40.759"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:26:40.761" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210124 14:26:40.761" starttime="20210124 14:26:40.760"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:40.762" starttime="20210124 14:26:40.758"></status>
</kw>
<msg timestamp="20210124 14:26:40.762" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210124 14:26:40.762" starttime="20210124 14:26:40.757"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:40.762" starttime="20210124 14:26:40.756"></status>
</kw>
<msg timestamp="20210124 14:26:40.762" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210124 14:26:40.763" starttime="20210124 14:26:40.754"></status>
</kw>
<msg timestamp="20210124 14:26:40.763" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210124 14:26:40.763" starttime="20210124 14:26:40.752"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:26:40.769" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:26:45.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:26:45.280" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:26:45.280" starttime="20210124 14:26:40.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:26:45.282" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:26:45.282" starttime="20210124 14:26:45.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:26:45.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:26:45.283" starttime="20210124 14:26:45.282"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:45.283" starttime="20210124 14:26:40.764"></status>
</kw>
<msg timestamp="20210124 14:26:45.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:26:45.284" starttime="20210124 14:26:40.764"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:45.284" starttime="20210124 14:26:40.763"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:26:45.288" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:26:49.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:26:49.835" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:26:49.835" starttime="20210124 14:26:45.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:26:49.837" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:26:49.837" starttime="20210124 14:26:49.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:26:49.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:26:49.838" starttime="20210124 14:26:49.837"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:49.838" starttime="20210124 14:26:45.285"></status>
</kw>
<msg timestamp="20210124 14:26:49.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:26:49.838" starttime="20210124 14:26:45.285"></status>
</kw>
<status status="PASS" endtime="20210124 14:26:49.838" starttime="20210124 14:26:45.284"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:26:49.839" critical="yes" starttime="20210124 14:26:40.751"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210124 14:26:49.840" starttime="20210124 14:25:51.182"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210124 14:29:11.596" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210124 14:29:11.596" starttime="20210124 14:29:11.596"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:29:11.597" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210124 14:29:11.597" starttime="20210124 14:29:11.596"></status>
</kw>
<status status="PASS" endtime="20210124 14:29:11.597" starttime="20210124 14:29:11.595"></status>
</kw>
<msg timestamp="20210124 14:29:11.597" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210124 14:29:11.597" starttime="20210124 14:29:11.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:29:11.598" starttime="20210124 14:29:11.598"></status>
</kw>
<msg timestamp="20210124 14:29:11.598" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210124 14:29:11.599" starttime="20210124 14:29:11.597"></status>
</kw>
<status status="PASS" endtime="20210124 14:29:11.599" starttime="20210124 14:29:11.594"></status>
</kw>
<msg timestamp="20210124 14:29:11.599" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210124 14:29:11.599" starttime="20210124 14:29:11.593"></status>
</kw>
<msg timestamp="20210124 14:29:11.599" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210124 14:29:11.599" starttime="20210124 14:29:11.592"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210124 14:29:11.600" level="INFO">${random} = 93920</msg>
<status status="PASS" endtime="20210124 14:29:11.600" starttime="20210124 14:29:11.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:29:11.610" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-93920 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:29:16.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:29:16.155" level="INFO">${output} = 2021-01-24 14:29:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:29:14 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210124 14:29:16.155" starttime="20210124 14:29:11.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:29:16.156" level="INFO">2021-01-24 14:29:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:29:14 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-24 14:29:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-24 14:29:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-24 14:29:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B4A3C57D98AA-&gt;5e115a4e-03a3-42ce-9d19-d3ba878708c6
2021-01-24 14:29:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210124 14:29:16.156" starttime="20210124 14:29:16.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:29:16.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:29:16.157" starttime="20210124 14:29:16.156"></status>
</kw>
<status status="PASS" endtime="20210124 14:29:16.157" starttime="20210124 14:29:11.601"></status>
</kw>
<msg timestamp="20210124 14:29:16.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:29:16.158" starttime="20210124 14:29:11.601"></status>
</kw>
<msg timestamp="20210124 14:29:16.158" level="INFO">${result} = 2021-01-24 14:29:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:29:14 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210124 14:29:16.158" starttime="20210124 14:29:11.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:29:16.170" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:29:18.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:29:18.531" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-24 14:26 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-24 14:27 ofs://om/volume1/bucket1/ozone-93161
-rw-...</msg>
<status status="PASS" endtime="20210124 14:29:18.531" starttime="20210124 14:29:16.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:29:18.532" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-24 14:26 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-24 14:27 ofs://om/volume1/bucket1/ozone-93161
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-24 14:29 ofs://om/volume1/bucket1/ozone-93920
drwxrwxrwx   - hadoop hadoop          0 2021-01-24 14:26 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-24 14:28 ofs://om/volume1/bucket1/wordcount-Co8XLexr.txt</msg>
<status status="PASS" endtime="20210124 14:29:18.532" starttime="20210124 14:29:18.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:29:18.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:29:18.533" starttime="20210124 14:29:18.532"></status>
</kw>
<status status="PASS" endtime="20210124 14:29:18.533" starttime="20210124 14:29:16.165"></status>
</kw>
<msg timestamp="20210124 14:29:18.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:29:18.533" starttime="20210124 14:29:16.159"></status>
</kw>
<msg timestamp="20210124 14:29:18.534" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-24 14:26 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-24 14:27 ofs://om/volume1/bucket1/ozone-93161
-rw-...</msg>
<status status="PASS" endtime="20210124 14:29:18.534" starttime="20210124 14:29:16.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:29:18.534" starttime="20210124 14:29:18.534"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210124 14:29:18.535" critical="yes" starttime="20210124 14:29:11.591"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210124 14:29:18.536" starttime="20210124 14:29:11.513"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210124 14:27:17.735" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210124 14:27:17.735" starttime="20210124 14:27:17.734"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:27:17.736" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210124 14:27:17.736" starttime="20210124 14:27:17.735"></status>
</kw>
<status status="PASS" endtime="20210124 14:27:17.736" starttime="20210124 14:27:17.733"></status>
</kw>
<msg timestamp="20210124 14:27:17.737" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210124 14:27:17.737" starttime="20210124 14:27:17.733"></status>
</kw>
<status status="PASS" endtime="20210124 14:27:17.737" starttime="20210124 14:27:17.732"></status>
</kw>
<msg timestamp="20210124 14:27:17.737" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210124 14:27:17.737" starttime="20210124 14:27:17.731"></status>
</kw>
<msg timestamp="20210124 14:27:17.738" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210124 14:27:17.738" starttime="20210124 14:27:17.730"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210124 14:27:17.739" level="INFO">${random} = 93161</msg>
<status status="PASS" endtime="20210124 14:27:17.739" starttime="20210124 14:27:17.738"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:27:17.746" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-93161 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:27:23.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:27:23.820" level="INFO">${output} = 2021-01-24 14:27:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:27:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210124 14:27:23.820" starttime="20210124 14:27:17.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:27:23.822" level="INFO">2021-01-24 14:27:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:27:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-24 14:27:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-24 14:27:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-24 14:27:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4EF5FBA67F7C-&gt;5e115a4e-03a3-42ce-9d19-d3ba878708c6
2021-01-24 14:27:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210124 14:27:23.823" starttime="20210124 14:27:23.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:27:23.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:27:23.823" starttime="20210124 14:27:23.823"></status>
</kw>
<status status="PASS" endtime="20210124 14:27:23.824" starttime="20210124 14:27:17.741"></status>
</kw>
<msg timestamp="20210124 14:27:23.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:27:23.825" starttime="20210124 14:27:17.741"></status>
</kw>
<msg timestamp="20210124 14:27:23.825" level="INFO">${result} = 2021-01-24 14:27:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:27:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210124 14:27:23.825" starttime="20210124 14:27:17.739"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:27:23.832" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:27:26.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:27:26.420" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-24 14:26 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-24 14:27 o3fs://bucket1.volume1.om/ozone-93161
dr...</msg>
<status status="PASS" endtime="20210124 14:27:26.420" starttime="20210124 14:27:23.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:27:26.422" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-24 14:26 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-24 14:27 o3fs://bucket1.volume1.om/ozone-93161
drwxrwxrwx   - hadoop hadoop          0 2021-01-24 14:26 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210124 14:27:26.422" starttime="20210124 14:27:26.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:27:26.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:27:26.423" starttime="20210124 14:27:26.422"></status>
</kw>
<status status="PASS" endtime="20210124 14:27:26.423" starttime="20210124 14:27:23.827"></status>
</kw>
<msg timestamp="20210124 14:27:26.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:27:26.424" starttime="20210124 14:27:23.826"></status>
</kw>
<msg timestamp="20210124 14:27:26.424" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-24 14:26 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-24 14:27 o3fs://bucket1.volume1.om/ozone-93161
dr...</msg>
<status status="PASS" endtime="20210124 14:27:26.424" starttime="20210124 14:27:23.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:27:26.425" starttime="20210124 14:27:26.425"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210124 14:27:26.426" critical="yes" starttime="20210124 14:27:17.729"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210124 14:27:26.427" starttime="20210124 14:27:17.664"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:27:11.421" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:27:11.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:27:11.427" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210124 14:27:11.427" starttime="20210124 14:27:11.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:27:11.429" level="INFO">rm</msg>
<status status="PASS" endtime="20210124 14:27:11.429" starttime="20210124 14:27:11.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:27:11.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:27:11.430" starttime="20210124 14:27:11.429"></status>
</kw>
<status status="PASS" endtime="20210124 14:27:11.430" starttime="20210124 14:27:11.416"></status>
</kw>
<msg timestamp="20210124 14:27:11.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:27:11.431" starttime="20210124 14:27:11.415"></status>
</kw>
<msg timestamp="20210124 14:27:11.432" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210124 14:27:11.432" starttime="20210124 14:27:11.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:27:11.434" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:27:11.434" starttime="20210124 14:27:11.432"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:27:11.439" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:27:11.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:27:11.456" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:27:11.456" starttime="20210124 14:27:11.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:27:11.458" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:27:11.458" starttime="20210124 14:27:11.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:27:11.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:27:11.458" starttime="20210124 14:27:11.458"></status>
</kw>
<status status="PASS" endtime="20210124 14:27:11.459" starttime="20210124 14:27:11.436"></status>
</kw>
<msg timestamp="20210124 14:27:11.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:27:11.459" starttime="20210124 14:27:11.435"></status>
</kw>
<status status="PASS" endtime="20210124 14:27:11.459" starttime="20210124 14:27:11.435"></status>
</kw>
<status status="PASS" endtime="20210124 14:27:11.459" starttime="20210124 14:27:11.434"></status>
</kw>
<status status="PASS" endtime="20210124 14:27:11.460" starttime="20210124 14:27:11.414"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:27:11.460" critical="yes" starttime="20210124 14:27:11.413"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210124 14:27:11.461" starttime="20210124 14:27:11.326"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:25:44.738" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:25:44.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:25:44.742" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210124 14:25:44.742" starttime="20210124 14:25:44.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:25:44.744" level="INFO">om</msg>
<status status="PASS" endtime="20210124 14:25:44.744" starttime="20210124 14:25:44.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:25:44.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:25:44.745" starttime="20210124 14:25:44.744"></status>
</kw>
<status status="PASS" endtime="20210124 14:25:44.746" starttime="20210124 14:25:44.732"></status>
</kw>
<msg timestamp="20210124 14:25:44.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:25:44.746" starttime="20210124 14:25:44.732"></status>
</kw>
<msg timestamp="20210124 14:25:44.746" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210124 14:25:44.746" starttime="20210124 14:25:44.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:25:44.748" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:25:44.748" starttime="20210124 14:25:44.746"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:25:44.753" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:25:44.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:25:44.775" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:25:44.775" starttime="20210124 14:25:44.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:25:44.776" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:25:44.777" starttime="20210124 14:25:44.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:25:44.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:25:44.778" starttime="20210124 14:25:44.777"></status>
</kw>
<status status="PASS" endtime="20210124 14:25:44.778" starttime="20210124 14:25:44.750"></status>
</kw>
<msg timestamp="20210124 14:25:44.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:25:44.779" starttime="20210124 14:25:44.749"></status>
</kw>
<status status="PASS" endtime="20210124 14:25:44.779" starttime="20210124 14:25:44.749"></status>
</kw>
<status status="PASS" endtime="20210124 14:25:44.779" starttime="20210124 14:25:44.748"></status>
</kw>
<status status="PASS" endtime="20210124 14:25:44.780" starttime="20210124 14:25:44.730"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:25:44.780" critical="yes" starttime="20210124 14:25:44.729"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210124 14:25:44.782" starttime="20210124 14:25:44.650"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:29:25.188" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:29:25.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:29:25.196" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:29:25.196" starttime="20210124 14:29:25.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:29:25.198" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:29:25.198" starttime="20210124 14:29:25.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:29:25.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:29:25.199" starttime="20210124 14:29:25.198"></status>
</kw>
<status status="PASS" endtime="20210124 14:29:25.200" starttime="20210124 14:29:25.182"></status>
</kw>
<msg timestamp="20210124 14:29:25.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:29:25.200" starttime="20210124 14:29:25.182"></status>
</kw>
<msg timestamp="20210124 14:29:25.200" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:29:25.200" starttime="20210124 14:29:25.181"></status>
</kw>
<msg timestamp="20210124 14:29:25.200" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:29:25.200" starttime="20210124 14:29:25.181"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210124 14:29:25.211" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210124 14:29:25.211" starttime="20210124 14:29:25.211"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:29:25.212" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210124 14:29:25.212" starttime="20210124 14:29:25.211"></status>
</kw>
<status status="PASS" endtime="20210124 14:29:25.212" starttime="20210124 14:29:25.210"></status>
</kw>
<msg timestamp="20210124 14:29:25.212" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210124 14:29:25.213" starttime="20210124 14:29:25.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:29:25.214" starttime="20210124 14:29:25.213"></status>
</kw>
<msg timestamp="20210124 14:29:25.214" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210124 14:29:25.214" starttime="20210124 14:29:25.213"></status>
</kw>
<status status="PASS" endtime="20210124 14:29:25.214" starttime="20210124 14:29:25.209"></status>
</kw>
<msg timestamp="20210124 14:29:25.214" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210124 14:29:25.214" starttime="20210124 14:29:25.207"></status>
</kw>
<msg timestamp="20210124 14:29:25.215" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210124 14:29:25.215" starttime="20210124 14:29:25.201"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:29:25.219" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:30:09.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:30:09.196" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-24 14:29:27 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:29:27 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210124 14:30:09.196" starttime="20210124 14:29:25.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:30:09.198" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-24 14:29:27 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:29:27 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-24 14:29:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-24 14:29:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-24 14:29:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-535131A8EF17-&gt;5e115a4e-03a3-42ce-9d19-d3ba878708c6
2021-01-24 14:29:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-24 14:29:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-039E05DF88A2-&gt;122ffb02-f789-42e4-b4ee-eed8658bc4e4
2021-01-24 14:29:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-24 14:29:29 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-24 14:29:30 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.10:10200
2021-01-24 14:29:30 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611498570345, maxDate=1612103370345, sequenceNumber=3, masterKeyId=2))
2021-01-24 14:29:30 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c3 83 b3 a6 f3 2e 38 c3 8b e5 c6 f5 2e 40 03 48 01 5a 0d 32 38 32 35 36 32 37 31 34 38 37 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-24 14:29:30 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611498570345, maxDate=1612103370345, sequenceNumber=3, masterKeyId=2)
2021-01-24 14:29:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-24 14:29:30 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-24 14:29:31 INFO  JobSubmitter:202 - number of splits:3
2021-01-24 14:29:31 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611498290151_0003
2021-01-24 14:29:31 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c3 83 b3 a6 f3 2e 38 c3 8b e5 c6 f5 2e 40 03 48 01 5a 0d 32 38 32 35 36 32 37 31 34 38 37 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611498570345, maxDate=1612103370345, sequenceNumber=3, masterKeyId=2)]
2021-01-24 14:29:31 INFO  Configuration:2795 - resource-types.xml not found
2021-01-24 14:29:31 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-24 14:29:31 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-24 14:29:32 INFO  YarnClientImpl:329 - Submitted application application_1611498290151_0003
2021-01-24 14:29:32 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611498290151_0003/
2021-01-24 14:29:32 INFO  Job:1614 - Running job: job_1611498290151_0003
2021-01-24 14:29:42 INFO  Job:1635 - Job job_1611498290151_0003 running in uber mode : false
2021-01-24 14:29:42 INFO  Job:1642 -  map 0% reduce 0%
2021-01-24 14:29:54 INFO  Job:1642 -  map 33% reduce 0%
2021-01-24 14:29:56 INFO  Job:1642 -  map 67% reduce 0%
2021-01-24 14:29:57 INFO  Job:1642 -  map 100% reduce 0%
2021-01-24 14:30:04 INFO  Job:1642 -  map 100% reduce 100%
2021-01-24 14:30:08 INFO  Job:1653 - Job job_1611498290151_0003 completed successfully
2021-01-24 14:30:08 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101049
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=59614
		Total time spent by all reduces in occupied slots (ms)=15690
		Total time spent by all map tasks (ms)=29807
		Total time spent by all reduce tasks (ms)=7845
		Total vcore-milliseconds taken by all map tasks=29807
		Total vcore-milliseconds taken by all reduce tasks=7845
		Total megabyte-milliseconds taken by all map tasks=61044736
		Total megabyte-milliseconds taken by all reduce tasks=16066560
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1495
		CPU time spent (ms)=9940
		Physical memory (bytes) snapshot=1448644608
		Virtual memory (bytes) snapshot=14045761536
		Total committed heap usage (bytes)=1184366592
		Peak Map Physical memory (bytes)=387633152
		Peak Map Virtual memory (bytes)=3509067776
		Peak Reduce Physical memory (bytes)=313876480
		Peak Reduce Virtual memory (bytes)=3526889472
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.847 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210124 14:30:09.198" starttime="20210124 14:30:09.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:30:09.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:30:09.199" starttime="20210124 14:30:09.198"></status>
</kw>
<status status="PASS" endtime="20210124 14:30:09.199" starttime="20210124 14:29:25.216"></status>
</kw>
<msg timestamp="20210124 14:30:09.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:30:09.200" starttime="20210124 14:29:25.216"></status>
</kw>
<msg timestamp="20210124 14:30:09.202" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-24 14:29:27 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:29:27 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210124 14:30:09.202" starttime="20210124 14:29:25.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210124 14:30:09.202" starttime="20210124 14:30:09.202"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210124 14:30:09.203" critical="yes" starttime="20210124 14:29:25.180"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:30:09.211" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:30:09.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:30:09.217" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:30:09.217" starttime="20210124 14:30:09.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:30:09.219" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:30:09.219" starttime="20210124 14:30:09.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:30:09.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:30:09.220" starttime="20210124 14:30:09.219"></status>
</kw>
<status status="PASS" endtime="20210124 14:30:09.220" starttime="20210124 14:30:09.208"></status>
</kw>
<msg timestamp="20210124 14:30:09.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:30:09.221" starttime="20210124 14:30:09.207"></status>
</kw>
<msg timestamp="20210124 14:30:09.221" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:30:09.221" starttime="20210124 14:30:09.207"></status>
</kw>
<msg timestamp="20210124 14:30:09.221" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:30:09.222" starttime="20210124 14:30:09.206"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210124 14:30:09.222" level="INFO">${random} = Kyoc6P74</msg>
<status status="PASS" endtime="20210124 14:30:09.222" starttime="20210124 14:30:09.222"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210124 14:30:09.227" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210124 14:30:09.227" starttime="20210124 14:30:09.227"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:30:09.228" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210124 14:30:09.228" starttime="20210124 14:30:09.228"></status>
</kw>
<status status="PASS" endtime="20210124 14:30:09.229" starttime="20210124 14:30:09.226"></status>
</kw>
<msg timestamp="20210124 14:30:09.229" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210124 14:30:09.229" starttime="20210124 14:30:09.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:30:09.230" starttime="20210124 14:30:09.230"></status>
</kw>
<msg timestamp="20210124 14:30:09.230" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210124 14:30:09.230" starttime="20210124 14:30:09.229"></status>
</kw>
<status status="PASS" endtime="20210124 14:30:09.231" starttime="20210124 14:30:09.225"></status>
</kw>
<msg timestamp="20210124 14:30:09.231" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210124 14:30:09.231" starttime="20210124 14:30:09.224"></status>
</kw>
<msg timestamp="20210124 14:30:09.231" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210124 14:30:09.231" starttime="20210124 14:30:09.222"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210124 14:30:09.236" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210124 14:30:09.236" starttime="20210124 14:30:09.235"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:30:09.236" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210124 14:30:09.236" starttime="20210124 14:30:09.236"></status>
</kw>
<status status="PASS" endtime="20210124 14:30:09.237" starttime="20210124 14:30:09.235"></status>
</kw>
<msg timestamp="20210124 14:30:09.237" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210124 14:30:09.237" starttime="20210124 14:30:09.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210124 14:30:09.239" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210124 14:30:09.239" starttime="20210124 14:30:09.238"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:30:09.240" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210124 14:30:09.240" starttime="20210124 14:30:09.239"></status>
</kw>
<status status="PASS" endtime="20210124 14:30:09.240" starttime="20210124 14:30:09.237"></status>
</kw>
<msg timestamp="20210124 14:30:09.240" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210124 14:30:09.240" starttime="20210124 14:30:09.237"></status>
</kw>
<status status="PASS" endtime="20210124 14:30:09.241" starttime="20210124 14:30:09.233"></status>
</kw>
<msg timestamp="20210124 14:30:09.241" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210124 14:30:09.241" starttime="20210124 14:30:09.232"></status>
</kw>
<msg timestamp="20210124 14:30:09.242" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210124 14:30:09.242" starttime="20210124 14:30:09.231"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210124 14:30:09.247" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210124 14:30:09.247" starttime="20210124 14:30:09.246"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:30:09.249" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210124 14:30:09.249" starttime="20210124 14:30:09.247"></status>
</kw>
<status status="PASS" endtime="20210124 14:30:09.249" starttime="20210124 14:30:09.246"></status>
</kw>
<msg timestamp="20210124 14:30:09.249" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210124 14:30:09.249" starttime="20210124 14:30:09.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210124 14:30:09.251" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210124 14:30:09.251" starttime="20210124 14:30:09.251"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:30:09.252" level="INFO">${result} = /wordcount-Kyoc6P74.txt</msg>
<status status="PASS" endtime="20210124 14:30:09.252" starttime="20210124 14:30:09.252"></status>
</kw>
<status status="PASS" endtime="20210124 14:30:09.252" starttime="20210124 14:30:09.250"></status>
</kw>
<msg timestamp="20210124 14:30:09.253" level="INFO">${path_with_leading} = /wordcount-Kyoc6P74.txt</msg>
<status status="PASS" endtime="20210124 14:30:09.253" starttime="20210124 14:30:09.250"></status>
</kw>
<status status="PASS" endtime="20210124 14:30:09.253" starttime="20210124 14:30:09.244"></status>
</kw>
<msg timestamp="20210124 14:30:09.253" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-Kyoc6P74.txt</msg>
<status status="PASS" endtime="20210124 14:30:09.253" starttime="20210124 14:30:09.243"></status>
</kw>
<msg timestamp="20210124 14:30:09.253" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-Kyoc6P74.txt</msg>
<status status="PASS" endtime="20210124 14:30:09.254" starttime="20210124 14:30:09.242"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:30:09.259" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-Kyoc6P74.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:30:53.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:30:53.931" level="INFO">${output} = 2021-01-24 14:30:11 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-24 14:30:12 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.10:10200
20...</msg>
<status status="PASS" endtime="20210124 14:30:53.931" starttime="20210124 14:30:09.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:30:53.932" level="INFO">2021-01-24 14:30:11 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-24 14:30:12 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.10:10200
2021-01-24 14:30:12 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611498612629, maxDate=1612103412629, sequenceNumber=4, masterKeyId=2))
2021-01-24 14:30:12 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e4 cd b5 a6 f3 2e 38 e4 d5 e7 c6 f5 2e 40 04 48 01 5a 0d 32 38 32 35 36 32 37 31 34 38 37 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-24 14:30:12 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611498612629, maxDate=1612103412629, sequenceNumber=4, masterKeyId=2)
2021-01-24 14:30:12 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-24 14:30:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:30:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-24 14:30:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-24 14:30:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-24 14:30:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BB361F9406E0-&gt;5e115a4e-03a3-42ce-9d19-d3ba878708c6
2021-01-24 14:30:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-24 14:30:15 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-24 14:30:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FA0C2F6D9F59-&gt;122ffb02-f789-42e4-b4ee-eed8658bc4e4
2021-01-24 14:30:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-24 14:30:17 INFO  JobSubmitter:202 - number of splits:3
2021-01-24 14:30:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611498290151_0004
2021-01-24 14:30:18 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e4 cd b5 a6 f3 2e 38 e4 d5 e7 c6 f5 2e 40 04 48 01 5a 0d 32 38 32 35 36 32 37 31 34 38 37 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611498612629, maxDate=1612103412629, sequenceNumber=4, masterKeyId=2)]
2021-01-24 14:30:18 INFO  Configuration:2795 - resource-types.xml not found
2021-01-24 14:30:18 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-24 14:30:18 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-24 14:30:19 INFO  YarnClientImpl:329 - Submitted application application_1611498290151_0004
2021-01-24 14:30:19 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611498290151_0004/
2021-01-24 14:30:19 INFO  Job:1614 - Running job: job_1611498290151_0004
2021-01-24 14:30:29 INFO  Job:1635 - Job job_1611498290151_0004 running in uber mode : false
2021-01-24 14:30:29 INFO  Job:1642 -  map 0% reduce 0%
2021-01-24 14:30:42 INFO  Job:1642 -  map 33% reduce 0%
2021-01-24 14:30:44 INFO  Job:1642 -  map 67% reduce 0%
2021-01-24 14:30:45 INFO  Job:1642 -  map 100% reduce 0%
2021-01-24 14:30:50 INFO  Job:1642 -  map 100% reduce 100%
2021-01-24 14:30:53 INFO  Job:1653 - Job job_1611498290151_0004 completed successfully
2021-01-24 14:30:53 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163731
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=64176
		Total time spent by all reduces in occupied slots (ms)=9614
		Total time spent by all map tasks (ms)=32088
		Total time spent by all reduce tasks (ms)=4807
		Total vcore-milliseconds taken by all map tasks=32088
		Total vcore-milliseconds taken by all reduce tasks=4807
		Total megabyte-milliseconds taken by all map tasks=65716224
		Total megabyte-milliseconds taken by all reduce tasks=9844736
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=2036
		CPU time spent (ms)=10570
		Physical memory (bytes) snapshot=1579794432
		Virtual memory (bytes) snapshot=14057201664
		Total committed heap usage (bytes)=1389887488
		Peak Map Physical memory (bytes)=549068800
		Peak Map Virtual memory (bytes)=3510312960
		Peak Reduce Physical memory (bytes)=312098816
		Peak Reduce Virtual memory (bytes)=3529424896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210124 14:30:53.932" starttime="20210124 14:30:53.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:30:53.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:30:53.933" starttime="20210124 14:30:53.932"></status>
</kw>
<status status="PASS" endtime="20210124 14:30:53.933" starttime="20210124 14:30:09.256"></status>
</kw>
<msg timestamp="20210124 14:30:53.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:30:53.934" starttime="20210124 14:30:09.255"></status>
</kw>
<msg timestamp="20210124 14:30:53.934" level="INFO">${output} = 2021-01-24 14:30:11 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-24 14:30:12 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.10:10200
20...</msg>
<status status="PASS" endtime="20210124 14:30:53.934" starttime="20210124 14:30:09.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210124 14:30:53.935" starttime="20210124 14:30:53.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210124 14:30:53.935" starttime="20210124 14:30:53.935"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210124 14:30:53.936" critical="yes" starttime="20210124 14:30:09.205"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210124 14:30:53.938" starttime="20210124 14:29:25.111"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:27:33.056" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:27:33.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:27:33.057" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:27:33.058" starttime="20210124 14:27:33.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:27:33.059" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:27:33.059" starttime="20210124 14:27:33.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:27:33.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:27:33.060" starttime="20210124 14:27:33.059"></status>
</kw>
<status status="PASS" endtime="20210124 14:27:33.060" starttime="20210124 14:27:33.042"></status>
</kw>
<msg timestamp="20210124 14:27:33.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:27:33.061" starttime="20210124 14:27:33.042"></status>
</kw>
<msg timestamp="20210124 14:27:33.061" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:27:33.061" starttime="20210124 14:27:33.041"></status>
</kw>
<msg timestamp="20210124 14:27:33.062" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:27:33.062" starttime="20210124 14:27:33.041"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210124 14:27:33.070" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210124 14:27:33.070" starttime="20210124 14:27:33.069"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:27:33.070" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210124 14:27:33.070" starttime="20210124 14:27:33.070"></status>
</kw>
<status status="PASS" endtime="20210124 14:27:33.071" starttime="20210124 14:27:33.068"></status>
</kw>
<msg timestamp="20210124 14:27:33.071" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210124 14:27:33.071" starttime="20210124 14:27:33.068"></status>
</kw>
<status status="PASS" endtime="20210124 14:27:33.071" starttime="20210124 14:27:33.066"></status>
</kw>
<msg timestamp="20210124 14:27:33.071" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210124 14:27:33.071" starttime="20210124 14:27:33.064"></status>
</kw>
<msg timestamp="20210124 14:27:33.072" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210124 14:27:33.072" starttime="20210124 14:27:33.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:27:33.076" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:28:22.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:28:22.790" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-24 14:27:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:27:36 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210124 14:28:22.790" starttime="20210124 14:27:33.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:28:22.791" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-24 14:27:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:27:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-24 14:27:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-24 14:27:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-24 14:27:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4897E101E31C-&gt;5e115a4e-03a3-42ce-9d19-d3ba878708c6
2021-01-24 14:27:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-24 14:27:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-16C78B711EC1-&gt;122ffb02-f789-42e4-b4ee-eed8658bc4e4
2021-01-24 14:27:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-24 14:27:38 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-24 14:27:38 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.10:10200
2021-01-24 14:27:39 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611498459252, maxDate=1612103259252, sequenceNumber=1, masterKeyId=2))
2021-01-24 14:27:39 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 cb 9d ac a6 f3 2e 38 cb a5 de c6 f5 2e 40 01 48 01 5a 0d 32 38 32 35 36 32 37 31 34 38 37 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-24 14:27:39 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611498459252, maxDate=1612103259252, sequenceNumber=1, masterKeyId=2)
2021-01-24 14:27:39 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-24 14:27:42 INFO  JobSubmitter:202 - number of splits:3
2021-01-24 14:27:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611498290151_0001
2021-01-24 14:27:42 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 cb 9d ac a6 f3 2e 38 cb a5 de c6 f5 2e 40 01 48 01 5a 0d 32 38 32 35 36 32 37 31 34 38 37 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611498459252, maxDate=1612103259252, sequenceNumber=1, masterKeyId=2)]
2021-01-24 14:27:43 INFO  Configuration:2795 - resource-types.xml not found
2021-01-24 14:27:43 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-24 14:27:43 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-24 14:27:45 INFO  YarnClientImpl:329 - Submitted application application_1611498290151_0001
2021-01-24 14:27:45 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611498290151_0001/
2021-01-24 14:27:45 INFO  Job:1614 - Running job: job_1611498290151_0001
2021-01-24 14:27:58 INFO  Job:1635 - Job job_1611498290151_0001 running in uber mode : false
2021-01-24 14:27:58 INFO  Job:1642 -  map 0% reduce 0%
2021-01-24 14:28:12 INFO  Job:1642 -  map 33% reduce 0%
2021-01-24 14:28:14 INFO  Job:1642 -  map 67% reduce 0%
2021-01-24 14:28:15 INFO  Job:1642 -  map 100% reduce 0%
2021-01-24 14:28:20 INFO  Job:1642 -  map 100% reduce 100%
2021-01-24 14:28:21 INFO  Job:1653 - Job job_1611498290151_0001 completed successfully
2021-01-24 14:28:22 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101277
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=67180
		Total time spent by all reduces in occupied slots (ms)=10888
		Total time spent by all map tasks (ms)=33590
		Total time spent by all reduce tasks (ms)=5444
		Total vcore-milliseconds taken by all map tasks=33590
		Total vcore-milliseconds taken by all reduce tasks=5444
		Total megabyte-milliseconds taken by all map tasks=68792320
		Total megabyte-milliseconds taken by all reduce tasks=11149312
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1815
		CPU time spent (ms)=9920
		Physical memory (bytes) snapshot=1595191296
		Virtual memory (bytes) snapshot=14049898496
		Total committed heap usage (bytes)=1427111936
		Peak Map Physical memory (bytes)=550825984
		Peak Map Virtual memory (bytes)=3508850688
		Peak Reduce Physical memory (bytes)=318345216
		Peak Reduce Virtual memory (bytes)=3524108288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 44.082 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210124 14:28:22.791" starttime="20210124 14:28:22.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:28:22.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:28:22.792" starttime="20210124 14:28:22.792"></status>
</kw>
<status status="PASS" endtime="20210124 14:28:22.793" starttime="20210124 14:27:33.073"></status>
</kw>
<msg timestamp="20210124 14:28:22.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:28:22.793" starttime="20210124 14:27:33.073"></status>
</kw>
<msg timestamp="20210124 14:28:22.793" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-24 14:27:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:27:36 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210124 14:28:22.793" starttime="20210124 14:27:33.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210124 14:28:22.794" starttime="20210124 14:28:22.794"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210124 14:28:22.794" critical="yes" starttime="20210124 14:27:33.040"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:28:22.803" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:28:22.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:28:22.811" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:28:22.811" starttime="20210124 14:28:22.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:28:22.812" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:28:22.812" starttime="20210124 14:28:22.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:28:22.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:28:22.813" starttime="20210124 14:28:22.812"></status>
</kw>
<status status="PASS" endtime="20210124 14:28:22.813" starttime="20210124 14:28:22.797"></status>
</kw>
<msg timestamp="20210124 14:28:22.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:28:22.814" starttime="20210124 14:28:22.797"></status>
</kw>
<msg timestamp="20210124 14:28:22.814" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:28:22.814" starttime="20210124 14:28:22.797"></status>
</kw>
<msg timestamp="20210124 14:28:22.814" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210124 14:28:22.814" starttime="20210124 14:28:22.796"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210124 14:28:22.815" level="INFO">${random} = Co8XLexr</msg>
<status status="PASS" endtime="20210124 14:28:22.815" starttime="20210124 14:28:22.814"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210124 14:28:22.819" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210124 14:28:22.820" starttime="20210124 14:28:22.819"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:28:22.820" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210124 14:28:22.820" starttime="20210124 14:28:22.820"></status>
</kw>
<status status="PASS" endtime="20210124 14:28:22.820" starttime="20210124 14:28:22.818"></status>
</kw>
<msg timestamp="20210124 14:28:22.821" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210124 14:28:22.821" starttime="20210124 14:28:22.818"></status>
</kw>
<status status="PASS" endtime="20210124 14:28:22.821" starttime="20210124 14:28:22.817"></status>
</kw>
<msg timestamp="20210124 14:28:22.821" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210124 14:28:22.821" starttime="20210124 14:28:22.816"></status>
</kw>
<msg timestamp="20210124 14:28:22.821" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210124 14:28:22.821" starttime="20210124 14:28:22.815"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210124 14:28:22.825" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210124 14:28:22.825" starttime="20210124 14:28:22.825"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:28:22.826" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210124 14:28:22.826" starttime="20210124 14:28:22.826"></status>
</kw>
<status status="PASS" endtime="20210124 14:28:22.826" starttime="20210124 14:28:22.824"></status>
</kw>
<msg timestamp="20210124 14:28:22.826" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210124 14:28:22.826" starttime="20210124 14:28:22.824"></status>
</kw>
<status status="PASS" endtime="20210124 14:28:22.827" starttime="20210124 14:28:22.823"></status>
</kw>
<msg timestamp="20210124 14:28:22.827" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210124 14:28:22.827" starttime="20210124 14:28:22.822"></status>
</kw>
<msg timestamp="20210124 14:28:22.827" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210124 14:28:22.827" starttime="20210124 14:28:22.822"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210124 14:28:22.831" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210124 14:28:22.831" starttime="20210124 14:28:22.830"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:28:22.832" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210124 14:28:22.832" starttime="20210124 14:28:22.831"></status>
</kw>
<status status="PASS" endtime="20210124 14:28:22.832" starttime="20210124 14:28:22.830"></status>
</kw>
<msg timestamp="20210124 14:28:22.832" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210124 14:28:22.832" starttime="20210124 14:28:22.829"></status>
</kw>
<status status="PASS" endtime="20210124 14:28:22.833" starttime="20210124 14:28:22.829"></status>
</kw>
<msg timestamp="20210124 14:28:22.833" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-Co8XLexr.txt</msg>
<status status="PASS" endtime="20210124 14:28:22.833" starttime="20210124 14:28:22.828"></status>
</kw>
<msg timestamp="20210124 14:28:22.833" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-Co8XLexr.txt</msg>
<status status="PASS" endtime="20210124 14:28:22.833" starttime="20210124 14:28:22.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:28:22.838" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-Co8XLexr.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:29:04.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:29:04.247" level="INFO">${output} = 2021-01-24 14:28:25 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-24 14:28:25 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.10:10200
20...</msg>
<status status="PASS" endtime="20210124 14:29:04.247" starttime="20210124 14:28:22.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:29:04.248" level="INFO">2021-01-24 14:28:25 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-24 14:28:25 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.10:10200
2021-01-24 14:28:26 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611498506096, maxDate=1612103306096, sequenceNumber=2, masterKeyId=2))
2021-01-24 14:28:26 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d3 8d af a6 f3 2e 38 d3 95 e1 c6 f5 2e 40 02 48 01 5a 0d 32 38 32 35 36 32 37 31 34 38 37 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-24 14:28:26 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611498506096, maxDate=1612103306096, sequenceNumber=2, masterKeyId=2)
2021-01-24 14:28:26 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-24 14:28:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-24 14:28:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-24 14:28:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-24 14:28:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-24 14:28:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-03FE089D917D-&gt;122ffb02-f789-42e4-b4ee-eed8658bc4e4
2021-01-24 14:28:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-24 14:28:28 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-24 14:28:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D6AD66BA00CB-&gt;5e115a4e-03a3-42ce-9d19-d3ba878708c6
2021-01-24 14:28:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-24 14:28:29 INFO  JobSubmitter:202 - number of splits:3
2021-01-24 14:28:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611498290151_0002
2021-01-24 14:28:29 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d3 8d af a6 f3 2e 38 d3 95 e1 c6 f5 2e 40 02 48 01 5a 0d 32 38 32 35 36 32 37 31 34 38 37 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611498506096, maxDate=1612103306096, sequenceNumber=2, masterKeyId=2)]
2021-01-24 14:28:29 INFO  Configuration:2795 - resource-types.xml not found
2021-01-24 14:28:29 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-24 14:28:29 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-24 14:28:30 INFO  YarnClientImpl:329 - Submitted application application_1611498290151_0002
2021-01-24 14:28:30 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611498290151_0002/
2021-01-24 14:28:30 INFO  Job:1614 - Running job: job_1611498290151_0002
2021-01-24 14:28:40 INFO  Job:1635 - Job job_1611498290151_0002 running in uber mode : false
2021-01-24 14:28:40 INFO  Job:1642 -  map 0% reduce 0%
2021-01-24 14:28:55 INFO  Job:1642 -  map 33% reduce 0%
2021-01-24 14:28:56 INFO  Job:1642 -  map 100% reduce 0%
2021-01-24 14:29:02 INFO  Job:1642 -  map 100% reduce 100%
2021-01-24 14:29:03 INFO  Job:1653 - Job job_1611498290151_0002 completed successfully
2021-01-24 14:29:03 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163815
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=70170
		Total time spent by all reduces in occupied slots (ms)=9806
		Total time spent by all map tasks (ms)=35085
		Total time spent by all reduce tasks (ms)=4903
		Total vcore-milliseconds taken by all map tasks=35085
		Total vcore-milliseconds taken by all reduce tasks=4903
		Total megabyte-milliseconds taken by all map tasks=71854080
		Total megabyte-milliseconds taken by all reduce tasks=10041344
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1431
		CPU time spent (ms)=10170
		Physical memory (bytes) snapshot=1483354112
		Virtual memory (bytes) snapshot=14055858176
		Total committed heap usage (bytes)=1242562560
		Peak Map Physical memory (bytes)=388640768
		Peak Map Virtual memory (bytes)=3511918592
		Peak Reduce Physical memory (bytes)=321380352
		Peak Reduce Virtual memory (bytes)=3527553024
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210124 14:29:04.248" starttime="20210124 14:29:04.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:29:04.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:29:04.249" starttime="20210124 14:29:04.249"></status>
</kw>
<status status="PASS" endtime="20210124 14:29:04.249" starttime="20210124 14:28:22.834"></status>
</kw>
<msg timestamp="20210124 14:29:04.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:29:04.250" starttime="20210124 14:28:22.834"></status>
</kw>
<msg timestamp="20210124 14:29:04.250" level="INFO">${output} = 2021-01-24 14:28:25 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-24 14:28:25 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.10:10200
20...</msg>
<status status="PASS" endtime="20210124 14:29:04.250" starttime="20210124 14:28:22.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210124 14:29:04.251" starttime="20210124 14:29:04.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210124 14:29:04.251" starttime="20210124 14:29:04.251"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210124 14:29:04.252" critical="yes" starttime="20210124 14:28:22.795"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210124 14:29:04.253" starttime="20210124 14:27:32.961"></status>
</suite>
<status status="PASS" elapsedtime="254830" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
