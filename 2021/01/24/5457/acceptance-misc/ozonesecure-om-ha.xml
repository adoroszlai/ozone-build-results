<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210124 14:39:37.264" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:34:14.966" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:34:31.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:34:31.375" level="INFO">${output} = 2021-01-24 14:34:17,207 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-24 14:34:17,415 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210124 14:34:31.375" starttime="20210124 14:34:14.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:34:31.376" level="INFO">2021-01-24 14:34:17,207 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-24 14:34:17,415 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-24 14:34:17,415 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-24 14:34:17,621 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-24 14:34:17,635 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:18,652 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:19,652 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:20,348 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-24 14:34:20,653 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:21,221 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-24 14:34:21,656 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:22,660 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:23,667 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:24,667 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:25,669 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:25,735 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-24 14:34:26,180 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-24 14:34:26,183 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-143B130054BE-&gt;bc4a3dd1-7c06-481c-8992-856849d01630
2021-01-24 14:34:26,185 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-24 14:34:26,670 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:27,670 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:28,675 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:29,679 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:30,680 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-24 14:34:30,845 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=8106.017466, max=8106.017466, mean=8106.017466, stddev=0.0, median=8106.017466, p75=8106.017466, p95=8106.017466, p98=8106.017466, p99=8106.017466, p999=8106.017466, mean_rate=0.1100764203765226, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-24 14:34:30,845 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 13
2021-01-24 14:34:30,846 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-24 14:34:30,846 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210124 14:34:31.377" starttime="20210124 14:34:31.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:34:31.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:34:31.377" starttime="20210124 14:34:31.377"></status>
</kw>
<status status="PASS" endtime="20210124 14:34:31.393" starttime="20210124 14:34:14.961"></status>
</kw>
<msg timestamp="20210124 14:34:31.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:34:31.394" starttime="20210124 14:34:14.961"></status>
</kw>
<msg timestamp="20210124 14:34:31.394" level="INFO">${result} = 2021-01-24 14:34:17,207 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-24 14:34:17,415 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210124 14:34:31.394" starttime="20210124 14:34:14.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210124 14:34:31.395" starttime="20210124 14:34:31.395"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210124 14:34:31.396" critical="yes" starttime="20210124 14:34:14.959"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:34:31.416" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:34:37.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:34:37.259" level="INFO">${output} = 2021-01-24 14:34:33,761 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-24 14:34:33,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210124 14:34:37.259" starttime="20210124 14:34:31.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:34:37.261" level="INFO">2021-01-24 14:34:33,761 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-24 14:34:33,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-24 14:34:33,950 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-24 14:34:34,138 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-01-24 14:34:34,158 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:35,161 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:36,162 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:37,163 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-24 14:34:37,191 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=311.289425, max=311.289425, mean=311.289425, stddev=0.0, median=311.289425, p75=311.289425, p95=311.289425, p98=311.289425, p99=311.289425, p999=311.289425, mean_rate=0.9066940649786726, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-24 14:34:37,191 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-01-24 14:34:37,193 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-24 14:34:37,193 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210124 14:34:37.261" starttime="20210124 14:34:37.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:34:37.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:34:37.261" starttime="20210124 14:34:37.261"></status>
</kw>
<status status="PASS" endtime="20210124 14:34:37.262" starttime="20210124 14:34:31.401"></status>
</kw>
<msg timestamp="20210124 14:34:37.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:34:37.262" starttime="20210124 14:34:31.401"></status>
</kw>
<msg timestamp="20210124 14:34:37.263" level="INFO">${result} = 2021-01-24 14:34:33,761 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-24 14:34:33,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210124 14:34:37.263" starttime="20210124 14:34:31.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210124 14:34:37.263" starttime="20210124 14:34:37.263"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210124 14:34:37.264" critical="yes" starttime="20210124 14:34:31.399"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:34:37.270" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:34:43.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:34:43.175" level="INFO">${output} = 2021-01-24 14:34:39,553 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-24 14:34:39,700 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210124 14:34:43.175" starttime="20210124 14:34:37.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:34:43.176" level="INFO">2021-01-24 14:34:39,553 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-24 14:34:39,700 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-24 14:34:39,700 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-24 14:34:40,018 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-01-24 14:34:40,044 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:41,054 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:42,057 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:43,057 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-24 14:34:43,157 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=107.652931, max=107.652931, mean=107.652931, stddev=0.0, median=107.652931, p75=107.652931, p95=107.652931, p98=107.652931, p99=107.652931, p999=107.652931, mean_rate=0.8254522843126137, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-24 14:34:43,159 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-01-24 14:34:43,160 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-24 14:34:43,161 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210124 14:34:43.177" starttime="20210124 14:34:43.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:34:43.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:34:43.177" starttime="20210124 14:34:43.177"></status>
</kw>
<status status="PASS" endtime="20210124 14:34:43.178" starttime="20210124 14:34:37.267"></status>
</kw>
<msg timestamp="20210124 14:34:43.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:34:43.178" starttime="20210124 14:34:37.266"></status>
</kw>
<msg timestamp="20210124 14:34:43.178" level="INFO">${result} = 2021-01-24 14:34:39,553 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-24 14:34:39,700 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210124 14:34:43.178" starttime="20210124 14:34:37.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210124 14:34:43.179" starttime="20210124 14:34:43.178"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210124 14:34:43.179" critical="yes" starttime="20210124 14:34:37.264"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210124 14:34:43.181" starttime="20210124 14:34:14.939"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:34:43.196" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:34:51.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:34:51.850" level="INFO">${output} = 2021-01-24 14:34:45,586 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-24 14:34:45,843 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210124 14:34:51.850" starttime="20210124 14:34:43.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:34:51.851" level="INFO">2021-01-24 14:34:45,586 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-24 14:34:45,843 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-24 14:34:45,843 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-24 14:34:46,069 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-24 14:34:46,088 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:47,093 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:48,094 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:49,097 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:49,323 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-24 14:34:50,097 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-24 14:34:51,098 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-24 14:34:51,448 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=99.353018, max=99.353018, mean=99.353018, stddev=0.0, median=99.353018, p75=99.353018, p95=99.353018, p98=99.353018, p99=99.353018, p999=99.353018, mean_rate=0.9630425627109602, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-24 14:34:51,448 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-01-24 14:34:51,450 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-24 14:34:51,450 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210124 14:34:51.851" starttime="20210124 14:34:51.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:34:51.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:34:51.853" starttime="20210124 14:34:51.851"></status>
</kw>
<status status="PASS" endtime="20210124 14:34:51.853" starttime="20210124 14:34:43.193"></status>
</kw>
<msg timestamp="20210124 14:34:51.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:34:51.854" starttime="20210124 14:34:43.192"></status>
</kw>
<msg timestamp="20210124 14:34:51.854" level="INFO">${result} = 2021-01-24 14:34:45,586 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-24 14:34:45,843 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210124 14:34:51.854" starttime="20210124 14:34:43.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210124 14:34:51.855" starttime="20210124 14:34:51.854"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210124 14:34:51.855" critical="yes" starttime="20210124 14:34:43.190"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210124 14:34:51.856" starttime="20210124 14:34:43.185"></status>
</suite>
<status status="PASS" endtime="20210124 14:34:51.862" starttime="20210124 14:34:14.905"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:34:07.793" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:34:07.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:34:07.796" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:34:07.796" starttime="20210124 14:34:07.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:34:07.798" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:34:07.798" starttime="20210124 14:34:07.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:34:07.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:34:07.798" starttime="20210124 14:34:07.798"></status>
</kw>
<status status="PASS" endtime="20210124 14:34:07.799" starttime="20210124 14:34:07.787"></status>
</kw>
<msg timestamp="20210124 14:34:07.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:34:07.799" starttime="20210124 14:34:07.787"></status>
</kw>
<msg timestamp="20210124 14:34:07.799" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:34:07.799" starttime="20210124 14:34:07.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:34:07.800" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:34:07.800" starttime="20210124 14:34:07.800"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:34:07.806" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:34:07.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:34:07.825" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:34:07.825" starttime="20210124 14:34:07.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:34:07.826" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:34:07.826" starttime="20210124 14:34:07.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:34:07.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:34:07.827" starttime="20210124 14:34:07.826"></status>
</kw>
<status status="PASS" endtime="20210124 14:34:07.827" starttime="20210124 14:34:07.802"></status>
</kw>
<msg timestamp="20210124 14:34:07.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:34:07.827" starttime="20210124 14:34:07.802"></status>
</kw>
<status status="PASS" endtime="20210124 14:34:07.828" starttime="20210124 14:34:07.801"></status>
</kw>
<status status="PASS" endtime="20210124 14:34:07.828" starttime="20210124 14:34:07.801"></status>
</kw>
<status status="PASS" endtime="20210124 14:34:07.828" starttime="20210124 14:34:07.785"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:34:07.828" critical="yes" starttime="20210124 14:34:07.784"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210124 14:34:07.829" starttime="20210124 14:34:07.702"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210124 14:34:58.776" level="INFO">${random} = 02425</msg>
<status status="PASS" endtime="20210124 14:34:58.776" starttime="20210124 14:34:58.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210124 14:34:58.777" level="INFO">${source} = 02425-source</msg>
<status status="PASS" endtime="20210124 14:34:58.778" starttime="20210124 14:34:58.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210124 14:34:58.779" level="INFO">${target} = 02425-target</msg>
<status status="PASS" endtime="20210124 14:34:58.780" starttime="20210124 14:34:58.778"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:34:58.786" level="INFO">Running command 'ozone sh volume create 02425-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:35:03.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:35:03.241" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:35:03.242" starttime="20210124 14:34:58.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:35:03.245" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:35:03.245" starttime="20210124 14:35:03.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:35:03.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:35:03.246" starttime="20210124 14:35:03.246"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:03.247" starttime="20210124 14:34:58.781"></status>
</kw>
<msg timestamp="20210124 14:35:03.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:35:03.247" starttime="20210124 14:34:58.780"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:03.248" starttime="20210124 14:34:58.780"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:35:03.254" level="INFO">Running command 'ozone sh volume create 02425-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:35:07.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:35:07.751" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:35:07.751" starttime="20210124 14:35:03.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:35:07.752" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:35:07.752" starttime="20210124 14:35:07.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:35:07.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:35:07.753" starttime="20210124 14:35:07.752"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:07.753" starttime="20210124 14:35:03.250"></status>
</kw>
<msg timestamp="20210124 14:35:07.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:35:07.753" starttime="20210124 14:35:03.249"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:07.754" starttime="20210124 14:35:03.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:35:07.758" level="INFO">Running command 'ozone sh bucket create 02425-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:35:12.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:35:12.302" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:35:12.302" starttime="20210124 14:35:07.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:35:12.304" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:35:12.304" starttime="20210124 14:35:12.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:35:12.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:35:12.305" starttime="20210124 14:35:12.305"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:12.306" starttime="20210124 14:35:07.756"></status>
</kw>
<msg timestamp="20210124 14:35:12.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:35:12.306" starttime="20210124 14:35:07.755"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:12.307" starttime="20210124 14:35:07.755"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:35:12.312" level="INFO">Running command 'ozone sh key put 02425-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:35:20.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:35:20.650" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:35:20.650" starttime="20210124 14:35:12.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:35:20.651" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:35:20.651" starttime="20210124 14:35:20.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:35:20.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:35:20.652" starttime="20210124 14:35:20.652"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:20.653" starttime="20210124 14:35:12.309"></status>
</kw>
<msg timestamp="20210124 14:35:20.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:35:20.653" starttime="20210124 14:35:12.308"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:20.653" starttime="20210124 14:35:12.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:35:20.658" level="INFO">Running command 'ozone sh bucket create 02425-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:35:26.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:35:26.214" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:35:26.214" starttime="20210124 14:35:20.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:35:26.215" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:35:26.215" starttime="20210124 14:35:26.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:35:26.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:35:26.216" starttime="20210124 14:35:26.216"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:26.217" starttime="20210124 14:35:20.654"></status>
</kw>
<msg timestamp="20210124 14:35:26.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:35:26.217" starttime="20210124 14:35:20.654"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:26.218" starttime="20210124 14:35:20.653"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:35:26.223" level="INFO">Running command 'ozone sh bucket link 02425-source/readable-bucket 02425-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:35:31.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:35:31.513" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:35:31.513" starttime="20210124 14:35:26.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:35:31.514" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:35:31.514" starttime="20210124 14:35:31.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:35:31.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:35:31.515" starttime="20210124 14:35:31.515"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:31.515" starttime="20210124 14:35:26.220"></status>
</kw>
<msg timestamp="20210124 14:35:31.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:35:31.516" starttime="20210124 14:35:26.219"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:31.516" starttime="20210124 14:35:26.218"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:35:31.520" level="INFO">Running command 'ozone sh bucket link 02425-source/readable-bucket 02425-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:35:36.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:35:36.660" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:35:36.660" starttime="20210124 14:35:31.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:35:36.661" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:35:36.662" starttime="20210124 14:35:36.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:35:36.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:35:36.662" starttime="20210124 14:35:36.662"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:36.663" starttime="20210124 14:35:31.517"></status>
</kw>
<msg timestamp="20210124 14:35:36.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:35:36.663" starttime="20210124 14:35:31.517"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:36.663" starttime="20210124 14:35:31.516"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:35:36.668" level="INFO">Running command 'ozone sh bucket link 02425-source/unreadable-bucket 02425-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:35:41.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:35:41.693" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:35:41.693" starttime="20210124 14:35:36.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:35:41.694" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:35:41.694" starttime="20210124 14:35:41.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:35:41.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:35:41.695" starttime="20210124 14:35:41.694"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:41.695" starttime="20210124 14:35:36.664"></status>
</kw>
<msg timestamp="20210124 14:35:41.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:35:41.695" starttime="20210124 14:35:36.664"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:41.696" starttime="20210124 14:35:36.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:35:41.700" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 02425-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:35:46.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:35:46.539" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:35:46.540" starttime="20210124 14:35:41.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:35:46.541" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:35:46.541" starttime="20210124 14:35:46.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:35:46.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:35:46.542" starttime="20210124 14:35:46.541"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:46.542" starttime="20210124 14:35:41.697"></status>
</kw>
<msg timestamp="20210124 14:35:46.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:35:46.543" starttime="20210124 14:35:41.697"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:46.543" starttime="20210124 14:35:41.696"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:35:46.556" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 02425-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:35:51.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:35:51.532" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:35:51.532" starttime="20210124 14:35:46.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:35:51.533" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:35:51.533" starttime="20210124 14:35:51.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:35:51.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:35:51.534" starttime="20210124 14:35:51.533"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:51.534" starttime="20210124 14:35:46.544"></status>
</kw>
<msg timestamp="20210124 14:35:51.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:35:51.534" starttime="20210124 14:35:46.544"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:51.535" starttime="20210124 14:35:46.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:35:51.539" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 02425-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:35:56.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:35:56.138" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:35:56.138" starttime="20210124 14:35:51.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:35:56.139" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:35:56.139" starttime="20210124 14:35:56.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:35:56.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:35:56.140" starttime="20210124 14:35:56.139"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:56.140" starttime="20210124 14:35:51.536"></status>
</kw>
<msg timestamp="20210124 14:35:56.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:35:56.140" starttime="20210124 14:35:51.536"></status>
</kw>
<status status="PASS" endtime="20210124 14:35:56.140" starttime="20210124 14:35:51.535"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:35:56.149" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 02425-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:00.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:00.796" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:36:00.797" starttime="20210124 14:35:56.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:00.798" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:36:00.798" starttime="20210124 14:36:00.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:00.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:00.799" starttime="20210124 14:36:00.798"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:00.799" starttime="20210124 14:35:56.141"></status>
</kw>
<msg timestamp="20210124 14:36:00.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:00.800" starttime="20210124 14:35:56.141"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:00.800" starttime="20210124 14:35:56.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:00.805" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 02425-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:05.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:05.380" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:36:05.380" starttime="20210124 14:36:00.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:05.381" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:36:05.381" starttime="20210124 14:36:05.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:05.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:05.382" starttime="20210124 14:36:05.382"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:05.382" starttime="20210124 14:36:00.802"></status>
</kw>
<msg timestamp="20210124 14:36:05.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:05.383" starttime="20210124 14:36:00.801"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:05.383" starttime="20210124 14:36:00.800"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:05.383" starttime="20210124 14:35:07.754"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:05.383" starttime="20210124 14:35:07.754"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:05.384" starttime="20210124 14:34:58.775"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:05.390" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:05.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:05.393" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:36:05.393" starttime="20210124 14:36:05.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:05.394" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:36:05.395" starttime="20210124 14:36:05.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:05.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:05.395" starttime="20210124 14:36:05.395"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:05.396" starttime="20210124 14:36:05.387"></status>
</kw>
<msg timestamp="20210124 14:36:05.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:05.396" starttime="20210124 14:36:05.387"></status>
</kw>
<msg timestamp="20210124 14:36:05.396" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:36:05.396" starttime="20210124 14:36:05.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:36:05.398" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:36:05.398" starttime="20210124 14:36:05.396"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:05.403" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:05.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:05.421" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:05.421" starttime="20210124 14:36:05.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:05.423" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:05.424" starttime="20210124 14:36:05.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:05.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:05.424" starttime="20210124 14:36:05.424"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:05.425" starttime="20210124 14:36:05.400"></status>
</kw>
<msg timestamp="20210124 14:36:05.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:05.425" starttime="20210124 14:36:05.399"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:05.425" starttime="20210124 14:36:05.399"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:05.425" starttime="20210124 14:36:05.398"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:05.426" starttime="20210124 14:36:05.386"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:05.426" starttime="20210124 14:36:05.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:05.431" level="INFO">Running command 'ozone sh bucket link 02425-source/no-such-bucket 02425-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:09.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:09.565" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:09.565" starttime="20210124 14:36:05.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:09.566" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:09.567" starttime="20210124 14:36:09.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:09.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:09.572" starttime="20210124 14:36:09.567"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:09.572" starttime="20210124 14:36:05.428"></status>
</kw>
<msg timestamp="20210124 14:36:09.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:09.572" starttime="20210124 14:36:05.427"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:09.573" starttime="20210124 14:36:05.426"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:09.576" level="INFO">Running command 'ozone sh key list 02425-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:14.027" level="INFO">${rc} = 255</msg>
<msg timestamp="20210124 14:36:14.027" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210124 14:36:14.027" starttime="20210124 14:36:09.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:14.028" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210124 14:36:14.028" starttime="20210124 14:36:14.028"></status>
</kw>
<msg timestamp="20210124 14:36:14.029" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210124 14:36:14.029" starttime="20210124 14:36:09.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210124 14:36:14.030" starttime="20210124 14:36:14.029"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:36:14.030" critical="yes" starttime="20210124 14:36:05.384"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:14.038" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:14.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:14.041" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:36:14.042" starttime="20210124 14:36:14.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:14.043" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:36:14.043" starttime="20210124 14:36:14.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:14.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:14.045" starttime="20210124 14:36:14.044"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:14.045" starttime="20210124 14:36:14.035"></status>
</kw>
<msg timestamp="20210124 14:36:14.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:14.045" starttime="20210124 14:36:14.035"></status>
</kw>
<msg timestamp="20210124 14:36:14.046" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:36:14.046" starttime="20210124 14:36:14.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:36:14.048" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:36:14.048" starttime="20210124 14:36:14.047"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:14.057" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:14.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:14.075" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:14.075" starttime="20210124 14:36:14.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:14.077" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:14.077" starttime="20210124 14:36:14.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:14.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:14.078" starttime="20210124 14:36:14.077"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:14.078" starttime="20210124 14:36:14.050"></status>
</kw>
<msg timestamp="20210124 14:36:14.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:14.078" starttime="20210124 14:36:14.050"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:14.079" starttime="20210124 14:36:14.049"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:14.080" starttime="20210124 14:36:14.048"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:14.080" starttime="20210124 14:36:14.034"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:14.080" starttime="20210124 14:36:14.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:14.085" level="INFO">Running command 'ozone sh bucket link 02425-source/bucket1 02425-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:18.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:18.971" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:18.972" starttime="20210124 14:36:14.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:18.973" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:18.973" starttime="20210124 14:36:18.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:18.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:18.975" starttime="20210124 14:36:18.973"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:18.976" starttime="20210124 14:36:14.081"></status>
</kw>
<msg timestamp="20210124 14:36:18.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:18.977" starttime="20210124 14:36:14.081"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:18.977" starttime="20210124 14:36:14.080"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:18.986" level="INFO">Running command 'ozone sh bucket create 02425-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:23.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:23.967" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:23.967" starttime="20210124 14:36:18.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:23.969" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:23.969" starttime="20210124 14:36:23.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:23.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:23.970" starttime="20210124 14:36:23.969"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:23.970" starttime="20210124 14:36:18.979"></status>
</kw>
<msg timestamp="20210124 14:36:23.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:23.971" starttime="20210124 14:36:18.978"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:23.971" starttime="20210124 14:36:18.978"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:23.977" level="INFO">Running command 'ozone sh key put 02425-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:31.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:31.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:31.556" starttime="20210124 14:36:23.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:31.557" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:31.557" starttime="20210124 14:36:31.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:31.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:31.558" starttime="20210124 14:36:31.557"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:31.558" starttime="20210124 14:36:23.972"></status>
</kw>
<msg timestamp="20210124 14:36:31.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:31.559" starttime="20210124 14:36:23.972"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:31.559" starttime="20210124 14:36:23.971"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210124 14:36:31.561" level="INFO">${postfix} = 59240</msg>
<status status="PASS" endtime="20210124 14:36:31.561" starttime="20210124 14:36:31.560"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210124 14:36:31.562" level="INFO">${tmpfile} = /tmp/tempkey-59240</msg>
<status status="PASS" endtime="20210124 14:36:31.562" starttime="20210124 14:36:31.561"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:31.567" level="INFO">Running command 'ozone sh key get -f 02425-target/link1/key1 /tmp/tempkey-59240 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:38.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:38.619" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:38.619" starttime="20210124 14:36:31.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:38.620" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:38.620" starttime="20210124 14:36:38.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:38.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:38.621" starttime="20210124 14:36:38.620"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:38.621" starttime="20210124 14:36:31.563"></status>
</kw>
<msg timestamp="20210124 14:36:38.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:38.621" starttime="20210124 14:36:31.562"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:38.622" starttime="20210124 14:36:31.562"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210124 14:36:38.624" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-59240 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:38.628" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210124 14:36:38.628" starttime="20210124 14:36:38.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:38.637" level="INFO">Running command 'rm -f /tmp/tempkey-59240 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:38.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:38.640" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:38.640" starttime="20210124 14:36:38.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:38.641" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:38.642" starttime="20210124 14:36:38.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:38.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:38.642" starttime="20210124 14:36:38.642"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:38.643" starttime="20210124 14:36:38.631"></status>
</kw>
<msg timestamp="20210124 14:36:38.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:38.643" starttime="20210124 14:36:38.629"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:38.643" starttime="20210124 14:36:38.628"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:36:38.645" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210124 14:36:38.645" starttime="20210124 14:36:38.644"></status>
</kw>
<msg timestamp="20210124 14:36:38.646" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210124 14:36:38.646" starttime="20210124 14:36:31.560"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:36:38.646" starttime="20210124 14:36:38.646"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:38.647" starttime="20210124 14:36:31.559"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:36:38.647" critical="yes" starttime="20210124 14:36:14.031"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:38.658" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:38.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:38.667" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:36:38.667" starttime="20210124 14:36:38.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:38.668" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:36:38.668" starttime="20210124 14:36:38.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:38.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:38.669" starttime="20210124 14:36:38.669"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:38.669" starttime="20210124 14:36:38.651"></status>
</kw>
<msg timestamp="20210124 14:36:38.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:38.670" starttime="20210124 14:36:38.651"></status>
</kw>
<msg timestamp="20210124 14:36:38.670" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:36:38.670" starttime="20210124 14:36:38.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:36:38.671" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:36:38.671" starttime="20210124 14:36:38.670"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:38.675" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:38.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:38.690" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:38.690" starttime="20210124 14:36:38.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:38.691" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:38.691" starttime="20210124 14:36:38.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:38.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:38.692" starttime="20210124 14:36:38.691"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:38.692" starttime="20210124 14:36:38.673"></status>
</kw>
<msg timestamp="20210124 14:36:38.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:38.692" starttime="20210124 14:36:38.672"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:38.693" starttime="20210124 14:36:38.672"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:38.693" starttime="20210124 14:36:38.671"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:38.693" starttime="20210124 14:36:38.650"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:38.693" starttime="20210124 14:36:38.649"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:38.698" level="INFO">Running command 'ozone sh key put 02425-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:48.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:48.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:48.551" starttime="20210124 14:36:38.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:48.553" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:48.553" starttime="20210124 14:36:48.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:48.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:48.554" starttime="20210124 14:36:48.553"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:48.554" starttime="20210124 14:36:38.694"></status>
</kw>
<msg timestamp="20210124 14:36:48.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:48.554" starttime="20210124 14:36:38.694"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:48.555" starttime="20210124 14:36:38.693"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210124 14:36:48.557" level="INFO">${postfix} = 13356</msg>
<status status="PASS" endtime="20210124 14:36:48.557" starttime="20210124 14:36:48.556"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210124 14:36:48.558" level="INFO">${tmpfile} = /tmp/tempkey-13356</msg>
<status status="PASS" endtime="20210124 14:36:48.558" starttime="20210124 14:36:48.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:48.562" level="INFO">Running command 'ozone sh key get -f 02425-source/bucket1/key2 /tmp/tempkey-13356 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:56.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:56.926" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:56.926" starttime="20210124 14:36:48.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:56.927" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:56.928" starttime="20210124 14:36:56.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:56.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:56.929" starttime="20210124 14:36:56.928"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:56.929" starttime="20210124 14:36:48.559"></status>
</kw>
<msg timestamp="20210124 14:36:56.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:56.929" starttime="20210124 14:36:48.559"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:56.930" starttime="20210124 14:36:48.558"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210124 14:36:56.933" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-13356 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:56.938" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210124 14:36:56.938" starttime="20210124 14:36:56.930"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:56.944" level="INFO">Running command 'rm -f /tmp/tempkey-13356 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:56.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:56.947" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:56.947" starttime="20210124 14:36:56.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:56.948" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:56.948" starttime="20210124 14:36:56.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:56.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:56.949" starttime="20210124 14:36:56.948"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:56.949" starttime="20210124 14:36:56.940"></status>
</kw>
<msg timestamp="20210124 14:36:56.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:56.949" starttime="20210124 14:36:56.940"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:56.950" starttime="20210124 14:36:56.938"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:36:56.950" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210124 14:36:56.950" starttime="20210124 14:36:56.950"></status>
</kw>
<msg timestamp="20210124 14:36:56.951" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210124 14:36:56.951" starttime="20210124 14:36:48.556"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:36:56.952" starttime="20210124 14:36:56.951"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:56.952" starttime="20210124 14:36:48.555"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:36:56.952" critical="yes" starttime="20210124 14:36:38.648"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:56.961" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:56.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:56.964" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:36:56.964" starttime="20210124 14:36:56.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:56.965" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:36:56.965" starttime="20210124 14:36:56.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:56.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:56.966" starttime="20210124 14:36:56.965"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:56.966" starttime="20210124 14:36:56.958"></status>
</kw>
<msg timestamp="20210124 14:36:56.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:56.967" starttime="20210124 14:36:56.957"></status>
</kw>
<msg timestamp="20210124 14:36:56.967" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:36:56.967" starttime="20210124 14:36:56.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:36:56.968" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:36:56.968" starttime="20210124 14:36:56.967"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:56.980" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:36:57.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:36:57.005" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:36:57.006" starttime="20210124 14:36:56.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:36:57.007" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:36:57.007" starttime="20210124 14:36:57.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:36:57.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:36:57.008" starttime="20210124 14:36:57.007"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:57.008" starttime="20210124 14:36:56.970"></status>
</kw>
<msg timestamp="20210124 14:36:57.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:36:57.008" starttime="20210124 14:36:56.969"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:57.009" starttime="20210124 14:36:56.969"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:57.009" starttime="20210124 14:36:56.968"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:57.009" starttime="20210124 14:36:56.956"></status>
</kw>
<status status="PASS" endtime="20210124 14:36:57.009" starttime="20210124 14:36:56.955"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:36:57.014" level="INFO">Running command 'ozone sh key list 02425-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:01.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:01.652" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210124 14:37:01.652" starttime="20210124 14:36:57.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:01.653" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210124 14:37:01.653" starttime="20210124 14:37:01.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:01.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:01.655" starttime="20210124 14:37:01.653"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:01.656" starttime="20210124 14:36:57.010"></status>
</kw>
<msg timestamp="20210124 14:37:01.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:01.657" starttime="20210124 14:36:57.010"></status>
</kw>
<msg timestamp="20210124 14:37:01.658" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210124 14:37:01.658" starttime="20210124 14:36:57.009"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:01.666" level="INFO">Running command 'ozone sh key list 02425-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:06.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:06.426" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210124 14:37:06.426" starttime="20210124 14:37:01.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:06.427" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210124 14:37:06.427" starttime="20210124 14:37:06.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:06.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:06.428" starttime="20210124 14:37:06.428"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:06.429" starttime="20210124 14:37:01.660"></status>
</kw>
<msg timestamp="20210124 14:37:06.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:06.429" starttime="20210124 14:37:01.659"></status>
</kw>
<msg timestamp="20210124 14:37:06.429" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210124 14:37:06.429" starttime="20210124 14:37:01.658"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:37:06.430" starttime="20210124 14:37:06.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210124 14:37:06.430" starttime="20210124 14:37:06.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210124 14:37:06.431" starttime="20210124 14:37:06.431"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:37:06.432" critical="yes" starttime="20210124 14:36:56.954"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:06.439" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:06.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:06.444" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:37:06.444" starttime="20210124 14:37:06.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:06.445" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:37:06.445" starttime="20210124 14:37:06.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:06.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:06.446" starttime="20210124 14:37:06.445"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:06.446" starttime="20210124 14:37:06.435"></status>
</kw>
<msg timestamp="20210124 14:37:06.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:06.446" starttime="20210124 14:37:06.435"></status>
</kw>
<msg timestamp="20210124 14:37:06.446" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:37:06.446" starttime="20210124 14:37:06.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:37:06.447" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:37:06.447" starttime="20210124 14:37:06.447"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:06.452" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:06.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:06.473" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:37:06.473" starttime="20210124 14:37:06.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:06.475" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:37:06.475" starttime="20210124 14:37:06.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:06.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:06.476" starttime="20210124 14:37:06.475"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:06.476" starttime="20210124 14:37:06.449"></status>
</kw>
<msg timestamp="20210124 14:37:06.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:06.476" starttime="20210124 14:37:06.449"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:06.476" starttime="20210124 14:37:06.448"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:06.476" starttime="20210124 14:37:06.447"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:06.477" starttime="20210124 14:37:06.434"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:06.477" starttime="20210124 14:37:06.433"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:06.482" level="INFO">Running command 'ozone sh key delete 02425-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:11.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:11.070" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:37:11.070" starttime="20210124 14:37:06.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:11.071" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:37:11.071" starttime="20210124 14:37:11.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:11.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:11.072" starttime="20210124 14:37:11.071"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:11.072" starttime="20210124 14:37:06.478"></status>
</kw>
<msg timestamp="20210124 14:37:11.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:11.073" starttime="20210124 14:37:06.478"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:11.073" starttime="20210124 14:37:06.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:11.077" level="INFO">Running command 'ozone sh key list 02425-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:15.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:15.872" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210124 14:37:15.872" starttime="20210124 14:37:11.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:15.873" level="INFO">key1</msg>
<status status="PASS" endtime="20210124 14:37:15.873" starttime="20210124 14:37:15.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:15.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:15.874" starttime="20210124 14:37:15.873"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:15.874" starttime="20210124 14:37:11.074"></status>
</kw>
<msg timestamp="20210124 14:37:15.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:15.875" starttime="20210124 14:37:11.074"></status>
</kw>
<msg timestamp="20210124 14:37:15.875" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210124 14:37:15.875" starttime="20210124 14:37:11.073"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210124 14:37:15.876" starttime="20210124 14:37:15.875"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:37:15.876" critical="yes" starttime="20210124 14:37:06.433"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:15.884" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:15.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:15.886" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:37:15.886" starttime="20210124 14:37:15.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:15.888" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:37:15.888" starttime="20210124 14:37:15.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:15.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:15.889" starttime="20210124 14:37:15.888"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:15.889" starttime="20210124 14:37:15.880"></status>
</kw>
<msg timestamp="20210124 14:37:15.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:15.889" starttime="20210124 14:37:15.880"></status>
</kw>
<msg timestamp="20210124 14:37:15.889" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:37:15.889" starttime="20210124 14:37:15.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:37:15.890" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:37:15.890" starttime="20210124 14:37:15.890"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:15.896" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:15.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:15.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:37:15.916" starttime="20210124 14:37:15.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:15.917" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:37:15.917" starttime="20210124 14:37:15.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:15.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:15.918" starttime="20210124 14:37:15.918"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:15.919" starttime="20210124 14:37:15.892"></status>
</kw>
<msg timestamp="20210124 14:37:15.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:15.919" starttime="20210124 14:37:15.892"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:15.919" starttime="20210124 14:37:15.891"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:15.920" starttime="20210124 14:37:15.890"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:15.920" starttime="20210124 14:37:15.879"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:15.920" starttime="20210124 14:37:15.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:15.926" level="INFO">Running command 'ozone sh bucket list 02425-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:20.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:20.841" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210124 14:37:20.841" starttime="20210124 14:37:15.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:20.843" level="INFO">{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:36:09.475Z",
  "modificationTime" : "2021-01-24T14:36:09.475Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:35:41.487Z",
  "modificationTime" : "2021-01-24T14:36:05.115Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:36:18.746Z",
  "modificationTime" : "2021-01-24T14:36:18.746Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:35:31.175Z",
  "modificationTime" : "2021-01-24T14:36:00.592Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:35:36.278Z",
  "modificationTime" : "2021-01-24T14:35:36.278Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210124 14:37:20.843" starttime="20210124 14:37:20.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:20.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:20.844" starttime="20210124 14:37:20.843"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:20.844" starttime="20210124 14:37:15.922"></status>
</kw>
<msg timestamp="20210124 14:37:20.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:20.845" starttime="20210124 14:37:15.921"></status>
</kw>
<msg timestamp="20210124 14:37:20.845" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210124 14:37:20.845" starttime="20210124 14:37:15.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210124 14:37:20.846" starttime="20210124 14:37:20.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210124 14:37:20.846" starttime="20210124 14:37:20.846"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:37:20.847" critical="yes" starttime="20210124 14:37:15.877"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:20.855" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:20.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:20.858" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:37:20.858" starttime="20210124 14:37:20.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:20.860" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:37:20.860" starttime="20210124 14:37:20.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:20.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:20.861" starttime="20210124 14:37:20.860"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:20.861" starttime="20210124 14:37:20.852"></status>
</kw>
<msg timestamp="20210124 14:37:20.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:20.861" starttime="20210124 14:37:20.852"></status>
</kw>
<msg timestamp="20210124 14:37:20.862" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:37:20.862" starttime="20210124 14:37:20.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:37:20.865" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:37:20.865" starttime="20210124 14:37:20.863"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:20.871" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:20.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:20.886" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:37:20.887" starttime="20210124 14:37:20.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:20.888" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:37:20.888" starttime="20210124 14:37:20.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:20.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:20.890" starttime="20210124 14:37:20.888"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:20.890" starttime="20210124 14:37:20.866"></status>
</kw>
<msg timestamp="20210124 14:37:20.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:20.890" starttime="20210124 14:37:20.866"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:20.891" starttime="20210124 14:37:20.865"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:20.891" starttime="20210124 14:37:20.865"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:20.891" starttime="20210124 14:37:20.850"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:20.891" starttime="20210124 14:37:20.850"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:20.897" level="INFO">Running command 'ozone sh bucket info 02425-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:25.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:25.542" level="INFO">${output} = 02425-source bucket1</msg>
<status status="PASS" endtime="20210124 14:37:25.543" starttime="20210124 14:37:20.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:25.544" level="INFO">02425-source bucket1</msg>
<status status="PASS" endtime="20210124 14:37:25.544" starttime="20210124 14:37:25.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:25.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:25.545" starttime="20210124 14:37:25.544"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:25.546" starttime="20210124 14:37:20.892"></status>
</kw>
<msg timestamp="20210124 14:37:25.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:25.546" starttime="20210124 14:37:20.892"></status>
</kw>
<msg timestamp="20210124 14:37:25.546" level="INFO">${result} = 02425-source bucket1</msg>
<status status="PASS" endtime="20210124 14:37:25.546" starttime="20210124 14:37:20.891"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210124 14:37:25.547" starttime="20210124 14:37:25.546"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:37:25.548" critical="yes" starttime="20210124 14:37:20.848"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:25.555" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:25.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:25.559" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:37:25.559" starttime="20210124 14:37:25.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:25.560" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:37:25.560" starttime="20210124 14:37:25.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:25.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:25.561" starttime="20210124 14:37:25.560"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:25.561" starttime="20210124 14:37:25.552"></status>
</kw>
<msg timestamp="20210124 14:37:25.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:25.561" starttime="20210124 14:37:25.551"></status>
</kw>
<msg timestamp="20210124 14:37:25.562" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:37:25.562" starttime="20210124 14:37:25.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:37:25.562" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:37:25.562" starttime="20210124 14:37:25.562"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:25.569" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:25.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:25.590" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:37:25.591" starttime="20210124 14:37:25.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:25.593" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:37:25.593" starttime="20210124 14:37:25.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:25.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:25.594" starttime="20210124 14:37:25.593"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:25.595" starttime="20210124 14:37:25.564"></status>
</kw>
<msg timestamp="20210124 14:37:25.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:25.595" starttime="20210124 14:37:25.564"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:25.595" starttime="20210124 14:37:25.563"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:25.595" starttime="20210124 14:37:25.563"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:25.596" starttime="20210124 14:37:25.550"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:25.596" starttime="20210124 14:37:25.550"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:25.606" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 02425-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:30.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:30.423" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:37:30.423" starttime="20210124 14:37:25.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:30.425" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:37:30.426" starttime="20210124 14:37:30.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:30.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:30.427" starttime="20210124 14:37:30.427"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:30.428" starttime="20210124 14:37:25.597"></status>
</kw>
<msg timestamp="20210124 14:37:30.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:30.428" starttime="20210124 14:37:25.597"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:30.429" starttime="20210124 14:37:25.596"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:30.438" level="INFO">Running command 'ozone sh bucket getacl 02425-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:35.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:35.451" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210124 14:37:35.451" starttime="20210124 14:37:30.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:35.453" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210124 14:37:35.453" starttime="20210124 14:37:35.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:35.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:35.454" starttime="20210124 14:37:35.453"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:35.454" starttime="20210124 14:37:30.432"></status>
</kw>
<msg timestamp="20210124 14:37:35.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:35.454" starttime="20210124 14:37:30.432"></status>
</kw>
<msg timestamp="20210124 14:37:35.455" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210124 14:37:35.455" starttime="20210124 14:37:30.430"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:37:35.456" starttime="20210124 14:37:35.455"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:35.456" starttime="20210124 14:37:30.429"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:35.462" level="INFO">Running command 'ozone sh bucket getacl 02425-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:40.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:40.221" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:37:40.221" starttime="20210124 14:37:35.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:40.223" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:37:40.223" starttime="20210124 14:37:40.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:40.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:40.224" starttime="20210124 14:37:40.224"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:40.224" starttime="20210124 14:37:35.458"></status>
</kw>
<msg timestamp="20210124 14:37:40.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:40.225" starttime="20210124 14:37:35.458"></status>
</kw>
<msg timestamp="20210124 14:37:40.225" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210124 14:37:40.225" starttime="20210124 14:37:35.457"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:37:40.226" starttime="20210124 14:37:40.225"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:40.226" starttime="20210124 14:37:35.456"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:40.231" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 02425-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:45.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:45.527" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:37:45.527" starttime="20210124 14:37:40.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:45.529" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210124 14:37:45.529" starttime="20210124 14:37:45.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:45.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:45.530" starttime="20210124 14:37:45.529"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:45.531" starttime="20210124 14:37:40.228"></status>
</kw>
<msg timestamp="20210124 14:37:45.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:45.532" starttime="20210124 14:37:40.227"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:45.532" starttime="20210124 14:37:40.226"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:45.541" level="INFO">Running command 'ozone sh bucket getacl 02425-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:50.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:50.482" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:37:50.482" starttime="20210124 14:37:45.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:50.484" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:37:50.484" starttime="20210124 14:37:50.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:50.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:50.485" starttime="20210124 14:37:50.484"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:50.485" starttime="20210124 14:37:45.535"></status>
</kw>
<msg timestamp="20210124 14:37:50.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:50.486" starttime="20210124 14:37:45.534"></status>
</kw>
<msg timestamp="20210124 14:37:50.486" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210124 14:37:50.486" starttime="20210124 14:37:45.533"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:37:50.487" starttime="20210124 14:37:50.486"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:50.487" starttime="20210124 14:37:45.532"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:50.495" level="INFO">Running command 'ozone sh bucket getacl 02425-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:55.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:55.194" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210124 14:37:55.194" starttime="20210124 14:37:50.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:55.195" level="INFO">READ</msg>
<status status="PASS" endtime="20210124 14:37:55.195" starttime="20210124 14:37:55.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:55.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:55.196" starttime="20210124 14:37:55.195"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:55.196" starttime="20210124 14:37:50.491"></status>
</kw>
<msg timestamp="20210124 14:37:55.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:55.197" starttime="20210124 14:37:50.491"></status>
</kw>
<msg timestamp="20210124 14:37:55.197" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210124 14:37:55.197" starttime="20210124 14:37:50.488"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:37:55.198" starttime="20210124 14:37:55.197"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:55.198" starttime="20210124 14:37:50.487"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:37:55.198" critical="yes" starttime="20210124 14:37:25.549"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:55.207" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:55.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:55.213" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:37:55.213" starttime="20210124 14:37:55.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:55.215" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:37:55.215" starttime="20210124 14:37:55.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:55.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:55.216" starttime="20210124 14:37:55.215"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:55.216" starttime="20210124 14:37:55.203"></status>
</kw>
<msg timestamp="20210124 14:37:55.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:55.216" starttime="20210124 14:37:55.202"></status>
</kw>
<msg timestamp="20210124 14:37:55.216" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:37:55.217" starttime="20210124 14:37:55.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:37:55.217" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:37:55.217" starttime="20210124 14:37:55.217"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:55.222" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:55.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:55.239" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:37:55.239" starttime="20210124 14:37:55.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:55.240" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:37:55.240" starttime="20210124 14:37:55.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:55.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:55.241" starttime="20210124 14:37:55.240"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:55.241" starttime="20210124 14:37:55.219"></status>
</kw>
<msg timestamp="20210124 14:37:55.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:55.242" starttime="20210124 14:37:55.219"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:55.242" starttime="20210124 14:37:55.218"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:55.242" starttime="20210124 14:37:55.218"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:55.242" starttime="20210124 14:37:55.201"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:55.242" starttime="20210124 14:37:55.200"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:55.247" level="INFO">Running command 'ozone sh bucket link 02425-source/bucket2 02425-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:37:59.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:37:59.547" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:37:59.547" starttime="20210124 14:37:55.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:37:59.548" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:37:59.549" starttime="20210124 14:37:59.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:37:59.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:37:59.550" starttime="20210124 14:37:59.549"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:59.551" starttime="20210124 14:37:55.244"></status>
</kw>
<msg timestamp="20210124 14:37:59.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:37:59.551" starttime="20210124 14:37:55.243"></status>
</kw>
<status status="PASS" endtime="20210124 14:37:59.551" starttime="20210124 14:37:55.243"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:37:59.555" level="INFO">Running command 'ozone sh bucket create 02425-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:04.289" level="INFO">${rc} = 255</msg>
<msg timestamp="20210124 14:38:04.289" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210124 14:38:04.289" starttime="20210124 14:37:59.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:04.291" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210124 14:38:04.291" starttime="20210124 14:38:04.290"></status>
</kw>
<msg timestamp="20210124 14:38:04.292" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210124 14:38:04.292" starttime="20210124 14:37:59.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210124 14:38:04.293" starttime="20210124 14:38:04.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:04.301" level="INFO">Running command 'ozone sh bucket create 02425-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:09.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:09.140" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:09.140" starttime="20210124 14:38:04.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:09.142" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:09.142" starttime="20210124 14:38:09.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:09.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:09.143" starttime="20210124 14:38:09.142"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:09.143" starttime="20210124 14:38:04.295"></status>
</kw>
<msg timestamp="20210124 14:38:09.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:09.144" starttime="20210124 14:38:04.295"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:09.144" starttime="20210124 14:38:04.293"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:09.147" level="INFO">Running command 'ozone sh bucket link 02425-source/bucket1 02425-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:13.809" level="INFO">${rc} = 255</msg>
<msg timestamp="20210124 14:38:13.809" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210124 14:38:13.809" starttime="20210124 14:38:09.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:13.810" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210124 14:38:13.810" starttime="20210124 14:38:13.809"></status>
</kw>
<msg timestamp="20210124 14:38:13.811" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210124 14:38:13.811" starttime="20210124 14:38:09.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210124 14:38:13.811" starttime="20210124 14:38:13.811"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:38:13.812" critical="yes" starttime="20210124 14:37:55.199"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:13.825" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:13.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:13.828" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:38:13.829" starttime="20210124 14:38:13.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:13.830" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:38:13.830" starttime="20210124 14:38:13.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:13.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:13.831" starttime="20210124 14:38:13.830"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.831" starttime="20210124 14:38:13.822"></status>
</kw>
<msg timestamp="20210124 14:38:13.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:13.831" starttime="20210124 14:38:13.822"></status>
</kw>
<msg timestamp="20210124 14:38:13.832" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:38:13.832" starttime="20210124 14:38:13.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:38:13.832" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:38:13.832" starttime="20210124 14:38:13.832"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:13.837" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:13.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:13.851" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:13.851" starttime="20210124 14:38:13.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:13.852" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:13.853" starttime="20210124 14:38:13.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:13.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:13.853" starttime="20210124 14:38:13.853"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.854" starttime="20210124 14:38:13.834"></status>
</kw>
<msg timestamp="20210124 14:38:13.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:13.854" starttime="20210124 14:38:13.834"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.854" starttime="20210124 14:38:13.833"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.854" starttime="20210124 14:38:13.833"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.854" starttime="20210124 14:38:13.821"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.855" starttime="20210124 14:38:13.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:13.860" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:13.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:13.865" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:13.865" starttime="20210124 14:38:13.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:13.866" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:13.866" starttime="20210124 14:38:13.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:13.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:13.867" starttime="20210124 14:38:13.867"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.868" starttime="20210124 14:38:13.857"></status>
</kw>
<msg timestamp="20210124 14:38:13.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:13.868" starttime="20210124 14:38:13.857"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.868" starttime="20210124 14:38:13.856"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:13.874" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:13.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:13.877" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:38:13.877" starttime="20210124 14:38:13.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:13.878" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:38:13.878" starttime="20210124 14:38:13.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:13.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:13.879" starttime="20210124 14:38:13.878"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.879" starttime="20210124 14:38:13.871"></status>
</kw>
<msg timestamp="20210124 14:38:13.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:13.879" starttime="20210124 14:38:13.870"></status>
</kw>
<msg timestamp="20210124 14:38:13.880" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:38:13.880" starttime="20210124 14:38:13.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:38:13.881" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:38:13.881" starttime="20210124 14:38:13.880"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:13.885" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:13.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:13.910" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:13.911" starttime="20210124 14:38:13.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:13.912" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:13.912" starttime="20210124 14:38:13.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:13.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:13.914" starttime="20210124 14:38:13.912"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.914" starttime="20210124 14:38:13.882"></status>
</kw>
<msg timestamp="20210124 14:38:13.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:13.914" starttime="20210124 14:38:13.882"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.914" starttime="20210124 14:38:13.881"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.914" starttime="20210124 14:38:13.881"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.915" starttime="20210124 14:38:13.869"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:13.915" starttime="20210124 14:38:13.869"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:13.918" level="INFO">Running command 'ozone sh key list 02425-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:19.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:19.567" level="INFO">${output} = {
  "volumeName" : "02425-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-24T14:35:17.282Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210124 14:38:19.567" starttime="20210124 14:38:13.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:19.569" level="INFO">{
  "volumeName" : "02425-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-24T14:35:17.282Z",
  "modificationTime" : "2021-01-24T14:35:19.982Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210124 14:38:19.569" starttime="20210124 14:38:19.568"></status>
</kw>
<msg timestamp="20210124 14:38:19.569" level="INFO">${result} = {
  "volumeName" : "02425-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-24T14:35:17.282Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210124 14:38:19.569" starttime="20210124 14:38:13.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210124 14:38:19.570" starttime="20210124 14:38:19.570"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.570" starttime="20210124 14:38:13.855"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.570" starttime="20210124 14:38:13.855"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:38:19.571" critical="yes" starttime="20210124 14:38:13.819"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:19.578" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:19.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:19.581" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:38:19.581" starttime="20210124 14:38:19.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:19.582" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:38:19.582" starttime="20210124 14:38:19.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:19.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:19.583" starttime="20210124 14:38:19.583"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.583" starttime="20210124 14:38:19.574"></status>
</kw>
<msg timestamp="20210124 14:38:19.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:19.584" starttime="20210124 14:38:19.574"></status>
</kw>
<msg timestamp="20210124 14:38:19.584" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:38:19.584" starttime="20210124 14:38:19.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:38:19.585" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:38:19.585" starttime="20210124 14:38:19.584"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:19.594" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:19.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:19.687" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:19.687" starttime="20210124 14:38:19.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:19.688" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:19.690" starttime="20210124 14:38:19.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:19.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:19.700" starttime="20210124 14:38:19.691"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.708" starttime="20210124 14:38:19.587"></status>
</kw>
<msg timestamp="20210124 14:38:19.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:19.710" starttime="20210124 14:38:19.587"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.715" starttime="20210124 14:38:19.586"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.716" starttime="20210124 14:38:19.585"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.716" starttime="20210124 14:38:19.573"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.716" starttime="20210124 14:38:19.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:19.762" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:19.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:19.798" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:19.798" starttime="20210124 14:38:19.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:19.799" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:19.799" starttime="20210124 14:38:19.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:19.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:19.805" starttime="20210124 14:38:19.804"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.805" starttime="20210124 14:38:19.733"></status>
</kw>
<msg timestamp="20210124 14:38:19.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:19.805" starttime="20210124 14:38:19.730"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.806" starttime="20210124 14:38:19.718"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:19.819" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:19.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:19.821" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:38:19.821" starttime="20210124 14:38:19.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:19.823" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:38:19.823" starttime="20210124 14:38:19.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:19.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:19.824" starttime="20210124 14:38:19.823"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.824" starttime="20210124 14:38:19.813"></status>
</kw>
<msg timestamp="20210124 14:38:19.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:19.824" starttime="20210124 14:38:19.812"></status>
</kw>
<msg timestamp="20210124 14:38:19.825" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:38:19.825" starttime="20210124 14:38:19.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:38:19.826" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:38:19.826" starttime="20210124 14:38:19.825"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:19.832" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:19.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:19.846" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:19.846" starttime="20210124 14:38:19.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:19.848" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:19.849" starttime="20210124 14:38:19.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:19.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:19.851" starttime="20210124 14:38:19.849"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.851" starttime="20210124 14:38:19.828"></status>
</kw>
<msg timestamp="20210124 14:38:19.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:19.852" starttime="20210124 14:38:19.828"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.852" starttime="20210124 14:38:19.827"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.852" starttime="20210124 14:38:19.826"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.852" starttime="20210124 14:38:19.806"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:19.852" starttime="20210124 14:38:19.806"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:19.856" level="INFO">Running command 'ozone sh key list 02425-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:24.287" level="INFO">${rc} = 255</msg>
<msg timestamp="20210124 14:38:24.287" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 02425-target unreadable-link null</msg>
<status status="PASS" endtime="20210124 14:38:24.287" starttime="20210124 14:38:19.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:24.289" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 02425-target unreadable-link null</msg>
<status status="PASS" endtime="20210124 14:38:24.289" starttime="20210124 14:38:24.288"></status>
</kw>
<msg timestamp="20210124 14:38:24.289" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 02425-target unreadable-link null</msg>
<status status="PASS" endtime="20210124 14:38:24.289" starttime="20210124 14:38:19.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210124 14:38:24.290" starttime="20210124 14:38:24.290"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.290" starttime="20210124 14:38:19.718"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.290" starttime="20210124 14:38:19.717"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:38:24.291" critical="yes" starttime="20210124 14:38:19.572"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:24.299" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:24.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:24.307" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:38:24.307" starttime="20210124 14:38:24.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:24.308" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:38:24.309" starttime="20210124 14:38:24.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:24.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:24.309" starttime="20210124 14:38:24.309"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.310" starttime="20210124 14:38:24.295"></status>
</kw>
<msg timestamp="20210124 14:38:24.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:24.310" starttime="20210124 14:38:24.295"></status>
</kw>
<msg timestamp="20210124 14:38:24.310" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:38:24.310" starttime="20210124 14:38:24.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:38:24.311" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:38:24.311" starttime="20210124 14:38:24.311"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:24.316" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:24.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:24.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:24.337" starttime="20210124 14:38:24.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:24.338" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:24.338" starttime="20210124 14:38:24.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:24.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:24.339" starttime="20210124 14:38:24.338"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.339" starttime="20210124 14:38:24.313"></status>
</kw>
<msg timestamp="20210124 14:38:24.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:24.340" starttime="20210124 14:38:24.313"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.340" starttime="20210124 14:38:24.312"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.340" starttime="20210124 14:38:24.311"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.340" starttime="20210124 14:38:24.293"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.340" starttime="20210124 14:38:24.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:24.346" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:24.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:24.351" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:24.351" starttime="20210124 14:38:24.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:24.352" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:24.352" starttime="20210124 14:38:24.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:24.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:24.353" starttime="20210124 14:38:24.352"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.353" starttime="20210124 14:38:24.343"></status>
</kw>
<msg timestamp="20210124 14:38:24.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:24.353" starttime="20210124 14:38:24.342"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.354" starttime="20210124 14:38:24.342"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:24.359" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:24.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:24.362" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:38:24.362" starttime="20210124 14:38:24.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:24.364" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:38:24.364" starttime="20210124 14:38:24.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:24.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:24.364" starttime="20210124 14:38:24.364"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.365" starttime="20210124 14:38:24.356"></status>
</kw>
<msg timestamp="20210124 14:38:24.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:24.365" starttime="20210124 14:38:24.356"></status>
</kw>
<msg timestamp="20210124 14:38:24.365" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:38:24.365" starttime="20210124 14:38:24.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:38:24.366" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:38:24.366" starttime="20210124 14:38:24.366"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:24.371" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:24.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:24.390" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:24.390" starttime="20210124 14:38:24.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:24.391" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:24.391" starttime="20210124 14:38:24.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:24.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:24.392" starttime="20210124 14:38:24.392"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.393" starttime="20210124 14:38:24.368"></status>
</kw>
<msg timestamp="20210124 14:38:24.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:24.393" starttime="20210124 14:38:24.368"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.393" starttime="20210124 14:38:24.367"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.393" starttime="20210124 14:38:24.366"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.394" starttime="20210124 14:38:24.354"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:24.394" starttime="20210124 14:38:24.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:24.400" level="INFO">Running command 'ozone sh bucket info 02425-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:28.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:28.985" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210124 14:38:28.985" starttime="20210124 14:38:24.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:28.986" level="INFO">{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:35:41.487Z",
  "modificationTime" : "2021-01-24T14:36:05.115Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210124 14:38:28.986" starttime="20210124 14:38:28.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:28.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:28.987" starttime="20210124 14:38:28.986"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:28.987" starttime="20210124 14:38:24.395"></status>
</kw>
<msg timestamp="20210124 14:38:28.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:28.988" starttime="20210124 14:38:24.395"></status>
</kw>
<msg timestamp="20210124 14:38:28.988" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210124 14:38:28.988" starttime="20210124 14:38:24.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210124 14:38:28.988" starttime="20210124 14:38:28.988"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210124 14:38:28.989" starttime="20210124 14:38:28.989"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:29.000" level="INFO">Running command 'ozone sh key list 02425-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:33.371" level="INFO">${rc} = 255</msg>
<msg timestamp="20210124 14:38:33.371" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 02425-source unreadable-bucket </msg>
<status status="PASS" endtime="20210124 14:38:33.371" starttime="20210124 14:38:28.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:33.373" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 02425-source unreadable-bucket </msg>
<status status="PASS" endtime="20210124 14:38:33.373" starttime="20210124 14:38:33.372"></status>
</kw>
<msg timestamp="20210124 14:38:33.373" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 02425-source unreadable-bucket </msg>
<status status="PASS" endtime="20210124 14:38:33.373" starttime="20210124 14:38:28.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210124 14:38:33.374" starttime="20210124 14:38:33.373"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:33.374" starttime="20210124 14:38:24.341"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:33.374" starttime="20210124 14:38:24.341"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:38:33.375" critical="yes" starttime="20210124 14:38:24.292"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:33.382" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:33.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:33.387" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:38:33.387" starttime="20210124 14:38:33.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:33.388" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:38:33.388" starttime="20210124 14:38:33.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:33.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:33.389" starttime="20210124 14:38:33.388"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:33.389" starttime="20210124 14:38:33.379"></status>
</kw>
<msg timestamp="20210124 14:38:33.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:33.389" starttime="20210124 14:38:33.378"></status>
</kw>
<msg timestamp="20210124 14:38:33.390" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:38:33.390" starttime="20210124 14:38:33.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:38:33.390" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:38:33.391" starttime="20210124 14:38:33.390"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:33.396" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:33.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:33.416" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:33.416" starttime="20210124 14:38:33.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:33.417" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:33.417" starttime="20210124 14:38:33.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:33.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:33.418" starttime="20210124 14:38:33.417"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:33.419" starttime="20210124 14:38:33.392"></status>
</kw>
<msg timestamp="20210124 14:38:33.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:33.419" starttime="20210124 14:38:33.392"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:33.419" starttime="20210124 14:38:33.391"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:33.419" starttime="20210124 14:38:33.391"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:33.420" starttime="20210124 14:38:33.377"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:33.420" starttime="20210124 14:38:33.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:33.426" level="INFO">Running command 'ozone sh bucket link 02425-target/loop1 02425-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:37.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:37.665" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:37.665" starttime="20210124 14:38:33.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:37.666" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:37.666" starttime="20210124 14:38:37.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:37.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:37.667" starttime="20210124 14:38:37.666"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:37.667" starttime="20210124 14:38:33.421"></status>
</kw>
<msg timestamp="20210124 14:38:37.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:37.668" starttime="20210124 14:38:33.421"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:37.668" starttime="20210124 14:38:33.420"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:37.672" level="INFO">Running command 'ozone sh bucket link 02425-target/loop2 02425-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:41.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:41.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:41.915" starttime="20210124 14:38:37.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:41.917" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:41.917" starttime="20210124 14:38:41.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:41.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:41.917" starttime="20210124 14:38:41.917"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:41.918" starttime="20210124 14:38:37.669"></status>
</kw>
<msg timestamp="20210124 14:38:41.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:41.918" starttime="20210124 14:38:37.669"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:41.918" starttime="20210124 14:38:37.668"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:41.923" level="INFO">Running command 'ozone sh bucket link 02425-target/loop3 02425-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:46.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:46.350" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:46.350" starttime="20210124 14:38:41.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:46.351" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:46.351" starttime="20210124 14:38:46.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:46.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:46.352" starttime="20210124 14:38:46.352"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:46.353" starttime="20210124 14:38:41.920"></status>
</kw>
<msg timestamp="20210124 14:38:46.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:46.353" starttime="20210124 14:38:41.919"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:46.353" starttime="20210124 14:38:41.919"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:46.359" level="INFO">Running command 'ozone sh key list 02425-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:50.989" level="INFO">${rc} = 255</msg>
<msg timestamp="20210124 14:38:50.989" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210124 14:38:50.989" starttime="20210124 14:38:46.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:50.990" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210124 14:38:50.990" starttime="20210124 14:38:50.989"></status>
</kw>
<msg timestamp="20210124 14:38:50.991" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210124 14:38:50.991" starttime="20210124 14:38:46.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210124 14:38:50.992" starttime="20210124 14:38:50.991"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:38:50.992" critical="yes" starttime="20210124 14:38:33.376"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:51.004" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:51.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:51.010" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:38:51.010" starttime="20210124 14:38:51.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:51.014" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:38:51.014" starttime="20210124 14:38:51.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:51.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:51.016" starttime="20210124 14:38:51.014"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:51.016" starttime="20210124 14:38:51.000"></status>
</kw>
<msg timestamp="20210124 14:38:51.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:51.016" starttime="20210124 14:38:50.999"></status>
</kw>
<msg timestamp="20210124 14:38:51.017" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:38:51.017" starttime="20210124 14:38:50.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:38:51.018" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:38:51.018" starttime="20210124 14:38:51.017"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:51.022" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:51.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:51.037" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:51.037" starttime="20210124 14:38:51.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:51.038" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:51.039" starttime="20210124 14:38:51.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:51.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:51.040" starttime="20210124 14:38:51.039"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:51.040" starttime="20210124 14:38:51.019"></status>
</kw>
<msg timestamp="20210124 14:38:51.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:51.041" starttime="20210124 14:38:51.019"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:51.041" starttime="20210124 14:38:51.018"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:51.041" starttime="20210124 14:38:51.018"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:51.041" starttime="20210124 14:38:50.998"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:51.041" starttime="20210124 14:38:50.998"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:51.047" level="INFO">Running command 'ozone sh bucket link 02425-source/bucket1 02425-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:38:55.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:38:55.750" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:38:55.750" starttime="20210124 14:38:51.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:38:55.752" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:38:55.752" starttime="20210124 14:38:55.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:38:55.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:38:55.753" starttime="20210124 14:38:55.752"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:55.754" starttime="20210124 14:38:51.043"></status>
</kw>
<msg timestamp="20210124 14:38:55.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:38:55.755" starttime="20210124 14:38:51.042"></status>
</kw>
<status status="PASS" endtime="20210124 14:38:55.755" starttime="20210124 14:38:51.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:38:55.760" level="INFO">Running command 'ozone sh key put 02425-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:39:02.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:39:02.965" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:39:02.965" starttime="20210124 14:38:55.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:39:02.966" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:39:02.966" starttime="20210124 14:39:02.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:39:02.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:39:02.967" starttime="20210124 14:39:02.966"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:02.967" starttime="20210124 14:38:55.757"></status>
</kw>
<msg timestamp="20210124 14:39:02.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:39:02.967" starttime="20210124 14:38:55.756"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:02.968" starttime="20210124 14:38:55.755"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210124 14:39:02.971" level="INFO">${postfix} = 30470</msg>
<status status="PASS" endtime="20210124 14:39:02.971" starttime="20210124 14:39:02.970"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210124 14:39:02.972" level="INFO">${tmpfile} = /tmp/tempkey-30470</msg>
<status status="PASS" endtime="20210124 14:39:02.972" starttime="20210124 14:39:02.972"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:39:02.980" level="INFO">Running command 'ozone sh key get -f 02425-target/link1/key3 /tmp/tempkey-30470 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:39:10.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:39:10.466" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:39:10.466" starttime="20210124 14:39:02.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:39:10.468" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:39:10.468" starttime="20210124 14:39:10.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:39:10.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:39:10.469" starttime="20210124 14:39:10.468"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:10.469" starttime="20210124 14:39:02.973"></status>
</kw>
<msg timestamp="20210124 14:39:10.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:39:10.469" starttime="20210124 14:39:02.973"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:10.469" starttime="20210124 14:39:02.972"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210124 14:39:10.472" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-30470 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:39:10.475" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210124 14:39:10.475" starttime="20210124 14:39:10.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:39:10.482" level="INFO">Running command 'rm -f /tmp/tempkey-30470 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:39:10.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:39:10.485" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:39:10.485" starttime="20210124 14:39:10.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:39:10.486" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:39:10.486" starttime="20210124 14:39:10.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:39:10.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:39:10.487" starttime="20210124 14:39:10.486"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:10.488" starttime="20210124 14:39:10.478"></status>
</kw>
<msg timestamp="20210124 14:39:10.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:39:10.488" starttime="20210124 14:39:10.477"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:10.488" starttime="20210124 14:39:10.476"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210124 14:39:10.489" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210124 14:39:10.489" starttime="20210124 14:39:10.488"></status>
</kw>
<msg timestamp="20210124 14:39:10.489" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210124 14:39:10.489" starttime="20210124 14:39:02.969"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210124 14:39:10.490" starttime="20210124 14:39:10.489"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:10.490" starttime="20210124 14:39:02.968"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:39:10.490" critical="yes" starttime="20210124 14:38:50.993"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:39:10.498" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:39:10.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:39:10.501" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210124 14:39:10.501" starttime="20210124 14:39:10.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:39:10.503" level="INFO">scm</msg>
<status status="PASS" endtime="20210124 14:39:10.503" starttime="20210124 14:39:10.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:39:10.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:39:10.504" starttime="20210124 14:39:10.503"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:10.505" starttime="20210124 14:39:10.495"></status>
</kw>
<msg timestamp="20210124 14:39:10.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:39:10.505" starttime="20210124 14:39:10.495"></status>
</kw>
<msg timestamp="20210124 14:39:10.505" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210124 14:39:10.505" starttime="20210124 14:39:10.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210124 14:39:10.506" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210124 14:39:10.506" starttime="20210124 14:39:10.506"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:39:10.511" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:39:10.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:39:10.528" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:39:10.528" starttime="20210124 14:39:10.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:39:10.529" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:39:10.529" starttime="20210124 14:39:10.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:39:10.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:39:10.530" starttime="20210124 14:39:10.530"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:10.531" starttime="20210124 14:39:10.508"></status>
</kw>
<msg timestamp="20210124 14:39:10.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:39:10.531" starttime="20210124 14:39:10.508"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:10.531" starttime="20210124 14:39:10.507"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:10.531" starttime="20210124 14:39:10.506"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:10.532" starttime="20210124 14:39:10.493"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:10.532" starttime="20210124 14:39:10.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:39:10.544" level="INFO">Running command 'ozone sh bucket delete 02425-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:39:14.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:39:14.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210124 14:39:14.999" starttime="20210124 14:39:10.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:39:15.000" level="INFO"></msg>
<status status="PASS" endtime="20210124 14:39:15.001" starttime="20210124 14:39:15.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:39:15.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:39:15.001" starttime="20210124 14:39:15.001"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:15.002" starttime="20210124 14:39:10.535"></status>
</kw>
<msg timestamp="20210124 14:39:15.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:39:15.002" starttime="20210124 14:39:10.535"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:15.002" starttime="20210124 14:39:10.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:39:15.007" level="INFO">Running command 'ozone sh bucket list 02425-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:39:19.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:39:19.892" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T...</msg>
<status status="PASS" endtime="20210124 14:39:19.892" starttime="20210124 14:39:15.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:39:19.894" level="INFO">{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:38:08.886Z",
  "modificationTime" : "2021-01-24T14:38:08.886Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:36:09.475Z",
  "modificationTime" : "2021-01-24T14:36:09.475Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:35:41.487Z",
  "modificationTime" : "2021-01-24T14:36:05.115Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:37:59.349Z",
  "modificationTime" : "2021-01-24T14:37:59.349Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:38:55.450Z",
  "modificationTime" : "2021-01-24T14:38:55.450Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:38:46.274Z",
  "modificationTime" : "2021-01-24T14:38:46.274Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:38:37.556Z",
  "modificationTime" : "2021-01-24T14:38:37.556Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:38:41.793Z",
  "modificationTime" : "2021-01-24T14:38:41.793Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:35:31.175Z",
  "modificationTime" : "2021-01-24T14:36:00.592Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T14:35:36.278Z",
  "modificationTime" : "2021-01-24T14:35:36.278Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "02425-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210124 14:39:19.894" starttime="20210124 14:39:19.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:39:19.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:39:19.895" starttime="20210124 14:39:19.894"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:19.895" starttime="20210124 14:39:15.003"></status>
</kw>
<msg timestamp="20210124 14:39:19.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:39:19.895" starttime="20210124 14:39:15.003"></status>
</kw>
<msg timestamp="20210124 14:39:19.896" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "02425-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-24T...</msg>
<status status="PASS" endtime="20210124 14:39:19.896" starttime="20210124 14:39:15.002"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210124 14:39:19.897" starttime="20210124 14:39:19.896"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210124 14:39:19.907" level="INFO">Running command 'ozone sh key list 02425-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210124 14:39:24.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210124 14:39:24.490" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210124 14:39:24.490" starttime="20210124 14:39:19.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210124 14:39:24.491" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210124 14:39:24.491" starttime="20210124 14:39:24.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210124 14:39:24.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210124 14:39:24.492" starttime="20210124 14:39:24.491"></status>
</kw>
<status status="PASS" endtime="20210124 14:39:24.492" starttime="20210124 14:39:19.898"></status>
</kw>
<msg timestamp="20210124 14:39:24.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210124 14:39:24.492" starttime="20210124 14:39:19.897"></status>
</kw>
<msg timestamp="20210124 14:39:24.493" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210124 14:39:24.493" starttime="20210124 14:39:19.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210124 14:39:24.494" starttime="20210124 14:39:24.493"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210124 14:39:24.494" critical="yes" starttime="20210124 14:39:10.492"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210124 14:39:24.498" starttime="20210124 14:34:58.705"></status>
</suite>
<status status="PASS" elapsedtime="302877" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
