<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210127 02:12:09.629" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210127 02:09:30.457" starttime="20210127 02:09:30.456"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:09:30.462" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:09:30.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:09:30.561" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 27 Jan 2021 02:09:30 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 Jan 2021 01:35:08 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20210127 02:09:30.561" starttime="20210127 02:09:30.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:09:30.562" level="INFO">HTTP/1.1 200 OK
Date: Wed, 27 Jan 2021 02:09:30 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 Jan 2021 01:35:08 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210127 02:09:30.562" starttime="20210127 02:09:30.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:09:30.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:09:30.563" starttime="20210127 02:09:30.562"></status>
</kw>
<status status="PASS" endtime="20210127 02:09:30.563" starttime="20210127 02:09:30.458"></status>
</kw>
<msg timestamp="20210127 02:09:30.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:09:30.563" starttime="20210127 02:09:30.458"></status>
</kw>
<msg timestamp="20210127 02:09:30.563" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 27 Jan 2021 02:09:30 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 27 Jan 2021 01:35:08 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20210127 02:09:30.563" starttime="20210127 02:09:30.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20210127 02:09:30.564" starttime="20210127 02:09:30.564"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:09:30.564" critical="yes" starttime="20210127 02:09:30.456"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210127 02:09:30.566" starttime="20210127 02:09:30.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:09:30.579" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:10:32.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:10:32.915" level="INFO">${output} = 2021-01-27 02:09:32,246 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:09:32,352 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 02:10:32.916" starttime="20210127 02:09:30.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:10:32.917" level="INFO">2021-01-27 02:09:32,246 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:09:32,352 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:09:32,352 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-27 02:09:36,167 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2021-01-27 02:09:36,170 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2021-01-27 02:09:36,170 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2021-01-27 02:09:36,170 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2021-01-27 02:09:36,170 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2021-01-27 02:09:36,170 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2021-01-27 02:09:36,170 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2021-01-27 02:09:36,181 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2021-01-27 02:09:36,182 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2021-01-27 02:09:36,195 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-01-27 02:09:36,223 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-23420, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-27 02:09:36,484 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-11270, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-27 02:09:36,500 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-61869, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-27 02:09:36,510 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-49325, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-27 02:09:36,522 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-90387, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-27 02:09:36,539 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-23420/bucket-0-79140, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,599 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11270/bucket-0-47038, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,610 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-61869/bucket-0-31949, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,627 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-49325/bucket-0-42091, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,643 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-90387/bucket-0-69575, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,652 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-23420/bucket-1-84927, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,664 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11270/bucket-1-99863, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,672 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-61869/bucket-1-24499, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,683 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-49325/bucket-1-55889, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,692 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-90387/bucket-1-31643, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,700 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-23420/bucket-2-18747, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,708 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11270/bucket-2-11922, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,714 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-61869/bucket-2-18128, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,729 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-49325/bucket-2-61935, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,736 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-90387/bucket-2-24863, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,742 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-23420/bucket-3-15217, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,754 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11270/bucket-3-37630, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,762 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-61869/bucket-3-62701, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,769 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-49325/bucket-3-56274, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,775 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-90387/bucket-3-02073, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,785 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-23420/bucket-4-85939, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,792 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11270/bucket-4-92363, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,797 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-61869/bucket-4-44793, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,803 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-49325/bucket-4-37539, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:36,810 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-90387/bucket-4-56222, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:09:37,204 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-01-27 02:09:37,921 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-27 02:09:38,156 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:09:38,157 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-422E472E5614-&gt;762e0739-33c8-4cbd-b67b-8e572f7e2285
2021-01-27 02:09:38,159 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:09:38,204 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-01-27 02:09:39,204 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-01-27 02:09:40,206 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-01-27 02:09:40,495 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-9EF999E422B5-&gt;55349070-44aa-4b93-a3f6-b12c3441fd46
2021-01-27 02:09:40,528 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:09:41,208 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2021-01-27 02:09:42,209 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2021-01-27 02:09:43,183 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-D285926C96B5-&gt;1f27c92a-da50-49c2-84ac-96bb68bf2c13
2021-01-27 02:09:43,183 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:09:43,209 [Thread-7] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2021-01-27 02:09:44,209 [Thread-7] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2021-01-27 02:09:45,210 [Thread-7] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2021-01-27 02:09:46,210 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2021-01-27 02:09:47,211 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2021-01-27 02:09:48,211 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2021-01-27 02:09:49,211 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2021-01-27 02:09:50,212 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2021-01-27 02:09:51,212 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2021-01-27 02:09:52,213 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2021-01-27 02:09:53,213 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2021-01-27 02:09:54,214 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2021-01-27 02:09:55,214 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2021-01-27 02:09:56,214 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2021-01-27 02:09:57,215 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2021-01-27 02:09:58,215 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2021-01-27 02:09:59,216 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2021-01-27 02:10:00,216 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2021-01-27 02:10:01,217 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2021-01-27 02:10:02,217 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2021-01-27 02:10:03,217 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2021-01-27 02:10:04,218 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2021-01-27 02:10:05,218 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2021-01-27 02:10:06,219 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2021-01-27 02:10:07,219 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2021-01-27 02:10:08,219 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2021-01-27 02:10:09,220 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2021-01-27 02:10:10,220 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2021-01-27 02:10:11,221 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2021-01-27 02:10:12,221 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2021-01-27 02:10:13,222 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2021-01-27 02:10:14,222 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2021-01-27 02:10:15,222 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2021-01-27 02:10:16,223 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2021-01-27 02:10:17,223 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2021-01-27 02:10:18,224 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2021-01-27 02:10:19,224 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2021-01-27 02:10:20,225 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2021-01-27 02:10:21,225 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2021-01-27 02:10:22,226 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2021-01-27 02:10:23,226 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2021-01-27 02:10:24,226 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2021-01-27 02:10:25,227 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2021-01-27 02:10:26,227 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2021-01-27 02:10:27,231 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2021-01-27 02:10:28,232 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: 7a3bc90b05f257c8ace2f76d74264906f0f7a932
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,316
Average Time spent in bucket creation: 00:00:00,204
Average Time spent in key creation: 00:00:02,539
Average Time spent in key write: 00:00:01,103
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:59,919
***************************************************</msg>
<status status="PASS" endtime="20210127 02:10:32.917" starttime="20210127 02:10:32.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:10:32.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:10:32.917" starttime="20210127 02:10:32.917"></status>
</kw>
<status status="PASS" endtime="20210127 02:10:32.918" starttime="20210127 02:09:30.569"></status>
</kw>
<msg timestamp="20210127 02:10:32.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:10:32.918" starttime="20210127 02:09:30.567"></status>
</kw>
<msg timestamp="20210127 02:10:32.918" level="INFO">${result} = 2021-01-27 02:09:32,246 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:09:32,352 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 02:10:32.918" starttime="20210127 02:09:30.566"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20210127 02:10:32.919" starttime="20210127 02:10:32.919"></status>
</kw>
<status status="PASS" endtime="20210127 02:10:32.919" starttime="20210127 02:10:32.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20210127 02:10:32.920" starttime="20210127 02:10:32.919"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:10:32.920" critical="yes" starttime="20210127 02:09:30.565"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210127 02:10:32.921" starttime="20210127 02:09:30.403"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:10:36.835" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:10:39.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:10:39.056" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):...</msg>
<status status="PASS" endtime="20210127 02:10:39.056" starttime="20210127 02:10:36.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:10:39.057" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" endtime="20210127 02:10:39.057" starttime="20210127 02:10:39.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:10:39.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:10:39.057" starttime="20210127 02:10:39.057"></status>
</kw>
<status status="PASS" endtime="20210127 02:10:39.058" starttime="20210127 02:10:36.831"></status>
</kw>
<msg timestamp="20210127 02:10:39.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:10:39.058" starttime="20210127 02:10:36.831"></status>
</kw>
<msg timestamp="20210127 02:10:39.058" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):...</msg>
<status status="PASS" endtime="20210127 02:10:39.058" starttime="20210127 02:10:36.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20210127 02:10:39.059" starttime="20210127 02:10:39.058"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:10:39.059" critical="yes" starttime="20210127 02:10:36.830"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:10:39.063" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:10:41.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:10:41.233" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" endtime="20210127 02:10:41.233" starttime="20210127 02:10:39.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:10:41.234" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" endtime="20210127 02:10:41.234" starttime="20210127 02:10:41.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:10:41.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:10:41.234" starttime="20210127 02:10:41.234"></status>
</kw>
<status status="PASS" endtime="20210127 02:10:41.235" starttime="20210127 02:10:39.061"></status>
</kw>
<msg timestamp="20210127 02:10:41.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:10:41.235" starttime="20210127 02:10:39.060"></status>
</kw>
<msg timestamp="20210127 02:10:41.235" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" endtime="20210127 02:10:41.235" starttime="20210127 02:10:39.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20210127 02:10:41.236" starttime="20210127 02:10:41.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
</arguments>
<status status="PASS" endtime="20210127 02:10:41.236" starttime="20210127 02:10:41.236"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:10:41.236" critical="yes" starttime="20210127 02:10:39.059"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210127 02:10:41.237" starttime="20210127 02:10:36.788"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:10:45.248" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:10:47.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:10:47.651" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:10:47.651" starttime="20210127 02:10:45.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:10:47.652" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:10:47.652" starttime="20210127 02:10:47.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:10:47.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:10:47.652" starttime="20210127 02:10:47.652"></status>
</kw>
<status status="PASS" endtime="20210127 02:10:47.652" starttime="20210127 02:10:45.244"></status>
</kw>
<msg timestamp="20210127 02:10:47.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:10:47.653" starttime="20210127 02:10:45.244"></status>
</kw>
<msg timestamp="20210127 02:10:47.653" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:10:47.653" starttime="20210127 02:10:45.243"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210127 02:10:47.653" starttime="20210127 02:10:47.653"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:10:47.657" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:10:50.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:10:50.320" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:10:50.320" starttime="20210127 02:10:47.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:10:50.321" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:10:50.321" starttime="20210127 02:10:50.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:10:50.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:10:50.322" starttime="20210127 02:10:50.321"></status>
</kw>
<status status="PASS" endtime="20210127 02:10:50.322" starttime="20210127 02:10:47.654"></status>
</kw>
<msg timestamp="20210127 02:10:50.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:10:50.322" starttime="20210127 02:10:47.654"></status>
</kw>
<msg timestamp="20210127 02:10:50.322" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:10:50.322" starttime="20210127 02:10:47.654"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210127 02:10:50.323" starttime="20210127 02:10:50.322"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:10:50.334" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:10:54.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:10:54.689" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:10:54.689" starttime="20210127 02:10:50.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:10:54.690" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:10:54.690" starttime="20210127 02:10:54.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:10:54.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:10:54.691" starttime="20210127 02:10:54.690"></status>
</kw>
<status status="PASS" endtime="20210127 02:10:54.691" starttime="20210127 02:10:50.324"></status>
</kw>
<msg timestamp="20210127 02:10:54.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:10:54.691" starttime="20210127 02:10:50.323"></status>
</kw>
<msg timestamp="20210127 02:10:54.691" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:10:54.692" starttime="20210127 02:10:50.323"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210127 02:10:54.692" starttime="20210127 02:10:54.692"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:10:54.692" critical="yes" starttime="20210127 02:10:45.242"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210127 02:10:54.693" starttime="20210127 02:10:45.200"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 02:11:38.423" level="INFO">${random} = 64595</msg>
<status status="PASS" endtime="20210127 02:11:38.423" starttime="20210127 02:11:38.423"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:11:38.428" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-64595 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:12:04.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:12:04.064" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:12:04.064" starttime="20210127 02:11:38.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:12:04.065" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:12:04.065" starttime="20210127 02:12:04.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:12:04.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:12:04.065" starttime="20210127 02:12:04.065"></status>
</kw>
<status status="PASS" endtime="20210127 02:12:04.066" starttime="20210127 02:11:38.424"></status>
</kw>
<msg timestamp="20210127 02:12:04.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:12:04.066" starttime="20210127 02:11:38.424"></status>
</kw>
<msg timestamp="20210127 02:12:04.066" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:12:04.066" starttime="20210127 02:11:38.423"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210127 02:12:04.066" starttime="20210127 02:12:04.066"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:12:04.067" critical="yes" starttime="20210127 02:11:38.422"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210127 02:12:04.067" starttime="20210127 02:11:38.380"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 02:11:00.412" level="INFO">${random} = 49138</msg>
<status status="PASS" endtime="20210127 02:11:00.412" starttime="20210127 02:11:00.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:11:00.416" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-49138 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:11:04.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:11:04.427" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:11:04.427" starttime="20210127 02:11:00.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:11:04.428" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:11:04.428" starttime="20210127 02:11:04.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:11:04.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:11:04.429" starttime="20210127 02:11:04.428"></status>
</kw>
<status status="PASS" endtime="20210127 02:11:04.429" starttime="20210127 02:11:00.413"></status>
</kw>
<msg timestamp="20210127 02:11:04.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:11:04.429" starttime="20210127 02:11:00.413"></status>
</kw>
<msg timestamp="20210127 02:11:04.429" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210127 02:11:04.429" starttime="20210127 02:11:00.412"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210127 02:11:04.430" starttime="20210127 02:11:04.429"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:11:04.430" critical="yes" starttime="20210127 02:11:00.411"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210127 02:11:04.431" starttime="20210127 02:11:00.368"></status>
</suite>
<status status="PASS" elapsedtime="106210" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
