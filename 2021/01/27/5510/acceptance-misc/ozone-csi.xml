<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210127 01:48:45.995" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:48:32.064" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:48:32.065" level="INFO">${rc} = 1</msg>
<msg timestamp="20210127 01:48:32.065" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:48:32.065" starttime="20210127 01:48:32.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:48:32.066" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:48:32.066" starttime="20210127 01:48:32.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:48:32.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210127 01:48:32.066" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210127 01:48:32.066" starttime="20210127 01:48:32.066"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:32.067" starttime="20210127 01:48:32.060"></status>
</kw>
<msg timestamp="20210127 01:48:32.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210127 01:48:32.067" starttime="20210127 01:48:32.060"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:32.067" starttime="20210127 01:48:32.059"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:32.067" starttime="20210127 01:48:32.059"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:48:33.072" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:48:33.074" level="INFO">${rc} = 1</msg>
<msg timestamp="20210127 01:48:33.074" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:48:33.074" starttime="20210127 01:48:33.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:48:33.075" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:48:33.075" starttime="20210127 01:48:33.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:48:33.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210127 01:48:33.075" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210127 01:48:33.075" starttime="20210127 01:48:33.075"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:33.076" starttime="20210127 01:48:33.069"></status>
</kw>
<msg timestamp="20210127 01:48:33.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210127 01:48:33.076" starttime="20210127 01:48:33.068"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:33.076" starttime="20210127 01:48:33.068"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:33.076" starttime="20210127 01:48:33.067"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:48:34.080" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:48:34.082" level="INFO">${rc} = 1</msg>
<msg timestamp="20210127 01:48:34.082" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:48:34.082" starttime="20210127 01:48:34.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:48:34.083" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:48:34.083" starttime="20210127 01:48:34.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:48:34.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210127 01:48:34.084" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210127 01:48:34.084" starttime="20210127 01:48:34.083"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:34.084" starttime="20210127 01:48:34.078"></status>
</kw>
<msg timestamp="20210127 01:48:34.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210127 01:48:34.084" starttime="20210127 01:48:34.077"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:34.085" starttime="20210127 01:48:34.077"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:34.085" starttime="20210127 01:48:34.076"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:48:35.089" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:48:35.091" level="INFO">${rc} = 1</msg>
<msg timestamp="20210127 01:48:35.091" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:48:35.091" starttime="20210127 01:48:35.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:48:35.092" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:48:35.092" starttime="20210127 01:48:35.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:48:35.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210127 01:48:35.093" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210127 01:48:35.093" starttime="20210127 01:48:35.092"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:35.093" starttime="20210127 01:48:35.086"></status>
</kw>
<msg timestamp="20210127 01:48:35.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210127 01:48:35.093" starttime="20210127 01:48:35.086"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:35.093" starttime="20210127 01:48:35.086"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:35.094" starttime="20210127 01:48:35.085"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:48:36.098" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:48:36.099" level="INFO">${rc} = 1</msg>
<msg timestamp="20210127 01:48:36.099" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:48:36.099" starttime="20210127 01:48:36.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:48:36.100" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:48:36.100" starttime="20210127 01:48:36.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:48:36.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210127 01:48:36.101" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210127 01:48:36.101" starttime="20210127 01:48:36.100"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:36.101" starttime="20210127 01:48:36.095"></status>
</kw>
<msg timestamp="20210127 01:48:36.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210127 01:48:36.101" starttime="20210127 01:48:36.095"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:36.101" starttime="20210127 01:48:36.095"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:36.101" starttime="20210127 01:48:36.094"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:48:37.106" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:48:37.107" level="INFO">${rc} = 1</msg>
<msg timestamp="20210127 01:48:37.108" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:48:37.108" starttime="20210127 01:48:37.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:48:37.109" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:48:37.109" starttime="20210127 01:48:37.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:48:37.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210127 01:48:37.109" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210127 01:48:37.110" starttime="20210127 01:48:37.109"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:37.110" starttime="20210127 01:48:37.104"></status>
</kw>
<msg timestamp="20210127 01:48:37.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210127 01:48:37.110" starttime="20210127 01:48:37.103"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:37.110" starttime="20210127 01:48:37.103"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:37.110" starttime="20210127 01:48:37.102"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:48:38.115" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:48:38.116" level="INFO">${rc} = 1</msg>
<msg timestamp="20210127 01:48:38.116" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:48:38.117" starttime="20210127 01:48:38.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:48:38.117" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:48:38.117" starttime="20210127 01:48:38.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:48:38.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210127 01:48:38.118" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210127 01:48:38.118" starttime="20210127 01:48:38.118"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:38.118" starttime="20210127 01:48:38.112"></status>
</kw>
<msg timestamp="20210127 01:48:38.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210127 01:48:38.119" starttime="20210127 01:48:38.112"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:38.119" starttime="20210127 01:48:38.112"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:38.119" starttime="20210127 01:48:38.111"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:48:39.130" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:48:39.132" level="INFO">${rc} = 1</msg>
<msg timestamp="20210127 01:48:39.132" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:48:39.132" starttime="20210127 01:48:39.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:48:39.133" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:48:39.133" starttime="20210127 01:48:39.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:48:39.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210127 01:48:39.133" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20210127 01:48:39.134" starttime="20210127 01:48:39.133"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:39.134" starttime="20210127 01:48:39.121"></status>
</kw>
<msg timestamp="20210127 01:48:39.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210127 01:48:39.134" starttime="20210127 01:48:39.120"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:39.134" starttime="20210127 01:48:39.120"></status>
</kw>
<status status="FAIL" endtime="20210127 01:48:39.134" starttime="20210127 01:48:39.119"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:48:40.139" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:48:40.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:48:40.141" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:48:40.141" starttime="20210127 01:48:40.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:48:40.142" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:48:40.142" starttime="20210127 01:48:40.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:48:40.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:48:40.142" starttime="20210127 01:48:40.142"></status>
</kw>
<status status="PASS" endtime="20210127 01:48:40.142" starttime="20210127 01:48:40.136"></status>
</kw>
<msg timestamp="20210127 01:48:40.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:48:40.143" starttime="20210127 01:48:40.136"></status>
</kw>
<status status="PASS" endtime="20210127 01:48:40.143" starttime="20210127 01:48:40.135"></status>
</kw>
<status status="PASS" endtime="20210127 01:48:40.143" starttime="20210127 01:48:40.135"></status>
</kw>
<status status="PASS" endtime="20210127 01:48:40.143" starttime="20210127 01:48:32.058"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20210127 01:48:40.143" critical="yes" starttime="20210127 01:48:32.058"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:48:40.147" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:48:40.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:48:40.404" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20210127 01:48:40.404" starttime="20210127 01:48:40.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:48:40.405" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20210127 01:48:40.405" starttime="20210127 01:48:40.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:48:40.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:48:40.405" starttime="20210127 01:48:40.405"></status>
</kw>
<status status="PASS" endtime="20210127 01:48:40.406" starttime="20210127 01:48:40.145"></status>
</kw>
<msg timestamp="20210127 01:48:40.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:48:40.406" starttime="20210127 01:48:40.145"></status>
</kw>
<msg timestamp="20210127 01:48:40.406" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20210127 01:48:40.406" starttime="20210127 01:48:40.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20210127 01:48:40.407" starttime="20210127 01:48:40.406"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20210127 01:48:40.407" critical="yes" starttime="20210127 01:48:40.144"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20210127 01:48:40.408" starttime="20210127 01:48:32.015"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
