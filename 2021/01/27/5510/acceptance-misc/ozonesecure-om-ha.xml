<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210127 02:26:57.043" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:23:28.017" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:23:41.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:23:41.361" level="INFO">${output} = 2021-01-27 02:23:30,954 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:23:31,046 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 02:23:41.361" starttime="20210127 02:23:28.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:23:41.362" level="INFO">2021-01-27 02:23:30,954 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:23:31,046 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:23:31,046 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-27 02:23:31,165 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-27 02:23:31,176 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:32,188 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:33,188 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:33,235 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-27 02:23:33,668 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 02:23:34,198 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:35,199 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:36,199 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:36,289 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-27 02:23:36,743 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:23:36,743 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-F10D35864753-&gt;c2dbe4ef-6acc-483c-a4b1-33a39d5d4908
2021-01-27 02:23:36,745 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:23:37,200 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:38,200 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:39,201 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:40,201 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-27 02:23:41,006 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=6226.88865, max=6226.88865, mean=6226.88865, stddev=0.0, median=6226.88865, p75=6226.88865, p95=6226.88865, p98=6226.88865, p99=6226.88865, p999=6226.88865, mean_rate=0.1415762444665185, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-27 02:23:41,007 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2021-01-27 02:23:41,008 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-27 02:23:41,008 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210127 02:23:41.362" starttime="20210127 02:23:41.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:23:41.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:23:41.363" starttime="20210127 02:23:41.362"></status>
</kw>
<status status="PASS" endtime="20210127 02:23:41.363" starttime="20210127 02:23:28.014"></status>
</kw>
<msg timestamp="20210127 02:23:41.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:23:41.363" starttime="20210127 02:23:28.014"></status>
</kw>
<msg timestamp="20210127 02:23:41.364" level="INFO">${result} = 2021-01-27 02:23:30,954 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:23:31,046 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 02:23:41.364" starttime="20210127 02:23:28.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210127 02:23:41.364" starttime="20210127 02:23:41.364"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:23:41.364" critical="yes" starttime="20210127 02:23:28.012"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:23:41.369" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:23:45.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:23:45.460" level="INFO">${output} = 2021-01-27 02:23:42,888 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:23:42,990 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 02:23:45.460" starttime="20210127 02:23:41.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:23:45.461" level="INFO">2021-01-27 02:23:42,888 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:23:42,990 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:23:42,990 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-27 02:23:43,124 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-01-27 02:23:43,145 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:44,149 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:45,150 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-27 02:23:45,421 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=238.526547, max=238.526547, mean=238.526547, stddev=0.0, median=238.526547, p75=238.526547, p95=238.526547, p98=238.526547, p99=238.526547, p999=238.526547, mean_rate=0.9858415137443441, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-27 02:23:45,422 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-01-27 02:23:45,441 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-27 02:23:45,441 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210127 02:23:45.461" starttime="20210127 02:23:45.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:23:45.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:23:45.462" starttime="20210127 02:23:45.461"></status>
</kw>
<status status="PASS" endtime="20210127 02:23:45.462" starttime="20210127 02:23:41.366"></status>
</kw>
<msg timestamp="20210127 02:23:45.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:23:45.462" starttime="20210127 02:23:41.366"></status>
</kw>
<msg timestamp="20210127 02:23:45.463" level="INFO">${result} = 2021-01-27 02:23:42,888 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:23:42,990 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 02:23:45.463" starttime="20210127 02:23:41.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210127 02:23:45.463" starttime="20210127 02:23:45.463"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:23:45.463" critical="yes" starttime="20210127 02:23:41.365"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:23:45.468" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:23:49.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:23:49.608" level="INFO">${output} = 2021-01-27 02:23:46,940 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:23:47,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 02:23:49.608" starttime="20210127 02:23:45.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:23:49.609" level="INFO">2021-01-27 02:23:46,940 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:23:47,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:23:47,100 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-27 02:23:47,250 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-01-27 02:23:47,273 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:48,280 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:49,281 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-27 02:23:49,571 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=68.445072, max=68.445072, mean=68.445072, stddev=0.0, median=68.445072, p75=68.445072, p95=68.445072, p98=68.445072, p99=68.445072, p999=68.445072, mean_rate=0.9792090860450746, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-27 02:23:49,574 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-01-27 02:23:49,581 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-27 02:23:49,581 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210127 02:23:49.609" starttime="20210127 02:23:49.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:23:49.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:23:49.610" starttime="20210127 02:23:49.609"></status>
</kw>
<status status="PASS" endtime="20210127 02:23:49.610" starttime="20210127 02:23:45.466"></status>
</kw>
<msg timestamp="20210127 02:23:49.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:23:49.610" starttime="20210127 02:23:45.465"></status>
</kw>
<msg timestamp="20210127 02:23:49.611" level="INFO">${result} = 2021-01-27 02:23:46,940 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:23:47,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 02:23:49.611" starttime="20210127 02:23:45.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210127 02:23:49.611" starttime="20210127 02:23:49.611"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:23:49.611" critical="yes" starttime="20210127 02:23:45.464"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210127 02:23:49.613" starttime="20210127 02:23:27.998"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:23:49.622" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:23:55.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:23:55.589" level="INFO">${output} = 2021-01-27 02:23:51,150 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:23:51,251 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 02:23:55.589" starttime="20210127 02:23:49.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:23:55.590" level="INFO">2021-01-27 02:23:51,150 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:23:51,251 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:23:51,251 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-27 02:23:51,368 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-27 02:23:51,384 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:52,388 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:53,389 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 02:23:53,569 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-27 02:23:54,389 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-27 02:23:55,263 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=73.456792, max=73.456792, mean=73.456792, stddev=0.0, median=73.456792, p75=73.456792, p95=73.456792, p98=73.456792, p99=73.456792, p999=73.456792, mean_rate=0.9603208559510342, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-27 02:23:55,264 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-01-27 02:23:55,266 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-27 02:23:55,266 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210127 02:23:55.590" starttime="20210127 02:23:55.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:23:55.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:23:55.592" starttime="20210127 02:23:55.591"></status>
</kw>
<status status="PASS" endtime="20210127 02:23:55.593" starttime="20210127 02:23:49.620"></status>
</kw>
<msg timestamp="20210127 02:23:55.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:23:55.593" starttime="20210127 02:23:49.620"></status>
</kw>
<msg timestamp="20210127 02:23:55.593" level="INFO">${result} = 2021-01-27 02:23:51,150 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 02:23:51,251 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 02:23:55.593" starttime="20210127 02:23:49.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210127 02:23:55.593" starttime="20210127 02:23:55.593"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:23:55.594" critical="yes" starttime="20210127 02:23:49.618"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210127 02:23:55.594" starttime="20210127 02:23:49.615"></status>
</suite>
<status status="PASS" endtime="20210127 02:23:55.596" starttime="20210127 02:23:27.975"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:23:20.515" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:23:20.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:23:20.523" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:23:20.523" starttime="20210127 02:23:20.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:23:20.524" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:23:20.524" starttime="20210127 02:23:20.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:23:20.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:23:20.527" starttime="20210127 02:23:20.524"></status>
</kw>
<status status="PASS" endtime="20210127 02:23:20.527" starttime="20210127 02:23:20.510"></status>
</kw>
<msg timestamp="20210127 02:23:20.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:23:20.527" starttime="20210127 02:23:20.506"></status>
</kw>
<msg timestamp="20210127 02:23:20.527" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:23:20.527" starttime="20210127 02:23:20.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:23:20.528" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:23:20.528" starttime="20210127 02:23:20.528"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:23:20.531" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:23:20.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:23:20.552" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:23:20.552" starttime="20210127 02:23:20.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:23:20.553" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:23:20.553" starttime="20210127 02:23:20.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:23:20.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:23:20.554" starttime="20210127 02:23:20.554"></status>
</kw>
<status status="PASS" endtime="20210127 02:23:20.554" starttime="20210127 02:23:20.529"></status>
</kw>
<msg timestamp="20210127 02:23:20.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:23:20.554" starttime="20210127 02:23:20.529"></status>
</kw>
<status status="PASS" endtime="20210127 02:23:20.555" starttime="20210127 02:23:20.529"></status>
</kw>
<status status="PASS" endtime="20210127 02:23:20.555" starttime="20210127 02:23:20.528"></status>
</kw>
<status status="PASS" endtime="20210127 02:23:20.555" starttime="20210127 02:23:20.505"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:23:20.555" critical="yes" starttime="20210127 02:23:20.504"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210127 02:23:20.556" starttime="20210127 02:23:20.391"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 02:24:00.350" level="INFO">${random} = 16785</msg>
<status status="PASS" endtime="20210127 02:24:00.350" starttime="20210127 02:24:00.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210127 02:24:00.351" level="INFO">${source} = 16785-source</msg>
<status status="PASS" endtime="20210127 02:24:00.351" starttime="20210127 02:24:00.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210127 02:24:00.352" level="INFO">${target} = 16785-target</msg>
<status status="PASS" endtime="20210127 02:24:00.352" starttime="20210127 02:24:00.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:00.356" level="INFO">Running command 'ozone sh volume create 16785-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:03.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:03.322" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:03.322" starttime="20210127 02:24:00.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:03.323" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:03.323" starttime="20210127 02:24:03.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:03.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:03.324" starttime="20210127 02:24:03.323"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:03.324" starttime="20210127 02:24:00.353"></status>
</kw>
<msg timestamp="20210127 02:24:03.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:03.324" starttime="20210127 02:24:00.353"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:03.324" starttime="20210127 02:24:00.352"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:03.327" level="INFO">Running command 'ozone sh volume create 16785-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:06.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:06.256" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:06.256" starttime="20210127 02:24:03.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:06.257" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:06.257" starttime="20210127 02:24:06.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:06.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:06.258" starttime="20210127 02:24:06.257"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:06.258" starttime="20210127 02:24:03.325"></status>
</kw>
<msg timestamp="20210127 02:24:06.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:06.258" starttime="20210127 02:24:03.325"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:06.258" starttime="20210127 02:24:03.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:06.262" level="INFO">Running command 'ozone sh bucket create 16785-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:09.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:09.071" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:09.071" starttime="20210127 02:24:06.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:09.072" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:09.072" starttime="20210127 02:24:09.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:09.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:09.073" starttime="20210127 02:24:09.072"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:09.073" starttime="20210127 02:24:06.260"></status>
</kw>
<msg timestamp="20210127 02:24:09.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:09.073" starttime="20210127 02:24:06.260"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:09.073" starttime="20210127 02:24:06.259"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:09.076" level="INFO">Running command 'ozone sh key put 16785-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:14.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:14.064" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:14.064" starttime="20210127 02:24:09.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:14.065" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:14.065" starttime="20210127 02:24:14.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:14.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:14.065" starttime="20210127 02:24:14.065"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:14.066" starttime="20210127 02:24:09.074"></status>
</kw>
<msg timestamp="20210127 02:24:14.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:14.066" starttime="20210127 02:24:09.074"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:14.066" starttime="20210127 02:24:09.074"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:14.069" level="INFO">Running command 'ozone sh bucket create 16785-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:17.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:17.797" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:17.797" starttime="20210127 02:24:14.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:17.798" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:17.798" starttime="20210127 02:24:17.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:17.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:17.799" starttime="20210127 02:24:17.798"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:17.799" starttime="20210127 02:24:14.067"></status>
</kw>
<msg timestamp="20210127 02:24:17.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:17.799" starttime="20210127 02:24:14.066"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:17.799" starttime="20210127 02:24:14.066"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:17.803" level="INFO">Running command 'ozone sh bucket link 16785-source/readable-bucket 16785-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:20.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:20.597" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:20.597" starttime="20210127 02:24:17.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:20.598" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:20.598" starttime="20210127 02:24:20.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:20.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:20.599" starttime="20210127 02:24:20.598"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:20.599" starttime="20210127 02:24:17.800"></status>
</kw>
<msg timestamp="20210127 02:24:20.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:20.599" starttime="20210127 02:24:17.800"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:20.599" starttime="20210127 02:24:17.799"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:20.603" level="INFO">Running command 'ozone sh bucket link 16785-source/readable-bucket 16785-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:23.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:23.749" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:23.749" starttime="20210127 02:24:20.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:23.750" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:23.750" starttime="20210127 02:24:23.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:23.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:23.751" starttime="20210127 02:24:23.750"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:23.751" starttime="20210127 02:24:20.600"></status>
</kw>
<msg timestamp="20210127 02:24:23.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:23.751" starttime="20210127 02:24:20.600"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:23.751" starttime="20210127 02:24:20.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:23.754" level="INFO">Running command 'ozone sh bucket link 16785-source/unreadable-bucket 16785-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:26.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:26.752" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:26.752" starttime="20210127 02:24:23.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:26.753" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:26.753" starttime="20210127 02:24:26.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:26.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:26.754" starttime="20210127 02:24:26.754"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:26.754" starttime="20210127 02:24:23.752"></status>
</kw>
<msg timestamp="20210127 02:24:26.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:26.754" starttime="20210127 02:24:23.752"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:26.755" starttime="20210127 02:24:23.752"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:26.758" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 16785-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:29.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:29.673" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:24:29.673" starttime="20210127 02:24:26.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:29.674" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:24:29.674" starttime="20210127 02:24:29.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:29.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:29.675" starttime="20210127 02:24:29.674"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:29.675" starttime="20210127 02:24:26.755"></status>
</kw>
<msg timestamp="20210127 02:24:29.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:29.675" starttime="20210127 02:24:26.755"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:29.675" starttime="20210127 02:24:26.755"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:29.678" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 16785-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:32.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:32.636" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:24:32.636" starttime="20210127 02:24:29.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:32.637" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:24:32.637" starttime="20210127 02:24:32.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:32.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:32.637" starttime="20210127 02:24:32.637"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:32.638" starttime="20210127 02:24:29.676"></status>
</kw>
<msg timestamp="20210127 02:24:32.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:32.638" starttime="20210127 02:24:29.676"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:32.638" starttime="20210127 02:24:29.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:32.641" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 16785-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:35.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:35.534" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:24:35.534" starttime="20210127 02:24:32.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:35.535" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:24:35.535" starttime="20210127 02:24:35.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:35.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:35.536" starttime="20210127 02:24:35.535"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:35.536" starttime="20210127 02:24:32.639"></status>
</kw>
<msg timestamp="20210127 02:24:35.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:35.536" starttime="20210127 02:24:32.639"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:35.536" starttime="20210127 02:24:32.638"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:35.540" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 16785-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:38.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:38.530" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:24:38.530" starttime="20210127 02:24:35.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:38.531" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:24:38.531" starttime="20210127 02:24:38.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:38.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:38.531" starttime="20210127 02:24:38.531"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:38.531" starttime="20210127 02:24:35.537"></status>
</kw>
<msg timestamp="20210127 02:24:38.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:38.532" starttime="20210127 02:24:35.537"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:38.532" starttime="20210127 02:24:35.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:38.535" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 16785-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:41.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:41.431" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:24:41.431" starttime="20210127 02:24:38.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:41.432" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:24:41.432" starttime="20210127 02:24:41.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:41.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:41.432" starttime="20210127 02:24:41.432"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:41.433" starttime="20210127 02:24:38.533"></status>
</kw>
<msg timestamp="20210127 02:24:41.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:41.433" starttime="20210127 02:24:38.532"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:41.433" starttime="20210127 02:24:38.532"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:41.433" starttime="20210127 02:24:06.259"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:41.433" starttime="20210127 02:24:06.258"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:41.434" starttime="20210127 02:24:00.349"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:41.439" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:41.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:41.441" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:24:41.441" starttime="20210127 02:24:41.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:41.442" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:24:41.442" starttime="20210127 02:24:41.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:41.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:41.442" starttime="20210127 02:24:41.442"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:41.443" starttime="20210127 02:24:41.436"></status>
</kw>
<msg timestamp="20210127 02:24:41.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:41.443" starttime="20210127 02:24:41.436"></status>
</kw>
<msg timestamp="20210127 02:24:41.443" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:24:41.443" starttime="20210127 02:24:41.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:24:41.444" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:24:41.444" starttime="20210127 02:24:41.443"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:41.447" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:41.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:41.463" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:41.464" starttime="20210127 02:24:41.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:41.464" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:41.465" starttime="20210127 02:24:41.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:41.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:41.465" starttime="20210127 02:24:41.465"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:41.465" starttime="20210127 02:24:41.445"></status>
</kw>
<msg timestamp="20210127 02:24:41.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:41.465" starttime="20210127 02:24:41.445"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:41.466" starttime="20210127 02:24:41.445"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:41.466" starttime="20210127 02:24:41.444"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:41.466" starttime="20210127 02:24:41.435"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:41.466" starttime="20210127 02:24:41.435"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:41.469" level="INFO">Running command 'ozone sh bucket link 16785-source/no-such-bucket 16785-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:44.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:44.461" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:44.461" starttime="20210127 02:24:41.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:44.462" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:44.462" starttime="20210127 02:24:44.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:44.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:44.462" starttime="20210127 02:24:44.462"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:44.463" starttime="20210127 02:24:41.467"></status>
</kw>
<msg timestamp="20210127 02:24:44.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:44.463" starttime="20210127 02:24:41.467"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:44.463" starttime="20210127 02:24:41.466"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:44.465" level="INFO">Running command 'ozone sh key list 16785-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:47.227" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 02:24:47.227" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210127 02:24:47.227" starttime="20210127 02:24:44.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:47.228" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210127 02:24:47.228" starttime="20210127 02:24:47.228"></status>
</kw>
<msg timestamp="20210127 02:24:47.229" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210127 02:24:47.229" starttime="20210127 02:24:44.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210127 02:24:47.229" starttime="20210127 02:24:47.229"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:24:47.230" critical="yes" starttime="20210127 02:24:41.434"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:47.236" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:47.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:47.237" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:24:47.237" starttime="20210127 02:24:47.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:47.238" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:24:47.238" starttime="20210127 02:24:47.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:47.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:47.239" starttime="20210127 02:24:47.238"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:47.239" starttime="20210127 02:24:47.233"></status>
</kw>
<msg timestamp="20210127 02:24:47.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:47.239" starttime="20210127 02:24:47.232"></status>
</kw>
<msg timestamp="20210127 02:24:47.239" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:24:47.239" starttime="20210127 02:24:47.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:24:47.240" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:24:47.240" starttime="20210127 02:24:47.239"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:47.243" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:47.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:47.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:47.259" starttime="20210127 02:24:47.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:47.260" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:47.260" starttime="20210127 02:24:47.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:47.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:47.261" starttime="20210127 02:24:47.260"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:47.261" starttime="20210127 02:24:47.241"></status>
</kw>
<msg timestamp="20210127 02:24:47.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:47.261" starttime="20210127 02:24:47.241"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:47.261" starttime="20210127 02:24:47.240"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:47.261" starttime="20210127 02:24:47.240"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:47.261" starttime="20210127 02:24:47.232"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:47.261" starttime="20210127 02:24:47.231"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:47.264" level="INFO">Running command 'ozone sh bucket link 16785-source/bucket1 16785-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:50.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:50.303" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:50.304" starttime="20210127 02:24:47.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:50.305" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:50.305" starttime="20210127 02:24:50.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:50.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:50.305" starttime="20210127 02:24:50.305"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:50.306" starttime="20210127 02:24:47.262"></status>
</kw>
<msg timestamp="20210127 02:24:50.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:50.306" starttime="20210127 02:24:47.262"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:50.306" starttime="20210127 02:24:47.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:50.309" level="INFO">Running command 'ozone sh bucket create 16785-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:24:53.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:24:53.319" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:24:53.319" starttime="20210127 02:24:50.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:24:53.320" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:24:53.320" starttime="20210127 02:24:53.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:24:53.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:24:53.321" starttime="20210127 02:24:53.320"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:53.321" starttime="20210127 02:24:50.307"></status>
</kw>
<msg timestamp="20210127 02:24:53.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:24:53.321" starttime="20210127 02:24:50.306"></status>
</kw>
<status status="PASS" endtime="20210127 02:24:53.321" starttime="20210127 02:24:50.306"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:24:53.324" level="INFO">Running command 'ozone sh key put 16785-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:01.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:01.311" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:01.312" starttime="20210127 02:24:53.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:01.314" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:01.315" starttime="20210127 02:25:01.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:01.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:01.317" starttime="20210127 02:25:01.315"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:01.317" starttime="20210127 02:24:53.322"></status>
</kw>
<msg timestamp="20210127 02:25:01.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:01.318" starttime="20210127 02:24:53.322"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:01.319" starttime="20210127 02:24:53.321"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210127 02:25:01.323" level="INFO">${postfix} = 02080</msg>
<status status="PASS" endtime="20210127 02:25:01.323" starttime="20210127 02:25:01.322"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210127 02:25:01.325" level="INFO">${tmpfile} = /tmp/tempkey-02080</msg>
<status status="PASS" endtime="20210127 02:25:01.325" starttime="20210127 02:25:01.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:01.328" level="INFO">Running command 'ozone sh key get -f 16785-target/link1/key1 /tmp/tempkey-02080 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:05.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:05.863" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:05.863" starttime="20210127 02:25:01.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:05.864" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:05.864" starttime="20210127 02:25:05.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:05.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:05.865" starttime="20210127 02:25:05.864"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:05.865" starttime="20210127 02:25:01.326"></status>
</kw>
<msg timestamp="20210127 02:25:05.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:05.865" starttime="20210127 02:25:01.325"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:05.865" starttime="20210127 02:25:01.325"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210127 02:25:05.867" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-02080 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:05.869" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210127 02:25:05.870" starttime="20210127 02:25:05.865"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:05.874" level="INFO">Running command 'rm -f /tmp/tempkey-02080 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:05.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:05.876" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:05.876" starttime="20210127 02:25:05.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:05.877" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:05.877" starttime="20210127 02:25:05.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:05.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:05.877" starttime="20210127 02:25:05.877"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:05.878" starttime="20210127 02:25:05.871"></status>
</kw>
<msg timestamp="20210127 02:25:05.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:05.878" starttime="20210127 02:25:05.871"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:05.878" starttime="20210127 02:25:05.870"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:25:05.878" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210127 02:25:05.878" starttime="20210127 02:25:05.878"></status>
</kw>
<msg timestamp="20210127 02:25:05.879" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210127 02:25:05.879" starttime="20210127 02:25:01.321"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:05.879" starttime="20210127 02:25:05.879"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:05.879" starttime="20210127 02:25:01.319"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:25:05.879" critical="yes" starttime="20210127 02:24:47.230"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:05.884" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:05.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:05.886" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:25:05.886" starttime="20210127 02:25:05.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:05.887" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:25:05.887" starttime="20210127 02:25:05.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:05.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:05.888" starttime="20210127 02:25:05.887"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:05.888" starttime="20210127 02:25:05.882"></status>
</kw>
<msg timestamp="20210127 02:25:05.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:05.888" starttime="20210127 02:25:05.882"></status>
</kw>
<msg timestamp="20210127 02:25:05.889" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:25:05.889" starttime="20210127 02:25:05.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:25:05.889" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:25:05.889" starttime="20210127 02:25:05.889"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:05.892" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:05.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:05.902" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:05.902" starttime="20210127 02:25:05.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:05.903" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:05.903" starttime="20210127 02:25:05.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:05.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:05.904" starttime="20210127 02:25:05.904"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:05.904" starttime="20210127 02:25:05.890"></status>
</kw>
<msg timestamp="20210127 02:25:05.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:05.904" starttime="20210127 02:25:05.890"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:05.905" starttime="20210127 02:25:05.890"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:05.905" starttime="20210127 02:25:05.889"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:05.905" starttime="20210127 02:25:05.881"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:05.905" starttime="20210127 02:25:05.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:05.908" level="INFO">Running command 'ozone sh key put 16785-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:10.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:10.713" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:10.713" starttime="20210127 02:25:05.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:10.714" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:10.714" starttime="20210127 02:25:10.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:10.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:10.715" starttime="20210127 02:25:10.714"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:10.715" starttime="20210127 02:25:05.906"></status>
</kw>
<msg timestamp="20210127 02:25:10.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:10.715" starttime="20210127 02:25:05.905"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:10.715" starttime="20210127 02:25:05.905"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210127 02:25:10.717" level="INFO">${postfix} = 60444</msg>
<status status="PASS" endtime="20210127 02:25:10.717" starttime="20210127 02:25:10.716"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210127 02:25:10.717" level="INFO">${tmpfile} = /tmp/tempkey-60444</msg>
<status status="PASS" endtime="20210127 02:25:10.717" starttime="20210127 02:25:10.717"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:10.720" level="INFO">Running command 'ozone sh key get -f 16785-source/bucket1/key2 /tmp/tempkey-60444 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:15.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:15.350" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:15.350" starttime="20210127 02:25:10.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:15.351" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:15.351" starttime="20210127 02:25:15.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:15.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:15.352" starttime="20210127 02:25:15.351"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:15.352" starttime="20210127 02:25:10.718"></status>
</kw>
<msg timestamp="20210127 02:25:15.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:15.352" starttime="20210127 02:25:10.718"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:15.352" starttime="20210127 02:25:10.717"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210127 02:25:15.354" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-60444 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:15.357" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210127 02:25:15.357" starttime="20210127 02:25:15.353"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:15.360" level="INFO">Running command 'rm -f /tmp/tempkey-60444 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:15.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:15.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:15.362" starttime="20210127 02:25:15.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:15.363" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:15.363" starttime="20210127 02:25:15.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:15.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:15.364" starttime="20210127 02:25:15.363"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:15.364" starttime="20210127 02:25:15.358"></status>
</kw>
<msg timestamp="20210127 02:25:15.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:15.364" starttime="20210127 02:25:15.358"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:15.364" starttime="20210127 02:25:15.357"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:25:15.365" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210127 02:25:15.365" starttime="20210127 02:25:15.364"></status>
</kw>
<msg timestamp="20210127 02:25:15.365" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210127 02:25:15.365" starttime="20210127 02:25:10.716"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:15.365" starttime="20210127 02:25:15.365"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:15.366" starttime="20210127 02:25:10.715"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:25:15.366" critical="yes" starttime="20210127 02:25:05.880"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:15.371" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:15.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:15.373" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:25:15.373" starttime="20210127 02:25:15.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:15.374" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:25:15.374" starttime="20210127 02:25:15.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:15.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:15.374" starttime="20210127 02:25:15.374"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:15.375" starttime="20210127 02:25:15.369"></status>
</kw>
<msg timestamp="20210127 02:25:15.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:15.375" starttime="20210127 02:25:15.369"></status>
</kw>
<msg timestamp="20210127 02:25:15.375" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:25:15.375" starttime="20210127 02:25:15.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:25:15.375" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:25:15.376" starttime="20210127 02:25:15.375"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:15.379" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:15.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:15.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:15.401" starttime="20210127 02:25:15.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:15.402" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:15.402" starttime="20210127 02:25:15.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:15.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:15.403" starttime="20210127 02:25:15.402"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:15.403" starttime="20210127 02:25:15.377"></status>
</kw>
<msg timestamp="20210127 02:25:15.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:15.403" starttime="20210127 02:25:15.377"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:15.403" starttime="20210127 02:25:15.376"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:15.403" starttime="20210127 02:25:15.376"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:15.404" starttime="20210127 02:25:15.367"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:15.404" starttime="20210127 02:25:15.367"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:15.406" level="INFO">Running command 'ozone sh key list 16785-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:18.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:18.500" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210127 02:25:18.500" starttime="20210127 02:25:15.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:18.501" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210127 02:25:18.501" starttime="20210127 02:25:18.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:18.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:18.501" starttime="20210127 02:25:18.501"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:18.502" starttime="20210127 02:25:15.405"></status>
</kw>
<msg timestamp="20210127 02:25:18.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:18.502" starttime="20210127 02:25:15.404"></status>
</kw>
<msg timestamp="20210127 02:25:18.502" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210127 02:25:18.502" starttime="20210127 02:25:15.404"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:18.506" level="INFO">Running command 'ozone sh key list 16785-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:21.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:21.638" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210127 02:25:21.638" starttime="20210127 02:25:18.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:21.639" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210127 02:25:21.639" starttime="20210127 02:25:21.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:21.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:21.640" starttime="20210127 02:25:21.639"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:21.640" starttime="20210127 02:25:18.503"></status>
</kw>
<msg timestamp="20210127 02:25:21.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:21.640" starttime="20210127 02:25:18.503"></status>
</kw>
<msg timestamp="20210127 02:25:21.641" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210127 02:25:21.641" starttime="20210127 02:25:18.502"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:21.641" starttime="20210127 02:25:21.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:21.642" starttime="20210127 02:25:21.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:21.642" starttime="20210127 02:25:21.642"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:25:21.642" critical="yes" starttime="20210127 02:25:15.366"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:21.647" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:21.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:21.650" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:25:21.650" starttime="20210127 02:25:21.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:21.650" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:25:21.650" starttime="20210127 02:25:21.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:21.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:21.651" starttime="20210127 02:25:21.651"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:21.651" starttime="20210127 02:25:21.645"></status>
</kw>
<msg timestamp="20210127 02:25:21.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:21.651" starttime="20210127 02:25:21.645"></status>
</kw>
<msg timestamp="20210127 02:25:21.652" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:25:21.652" starttime="20210127 02:25:21.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:25:21.652" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:25:21.652" starttime="20210127 02:25:21.652"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:21.656" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:21.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:21.679" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:21.679" starttime="20210127 02:25:21.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:21.679" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:21.680" starttime="20210127 02:25:21.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:21.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:21.680" starttime="20210127 02:25:21.680"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:21.680" starttime="20210127 02:25:21.654"></status>
</kw>
<msg timestamp="20210127 02:25:21.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:21.681" starttime="20210127 02:25:21.653"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:21.681" starttime="20210127 02:25:21.653"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:21.681" starttime="20210127 02:25:21.653"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:21.681" starttime="20210127 02:25:21.644"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:21.681" starttime="20210127 02:25:21.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:21.685" level="INFO">Running command 'ozone sh key delete 16785-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:24.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:24.706" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:24.706" starttime="20210127 02:25:21.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:24.707" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:24.707" starttime="20210127 02:25:24.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:24.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:24.707" starttime="20210127 02:25:24.707"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:24.708" starttime="20210127 02:25:21.682"></status>
</kw>
<msg timestamp="20210127 02:25:24.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:24.708" starttime="20210127 02:25:21.682"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:24.713" starttime="20210127 02:25:21.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:24.718" level="INFO">Running command 'ozone sh key list 16785-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:27.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:27.840" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210127 02:25:27.840" starttime="20210127 02:25:24.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:27.841" level="INFO">key1</msg>
<status status="PASS" endtime="20210127 02:25:27.841" starttime="20210127 02:25:27.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:27.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:27.842" starttime="20210127 02:25:27.841"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:27.842" starttime="20210127 02:25:24.714"></status>
</kw>
<msg timestamp="20210127 02:25:27.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:27.842" starttime="20210127 02:25:24.714"></status>
</kw>
<msg timestamp="20210127 02:25:27.843" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210127 02:25:27.843" starttime="20210127 02:25:24.713"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:27.843" starttime="20210127 02:25:27.843"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:25:27.843" critical="yes" starttime="20210127 02:25:21.643"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:27.848" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:27.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:27.850" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:25:27.850" starttime="20210127 02:25:27.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:27.851" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:25:27.851" starttime="20210127 02:25:27.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:27.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:27.852" starttime="20210127 02:25:27.851"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:27.852" starttime="20210127 02:25:27.846"></status>
</kw>
<msg timestamp="20210127 02:25:27.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:27.852" starttime="20210127 02:25:27.845"></status>
</kw>
<msg timestamp="20210127 02:25:27.852" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:25:27.852" starttime="20210127 02:25:27.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:25:27.853" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:25:27.853" starttime="20210127 02:25:27.852"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:27.856" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:27.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:27.878" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:27.878" starttime="20210127 02:25:27.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:27.879" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:27.879" starttime="20210127 02:25:27.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:27.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:27.879" starttime="20210127 02:25:27.879"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:27.880" starttime="20210127 02:25:27.854"></status>
</kw>
<msg timestamp="20210127 02:25:27.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:27.880" starttime="20210127 02:25:27.854"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:27.880" starttime="20210127 02:25:27.853"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:27.880" starttime="20210127 02:25:27.853"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:27.880" starttime="20210127 02:25:27.845"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:27.880" starttime="20210127 02:25:27.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:27.883" level="INFO">Running command 'ozone sh bucket list 16785-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:30.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:30.941" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210127 02:25:30.941" starttime="20210127 02:25:27.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:30.942" level="INFO">{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:24:44.293Z",
  "modificationTime" : "2021-01-27T02:24:44.293Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:24:26.656Z",
  "modificationTime" : "2021-01-27T02:24:41.326Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:24:50.145Z",
  "modificationTime" : "2021-01-27T02:24:50.145Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:24:20.506Z",
  "modificationTime" : "2021-01-27T02:24:38.320Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:24:23.617Z",
  "modificationTime" : "2021-01-27T02:24:23.617Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210127 02:25:30.942" starttime="20210127 02:25:30.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:30.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:30.942" starttime="20210127 02:25:30.942"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:30.943" starttime="20210127 02:25:27.881"></status>
</kw>
<msg timestamp="20210127 02:25:30.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:30.943" starttime="20210127 02:25:27.881"></status>
</kw>
<msg timestamp="20210127 02:25:30.943" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210127 02:25:30.943" starttime="20210127 02:25:27.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:30.944" starttime="20210127 02:25:30.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:30.944" starttime="20210127 02:25:30.944"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:25:30.944" critical="yes" starttime="20210127 02:25:27.844"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:30.949" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:30.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:30.951" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:25:30.951" starttime="20210127 02:25:30.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:30.952" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:25:30.952" starttime="20210127 02:25:30.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:30.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:30.953" starttime="20210127 02:25:30.952"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:30.953" starttime="20210127 02:25:30.947"></status>
</kw>
<msg timestamp="20210127 02:25:30.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:30.953" starttime="20210127 02:25:30.946"></status>
</kw>
<msg timestamp="20210127 02:25:30.953" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:25:30.953" starttime="20210127 02:25:30.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:25:30.954" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:25:30.954" starttime="20210127 02:25:30.953"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:30.957" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:30.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:30.967" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:30.967" starttime="20210127 02:25:30.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:30.968" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:30.968" starttime="20210127 02:25:30.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:30.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:30.969" starttime="20210127 02:25:30.968"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:30.969" starttime="20210127 02:25:30.955"></status>
</kw>
<msg timestamp="20210127 02:25:30.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:30.969" starttime="20210127 02:25:30.955"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:30.969" starttime="20210127 02:25:30.954"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:30.969" starttime="20210127 02:25:30.954"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:30.969" starttime="20210127 02:25:30.946"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:30.969" starttime="20210127 02:25:30.945"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:30.973" level="INFO">Running command 'ozone sh bucket info 16785-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:33.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:33.839" level="INFO">${output} = 16785-source bucket1</msg>
<status status="PASS" endtime="20210127 02:25:33.839" starttime="20210127 02:25:30.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:33.840" level="INFO">16785-source bucket1</msg>
<status status="PASS" endtime="20210127 02:25:33.840" starttime="20210127 02:25:33.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:33.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:33.841" starttime="20210127 02:25:33.841"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:33.841" starttime="20210127 02:25:30.970"></status>
</kw>
<msg timestamp="20210127 02:25:33.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:33.841" starttime="20210127 02:25:30.970"></status>
</kw>
<msg timestamp="20210127 02:25:33.842" level="INFO">${result} = 16785-source bucket1</msg>
<status status="PASS" endtime="20210127 02:25:33.842" starttime="20210127 02:25:30.970"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:33.842" starttime="20210127 02:25:33.842"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:25:33.842" critical="yes" starttime="20210127 02:25:30.945"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:33.848" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:33.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:33.850" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:25:33.850" starttime="20210127 02:25:33.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:33.851" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:25:33.851" starttime="20210127 02:25:33.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:33.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:33.851" starttime="20210127 02:25:33.851"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:33.852" starttime="20210127 02:25:33.845"></status>
</kw>
<msg timestamp="20210127 02:25:33.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:33.852" starttime="20210127 02:25:33.845"></status>
</kw>
<msg timestamp="20210127 02:25:33.852" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:25:33.852" starttime="20210127 02:25:33.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:25:33.853" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:25:33.853" starttime="20210127 02:25:33.852"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:33.856" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:33.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:33.878" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:33.878" starttime="20210127 02:25:33.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:33.880" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:33.880" starttime="20210127 02:25:33.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:33.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:33.880" starttime="20210127 02:25:33.880"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:33.881" starttime="20210127 02:25:33.854"></status>
</kw>
<msg timestamp="20210127 02:25:33.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:33.881" starttime="20210127 02:25:33.854"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:33.881" starttime="20210127 02:25:33.853"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:33.881" starttime="20210127 02:25:33.853"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:33.881" starttime="20210127 02:25:33.844"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:33.881" starttime="20210127 02:25:33.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:33.884" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 16785-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:36.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:36.633" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:25:36.633" starttime="20210127 02:25:33.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:36.634" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:25:36.634" starttime="20210127 02:25:36.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:36.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:36.635" starttime="20210127 02:25:36.635"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:36.635" starttime="20210127 02:25:33.882"></status>
</kw>
<msg timestamp="20210127 02:25:36.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:36.635" starttime="20210127 02:25:33.882"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:36.636" starttime="20210127 02:25:33.881"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:36.639" level="INFO">Running command 'ozone sh bucket getacl 16785-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:39.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:39.547" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210127 02:25:39.547" starttime="20210127 02:25:36.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:39.548" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210127 02:25:39.548" starttime="20210127 02:25:39.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:39.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:39.549" starttime="20210127 02:25:39.548"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:39.549" starttime="20210127 02:25:36.637"></status>
</kw>
<msg timestamp="20210127 02:25:39.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:39.549" starttime="20210127 02:25:36.637"></status>
</kw>
<msg timestamp="20210127 02:25:39.549" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210127 02:25:39.549" starttime="20210127 02:25:36.636"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:39.550" starttime="20210127 02:25:39.550"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:39.550" starttime="20210127 02:25:36.636"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:39.554" level="INFO">Running command 'ozone sh bucket getacl 16785-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:42.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:42.455" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:42.455" starttime="20210127 02:25:39.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:42.456" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:42.456" starttime="20210127 02:25:42.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:42.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:42.457" starttime="20210127 02:25:42.456"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:42.457" starttime="20210127 02:25:39.552"></status>
</kw>
<msg timestamp="20210127 02:25:42.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:42.457" starttime="20210127 02:25:39.552"></status>
</kw>
<msg timestamp="20210127 02:25:42.457" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210127 02:25:42.458" starttime="20210127 02:25:39.551"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:42.458" starttime="20210127 02:25:42.458"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:42.458" starttime="20210127 02:25:39.550"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:42.462" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 16785-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:45.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:45.138" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:25:45.138" starttime="20210127 02:25:42.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:45.139" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 02:25:45.139" starttime="20210127 02:25:45.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:45.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:45.139" starttime="20210127 02:25:45.139"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:45.140" starttime="20210127 02:25:42.460"></status>
</kw>
<msg timestamp="20210127 02:25:45.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:45.140" starttime="20210127 02:25:42.459"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:45.140" starttime="20210127 02:25:42.458"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:45.144" level="INFO">Running command 'ozone sh bucket getacl 16785-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:48.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:48.074" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:48.074" starttime="20210127 02:25:45.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:48.075" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:48.075" starttime="20210127 02:25:48.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:48.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:48.075" starttime="20210127 02:25:48.075"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:48.076" starttime="20210127 02:25:45.142"></status>
</kw>
<msg timestamp="20210127 02:25:48.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:48.076" starttime="20210127 02:25:45.142"></status>
</kw>
<msg timestamp="20210127 02:25:48.076" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210127 02:25:48.076" starttime="20210127 02:25:45.141"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:48.077" starttime="20210127 02:25:48.076"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:48.077" starttime="20210127 02:25:45.140"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:48.081" level="INFO">Running command 'ozone sh bucket getacl 16785-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:51.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:51.165" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210127 02:25:51.165" starttime="20210127 02:25:48.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:51.166" level="INFO">READ</msg>
<status status="PASS" endtime="20210127 02:25:51.166" starttime="20210127 02:25:51.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:51.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:51.167" starttime="20210127 02:25:51.167"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:51.167" starttime="20210127 02:25:48.079"></status>
</kw>
<msg timestamp="20210127 02:25:51.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:51.168" starttime="20210127 02:25:48.078"></status>
</kw>
<msg timestamp="20210127 02:25:51.168" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210127 02:25:51.168" starttime="20210127 02:25:48.078"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:51.168" starttime="20210127 02:25:51.168"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:51.169" starttime="20210127 02:25:48.077"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:25:51.169" critical="yes" starttime="20210127 02:25:33.843"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:51.175" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:51.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:51.176" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:25:51.176" starttime="20210127 02:25:51.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:51.177" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:25:51.177" starttime="20210127 02:25:51.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:51.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:51.178" starttime="20210127 02:25:51.177"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:51.178" starttime="20210127 02:25:51.172"></status>
</kw>
<msg timestamp="20210127 02:25:51.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:51.178" starttime="20210127 02:25:51.171"></status>
</kw>
<msg timestamp="20210127 02:25:51.178" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:25:51.178" starttime="20210127 02:25:51.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:25:51.179" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:25:51.179" starttime="20210127 02:25:51.178"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:51.183" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:51.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:51.205" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:51.205" starttime="20210127 02:25:51.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:51.206" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:51.206" starttime="20210127 02:25:51.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:51.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:51.206" starttime="20210127 02:25:51.206"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:51.206" starttime="20210127 02:25:51.181"></status>
</kw>
<msg timestamp="20210127 02:25:51.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:51.207" starttime="20210127 02:25:51.180"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:51.207" starttime="20210127 02:25:51.179"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:51.207" starttime="20210127 02:25:51.179"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:51.207" starttime="20210127 02:25:51.171"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:51.207" starttime="20210127 02:25:51.170"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:51.210" level="INFO">Running command 'ozone sh bucket link 16785-source/bucket2 16785-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:53.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:53.988" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:53.988" starttime="20210127 02:25:51.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:53.989" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:53.989" starttime="20210127 02:25:53.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:53.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:53.990" starttime="20210127 02:25:53.989"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:53.990" starttime="20210127 02:25:51.208"></status>
</kw>
<msg timestamp="20210127 02:25:53.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:53.990" starttime="20210127 02:25:51.208"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:53.991" starttime="20210127 02:25:51.207"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:53.993" level="INFO">Running command 'ozone sh bucket create 16785-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:56.793" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 02:25:56.793" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210127 02:25:56.793" starttime="20210127 02:25:53.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:56.794" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210127 02:25:56.795" starttime="20210127 02:25:56.794"></status>
</kw>
<msg timestamp="20210127 02:25:56.795" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210127 02:25:56.795" starttime="20210127 02:25:53.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210127 02:25:56.795" starttime="20210127 02:25:56.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:56.799" level="INFO">Running command 'ozone sh bucket create 16785-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:25:59.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:25:59.832" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:25:59.832" starttime="20210127 02:25:56.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:25:59.833" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:25:59.833" starttime="20210127 02:25:59.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:25:59.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:25:59.834" starttime="20210127 02:25:59.833"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:59.834" starttime="20210127 02:25:56.796"></status>
</kw>
<msg timestamp="20210127 02:25:59.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:25:59.834" starttime="20210127 02:25:56.796"></status>
</kw>
<status status="PASS" endtime="20210127 02:25:59.835" starttime="20210127 02:25:56.796"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:25:59.837" level="INFO">Running command 'ozone sh bucket link 16785-source/bucket1 16785-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:02.745" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 02:26:02.745" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210127 02:26:02.745" starttime="20210127 02:25:59.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:02.746" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210127 02:26:02.746" starttime="20210127 02:26:02.746"></status>
</kw>
<msg timestamp="20210127 02:26:02.747" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210127 02:26:02.747" starttime="20210127 02:25:59.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210127 02:26:02.747" starttime="20210127 02:26:02.747"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:26:02.747" critical="yes" starttime="20210127 02:25:51.169"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:02.754" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:02.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:02.757" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:26:02.757" starttime="20210127 02:26:02.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:02.758" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:26:02.758" starttime="20210127 02:26:02.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:02.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:02.758" starttime="20210127 02:26:02.758"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.759" starttime="20210127 02:26:02.752"></status>
</kw>
<msg timestamp="20210127 02:26:02.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:02.759" starttime="20210127 02:26:02.752"></status>
</kw>
<msg timestamp="20210127 02:26:02.759" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:26:02.759" starttime="20210127 02:26:02.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:26:02.763" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:26:02.763" starttime="20210127 02:26:02.759"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:02.766" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:02.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:02.777" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:02.777" starttime="20210127 02:26:02.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:02.777" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:02.778" starttime="20210127 02:26:02.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:02.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:02.778" starttime="20210127 02:26:02.778"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.778" starttime="20210127 02:26:02.764"></status>
</kw>
<msg timestamp="20210127 02:26:02.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:02.778" starttime="20210127 02:26:02.764"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.779" starttime="20210127 02:26:02.763"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.779" starttime="20210127 02:26:02.763"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.779" starttime="20210127 02:26:02.751"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.779" starttime="20210127 02:26:02.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:02.783" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:02.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:02.786" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:02.786" starttime="20210127 02:26:02.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:02.787" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:02.787" starttime="20210127 02:26:02.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:02.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:02.788" starttime="20210127 02:26:02.787"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.788" starttime="20210127 02:26:02.781"></status>
</kw>
<msg timestamp="20210127 02:26:02.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:02.788" starttime="20210127 02:26:02.781"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.788" starttime="20210127 02:26:02.780"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:02.791" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:02.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:02.794" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:26:02.794" starttime="20210127 02:26:02.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:02.794" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:26:02.795" starttime="20210127 02:26:02.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:02.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:02.795" starttime="20210127 02:26:02.795"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.795" starttime="20210127 02:26:02.790"></status>
</kw>
<msg timestamp="20210127 02:26:02.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:02.795" starttime="20210127 02:26:02.789"></status>
</kw>
<msg timestamp="20210127 02:26:02.796" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:26:02.796" starttime="20210127 02:26:02.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:26:02.796" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:26:02.796" starttime="20210127 02:26:02.796"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:02.799" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:02.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:02.810" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:02.810" starttime="20210127 02:26:02.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:02.811" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:02.811" starttime="20210127 02:26:02.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:02.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:02.812" starttime="20210127 02:26:02.811"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.812" starttime="20210127 02:26:02.797"></status>
</kw>
<msg timestamp="20210127 02:26:02.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:02.812" starttime="20210127 02:26:02.797"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.812" starttime="20210127 02:26:02.797"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.812" starttime="20210127 02:26:02.796"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.813" starttime="20210127 02:26:02.789"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:02.813" starttime="20210127 02:26:02.788"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:02.815" level="INFO">Running command 'ozone sh key list 16785-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:05.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:05.663" level="INFO">${output} = {
  "volumeName" : "16785-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-27T02:24:11.934Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210127 02:26:05.663" starttime="20210127 02:26:02.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:05.664" level="INFO">{
  "volumeName" : "16785-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-27T02:24:11.934Z",
  "modificationTime" : "2021-01-27T02:24:13.546Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210127 02:26:05.665" starttime="20210127 02:26:05.664"></status>
</kw>
<msg timestamp="20210127 02:26:05.665" level="INFO">${result} = {
  "volumeName" : "16785-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-27T02:24:11.934Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210127 02:26:05.665" starttime="20210127 02:26:02.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210127 02:26:05.665" starttime="20210127 02:26:05.665"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.665" starttime="20210127 02:26:02.780"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.665" starttime="20210127 02:26:02.779"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:26:05.666" critical="yes" starttime="20210127 02:26:02.750"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:05.671" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:05.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:05.674" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:26:05.674" starttime="20210127 02:26:05.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:05.675" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:26:05.675" starttime="20210127 02:26:05.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:05.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:05.675" starttime="20210127 02:26:05.675"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.675" starttime="20210127 02:26:05.669"></status>
</kw>
<msg timestamp="20210127 02:26:05.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:05.676" starttime="20210127 02:26:05.669"></status>
</kw>
<msg timestamp="20210127 02:26:05.676" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:26:05.676" starttime="20210127 02:26:05.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:26:05.676" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:26:05.677" starttime="20210127 02:26:05.676"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:05.680" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:05.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:05.689" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:05.689" starttime="20210127 02:26:05.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:05.690" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:05.690" starttime="20210127 02:26:05.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:05.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:05.690" starttime="20210127 02:26:05.690"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.691" starttime="20210127 02:26:05.678"></status>
</kw>
<msg timestamp="20210127 02:26:05.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:05.691" starttime="20210127 02:26:05.677"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.691" starttime="20210127 02:26:05.677"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.691" starttime="20210127 02:26:05.677"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.691" starttime="20210127 02:26:05.668"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.691" starttime="20210127 02:26:05.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:05.695" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:05.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:05.698" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:05.698" starttime="20210127 02:26:05.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:05.699" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:05.699" starttime="20210127 02:26:05.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:05.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:05.700" starttime="20210127 02:26:05.699"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.700" starttime="20210127 02:26:05.693"></status>
</kw>
<msg timestamp="20210127 02:26:05.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:05.700" starttime="20210127 02:26:05.693"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.700" starttime="20210127 02:26:05.692"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:05.704" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:05.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:05.706" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:26:05.706" starttime="20210127 02:26:05.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:05.707" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:26:05.707" starttime="20210127 02:26:05.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:05.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:05.707" starttime="20210127 02:26:05.707"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.707" starttime="20210127 02:26:05.702"></status>
</kw>
<msg timestamp="20210127 02:26:05.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:05.708" starttime="20210127 02:26:05.701"></status>
</kw>
<msg timestamp="20210127 02:26:05.708" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:26:05.708" starttime="20210127 02:26:05.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:26:05.708" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:26:05.709" starttime="20210127 02:26:05.708"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:05.712" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:05.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:05.733" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:05.734" starttime="20210127 02:26:05.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:05.734" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:05.734" starttime="20210127 02:26:05.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:05.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:05.735" starttime="20210127 02:26:05.735"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.735" starttime="20210127 02:26:05.710"></status>
</kw>
<msg timestamp="20210127 02:26:05.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:05.736" starttime="20210127 02:26:05.709"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.736" starttime="20210127 02:26:05.709"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.736" starttime="20210127 02:26:05.709"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.736" starttime="20210127 02:26:05.701"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:05.736" starttime="20210127 02:26:05.700"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:05.738" level="INFO">Running command 'ozone sh key list 16785-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:08.316" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 02:26:08.316" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 16785-target unreadable-link null</msg>
<status status="PASS" endtime="20210127 02:26:08.316" starttime="20210127 02:26:05.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:08.317" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 16785-target unreadable-link null</msg>
<status status="PASS" endtime="20210127 02:26:08.317" starttime="20210127 02:26:08.316"></status>
</kw>
<msg timestamp="20210127 02:26:08.317" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 16785-target unreadable-link null</msg>
<status status="PASS" endtime="20210127 02:26:08.317" starttime="20210127 02:26:05.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210127 02:26:08.318" starttime="20210127 02:26:08.317"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.318" starttime="20210127 02:26:05.692"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.318" starttime="20210127 02:26:05.692"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:26:08.318" critical="yes" starttime="20210127 02:26:05.666"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:08.324" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:08.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:08.325" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:26:08.325" starttime="20210127 02:26:08.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:08.326" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:26:08.326" starttime="20210127 02:26:08.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:08.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:08.327" starttime="20210127 02:26:08.327"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.327" starttime="20210127 02:26:08.321"></status>
</kw>
<msg timestamp="20210127 02:26:08.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:08.327" starttime="20210127 02:26:08.321"></status>
</kw>
<msg timestamp="20210127 02:26:08.328" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:26:08.328" starttime="20210127 02:26:08.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:26:08.328" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:26:08.328" starttime="20210127 02:26:08.328"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:08.331" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:08.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:08.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:08.342" starttime="20210127 02:26:08.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:08.343" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:08.343" starttime="20210127 02:26:08.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:08.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:08.344" starttime="20210127 02:26:08.343"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.344" starttime="20210127 02:26:08.329"></status>
</kw>
<msg timestamp="20210127 02:26:08.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:08.344" starttime="20210127 02:26:08.329"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.345" starttime="20210127 02:26:08.329"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.345" starttime="20210127 02:26:08.328"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.345" starttime="20210127 02:26:08.320"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.345" starttime="20210127 02:26:08.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:08.349" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:08.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:08.352" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:08.352" starttime="20210127 02:26:08.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:08.353" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:08.353" starttime="20210127 02:26:08.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:08.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:08.353" starttime="20210127 02:26:08.353"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.354" starttime="20210127 02:26:08.346"></status>
</kw>
<msg timestamp="20210127 02:26:08.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:08.354" starttime="20210127 02:26:08.346"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.354" starttime="20210127 02:26:08.346"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:08.357" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:08.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:08.359" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:26:08.359" starttime="20210127 02:26:08.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:08.360" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:26:08.360" starttime="20210127 02:26:08.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:08.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:08.361" starttime="20210127 02:26:08.360"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.361" starttime="20210127 02:26:08.355"></status>
</kw>
<msg timestamp="20210127 02:26:08.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:08.361" starttime="20210127 02:26:08.355"></status>
</kw>
<msg timestamp="20210127 02:26:08.361" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:26:08.361" starttime="20210127 02:26:08.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:26:08.362" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:26:08.362" starttime="20210127 02:26:08.361"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:08.365" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:08.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:08.377" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:08.378" starttime="20210127 02:26:08.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:08.378" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:08.378" starttime="20210127 02:26:08.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:08.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:08.379" starttime="20210127 02:26:08.379"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.379" starttime="20210127 02:26:08.363"></status>
</kw>
<msg timestamp="20210127 02:26:08.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:08.380" starttime="20210127 02:26:08.363"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.380" starttime="20210127 02:26:08.362"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.380" starttime="20210127 02:26:08.362"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.380" starttime="20210127 02:26:08.354"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:08.380" starttime="20210127 02:26:08.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:08.384" level="INFO">Running command 'ozone sh bucket info 16785-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:11.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:11.447" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210127 02:26:11.447" starttime="20210127 02:26:08.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:11.448" level="INFO">{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:24:26.656Z",
  "modificationTime" : "2021-01-27T02:24:41.326Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210127 02:26:11.448" starttime="20210127 02:26:11.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:11.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:11.449" starttime="20210127 02:26:11.448"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:11.449" starttime="20210127 02:26:08.381"></status>
</kw>
<msg timestamp="20210127 02:26:11.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:11.449" starttime="20210127 02:26:08.381"></status>
</kw>
<msg timestamp="20210127 02:26:11.449" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210127 02:26:11.449" starttime="20210127 02:26:08.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210127 02:26:11.450" starttime="20210127 02:26:11.449"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210127 02:26:11.450" starttime="20210127 02:26:11.450"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:11.453" level="INFO">Running command 'ozone sh key list 16785-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:14.422" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 02:26:14.422" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 16785-source unreadable-bucket </msg>
<status status="PASS" endtime="20210127 02:26:14.422" starttime="20210127 02:26:11.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:14.423" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 16785-source unreadable-bucket </msg>
<status status="PASS" endtime="20210127 02:26:14.423" starttime="20210127 02:26:14.422"></status>
</kw>
<msg timestamp="20210127 02:26:14.423" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 16785-source unreadable-bucket </msg>
<status status="PASS" endtime="20210127 02:26:14.423" starttime="20210127 02:26:11.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210127 02:26:14.424" starttime="20210127 02:26:14.423"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:14.424" starttime="20210127 02:26:08.345"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:14.424" starttime="20210127 02:26:08.345"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:26:14.424" critical="yes" starttime="20210127 02:26:08.319"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:14.429" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:14.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:14.432" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:26:14.432" starttime="20210127 02:26:14.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:14.432" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:26:14.433" starttime="20210127 02:26:14.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:14.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:14.433" starttime="20210127 02:26:14.433"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:14.433" starttime="20210127 02:26:14.427"></status>
</kw>
<msg timestamp="20210127 02:26:14.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:14.433" starttime="20210127 02:26:14.427"></status>
</kw>
<msg timestamp="20210127 02:26:14.434" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:26:14.434" starttime="20210127 02:26:14.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:26:14.434" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:26:14.434" starttime="20210127 02:26:14.434"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:14.438" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:14.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:14.454" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:14.454" starttime="20210127 02:26:14.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:14.455" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:14.455" starttime="20210127 02:26:14.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:14.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:14.456" starttime="20210127 02:26:14.455"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:14.456" starttime="20210127 02:26:14.436"></status>
</kw>
<msg timestamp="20210127 02:26:14.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:14.456" starttime="20210127 02:26:14.435"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:14.456" starttime="20210127 02:26:14.435"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:14.456" starttime="20210127 02:26:14.434"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:14.457" starttime="20210127 02:26:14.426"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:14.457" starttime="20210127 02:26:14.426"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:14.460" level="INFO">Running command 'ozone sh bucket link 16785-target/loop1 16785-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:17.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:17.498" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:17.498" starttime="20210127 02:26:14.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:17.499" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:17.499" starttime="20210127 02:26:17.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:17.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:17.500" starttime="20210127 02:26:17.500"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:17.500" starttime="20210127 02:26:14.458"></status>
</kw>
<msg timestamp="20210127 02:26:17.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:17.500" starttime="20210127 02:26:14.457"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:17.501" starttime="20210127 02:26:14.457"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:17.504" level="INFO">Running command 'ozone sh bucket link 16785-target/loop2 16785-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:20.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:20.423" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:20.423" starttime="20210127 02:26:17.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:20.425" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:20.425" starttime="20210127 02:26:20.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:20.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:20.425" starttime="20210127 02:26:20.425"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:20.426" starttime="20210127 02:26:17.502"></status>
</kw>
<msg timestamp="20210127 02:26:20.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:20.426" starttime="20210127 02:26:17.501"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:20.426" starttime="20210127 02:26:17.501"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:20.429" level="INFO">Running command 'ozone sh bucket link 16785-target/loop3 16785-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:23.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:23.530" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:23.530" starttime="20210127 02:26:20.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:23.531" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:23.531" starttime="20210127 02:26:23.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:23.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:23.532" starttime="20210127 02:26:23.531"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:23.532" starttime="20210127 02:26:20.427"></status>
</kw>
<msg timestamp="20210127 02:26:23.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:23.532" starttime="20210127 02:26:20.427"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:23.532" starttime="20210127 02:26:20.426"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:23.536" level="INFO">Running command 'ozone sh key list 16785-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:26.938" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 02:26:26.938" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210127 02:26:26.938" starttime="20210127 02:26:23.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:26.939" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210127 02:26:26.940" starttime="20210127 02:26:26.939"></status>
</kw>
<msg timestamp="20210127 02:26:26.940" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210127 02:26:26.940" starttime="20210127 02:26:23.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210127 02:26:26.940" starttime="20210127 02:26:26.940"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:26:26.941" critical="yes" starttime="20210127 02:26:14.425"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:26.946" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:26.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:26.948" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:26:26.948" starttime="20210127 02:26:26.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:26.949" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:26:26.949" starttime="20210127 02:26:26.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:26.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:26.950" starttime="20210127 02:26:26.949"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:26.950" starttime="20210127 02:26:26.943"></status>
</kw>
<msg timestamp="20210127 02:26:26.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:26.950" starttime="20210127 02:26:26.943"></status>
</kw>
<msg timestamp="20210127 02:26:26.950" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:26:26.950" starttime="20210127 02:26:26.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:26:26.951" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:26:26.951" starttime="20210127 02:26:26.951"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:26.954" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:26.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:26.964" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:26.964" starttime="20210127 02:26:26.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:26.965" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:26.965" starttime="20210127 02:26:26.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:26.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:26.966" starttime="20210127 02:26:26.965"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:26.966" starttime="20210127 02:26:26.952"></status>
</kw>
<msg timestamp="20210127 02:26:26.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:26.966" starttime="20210127 02:26:26.952"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:26.966" starttime="20210127 02:26:26.952"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:26.966" starttime="20210127 02:26:26.951"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:26.966" starttime="20210127 02:26:26.942"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:26.966" starttime="20210127 02:26:26.942"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:26.969" level="INFO">Running command 'ozone sh bucket link 16785-source/bucket1 16785-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:30.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:30.222" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:30.222" starttime="20210127 02:26:26.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:30.223" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:30.223" starttime="20210127 02:26:30.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:30.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:30.224" starttime="20210127 02:26:30.223"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:30.224" starttime="20210127 02:26:26.967"></status>
</kw>
<msg timestamp="20210127 02:26:30.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:30.224" starttime="20210127 02:26:26.967"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:30.224" starttime="20210127 02:26:26.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:30.229" level="INFO">Running command 'ozone sh key put 16785-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:35.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:35.070" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:35.071" starttime="20210127 02:26:30.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:35.072" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:35.072" starttime="20210127 02:26:35.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:35.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:35.073" starttime="20210127 02:26:35.072"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:35.073" starttime="20210127 02:26:30.225"></status>
</kw>
<msg timestamp="20210127 02:26:35.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:35.073" starttime="20210127 02:26:30.225"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:35.073" starttime="20210127 02:26:30.225"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210127 02:26:35.075" level="INFO">${postfix} = 61619</msg>
<status status="PASS" endtime="20210127 02:26:35.075" starttime="20210127 02:26:35.074"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210127 02:26:35.076" level="INFO">${tmpfile} = /tmp/tempkey-61619</msg>
<status status="PASS" endtime="20210127 02:26:35.076" starttime="20210127 02:26:35.075"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:35.079" level="INFO">Running command 'ozone sh key get -f 16785-target/link1/key3 /tmp/tempkey-61619 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:39.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:39.552" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:39.552" starttime="20210127 02:26:35.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:39.553" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:39.554" starttime="20210127 02:26:39.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:39.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:39.554" starttime="20210127 02:26:39.554"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:39.554" starttime="20210127 02:26:35.076"></status>
</kw>
<msg timestamp="20210127 02:26:39.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:39.555" starttime="20210127 02:26:35.076"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:39.555" starttime="20210127 02:26:35.076"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210127 02:26:39.557" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-61619 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:39.559" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210127 02:26:39.559" starttime="20210127 02:26:39.555"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:39.563" level="INFO">Running command 'rm -f /tmp/tempkey-61619 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:39.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:39.565" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:39.565" starttime="20210127 02:26:39.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:39.566" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:39.566" starttime="20210127 02:26:39.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:39.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:39.567" starttime="20210127 02:26:39.566"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:39.567" starttime="20210127 02:26:39.561"></status>
</kw>
<msg timestamp="20210127 02:26:39.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:39.567" starttime="20210127 02:26:39.560"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:39.567" starttime="20210127 02:26:39.559"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:26:39.568" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210127 02:26:39.568" starttime="20210127 02:26:39.567"></status>
</kw>
<msg timestamp="20210127 02:26:39.568" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210127 02:26:39.568" starttime="20210127 02:26:35.074"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:26:39.568" starttime="20210127 02:26:39.568"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:39.569" starttime="20210127 02:26:35.073"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:26:39.569" critical="yes" starttime="20210127 02:26:26.941"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:39.573" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:39.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:39.576" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 02:26:39.576" starttime="20210127 02:26:39.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:39.577" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 02:26:39.577" starttime="20210127 02:26:39.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:39.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:39.578" starttime="20210127 02:26:39.577"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:39.578" starttime="20210127 02:26:39.571"></status>
</kw>
<msg timestamp="20210127 02:26:39.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:39.578" starttime="20210127 02:26:39.571"></status>
</kw>
<msg timestamp="20210127 02:26:39.578" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 02:26:39.578" starttime="20210127 02:26:39.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:26:39.579" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:26:39.579" starttime="20210127 02:26:39.578"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:39.582" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:39.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:39.592" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:39.592" starttime="20210127 02:26:39.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:39.593" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:39.593" starttime="20210127 02:26:39.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:39.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:39.594" starttime="20210127 02:26:39.593"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:39.594" starttime="20210127 02:26:39.580"></status>
</kw>
<msg timestamp="20210127 02:26:39.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:39.594" starttime="20210127 02:26:39.580"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:39.594" starttime="20210127 02:26:39.579"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:39.594" starttime="20210127 02:26:39.579"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:39.595" starttime="20210127 02:26:39.570"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:39.595" starttime="20210127 02:26:39.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:39.598" level="INFO">Running command 'ozone sh bucket delete 16785-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:42.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:42.380" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:26:42.381" starttime="20210127 02:26:39.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:42.381" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:26:42.382" starttime="20210127 02:26:42.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:42.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:42.382" starttime="20210127 02:26:42.382"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:42.383" starttime="20210127 02:26:39.596"></status>
</kw>
<msg timestamp="20210127 02:26:42.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:42.383" starttime="20210127 02:26:39.595"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:42.383" starttime="20210127 02:26:39.595"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:42.386" level="INFO">Running command 'ozone sh bucket list 16785-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:45.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:45.352" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T...</msg>
<status status="PASS" endtime="20210127 02:26:45.352" starttime="20210127 02:26:42.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:45.353" level="INFO">{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:25:59.767Z",
  "modificationTime" : "2021-01-27T02:25:59.767Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:24:44.293Z",
  "modificationTime" : "2021-01-27T02:24:44.293Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:24:26.656Z",
  "modificationTime" : "2021-01-27T02:24:41.326Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:25:53.900Z",
  "modificationTime" : "2021-01-27T02:25:53.900Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:26:30.067Z",
  "modificationTime" : "2021-01-27T02:26:30.067Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:26:23.405Z",
  "modificationTime" : "2021-01-27T02:26:23.405Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:26:17.322Z",
  "modificationTime" : "2021-01-27T02:26:17.322Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:26:20.342Z",
  "modificationTime" : "2021-01-27T02:26:20.342Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:24:20.506Z",
  "modificationTime" : "2021-01-27T02:24:38.320Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:24:23.617Z",
  "modificationTime" : "2021-01-27T02:24:23.617Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "16785-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210127 02:26:45.354" starttime="20210127 02:26:45.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:45.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:45.354" starttime="20210127 02:26:45.354"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:45.355" starttime="20210127 02:26:42.384"></status>
</kw>
<msg timestamp="20210127 02:26:45.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:45.355" starttime="20210127 02:26:42.384"></status>
</kw>
<msg timestamp="20210127 02:26:45.355" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "16785-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T...</msg>
<status status="PASS" endtime="20210127 02:26:45.355" starttime="20210127 02:26:42.383"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210127 02:26:45.356" starttime="20210127 02:26:45.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:26:45.359" level="INFO">Running command 'ozone sh key list 16785-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:26:48.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:26:48.790" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210127 02:26:48.790" starttime="20210127 02:26:45.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:26:48.791" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210127 02:26:48.791" starttime="20210127 02:26:48.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:26:48.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:26:48.791" starttime="20210127 02:26:48.791"></status>
</kw>
<status status="PASS" endtime="20210127 02:26:48.792" starttime="20210127 02:26:45.357"></status>
</kw>
<msg timestamp="20210127 02:26:48.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:26:48.792" starttime="20210127 02:26:45.356"></status>
</kw>
<msg timestamp="20210127 02:26:48.792" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210127 02:26:48.792" starttime="20210127 02:26:45.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210127 02:26:48.793" starttime="20210127 02:26:48.792"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:26:48.793" critical="yes" starttime="20210127 02:26:39.569"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210127 02:26:48.795" starttime="20210127 02:24:00.302"></status>
</suite>
<status status="PASS" elapsedtime="196279" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
