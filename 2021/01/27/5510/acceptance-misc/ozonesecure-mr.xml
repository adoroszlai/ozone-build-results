<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210127 02:21:25.922" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:17:43.726" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:17:47.031" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 02:17:47.031" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 02:17:47.031" starttime="20210127 02:17:43.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:17:47.032" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 02:17:47.032" starttime="20210127 02:17:47.032"></status>
</kw>
<msg timestamp="20210127 02:17:47.033" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 02:17:47.033" starttime="20210127 02:17:43.722"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:17:47.037" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:17:50.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:17:50.240" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:17:50.240" starttime="20210127 02:17:47.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:17:50.241" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:17:50.241" starttime="20210127 02:17:50.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:17:50.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:17:50.242" starttime="20210127 02:17:50.242"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:50.242" starttime="20210127 02:17:47.034"></status>
</kw>
<msg timestamp="20210127 02:17:50.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:17:50.242" starttime="20210127 02:17:47.034"></status>
</kw>
<msg timestamp="20210127 02:17:50.243" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210127 02:17:50.243" starttime="20210127 02:17:47.034"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210127 02:17:50.243" starttime="20210127 02:17:50.243"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:50.243" starttime="20210127 02:17:47.033"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:50.243" starttime="20210127 02:17:47.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:17:50.248" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:17:53.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:17:53.254" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:17:53.254" starttime="20210127 02:17:50.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:17:53.255" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:17:53.255" starttime="20210127 02:17:53.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:17:53.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:17:53.256" starttime="20210127 02:17:53.256"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:53.256" starttime="20210127 02:17:50.246"></status>
</kw>
<msg timestamp="20210127 02:17:53.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:17:53.257" starttime="20210127 02:17:50.245"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:53.257" starttime="20210127 02:17:50.245"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:53.257" starttime="20210127 02:17:50.244"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:53.257" starttime="20210127 02:17:50.243"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210127 02:17:53.257" starttime="20210127 02:17:53.257"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:17:53.262" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:17:56.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:17:56.484" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:17...</msg>
<status status="PASS" endtime="20210127 02:17:56.484" starttime="20210127 02:17:53.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:17:56.485" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:17:53.058Z",
  "modificationTime" : "2021-01-27T02:17:53.058Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210127 02:17:56.485" starttime="20210127 02:17:56.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:17:56.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:17:56.486" starttime="20210127 02:17:56.485"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:56.486" starttime="20210127 02:17:53.258"></status>
</kw>
<msg timestamp="20210127 02:17:56.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:17:56.486" starttime="20210127 02:17:53.258"></status>
</kw>
<msg timestamp="20210127 02:17:56.487" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T02:17...</msg>
<status status="PASS" endtime="20210127 02:17:56.487" starttime="20210127 02:17:53.257"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210127 02:17:56.487" starttime="20210127 02:17:56.487"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:17:56.490" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:17:56.490" starttime="20210127 02:17:56.490"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:17:56.491" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:17:56.491" starttime="20210127 02:17:56.490"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:56.491" starttime="20210127 02:17:56.490"></status>
</kw>
<msg timestamp="20210127 02:17:56.491" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:17:56.491" starttime="20210127 02:17:56.489"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:56.491" starttime="20210127 02:17:56.489"></status>
</kw>
<msg timestamp="20210127 02:17:56.492" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210127 02:17:56.492" starttime="20210127 02:17:56.488"></status>
</kw>
<msg timestamp="20210127 02:17:56.492" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210127 02:17:56.492" starttime="20210127 02:17:56.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:17:56.495" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:17:59.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:17:59.641" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:17:59.641" starttime="20210127 02:17:56.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:17:59.642" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:17:59.642" starttime="20210127 02:17:59.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:17:59.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:17:59.643" starttime="20210127 02:17:59.642"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:59.643" starttime="20210127 02:17:56.492"></status>
</kw>
<msg timestamp="20210127 02:17:59.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:17:59.643" starttime="20210127 02:17:56.492"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:59.643" starttime="20210127 02:17:56.492"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:17:59.647" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:18:06.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:18:06.743" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:18:06.743" starttime="20210127 02:17:59.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:18:06.744" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:18:06.744" starttime="20210127 02:18:06.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:18:06.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:18:06.744" starttime="20210127 02:18:06.744"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:06.745" starttime="20210127 02:17:59.645"></status>
</kw>
<msg timestamp="20210127 02:18:06.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:18:06.745" starttime="20210127 02:17:59.644"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:06.745" starttime="20210127 02:17:59.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:18:06.749" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:18:11.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:18:11.511" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:18:11.511" starttime="20210127 02:18:06.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:18:11.512" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:18:11.512" starttime="20210127 02:18:11.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:18:11.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:18:11.513" starttime="20210127 02:18:11.513"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:11.513" starttime="20210127 02:18:06.746"></status>
</kw>
<msg timestamp="20210127 02:18:11.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:18:11.513" starttime="20210127 02:18:06.746"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:11.514" starttime="20210127 02:18:06.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:18:11.517" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:18:16.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:18:16.169" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:18:16.169" starttime="20210127 02:18:11.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:18:16.170" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:18:16.170" starttime="20210127 02:18:16.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:18:16.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:18:16.171" starttime="20210127 02:18:16.170"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:16.171" starttime="20210127 02:18:11.514"></status>
</kw>
<msg timestamp="20210127 02:18:16.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:18:16.171" starttime="20210127 02:18:11.514"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:16.171" starttime="20210127 02:18:11.514"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:18:16.171" critical="yes" starttime="20210127 02:17:43.722"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:18:16.176" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:18:16.176" starttime="20210127 02:18:16.175"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:18:16.176" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:18:16.176" starttime="20210127 02:18:16.176"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:16.177" starttime="20210127 02:18:16.175"></status>
</kw>
<msg timestamp="20210127 02:18:16.177" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:18:16.177" starttime="20210127 02:18:16.174"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:16.177" starttime="20210127 02:18:16.174"></status>
</kw>
<msg timestamp="20210127 02:18:16.177" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 02:18:16.177" starttime="20210127 02:18:16.173"></status>
</kw>
<msg timestamp="20210127 02:18:16.177" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 02:18:16.177" starttime="20210127 02:18:16.173"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:18:16.180" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:18:19.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:18:19.246" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:18:19.246" starttime="20210127 02:18:16.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:18:19.247" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:18:19.247" starttime="20210127 02:18:19.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:18:19.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:18:19.248" starttime="20210127 02:18:19.247"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:19.248" starttime="20210127 02:18:16.178"></status>
</kw>
<msg timestamp="20210127 02:18:19.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:18:19.248" starttime="20210127 02:18:16.178"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:19.249" starttime="20210127 02:18:16.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:18:19.252" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:18:22.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:18:22.113" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:18:22.113" starttime="20210127 02:18:19.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:18:22.114" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:18:22.114" starttime="20210127 02:18:22.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:18:22.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:18:22.115" starttime="20210127 02:18:22.114"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:22.115" starttime="20210127 02:18:19.249"></status>
</kw>
<msg timestamp="20210127 02:18:22.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:18:22.115" starttime="20210127 02:18:19.249"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:22.115" starttime="20210127 02:18:19.249"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:18:22.116" critical="yes" starttime="20210127 02:18:16.172"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210127 02:18:22.117" starttime="20210127 02:17:43.676"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 02:20:07.302" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 02:20:07.302" starttime="20210127 02:20:07.302"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:20:07.303" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 02:20:07.303" starttime="20210127 02:20:07.302"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:07.303" starttime="20210127 02:20:07.301"></status>
</kw>
<msg timestamp="20210127 02:20:07.303" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 02:20:07.303" starttime="20210127 02:20:07.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:20:07.304" starttime="20210127 02:20:07.303"></status>
</kw>
<msg timestamp="20210127 02:20:07.304" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 02:20:07.304" starttime="20210127 02:20:07.303"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:07.304" starttime="20210127 02:20:07.300"></status>
</kw>
<msg timestamp="20210127 02:20:07.304" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 02:20:07.304" starttime="20210127 02:20:07.300"></status>
</kw>
<msg timestamp="20210127 02:20:07.304" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 02:20:07.305" starttime="20210127 02:20:07.299"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 02:20:07.305" level="INFO">${random} = 29893</msg>
<status status="PASS" endtime="20210127 02:20:07.305" starttime="20210127 02:20:07.305"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:20:07.310" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-29893 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:20:10.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:20:10.539" level="INFO">${output} = 2021-01-27 02:20:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:20:09 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210127 02:20:10.539" starttime="20210127 02:20:07.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:20:10.540" level="INFO">2021-01-27 02:20:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:20:09 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:20:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 02:20:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:20:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-68CA0AEB3564-&gt;9f520031-8985-4d5e-8031-5920cd1100ef
2021-01-27 02:20:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210127 02:20:10.540" starttime="20210127 02:20:10.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:20:10.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:20:10.541" starttime="20210127 02:20:10.540"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:10.541" starttime="20210127 02:20:07.306"></status>
</kw>
<msg timestamp="20210127 02:20:10.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:20:10.541" starttime="20210127 02:20:07.306"></status>
</kw>
<msg timestamp="20210127 02:20:10.541" level="INFO">${result} = 2021-01-27 02:20:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:20:09 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210127 02:20:10.541" starttime="20210127 02:20:07.305"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:20:10.545" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:20:12.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:20:12.283" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 02:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:20 ofs://om/volume1/bucket1/ozone-29893
-rw-...</msg>
<status status="PASS" endtime="20210127 02:20:12.283" starttime="20210127 02:20:10.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:20:12.284" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 02:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:20 ofs://om/volume1/bucket1/ozone-29893
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:18 ofs://om/volume1/bucket1/ozone-72663
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 02:18 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 02:19 ofs://om/volume1/bucket1/wordcount-jqPnQt6G.txt</msg>
<status status="PASS" endtime="20210127 02:20:12.285" starttime="20210127 02:20:12.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:20:12.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:20:12.285" starttime="20210127 02:20:12.285"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:12.285" starttime="20210127 02:20:10.542"></status>
</kw>
<msg timestamp="20210127 02:20:12.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:20:12.286" starttime="20210127 02:20:10.542"></status>
</kw>
<msg timestamp="20210127 02:20:12.286" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 02:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:20 ofs://om/volume1/bucket1/ozone-29893
-rw-...</msg>
<status status="PASS" endtime="20210127 02:20:12.286" starttime="20210127 02:20:10.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:20:12.286" starttime="20210127 02:20:12.286"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:20:12.287" critical="yes" starttime="20210127 02:20:07.298"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210127 02:20:12.287" starttime="20210127 02:20:07.250"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:18:43.268" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:18:43.268" starttime="20210127 02:18:43.267"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:18:43.268" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:18:43.268" starttime="20210127 02:18:43.268"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:43.268" starttime="20210127 02:18:43.267"></status>
</kw>
<msg timestamp="20210127 02:18:43.269" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:18:43.269" starttime="20210127 02:18:43.267"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:43.269" starttime="20210127 02:18:43.266"></status>
</kw>
<msg timestamp="20210127 02:18:43.269" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 02:18:43.269" starttime="20210127 02:18:43.265"></status>
</kw>
<msg timestamp="20210127 02:18:43.269" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 02:18:43.269" starttime="20210127 02:18:43.265"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 02:18:43.270" level="INFO">${random} = 72663</msg>
<status status="PASS" endtime="20210127 02:18:43.270" starttime="20210127 02:18:43.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:18:43.274" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-72663 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:18:47.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:18:47.104" level="INFO">${output} = 2021-01-27 02:18:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:18:45 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210127 02:18:47.104" starttime="20210127 02:18:43.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:18:47.106" level="INFO">2021-01-27 02:18:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:18:45 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:18:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 02:18:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:18:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-58027E09D51A-&gt;9f520031-8985-4d5e-8031-5920cd1100ef
2021-01-27 02:18:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210127 02:18:47.106" starttime="20210127 02:18:47.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:18:47.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:18:47.107" starttime="20210127 02:18:47.106"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:47.107" starttime="20210127 02:18:43.270"></status>
</kw>
<msg timestamp="20210127 02:18:47.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:18:47.107" starttime="20210127 02:18:43.270"></status>
</kw>
<msg timestamp="20210127 02:18:47.107" level="INFO">${result} = 2021-01-27 02:18:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:18:45 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210127 02:18:47.108" starttime="20210127 02:18:43.270"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:18:47.111" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:18:48.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:18:48.798" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 02:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:18 o3fs://bucket1.volume1.om/ozone-72663
dr...</msg>
<status status="PASS" endtime="20210127 02:18:48.798" starttime="20210127 02:18:47.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:18:48.799" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 02:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:18 o3fs://bucket1.volume1.om/ozone-72663
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 02:18 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 02:18:48.799" starttime="20210127 02:18:48.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:18:48.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:18:48.800" starttime="20210127 02:18:48.800"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:48.800" starttime="20210127 02:18:47.108"></status>
</kw>
<msg timestamp="20210127 02:18:48.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:18:48.801" starttime="20210127 02:18:47.108"></status>
</kw>
<msg timestamp="20210127 02:18:48.801" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 02:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:18 o3fs://bucket1.volume1.om/ozone-72663
dr...</msg>
<status status="PASS" endtime="20210127 02:18:48.801" starttime="20210127 02:18:47.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:18:48.801" starttime="20210127 02:18:48.801"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:18:48.801" critical="yes" starttime="20210127 02:18:43.264"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210127 02:18:48.803" starttime="20210127 02:18:43.220"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:18:38.679" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:18:38.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:18:38.681" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210127 02:18:38.681" starttime="20210127 02:18:38.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:18:38.682" level="INFO">rm</msg>
<status status="PASS" endtime="20210127 02:18:38.682" starttime="20210127 02:18:38.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:18:38.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:18:38.683" starttime="20210127 02:18:38.682"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:38.683" starttime="20210127 02:18:38.675"></status>
</kw>
<msg timestamp="20210127 02:18:38.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:18:38.683" starttime="20210127 02:18:38.674"></status>
</kw>
<msg timestamp="20210127 02:18:38.683" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210127 02:18:38.683" starttime="20210127 02:18:38.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:18:38.684" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:18:38.684" starttime="20210127 02:18:38.683"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:18:38.687" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:18:38.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:18:38.785" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:18:38.785" starttime="20210127 02:18:38.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:18:38.786" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:18:38.786" starttime="20210127 02:18:38.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:18:38.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:18:38.786" starttime="20210127 02:18:38.786"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:38.786" starttime="20210127 02:18:38.685"></status>
</kw>
<msg timestamp="20210127 02:18:38.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:18:38.787" starttime="20210127 02:18:38.685"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:38.787" starttime="20210127 02:18:38.685"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:38.787" starttime="20210127 02:18:38.684"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:38.787" starttime="20210127 02:18:38.674"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:18:38.787" critical="yes" starttime="20210127 02:18:38.673"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210127 02:18:38.788" starttime="20210127 02:18:38.632"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:17:39.211" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:17:39.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:17:39.214" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210127 02:17:39.214" starttime="20210127 02:17:39.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:17:39.215" level="INFO">om</msg>
<status status="PASS" endtime="20210127 02:17:39.215" starttime="20210127 02:17:39.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:17:39.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:17:39.215" starttime="20210127 02:17:39.215"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:39.216" starttime="20210127 02:17:39.208"></status>
</kw>
<msg timestamp="20210127 02:17:39.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:17:39.216" starttime="20210127 02:17:39.207"></status>
</kw>
<msg timestamp="20210127 02:17:39.216" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210127 02:17:39.216" starttime="20210127 02:17:39.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 02:17:39.217" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 02:17:39.217" starttime="20210127 02:17:39.216"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:17:39.220" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:17:39.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:17:39.230" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:17:39.230" starttime="20210127 02:17:39.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:17:39.231" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:17:39.231" starttime="20210127 02:17:39.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:17:39.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:17:39.231" starttime="20210127 02:17:39.231"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:39.232" starttime="20210127 02:17:39.218"></status>
</kw>
<msg timestamp="20210127 02:17:39.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:17:39.232" starttime="20210127 02:17:39.218"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:39.232" starttime="20210127 02:17:39.217"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:39.232" starttime="20210127 02:17:39.217"></status>
</kw>
<status status="PASS" endtime="20210127 02:17:39.232" starttime="20210127 02:17:39.206"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:17:39.232" critical="yes" starttime="20210127 02:17:39.206"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210127 02:17:39.234" starttime="20210127 02:17:39.164"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:20:16.835" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:20:16.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:20:16.839" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:20:16.839" starttime="20210127 02:20:16.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:20:16.840" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:20:16.840" starttime="20210127 02:20:16.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:20:16.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:20:16.841" starttime="20210127 02:20:16.840"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:16.841" starttime="20210127 02:20:16.831"></status>
</kw>
<msg timestamp="20210127 02:20:16.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:20:16.841" starttime="20210127 02:20:16.831"></status>
</kw>
<msg timestamp="20210127 02:20:16.841" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:20:16.841" starttime="20210127 02:20:16.830"></status>
</kw>
<msg timestamp="20210127 02:20:16.842" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:20:16.842" starttime="20210127 02:20:16.830"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 02:20:16.846" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 02:20:16.846" starttime="20210127 02:20:16.845"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:20:16.846" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 02:20:16.846" starttime="20210127 02:20:16.846"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:16.846" starttime="20210127 02:20:16.845"></status>
</kw>
<msg timestamp="20210127 02:20:16.846" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 02:20:16.847" starttime="20210127 02:20:16.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:20:16.847" starttime="20210127 02:20:16.847"></status>
</kw>
<msg timestamp="20210127 02:20:16.847" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 02:20:16.847" starttime="20210127 02:20:16.847"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:16.848" starttime="20210127 02:20:16.844"></status>
</kw>
<msg timestamp="20210127 02:20:16.848" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 02:20:16.848" starttime="20210127 02:20:16.842"></status>
</kw>
<msg timestamp="20210127 02:20:16.848" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 02:20:16.848" starttime="20210127 02:20:16.842"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:20:16.851" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:20:50.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:20:50.133" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 02:20:18 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:20:18 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210127 02:20:50.133" starttime="20210127 02:20:16.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:20:50.134" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-27 02:20:18 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:20:18 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:20:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 02:20:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:20:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-501CEEAF1C94-&gt;db8de906-6913-41ce-b2cb-70fc57848cf7
2021-01-27 02:20:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-27 02:20:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-330DA1B392E2-&gt;9f520031-8985-4d5e-8031-5920cd1100ef
2021-01-27 02:20:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-27 02:20:19 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.10:8032
2021-01-27 02:20:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.12:10200
2021-01-27 02:20:20 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611714020200, maxDate=1612318820200, sequenceNumber=3, masterKeyId=2))
2021-01-27 02:20:20 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 93 86 91 8d f4 2e 38 93 8e c3 ad f6 2e 40 03 48 01 5a 0d 31 39 34 33 30 38 35 30 36 31 34 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-27 02:20:20 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611714020200, maxDate=1612318820200, sequenceNumber=3, masterKeyId=2)
2021-01-27 02:20:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 02:20:20 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 02:20:23 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 02:20:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611713816859_0003
2021-01-27 02:20:23 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 93 86 91 8d f4 2e 38 93 8e c3 ad f6 2e 40 03 48 01 5a 0d 31 39 34 33 30 38 35 30 36 31 34 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611714020200, maxDate=1612318820200, sequenceNumber=3, masterKeyId=2)]
2021-01-27 02:20:23 INFO  Configuration:2795 - resource-types.xml not found
2021-01-27 02:20:23 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-27 02:20:23 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-27 02:20:24 INFO  YarnClientImpl:329 - Submitted application application_1611713816859_0003
2021-01-27 02:20:24 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611713816859_0003/
2021-01-27 02:20:24 INFO  Job:1614 - Running job: job_1611713816859_0003
2021-01-27 02:20:31 INFO  Job:1635 - Job job_1611713816859_0003 running in uber mode : false
2021-01-27 02:20:31 INFO  Job:1642 -  map 0% reduce 0%
2021-01-27 02:20:40 INFO  Job:1642 -  map 33% reduce 0%
2021-01-27 02:20:41 INFO  Job:1642 -  map 67% reduce 0%
2021-01-27 02:20:42 INFO  Job:1642 -  map 100% reduce 0%
2021-01-27 02:20:46 INFO  Job:1642 -  map 100% reduce 100%
2021-01-27 02:20:49 INFO  Job:1653 - Job job_1611713816859_0003 completed successfully
2021-01-27 02:20:49 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101061
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37536
		Total time spent by all reduces in occupied slots (ms)=6494
		Total time spent by all map tasks (ms)=18768
		Total time spent by all reduce tasks (ms)=3247
		Total vcore-milliseconds taken by all map tasks=18768
		Total vcore-milliseconds taken by all reduce tasks=3247
		Total megabyte-milliseconds taken by all map tasks=38436864
		Total megabyte-milliseconds taken by all reduce tasks=6649856
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=876
		CPU time spent (ms)=6510
		Physical memory (bytes) snapshot=1431252992
		Virtual memory (bytes) snapshot=14049161216
		Total committed heap usage (bytes)=1214775296
		Peak Map Physical memory (bytes)=395202560
		Peak Map Virtual memory (bytes)=3508731904
		Peak Reduce Physical memory (bytes)=317190144
		Peak Reduce Virtual memory (bytes)=3526377472
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.834 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210127 02:20:50.134" starttime="20210127 02:20:50.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:20:50.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:20:50.135" starttime="20210127 02:20:50.134"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:50.135" starttime="20210127 02:20:16.849"></status>
</kw>
<msg timestamp="20210127 02:20:50.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:20:50.135" starttime="20210127 02:20:16.849"></status>
</kw>
<msg timestamp="20210127 02:20:50.136" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 02:20:18 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:20:18 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210127 02:20:50.136" starttime="20210127 02:20:16.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 02:20:50.136" starttime="20210127 02:20:50.136"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 02:20:50.137" critical="yes" starttime="20210127 02:20:16.829"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:20:50.141" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:20:50.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:20:50.146" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:20:50.146" starttime="20210127 02:20:50.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:20:50.146" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:20:50.147" starttime="20210127 02:20:50.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:20:50.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:20:50.147" starttime="20210127 02:20:50.147"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:50.147" starttime="20210127 02:20:50.139"></status>
</kw>
<msg timestamp="20210127 02:20:50.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:20:50.147" starttime="20210127 02:20:50.139"></status>
</kw>
<msg timestamp="20210127 02:20:50.148" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:20:50.148" starttime="20210127 02:20:50.138"></status>
</kw>
<msg timestamp="20210127 02:20:50.148" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:20:50.148" starttime="20210127 02:20:50.138"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 02:20:50.148" level="INFO">${random} = 1JAF6Jjd</msg>
<status status="PASS" endtime="20210127 02:20:50.148" starttime="20210127 02:20:50.148"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 02:20:50.152" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 02:20:50.152" starttime="20210127 02:20:50.151"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:20:50.152" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 02:20:50.152" starttime="20210127 02:20:50.152"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:50.153" starttime="20210127 02:20:50.151"></status>
</kw>
<msg timestamp="20210127 02:20:50.153" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 02:20:50.153" starttime="20210127 02:20:50.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:20:50.153" starttime="20210127 02:20:50.153"></status>
</kw>
<msg timestamp="20210127 02:20:50.154" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 02:20:50.154" starttime="20210127 02:20:50.153"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:50.154" starttime="20210127 02:20:50.150"></status>
</kw>
<msg timestamp="20210127 02:20:50.154" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 02:20:50.154" starttime="20210127 02:20:50.149"></status>
</kw>
<msg timestamp="20210127 02:20:50.154" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 02:20:50.154" starttime="20210127 02:20:50.149"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 02:20:50.157" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 02:20:50.157" starttime="20210127 02:20:50.157"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:20:50.158" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 02:20:50.158" starttime="20210127 02:20:50.157"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:50.158" starttime="20210127 02:20:50.156"></status>
</kw>
<msg timestamp="20210127 02:20:50.158" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 02:20:50.158" starttime="20210127 02:20:50.156"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:20:50.159" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210127 02:20:50.159" starttime="20210127 02:20:50.159"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:20:50.160" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210127 02:20:50.160" starttime="20210127 02:20:50.159"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:50.160" starttime="20210127 02:20:50.158"></status>
</kw>
<msg timestamp="20210127 02:20:50.160" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210127 02:20:50.160" starttime="20210127 02:20:50.158"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:50.160" starttime="20210127 02:20:50.155"></status>
</kw>
<msg timestamp="20210127 02:20:50.160" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210127 02:20:50.160" starttime="20210127 02:20:50.155"></status>
</kw>
<msg timestamp="20210127 02:20:50.161" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210127 02:20:50.161" starttime="20210127 02:20:50.154"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 02:20:50.163" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 02:20:50.163" starttime="20210127 02:20:50.163"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:20:50.164" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 02:20:50.164" starttime="20210127 02:20:50.163"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:50.164" starttime="20210127 02:20:50.163"></status>
</kw>
<msg timestamp="20210127 02:20:50.164" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 02:20:50.164" starttime="20210127 02:20:50.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:20:50.165" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210127 02:20:50.166" starttime="20210127 02:20:50.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:20:50.166" level="INFO">${result} = /wordcount-1JAF6Jjd.txt</msg>
<status status="PASS" endtime="20210127 02:20:50.166" starttime="20210127 02:20:50.166"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:50.166" starttime="20210127 02:20:50.165"></status>
</kw>
<msg timestamp="20210127 02:20:50.166" level="INFO">${path_with_leading} = /wordcount-1JAF6Jjd.txt</msg>
<status status="PASS" endtime="20210127 02:20:50.166" starttime="20210127 02:20:50.164"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:50.167" starttime="20210127 02:20:50.162"></status>
</kw>
<msg timestamp="20210127 02:20:50.167" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-1JAF6Jjd.txt</msg>
<status status="PASS" endtime="20210127 02:20:50.167" starttime="20210127 02:20:50.161"></status>
</kw>
<msg timestamp="20210127 02:20:50.167" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-1JAF6Jjd.txt</msg>
<status status="PASS" endtime="20210127 02:20:50.167" starttime="20210127 02:20:50.161"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:20:50.170" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-1JAF6Jjd.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:21:18.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:21:18.685" level="INFO">${output} = 2021-01-27 02:20:51 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.10:8032
2021-01-27 02:20:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.12:10200
2...</msg>
<status status="PASS" endtime="20210127 02:21:18.685" starttime="20210127 02:20:50.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:21:18.686" level="INFO">2021-01-27 02:20:51 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.10:8032
2021-01-27 02:20:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.12:10200
2021-01-27 02:20:52 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611714052188, maxDate=1612318852188, sequenceNumber=4, masterKeyId=2))
2021-01-27 02:20:52 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fc ff 92 8d f4 2e 38 fc 87 c5 ad f6 2e 40 04 48 01 5a 0d 31 39 34 33 30 38 35 30 36 31 34 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-27 02:20:52 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611714052188, maxDate=1612318852188, sequenceNumber=4, masterKeyId=2)
2021-01-27 02:20:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 02:20:52 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:20:52 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:20:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 02:20:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:20:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BF51A81EEF03-&gt;db8de906-6913-41ce-b2cb-70fc57848cf7
2021-01-27 02:20:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:20:53 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 02:20:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BB4471481FE3-&gt;9f520031-8985-4d5e-8031-5920cd1100ef
2021-01-27 02:20:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:20:53 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 02:20:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611713816859_0004
2021-01-27 02:20:53 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fc ff 92 8d f4 2e 38 fc 87 c5 ad f6 2e 40 04 48 01 5a 0d 31 39 34 33 30 38 35 30 36 31 34 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611714052188, maxDate=1612318852188, sequenceNumber=4, masterKeyId=2)]
2021-01-27 02:20:54 INFO  Configuration:2795 - resource-types.xml not found
2021-01-27 02:20:54 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-27 02:20:54 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-27 02:20:54 INFO  YarnClientImpl:329 - Submitted application application_1611713816859_0004
2021-01-27 02:20:54 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611713816859_0004/
2021-01-27 02:20:54 INFO  Job:1614 - Running job: job_1611713816859_0004
2021-01-27 02:21:02 INFO  Job:1635 - Job job_1611713816859_0004 running in uber mode : false
2021-01-27 02:21:02 INFO  Job:1642 -  map 0% reduce 0%
2021-01-27 02:21:11 INFO  Job:1642 -  map 33% reduce 0%
2021-01-27 02:21:12 INFO  Job:1642 -  map 67% reduce 0%
2021-01-27 02:21:13 INFO  Job:1642 -  map 100% reduce 0%
2021-01-27 02:21:17 INFO  Job:1642 -  map 100% reduce 100%
2021-01-27 02:21:18 INFO  Job:1653 - Job job_1611713816859_0004 completed successfully
2021-01-27 02:21:18 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163735
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38022
		Total time spent by all reduces in occupied slots (ms)=6548
		Total time spent by all map tasks (ms)=19011
		Total time spent by all reduce tasks (ms)=3274
		Total vcore-milliseconds taken by all map tasks=19011
		Total vcore-milliseconds taken by all reduce tasks=3274
		Total megabyte-milliseconds taken by all map tasks=38934528
		Total megabyte-milliseconds taken by all reduce tasks=6705152
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=971
		CPU time spent (ms)=6780
		Physical memory (bytes) snapshot=1477529600
		Virtual memory (bytes) snapshot=14043987968
		Total committed heap usage (bytes)=1270874112
		Peak Map Physical memory (bytes)=390512640
		Peak Map Virtual memory (bytes)=3507216384
		Peak Reduce Physical memory (bytes)=316272640
		Peak Reduce Virtual memory (bytes)=3528794112
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210127 02:21:18.686" starttime="20210127 02:21:18.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:21:18.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:21:18.687" starttime="20210127 02:21:18.687"></status>
</kw>
<status status="PASS" endtime="20210127 02:21:18.687" starttime="20210127 02:20:50.168"></status>
</kw>
<msg timestamp="20210127 02:21:18.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:21:18.688" starttime="20210127 02:20:50.168"></status>
</kw>
<msg timestamp="20210127 02:21:18.688" level="INFO">${output} = 2021-01-27 02:20:51 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.10:8032
2021-01-27 02:20:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.12:10200
2...</msg>
<status status="PASS" endtime="20210127 02:21:18.688" starttime="20210127 02:20:50.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210127 02:21:18.689" starttime="20210127 02:21:18.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 02:21:18.689" starttime="20210127 02:21:18.689"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 02:21:18.689" critical="yes" starttime="20210127 02:20:50.137"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210127 02:21:18.690" starttime="20210127 02:20:16.784"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:18:53.291" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:18:53.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:18:53.297" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:18:53.297" starttime="20210127 02:18:53.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:18:53.298" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:18:53.298" starttime="20210127 02:18:53.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:18:53.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:18:53.298" starttime="20210127 02:18:53.298"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:53.298" starttime="20210127 02:18:53.288"></status>
</kw>
<msg timestamp="20210127 02:18:53.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:18:53.299" starttime="20210127 02:18:53.287"></status>
</kw>
<msg timestamp="20210127 02:18:53.299" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:18:53.299" starttime="20210127 02:18:53.287"></status>
</kw>
<msg timestamp="20210127 02:18:53.299" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:18:53.299" starttime="20210127 02:18:53.287"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:18:53.304" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:18:53.304" starttime="20210127 02:18:53.304"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:18:53.305" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:18:53.305" starttime="20210127 02:18:53.305"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:53.305" starttime="20210127 02:18:53.303"></status>
</kw>
<msg timestamp="20210127 02:18:53.305" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:18:53.305" starttime="20210127 02:18:53.303"></status>
</kw>
<status status="PASS" endtime="20210127 02:18:53.306" starttime="20210127 02:18:53.302"></status>
</kw>
<msg timestamp="20210127 02:18:53.306" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 02:18:53.306" starttime="20210127 02:18:53.301"></status>
</kw>
<msg timestamp="20210127 02:18:53.307" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 02:18:53.307" starttime="20210127 02:18:53.299"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:18:53.311" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:19:28.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:19:28.901" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 02:18:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:18:55 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210127 02:19:28.901" starttime="20210127 02:18:53.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:19:28.902" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-27 02:18:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:18:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:18:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 02:18:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:18:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-877A29A7C3A4-&gt;9f520031-8985-4d5e-8031-5920cd1100ef
2021-01-27 02:18:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-27 02:18:56 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.10:8032
2021-01-27 02:18:56 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.12:10200
2021-01-27 02:18:57 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611713936982, maxDate=1612318736982, sequenceNumber=1, masterKeyId=2))
2021-01-27 02:18:57 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b0 fa 8b 8d f4 2e 38 b0 82 be ad f6 2e 40 01 48 01 5a 0d 31 39 34 33 30 38 35 30 36 31 34 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-27 02:18:57 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611713936982, maxDate=1612318736982, sequenceNumber=1, masterKeyId=2)
2021-01-27 02:18:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DBFD92BC7D19-&gt;db8de906-6913-41ce-b2cb-70fc57848cf7
2021-01-27 02:18:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:18:57 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 02:19:00 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 02:19:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611713816859_0001
2021-01-27 02:19:00 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b0 fa 8b 8d f4 2e 38 b0 82 be ad f6 2e 40 01 48 01 5a 0d 31 39 34 33 30 38 35 30 36 31 34 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611713936982, maxDate=1612318736982, sequenceNumber=1, masterKeyId=2)]
2021-01-27 02:19:00 INFO  Configuration:2795 - resource-types.xml not found
2021-01-27 02:19:00 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-27 02:19:00 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-27 02:19:01 INFO  YarnClientImpl:329 - Submitted application application_1611713816859_0001
2021-01-27 02:19:01 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611713816859_0001/
2021-01-27 02:19:01 INFO  Job:1614 - Running job: job_1611713816859_0001
2021-01-27 02:19:12 INFO  Job:1635 - Job job_1611713816859_0001 running in uber mode : false
2021-01-27 02:19:12 INFO  Job:1642 -  map 0% reduce 0%
2021-01-27 02:19:22 INFO  Job:1642 -  map 33% reduce 0%
2021-01-27 02:19:23 INFO  Job:1642 -  map 67% reduce 0%
2021-01-27 02:19:24 INFO  Job:1642 -  map 100% reduce 0%
2021-01-27 02:19:27 INFO  Job:1642 -  map 100% reduce 100%
2021-01-27 02:19:28 INFO  Job:1653 - Job job_1611713816859_0001 completed successfully
2021-01-27 02:19:28 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101281
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42692
		Total time spent by all reduces in occupied slots (ms)=7052
		Total time spent by all map tasks (ms)=21346
		Total time spent by all reduce tasks (ms)=3526
		Total vcore-milliseconds taken by all map tasks=21346
		Total vcore-milliseconds taken by all reduce tasks=3526
		Total megabyte-milliseconds taken by all map tasks=43716608
		Total megabyte-milliseconds taken by all reduce tasks=7221248
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1706
		CPU time spent (ms)=7240
		Physical memory (bytes) snapshot=1814032384
		Virtual memory (bytes) snapshot=14055063552
		Total committed heap usage (bytes)=1661468672
		Peak Map Physical memory (bytes)=555782144
		Peak Map Virtual memory (bytes)=3511562240
		Peak Reduce Physical memory (bytes)=320692224
		Peak Reduce Virtual memory (bytes)=3527196672
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.001 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210127 02:19:28.903" starttime="20210127 02:19:28.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:19:28.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:19:28.903" starttime="20210127 02:19:28.903"></status>
</kw>
<status status="PASS" endtime="20210127 02:19:28.904" starttime="20210127 02:18:53.308"></status>
</kw>
<msg timestamp="20210127 02:19:28.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:19:28.904" starttime="20210127 02:18:53.308"></status>
</kw>
<msg timestamp="20210127 02:19:28.904" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 02:18:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:18:55 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210127 02:19:28.904" starttime="20210127 02:18:53.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 02:19:28.905" starttime="20210127 02:19:28.904"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 02:19:28.905" critical="yes" starttime="20210127 02:18:53.286"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:19:28.910" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:19:28.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:19:28.916" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:19:28.916" starttime="20210127 02:19:28.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:19:28.917" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:19:28.917" starttime="20210127 02:19:28.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:19:28.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:19:28.918" starttime="20210127 02:19:28.917"></status>
</kw>
<status status="PASS" endtime="20210127 02:19:28.918" starttime="20210127 02:19:28.908"></status>
</kw>
<msg timestamp="20210127 02:19:28.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:19:28.918" starttime="20210127 02:19:28.907"></status>
</kw>
<msg timestamp="20210127 02:19:28.918" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:19:28.919" starttime="20210127 02:19:28.907"></status>
</kw>
<msg timestamp="20210127 02:19:28.919" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:19:28.919" starttime="20210127 02:19:28.906"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 02:19:28.919" level="INFO">${random} = jqPnQt6G</msg>
<status status="PASS" endtime="20210127 02:19:28.919" starttime="20210127 02:19:28.919"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:19:28.923" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:19:28.923" starttime="20210127 02:19:28.922"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:19:28.923" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:19:28.923" starttime="20210127 02:19:28.923"></status>
</kw>
<status status="PASS" endtime="20210127 02:19:28.923" starttime="20210127 02:19:28.922"></status>
</kw>
<msg timestamp="20210127 02:19:28.923" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:19:28.923" starttime="20210127 02:19:28.921"></status>
</kw>
<status status="PASS" endtime="20210127 02:19:28.924" starttime="20210127 02:19:28.920"></status>
</kw>
<msg timestamp="20210127 02:19:28.924" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 02:19:28.924" starttime="20210127 02:19:28.920"></status>
</kw>
<msg timestamp="20210127 02:19:28.924" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 02:19:28.924" starttime="20210127 02:19:28.919"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:19:28.927" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:19:28.927" starttime="20210127 02:19:28.926"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:19:28.927" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:19:28.927" starttime="20210127 02:19:28.927"></status>
</kw>
<status status="PASS" endtime="20210127 02:19:28.928" starttime="20210127 02:19:28.926"></status>
</kw>
<msg timestamp="20210127 02:19:28.928" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:19:28.928" starttime="20210127 02:19:28.926"></status>
</kw>
<status status="PASS" endtime="20210127 02:19:28.928" starttime="20210127 02:19:28.925"></status>
</kw>
<msg timestamp="20210127 02:19:28.928" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210127 02:19:28.928" starttime="20210127 02:19:28.925"></status>
</kw>
<msg timestamp="20210127 02:19:28.928" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210127 02:19:28.928" starttime="20210127 02:19:28.924"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:19:28.931" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:19:28.931" starttime="20210127 02:19:28.931"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:19:28.931" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:19:28.931" starttime="20210127 02:19:28.931"></status>
</kw>
<status status="PASS" endtime="20210127 02:19:28.932" starttime="20210127 02:19:28.930"></status>
</kw>
<msg timestamp="20210127 02:19:28.932" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:19:28.932" starttime="20210127 02:19:28.930"></status>
</kw>
<status status="PASS" endtime="20210127 02:19:28.932" starttime="20210127 02:19:28.929"></status>
</kw>
<msg timestamp="20210127 02:19:28.932" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-jqPnQt6G.txt</msg>
<status status="PASS" endtime="20210127 02:19:28.932" starttime="20210127 02:19:28.929"></status>
</kw>
<msg timestamp="20210127 02:19:28.932" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-jqPnQt6G.txt</msg>
<status status="PASS" endtime="20210127 02:19:28.932" starttime="20210127 02:19:28.928"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:19:28.935" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-jqPnQt6G.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:20:01.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:20:01.904" level="INFO">${output} = 2021-01-27 02:19:30 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.10:8032
2021-01-27 02:19:30 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.12:10200
2...</msg>
<status status="PASS" endtime="20210127 02:20:01.904" starttime="20210127 02:19:28.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:20:01.905" level="INFO">2021-01-27 02:19:30 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.10:8032
2021-01-27 02:19:30 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.12:10200
2021-01-27 02:19:31 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611713971040, maxDate=1612318771040, sequenceNumber=2, masterKeyId=2))
2021-01-27 02:19:31 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fc 85 8e 8d f4 2e 38 fc 8d c0 ad f6 2e 40 02 48 01 5a 0d 31 39 34 33 30 38 35 30 36 31 34 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-27 02:19:31 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611713971040, maxDate=1612318771040, sequenceNumber=2, masterKeyId=2)
2021-01-27 02:19:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 02:19:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:19:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:19:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 02:19:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:19:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-06AAADA25199-&gt;9f520031-8985-4d5e-8031-5920cd1100ef
2021-01-27 02:19:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:19:32 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 02:19:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B53EA74D97CD-&gt;db8de906-6913-41ce-b2cb-70fc57848cf7
2021-01-27 02:19:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:19:32 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 02:19:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611713816859_0002
2021-01-27 02:19:35 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fc 85 8e 8d f4 2e 38 fc 8d c0 ad f6 2e 40 02 48 01 5a 0d 31 39 34 33 30 38 35 30 36 31 34 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611713971040, maxDate=1612318771040, sequenceNumber=2, masterKeyId=2)]
2021-01-27 02:19:35 INFO  Configuration:2795 - resource-types.xml not found
2021-01-27 02:19:35 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-27 02:19:35 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-27 02:19:36 INFO  YarnClientImpl:329 - Submitted application application_1611713816859_0002
2021-01-27 02:19:36 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611713816859_0002/
2021-01-27 02:19:36 INFO  Job:1614 - Running job: job_1611713816859_0002
2021-01-27 02:19:43 INFO  Job:1635 - Job job_1611713816859_0002 running in uber mode : false
2021-01-27 02:19:43 INFO  Job:1642 -  map 0% reduce 0%
2021-01-27 02:19:52 INFO  Job:1642 -  map 33% reduce 0%
2021-01-27 02:19:53 INFO  Job:1642 -  map 67% reduce 0%
2021-01-27 02:19:54 INFO  Job:1642 -  map 100% reduce 0%
2021-01-27 02:19:58 INFO  Job:1642 -  map 100% reduce 100%
2021-01-27 02:20:01 INFO  Job:1653 - Job job_1611713816859_0002 completed successfully
2021-01-27 02:20:01 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163819
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39402
		Total time spent by all reduces in occupied slots (ms)=6476
		Total time spent by all map tasks (ms)=19701
		Total time spent by all reduce tasks (ms)=3238
		Total vcore-milliseconds taken by all map tasks=19701
		Total vcore-milliseconds taken by all reduce tasks=3238
		Total megabyte-milliseconds taken by all map tasks=40347648
		Total megabyte-milliseconds taken by all reduce tasks=6631424
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=833
		CPU time spent (ms)=6540
		Physical memory (bytes) snapshot=1432752128
		Virtual memory (bytes) snapshot=14054944768
		Total committed heap usage (bytes)=1178075136
		Peak Map Physical memory (bytes)=385835008
		Peak Map Virtual memory (bytes)=3511402496
		Peak Reduce Physical memory (bytes)=323080192
		Peak Reduce Virtual memory (bytes)=3527794688
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210127 02:20:01.906" starttime="20210127 02:20:01.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:20:01.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:20:01.906" starttime="20210127 02:20:01.906"></status>
</kw>
<status status="PASS" endtime="20210127 02:20:01.906" starttime="20210127 02:19:28.933"></status>
</kw>
<msg timestamp="20210127 02:20:01.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:20:01.907" starttime="20210127 02:19:28.933"></status>
</kw>
<msg timestamp="20210127 02:20:01.907" level="INFO">${output} = 2021-01-27 02:19:30 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.10:8032
2021-01-27 02:19:30 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.12:10200
2...</msg>
<status status="PASS" endtime="20210127 02:20:01.907" starttime="20210127 02:19:28.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210127 02:20:01.908" starttime="20210127 02:20:01.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 02:20:01.908" starttime="20210127 02:20:01.908"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 02:20:01.908" critical="yes" starttime="20210127 02:19:28.906"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210127 02:20:01.909" starttime="20210127 02:18:53.242"></status>
</suite>
<status status="PASS" elapsedtime="179860" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
