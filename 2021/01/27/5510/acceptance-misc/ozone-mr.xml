<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210127 02:03:17.967" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:13.721" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:15.698" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 01:51:15.698" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 01:51:15.698" starttime="20210127 01:51:13.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:15.699" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 01:51:15.699" starttime="20210127 01:51:15.699"></status>
</kw>
<msg timestamp="20210127 01:51:15.700" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 01:51:15.700" starttime="20210127 01:51:13.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:15.705" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:17.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:51:17.755" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:51:17.755" starttime="20210127 01:51:15.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:17.756" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:51:17.756" starttime="20210127 01:51:17.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:51:17.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:51:17.757" starttime="20210127 01:51:17.756"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:17.757" starttime="20210127 01:51:15.701"></status>
</kw>
<msg timestamp="20210127 01:51:17.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:51:17.757" starttime="20210127 01:51:15.701"></status>
</kw>
<msg timestamp="20210127 01:51:17.758" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210127 01:51:17.758" starttime="20210127 01:51:15.701"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210127 01:51:17.758" starttime="20210127 01:51:17.758"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:17.758" starttime="20210127 01:51:15.700"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:17.758" starttime="20210127 01:51:15.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:17.786" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:19.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:51:19.703" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:51:19.704" starttime="20210127 01:51:17.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:19.704" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:51:19.705" starttime="20210127 01:51:19.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:51:19.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:51:19.705" starttime="20210127 01:51:19.705"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:19.705" starttime="20210127 01:51:17.772"></status>
</kw>
<msg timestamp="20210127 01:51:19.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:51:19.706" starttime="20210127 01:51:17.771"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:19.706" starttime="20210127 01:51:17.771"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:19.706" starttime="20210127 01:51:17.771"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:19.706" starttime="20210127 01:51:17.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210127 01:51:19.706" starttime="20210127 01:51:19.706"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:19.710" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:21.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:51:21.678" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T01:51...</msg>
<status status="PASS" endtime="20210127 01:51:21.679" starttime="20210127 01:51:19.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:21.680" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T01:51:19.650Z",
  "modificationTime" : "2021-01-27T01:51:19.650Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210127 01:51:21.680" starttime="20210127 01:51:21.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:51:21.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:51:21.680" starttime="20210127 01:51:21.680"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:21.681" starttime="20210127 01:51:19.707"></status>
</kw>
<msg timestamp="20210127 01:51:21.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:51:21.681" starttime="20210127 01:51:19.707"></status>
</kw>
<msg timestamp="20210127 01:51:21.681" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T01:51...</msg>
<status status="PASS" endtime="20210127 01:51:21.681" starttime="20210127 01:51:19.707"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210127 01:51:21.681" starttime="20210127 01:51:21.681"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:51:21.685" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:51:21.685" starttime="20210127 01:51:21.684"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:51:21.685" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:51:21.685" starttime="20210127 01:51:21.685"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:21.686" starttime="20210127 01:51:21.684"></status>
</kw>
<msg timestamp="20210127 01:51:21.686" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:51:21.686" starttime="20210127 01:51:21.684"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:21.686" starttime="20210127 01:51:21.683"></status>
</kw>
<msg timestamp="20210127 01:51:21.686" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210127 01:51:21.686" starttime="20210127 01:51:21.682"></status>
</kw>
<msg timestamp="20210127 01:51:21.686" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210127 01:51:21.686" starttime="20210127 01:51:21.682"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:21.689" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:23.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:51:23.518" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:51:23.518" starttime="20210127 01:51:21.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:23.519" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:51:23.519" starttime="20210127 01:51:23.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:51:23.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:51:23.520" starttime="20210127 01:51:23.519"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:23.520" starttime="20210127 01:51:21.687"></status>
</kw>
<msg timestamp="20210127 01:51:23.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:51:23.520" starttime="20210127 01:51:21.687"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:23.520" starttime="20210127 01:51:21.686"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:23.524" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:28.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:51:28.674" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:51:28.674" starttime="20210127 01:51:23.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:28.675" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:51:28.675" starttime="20210127 01:51:28.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:51:28.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:51:28.675" starttime="20210127 01:51:28.675"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:28.676" starttime="20210127 01:51:23.521"></status>
</kw>
<msg timestamp="20210127 01:51:28.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:51:28.676" starttime="20210127 01:51:23.521"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:28.676" starttime="20210127 01:51:23.521"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:28.680" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:32.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:51:32.085" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:51:32.085" starttime="20210127 01:51:28.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:32.086" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:51:32.087" starttime="20210127 01:51:32.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:51:32.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:51:32.087" starttime="20210127 01:51:32.087"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:32.087" starttime="20210127 01:51:28.677"></status>
</kw>
<msg timestamp="20210127 01:51:32.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:51:32.088" starttime="20210127 01:51:28.677"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:32.088" starttime="20210127 01:51:28.676"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:32.091" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:35.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:51:35.518" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:51:35.518" starttime="20210127 01:51:32.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:35.519" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:51:35.519" starttime="20210127 01:51:35.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:51:35.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:51:35.520" starttime="20210127 01:51:35.519"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:35.520" starttime="20210127 01:51:32.089"></status>
</kw>
<msg timestamp="20210127 01:51:35.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:51:35.520" starttime="20210127 01:51:32.088"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:35.520" starttime="20210127 01:51:32.088"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 01:51:35.521" critical="yes" starttime="20210127 01:51:13.716"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:51:35.525" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:51:35.525" starttime="20210127 01:51:35.525"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:51:35.526" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:51:35.526" starttime="20210127 01:51:35.525"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:35.526" starttime="20210127 01:51:35.524"></status>
</kw>
<msg timestamp="20210127 01:51:35.526" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:51:35.526" starttime="20210127 01:51:35.524"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:35.526" starttime="20210127 01:51:35.523"></status>
</kw>
<msg timestamp="20210127 01:51:35.527" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 01:51:35.527" starttime="20210127 01:51:35.523"></status>
</kw>
<msg timestamp="20210127 01:51:35.527" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 01:51:35.527" starttime="20210127 01:51:35.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:35.530" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:37.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:51:37.325" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:51:37.325" starttime="20210127 01:51:35.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:37.326" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:51:37.326" starttime="20210127 01:51:37.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:51:37.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:51:37.327" starttime="20210127 01:51:37.326"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:37.327" starttime="20210127 01:51:35.528"></status>
</kw>
<msg timestamp="20210127 01:51:37.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:51:37.327" starttime="20210127 01:51:35.527"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:37.327" starttime="20210127 01:51:35.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:37.331" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:39.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:51:39.232" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:51:39.232" starttime="20210127 01:51:37.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:39.233" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:51:39.233" starttime="20210127 01:51:39.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:51:39.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:51:39.234" starttime="20210127 01:51:39.234"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:39.234" starttime="20210127 01:51:37.328"></status>
</kw>
<msg timestamp="20210127 01:51:39.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:51:39.234" starttime="20210127 01:51:37.328"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:39.235" starttime="20210127 01:51:37.328"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 01:51:39.235" critical="yes" starttime="20210127 01:51:35.522"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210127 01:51:39.236" starttime="20210127 01:51:13.670"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 01:53:01.945" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 01:53:01.945" starttime="20210127 01:53:01.944"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:53:01.945" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 01:53:01.945" starttime="20210127 01:53:01.945"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:01.945" starttime="20210127 01:53:01.944"></status>
</kw>
<msg timestamp="20210127 01:53:01.946" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 01:53:01.946" starttime="20210127 01:53:01.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 01:53:01.946" starttime="20210127 01:53:01.946"></status>
</kw>
<msg timestamp="20210127 01:53:01.946" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 01:53:01.947" starttime="20210127 01:53:01.946"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:01.947" starttime="20210127 01:53:01.943"></status>
</kw>
<msg timestamp="20210127 01:53:01.947" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 01:53:01.947" starttime="20210127 01:53:01.942"></status>
</kw>
<msg timestamp="20210127 01:53:01.947" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 01:53:01.947" starttime="20210127 01:53:01.941"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 01:53:01.948" level="INFO">${random} = 35262</msg>
<status status="PASS" endtime="20210127 01:53:01.948" starttime="20210127 01:53:01.947"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:53:01.954" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-35262 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:53:04.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:53:04.794" level="INFO">${output} = 2021-01-27 01:53:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:53:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-27 ...</msg>
<status status="PASS" endtime="20210127 01:53:04.794" starttime="20210127 01:53:01.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:53:04.795" level="INFO">2021-01-27 01:53:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:53:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-27 01:53:03 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-27 01:53:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 01:53:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3EAE416AD05D-&gt;bc7f44b9-e529-425e-bc49-053d266bc129
2021-01-27 01:53:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210127 01:53:04.795" starttime="20210127 01:53:04.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:53:04.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:53:04.796" starttime="20210127 01:53:04.795"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:04.796" starttime="20210127 01:53:01.948"></status>
</kw>
<msg timestamp="20210127 01:53:04.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:53:04.796" starttime="20210127 01:53:01.948"></status>
</kw>
<msg timestamp="20210127 01:53:04.797" level="INFO">${result} = 2021-01-27 01:53:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:53:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-27 ...</msg>
<status status="PASS" endtime="20210127 01:53:04.797" starttime="20210127 01:53:01.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:53:04.800" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:53:06.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:53:06.271" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-27 01:53 ofs://om/volume1/bucket1/ozone-35262
-rw-...</msg>
<status status="PASS" endtime="20210127 01:53:06.271" starttime="20210127 01:53:04.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:53:06.272" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-27 01:53 ofs://om/volume1/bucket1/ozone-35262
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-27 01:51 ofs://om/volume1/bucket1/ozone-93020
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:51 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:52 ofs://om/volume1/bucket1/wordcount-Z3VuV741.txt</msg>
<status status="PASS" endtime="20210127 01:53:06.272" starttime="20210127 01:53:06.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:53:06.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:53:06.273" starttime="20210127 01:53:06.272"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:06.273" starttime="20210127 01:53:04.798"></status>
</kw>
<msg timestamp="20210127 01:53:06.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:53:06.273" starttime="20210127 01:53:04.797"></status>
</kw>
<msg timestamp="20210127 01:53:06.274" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-27 01:53 ofs://om/volume1/bucket1/ozone-35262
-rw-...</msg>
<status status="PASS" endtime="20210127 01:53:06.274" starttime="20210127 01:53:04.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210127 01:53:06.274" starttime="20210127 01:53:06.274"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 01:53:06.274" critical="yes" starttime="20210127 01:53:01.941"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210127 01:53:06.275" starttime="20210127 01:53:01.876"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:51:43.548" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:51:43.548" starttime="20210127 01:51:43.548"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:51:43.549" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:51:43.549" starttime="20210127 01:51:43.548"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:43.549" starttime="20210127 01:51:43.547"></status>
</kw>
<msg timestamp="20210127 01:51:43.549" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:51:43.549" starttime="20210127 01:51:43.547"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:43.549" starttime="20210127 01:51:43.546"></status>
</kw>
<msg timestamp="20210127 01:51:43.550" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 01:51:43.550" starttime="20210127 01:51:43.546"></status>
</kw>
<msg timestamp="20210127 01:51:43.550" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 01:51:43.550" starttime="20210127 01:51:43.545"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 01:51:43.550" level="INFO">${random} = 93020</msg>
<status status="PASS" endtime="20210127 01:51:43.550" starttime="20210127 01:51:43.550"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:43.554" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-93020 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:46.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:51:46.507" level="INFO">${output} = 2021-01-27 01:51:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:51:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-27 ...</msg>
<status status="PASS" endtime="20210127 01:51:46.507" starttime="20210127 01:51:43.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:46.509" level="INFO">2021-01-27 01:51:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:51:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-27 01:51:45 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-27 01:51:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 01:51:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0E910B022EA0-&gt;bc7f44b9-e529-425e-bc49-053d266bc129
2021-01-27 01:51:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210127 01:51:46.509" starttime="20210127 01:51:46.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:51:46.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:51:46.510" starttime="20210127 01:51:46.509"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:46.510" starttime="20210127 01:51:43.551"></status>
</kw>
<msg timestamp="20210127 01:51:46.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:51:46.510" starttime="20210127 01:51:43.551"></status>
</kw>
<msg timestamp="20210127 01:51:46.510" level="INFO">${result} = 2021-01-27 01:51:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:51:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-27 ...</msg>
<status status="PASS" endtime="20210127 01:51:46.510" starttime="20210127 01:51:43.550"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:46.513" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:47.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:51:47.997" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-27 01:51 o3fs://bucket1.volume1.om/ozone-93020
dr...</msg>
<status status="PASS" endtime="20210127 01:51:47.997" starttime="20210127 01:51:46.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:47.998" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-27 01:51 o3fs://bucket1.volume1.om/ozone-93020
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:51 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 01:51:47.998" starttime="20210127 01:51:47.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:51:47.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:51:47.998" starttime="20210127 01:51:47.998"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:47.999" starttime="20210127 01:51:46.511"></status>
</kw>
<msg timestamp="20210127 01:51:47.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:51:47.999" starttime="20210127 01:51:46.511"></status>
</kw>
<msg timestamp="20210127 01:51:47.999" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-01-27 01:51 o3fs://bucket1.volume1.om/ozone-93020
dr...</msg>
<status status="PASS" endtime="20210127 01:51:47.999" starttime="20210127 01:51:46.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210127 01:51:48.000" starttime="20210127 01:51:47.999"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 01:51:48.000" critical="yes" starttime="20210127 01:51:43.544"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210127 01:51:48.001" starttime="20210127 01:51:43.499"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:53:10.318" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:53:10.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:53:10.323" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:53:10.323" starttime="20210127 01:53:10.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:53:10.324" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:53:10.324" starttime="20210127 01:53:10.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:53:10.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:53:10.325" starttime="20210127 01:53:10.324"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:10.325" starttime="20210127 01:53:10.314"></status>
</kw>
<msg timestamp="20210127 01:53:10.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:53:10.325" starttime="20210127 01:53:10.314"></status>
</kw>
<msg timestamp="20210127 01:53:10.325" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:53:10.325" starttime="20210127 01:53:10.313"></status>
</kw>
<msg timestamp="20210127 01:53:10.325" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:53:10.325" starttime="20210127 01:53:10.313"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 01:53:10.329" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 01:53:10.329" starttime="20210127 01:53:10.329"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:53:10.330" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 01:53:10.330" starttime="20210127 01:53:10.329"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:10.330" starttime="20210127 01:53:10.329"></status>
</kw>
<msg timestamp="20210127 01:53:10.330" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 01:53:10.330" starttime="20210127 01:53:10.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 01:53:10.331" starttime="20210127 01:53:10.331"></status>
</kw>
<msg timestamp="20210127 01:53:10.331" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 01:53:10.331" starttime="20210127 01:53:10.330"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:10.331" starttime="20210127 01:53:10.328"></status>
</kw>
<msg timestamp="20210127 01:53:10.331" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 01:53:10.331" starttime="20210127 01:53:10.326"></status>
</kw>
<msg timestamp="20210127 01:53:10.332" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 01:53:10.332" starttime="20210127 01:53:10.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:53:10.335" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:53:41.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:53:41.149" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 01:53:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:53:12 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210127 01:53:41.150" starttime="20210127 01:53:10.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:53:41.151" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-27 01:53:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:53:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-27 01:53:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-27 01:53:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 01:53:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8BB0F429583E-&gt;bc7f44b9-e529-425e-bc49-053d266bc129
2021-01-27 01:53:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-27 01:53:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-706BDB024567-&gt;9142e770-759b-492f-b66c-fa5b105ea00e
2021-01-27 01:53:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-27 01:53:15 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-01-27 01:53:15 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 01:53:15 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-27 01:53:15 INFO  JobSubmitter:198 - number of splits:3
2021-01-27 01:53:16 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611712239205_0003
2021-01-27 01:53:16 INFO  YarnClientImpl:273 - Submitted application application_1611712239205_0003
2021-01-27 01:53:16 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611712239205_0003/
2021-01-27 01:53:16 INFO  Job:1339 - Running job: job_1611712239205_0003
2021-01-27 01:53:23 INFO  Job:1360 - Job job_1611712239205_0003 running in uber mode : false
2021-01-27 01:53:23 INFO  Job:1367 -  map 0% reduce 0%
2021-01-27 01:53:28 INFO  Job:1367 -  map 33% reduce 0%
2021-01-27 01:53:32 INFO  Job:1367 -  map 67% reduce 0%
2021-01-27 01:53:36 INFO  Job:1367 -  map 100% reduce 0%
2021-01-27 01:53:40 INFO  Job:1367 -  map 100% reduce 100%
2021-01-27 01:53:40 INFO  Job:1378 - Job job_1611712239205_0003 completed successfully
2021-01-27 01:53:40 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610717
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=32744
		Total time spent by all reduces in occupied slots (ms)=12524
		Total time spent by all map tasks (ms)=8186
		Total time spent by all reduce tasks (ms)=3131
		Total vcore-milliseconds taken by all map tasks=8186
		Total vcore-milliseconds taken by all reduce tasks=3131
		Total megabyte-milliseconds taken by all map tasks=33529856
		Total megabyte-milliseconds taken by all reduce tasks=12824576
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=558
		CPU time spent (ms)=6120
		Physical memory (bytes) snapshot=1181491200
		Virtual memory (bytes) snapshot=15788732416
		Total committed heap usage (bytes)=1068498944
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 25.197 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210127 01:53:41.151" starttime="20210127 01:53:41.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:53:41.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:53:41.151" starttime="20210127 01:53:41.151"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:41.152" starttime="20210127 01:53:10.333"></status>
</kw>
<msg timestamp="20210127 01:53:41.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:53:41.152" starttime="20210127 01:53:10.332"></status>
</kw>
<msg timestamp="20210127 01:53:41.152" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 01:53:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:53:12 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210127 01:53:41.152" starttime="20210127 01:53:10.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 01:53:41.153" starttime="20210127 01:53:41.152"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 01:53:41.153" critical="yes" starttime="20210127 01:53:10.312"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:53:41.157" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:53:41.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:53:41.162" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:53:41.163" starttime="20210127 01:53:41.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:53:41.163" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:53:41.163" starttime="20210127 01:53:41.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:53:41.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:53:41.164" starttime="20210127 01:53:41.164"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:41.164" starttime="20210127 01:53:41.155"></status>
</kw>
<msg timestamp="20210127 01:53:41.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:53:41.165" starttime="20210127 01:53:41.155"></status>
</kw>
<msg timestamp="20210127 01:53:41.165" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:53:41.165" starttime="20210127 01:53:41.155"></status>
</kw>
<msg timestamp="20210127 01:53:41.165" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:53:41.165" starttime="20210127 01:53:41.154"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 01:53:41.166" level="INFO">${random} = w7PpwJ1d</msg>
<status status="PASS" endtime="20210127 01:53:41.166" starttime="20210127 01:53:41.165"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 01:53:41.169" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 01:53:41.169" starttime="20210127 01:53:41.169"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:53:41.170" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 01:53:41.170" starttime="20210127 01:53:41.169"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:41.170" starttime="20210127 01:53:41.168"></status>
</kw>
<msg timestamp="20210127 01:53:41.170" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 01:53:41.170" starttime="20210127 01:53:41.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 01:53:41.171" starttime="20210127 01:53:41.170"></status>
</kw>
<msg timestamp="20210127 01:53:41.171" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 01:53:41.171" starttime="20210127 01:53:41.170"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:41.171" starttime="20210127 01:53:41.167"></status>
</kw>
<msg timestamp="20210127 01:53:41.171" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 01:53:41.171" starttime="20210127 01:53:41.166"></status>
</kw>
<msg timestamp="20210127 01:53:41.171" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 01:53:41.171" starttime="20210127 01:53:41.166"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 01:53:41.175" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 01:53:41.175" starttime="20210127 01:53:41.174"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:53:41.175" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 01:53:41.175" starttime="20210127 01:53:41.175"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:41.176" starttime="20210127 01:53:41.174"></status>
</kw>
<msg timestamp="20210127 01:53:41.176" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 01:53:41.176" starttime="20210127 01:53:41.173"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:53:41.177" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210127 01:53:41.177" starttime="20210127 01:53:41.177"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:53:41.178" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210127 01:53:41.178" starttime="20210127 01:53:41.177"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:41.178" starttime="20210127 01:53:41.176"></status>
</kw>
<msg timestamp="20210127 01:53:41.178" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210127 01:53:41.178" starttime="20210127 01:53:41.176"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:41.178" starttime="20210127 01:53:41.173"></status>
</kw>
<msg timestamp="20210127 01:53:41.178" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210127 01:53:41.178" starttime="20210127 01:53:41.172"></status>
</kw>
<msg timestamp="20210127 01:53:41.179" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210127 01:53:41.179" starttime="20210127 01:53:41.172"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 01:53:41.182" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 01:53:41.182" starttime="20210127 01:53:41.181"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:53:41.182" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 01:53:41.182" starttime="20210127 01:53:41.182"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:41.182" starttime="20210127 01:53:41.181"></status>
</kw>
<msg timestamp="20210127 01:53:41.182" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 01:53:41.182" starttime="20210127 01:53:41.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:53:41.184" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210127 01:53:41.184" starttime="20210127 01:53:41.183"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:53:41.184" level="INFO">${result} = /wordcount-w7PpwJ1d.txt</msg>
<status status="PASS" endtime="20210127 01:53:41.184" starttime="20210127 01:53:41.184"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:41.184" starttime="20210127 01:53:41.183"></status>
</kw>
<msg timestamp="20210127 01:53:41.185" level="INFO">${path_with_leading} = /wordcount-w7PpwJ1d.txt</msg>
<status status="PASS" endtime="20210127 01:53:41.185" starttime="20210127 01:53:41.182"></status>
</kw>
<status status="PASS" endtime="20210127 01:53:41.185" starttime="20210127 01:53:41.180"></status>
</kw>
<msg timestamp="20210127 01:53:41.185" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-w7PpwJ1d.txt</msg>
<status status="PASS" endtime="20210127 01:53:41.185" starttime="20210127 01:53:41.179"></status>
</kw>
<msg timestamp="20210127 01:53:41.185" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-w7PpwJ1d.txt</msg>
<status status="PASS" endtime="20210127 01:53:41.185" starttime="20210127 01:53:41.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:53:41.188" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-w7PpwJ1d.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:54:13.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:54:13.179" level="INFO">${output} = 2021-01-27 01:53:42 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-01-27 01:53:42 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210127 01:54:13.179" starttime="20210127 01:53:41.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:54:13.181" level="INFO">2021-01-27 01:53:42 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-01-27 01:53:42 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 01:53:43 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:53:43 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-27 01:53:43 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-27 01:53:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 01:53:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ECBDC73EF3EA-&gt;bc7f44b9-e529-425e-bc49-053d266bc129
2021-01-27 01:53:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 01:53:43 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-27 01:53:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-39BE0DC83598-&gt;9142e770-759b-492f-b66c-fa5b105ea00e
2021-01-27 01:53:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 01:53:44 INFO  JobSubmitter:198 - number of splits:3
2021-01-27 01:53:44 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611712239205_0004
2021-01-27 01:53:44 INFO  YarnClientImpl:273 - Submitted application application_1611712239205_0004
2021-01-27 01:53:44 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611712239205_0004/
2021-01-27 01:53:44 INFO  Job:1339 - Running job: job_1611712239205_0004
2021-01-27 01:53:52 INFO  Job:1360 - Job job_1611712239205_0004 running in uber mode : false
2021-01-27 01:53:52 INFO  Job:1367 -  map 0% reduce 0%
2021-01-27 01:53:58 INFO  Job:1367 -  map 33% reduce 0%
2021-01-27 01:54:02 INFO  Job:1367 -  map 67% reduce 0%
2021-01-27 01:54:06 INFO  Job:1367 -  map 100% reduce 0%
2021-01-27 01:54:09 INFO  Job:1367 -  map 100% reduce 100%
2021-01-27 01:54:12 INFO  Job:1378 - Job job_1611712239205_0004 completed successfully
2021-01-27 01:54:12 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=32900
		Total time spent by all reduces in occupied slots (ms)=12180
		Total time spent by all map tasks (ms)=8225
		Total time spent by all reduce tasks (ms)=3045
		Total vcore-milliseconds taken by all map tasks=8225
		Total vcore-milliseconds taken by all reduce tasks=3045
		Total megabyte-milliseconds taken by all map tasks=33689600
		Total megabyte-milliseconds taken by all reduce tasks=12472320
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=483
		CPU time spent (ms)=5700
		Physical memory (bytes) snapshot=1158062080
		Virtual memory (bytes) snapshot=15767658496
		Total committed heap usage (bytes)=1055391744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210127 01:54:13.181" starttime="20210127 01:54:13.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:54:13.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:54:13.182" starttime="20210127 01:54:13.181"></status>
</kw>
<status status="PASS" endtime="20210127 01:54:13.182" starttime="20210127 01:53:41.186"></status>
</kw>
<msg timestamp="20210127 01:54:13.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:54:13.182" starttime="20210127 01:53:41.186"></status>
</kw>
<msg timestamp="20210127 01:54:13.182" level="INFO">${output} = 2021-01-27 01:53:42 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-01-27 01:53:42 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210127 01:54:13.182" starttime="20210127 01:53:41.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210127 01:54:13.183" starttime="20210127 01:54:13.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 01:54:13.183" starttime="20210127 01:54:13.183"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 01:54:13.184" critical="yes" starttime="20210127 01:53:41.154"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210127 01:54:13.185" starttime="20210127 01:53:10.268"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:52.026" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:51:52.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:51:52.031" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:51:52.031" starttime="20210127 01:51:52.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:51:52.032" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:51:52.032" starttime="20210127 01:51:52.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:51:52.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:51:52.033" starttime="20210127 01:51:52.032"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:52.033" starttime="20210127 01:51:52.023"></status>
</kw>
<msg timestamp="20210127 01:51:52.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:51:52.033" starttime="20210127 01:51:52.023"></status>
</kw>
<msg timestamp="20210127 01:51:52.034" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:51:52.034" starttime="20210127 01:51:52.022"></status>
</kw>
<msg timestamp="20210127 01:51:52.034" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:51:52.034" starttime="20210127 01:51:52.022"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:51:52.038" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:51:52.038" starttime="20210127 01:51:52.037"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:51:52.038" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:51:52.038" starttime="20210127 01:51:52.038"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:52.038" starttime="20210127 01:51:52.037"></status>
</kw>
<msg timestamp="20210127 01:51:52.039" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:51:52.039" starttime="20210127 01:51:52.037"></status>
</kw>
<status status="PASS" endtime="20210127 01:51:52.039" starttime="20210127 01:51:52.036"></status>
</kw>
<msg timestamp="20210127 01:51:52.039" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 01:51:52.039" starttime="20210127 01:51:52.035"></status>
</kw>
<msg timestamp="20210127 01:51:52.039" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 01:51:52.039" starttime="20210127 01:51:52.034"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:51:52.042" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:52:27.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:52:27.476" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 01:51:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:51:53 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210127 01:52:27.476" starttime="20210127 01:51:52.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:52:27.477" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-27 01:51:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:51:53 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-27 01:51:53 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-27 01:51:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 01:51:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C0A29D31966A-&gt;bc7f44b9-e529-425e-bc49-053d266bc129
2021-01-27 01:51:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-27 01:51:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F27F7F68835B-&gt;9142e770-759b-492f-b66c-fa5b105ea00e
2021-01-27 01:51:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-27 01:51:57 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-01-27 01:51:57 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-27 01:51:57 INFO  JobSubmitter:198 - number of splits:3
2021-01-27 01:51:57 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611712239205_0001
2021-01-27 01:51:58 INFO  YarnClientImpl:273 - Submitted application application_1611712239205_0001
2021-01-27 01:51:58 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611712239205_0001/
2021-01-27 01:51:58 INFO  Job:1339 - Running job: job_1611712239205_0001
2021-01-27 01:52:06 INFO  Job:1360 - Job job_1611712239205_0001 running in uber mode : false
2021-01-27 01:52:06 INFO  Job:1367 -  map 0% reduce 0%
2021-01-27 01:52:13 INFO  Job:1367 -  map 33% reduce 0%
2021-01-27 01:52:17 INFO  Job:1367 -  map 67% reduce 0%
2021-01-27 01:52:21 INFO  Job:1367 -  map 100% reduce 0%
2021-01-27 01:52:25 INFO  Job:1367 -  map 100% reduce 100%
2021-01-27 01:52:26 INFO  Job:1378 - Job job_1611712239205_0001 completed successfully
2021-01-27 01:52:26 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610929
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34000
		Total time spent by all reduces in occupied slots (ms)=13844
		Total time spent by all map tasks (ms)=8500
		Total time spent by all reduce tasks (ms)=3461
		Total vcore-milliseconds taken by all map tasks=8500
		Total vcore-milliseconds taken by all reduce tasks=3461
		Total megabyte-milliseconds taken by all map tasks=34816000
		Total megabyte-milliseconds taken by all reduce tasks=14176256
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=512
		CPU time spent (ms)=5870
		Physical memory (bytes) snapshot=1203228672
		Virtual memory (bytes) snapshot=15806636032
		Total committed heap usage (bytes)=1056440320
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.781 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210127 01:52:27.477" starttime="20210127 01:52:27.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:52:27.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:52:27.478" starttime="20210127 01:52:27.477"></status>
</kw>
<status status="PASS" endtime="20210127 01:52:27.478" starttime="20210127 01:51:52.040"></status>
</kw>
<msg timestamp="20210127 01:52:27.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:52:27.478" starttime="20210127 01:51:52.040"></status>
</kw>
<msg timestamp="20210127 01:52:27.479" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 01:51:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:51:53 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210127 01:52:27.479" starttime="20210127 01:51:52.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 01:52:27.479" starttime="20210127 01:52:27.479"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 01:52:27.480" critical="yes" starttime="20210127 01:51:52.021"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:52:27.484" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:52:27.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:52:27.489" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:52:27.489" starttime="20210127 01:52:27.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:52:27.490" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:52:27.490" starttime="20210127 01:52:27.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:52:27.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:52:27.490" starttime="20210127 01:52:27.490"></status>
</kw>
<status status="PASS" endtime="20210127 01:52:27.491" starttime="20210127 01:52:27.482"></status>
</kw>
<msg timestamp="20210127 01:52:27.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:52:27.491" starttime="20210127 01:52:27.482"></status>
</kw>
<msg timestamp="20210127 01:52:27.491" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:52:27.491" starttime="20210127 01:52:27.481"></status>
</kw>
<msg timestamp="20210127 01:52:27.491" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210127 01:52:27.491" starttime="20210127 01:52:27.481"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 01:52:27.492" level="INFO">${random} = Z3VuV741</msg>
<status status="PASS" endtime="20210127 01:52:27.492" starttime="20210127 01:52:27.491"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:52:27.495" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:52:27.495" starttime="20210127 01:52:27.495"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:52:27.495" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:52:27.495" starttime="20210127 01:52:27.495"></status>
</kw>
<status status="PASS" endtime="20210127 01:52:27.496" starttime="20210127 01:52:27.494"></status>
</kw>
<msg timestamp="20210127 01:52:27.496" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:52:27.496" starttime="20210127 01:52:27.494"></status>
</kw>
<status status="PASS" endtime="20210127 01:52:27.496" starttime="20210127 01:52:27.493"></status>
</kw>
<msg timestamp="20210127 01:52:27.496" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 01:52:27.496" starttime="20210127 01:52:27.492"></status>
</kw>
<msg timestamp="20210127 01:52:27.497" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 01:52:27.497" starttime="20210127 01:52:27.492"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:52:27.499" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:52:27.499" starttime="20210127 01:52:27.499"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:52:27.500" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:52:27.500" starttime="20210127 01:52:27.500"></status>
</kw>
<status status="PASS" endtime="20210127 01:52:27.500" starttime="20210127 01:52:27.499"></status>
</kw>
<msg timestamp="20210127 01:52:27.500" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:52:27.500" starttime="20210127 01:52:27.498"></status>
</kw>
<status status="PASS" endtime="20210127 01:52:27.500" starttime="20210127 01:52:27.498"></status>
</kw>
<msg timestamp="20210127 01:52:27.501" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210127 01:52:27.501" starttime="20210127 01:52:27.497"></status>
</kw>
<msg timestamp="20210127 01:52:27.501" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210127 01:52:27.501" starttime="20210127 01:52:27.497"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:52:27.503" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:52:27.503" starttime="20210127 01:52:27.503"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:52:27.504" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:52:27.504" starttime="20210127 01:52:27.504"></status>
</kw>
<status status="PASS" endtime="20210127 01:52:27.504" starttime="20210127 01:52:27.503"></status>
</kw>
<msg timestamp="20210127 01:52:27.504" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:52:27.504" starttime="20210127 01:52:27.502"></status>
</kw>
<status status="PASS" endtime="20210127 01:52:27.505" starttime="20210127 01:52:27.502"></status>
</kw>
<msg timestamp="20210127 01:52:27.505" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-Z3VuV741.txt</msg>
<status status="PASS" endtime="20210127 01:52:27.505" starttime="20210127 01:52:27.501"></status>
</kw>
<msg timestamp="20210127 01:52:27.505" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-Z3VuV741.txt</msg>
<status status="PASS" endtime="20210127 01:52:27.505" starttime="20210127 01:52:27.501"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:52:27.508" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-Z3VuV741.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:52:57.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:52:57.799" level="INFO">${output} = 2021-01-27 01:52:29 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-01-27 01:52:29 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210127 01:52:57.799" starttime="20210127 01:52:27.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:52:57.800" level="INFO">2021-01-27 01:52:29 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-01-27 01:52:29 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 01:52:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:52:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-01-27 01:52:29 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-01-27 01:52:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 01:52:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4FE908482C24-&gt;9142e770-759b-492f-b66c-fa5b105ea00e
2021-01-27 01:52:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 01:52:30 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-01-27 01:52:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-99142E70429D-&gt;bc7f44b9-e529-425e-bc49-053d266bc129
2021-01-27 01:52:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 01:52:30 INFO  JobSubmitter:198 - number of splits:3
2021-01-27 01:52:30 INFO  JobSubmitter:287 - Submitting tokens for job: job_1611712239205_0002
2021-01-27 01:52:31 INFO  YarnClientImpl:273 - Submitted application application_1611712239205_0002
2021-01-27 01:52:31 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1611712239205_0002/
2021-01-27 01:52:31 INFO  Job:1339 - Running job: job_1611712239205_0002
2021-01-27 01:52:38 INFO  Job:1360 - Job job_1611712239205_0002 running in uber mode : false
2021-01-27 01:52:38 INFO  Job:1367 -  map 0% reduce 0%
2021-01-27 01:52:44 INFO  Job:1367 -  map 33% reduce 0%
2021-01-27 01:52:49 INFO  Job:1367 -  map 67% reduce 0%
2021-01-27 01:52:53 INFO  Job:1367 -  map 100% reduce 0%
2021-01-27 01:52:56 INFO  Job:1367 -  map 100% reduce 100%
2021-01-27 01:52:57 INFO  Job:1378 - Job job_1611712239205_0002 completed successfully
2021-01-27 01:52:57 INFO  Job:1385 - Counters: 50
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34496
		Total time spent by all reduces in occupied slots (ms)=12460
		Total time spent by all map tasks (ms)=8624
		Total time spent by all reduce tasks (ms)=3115
		Total vcore-milliseconds taken by all map tasks=8624
		Total vcore-milliseconds taken by all reduce tasks=3115
		Total megabyte-milliseconds taken by all map tasks=35323904
		Total megabyte-milliseconds taken by all reduce tasks=12759040
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=530
		CPU time spent (ms)=5910
		Physical memory (bytes) snapshot=1210953728
		Virtual memory (bytes) snapshot=15787720704
		Total committed heap usage (bytes)=1105199104
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210127 01:52:57.801" starttime="20210127 01:52:57.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:52:57.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:52:57.804" starttime="20210127 01:52:57.801"></status>
</kw>
<status status="PASS" endtime="20210127 01:52:57.804" starttime="20210127 01:52:27.506"></status>
</kw>
<msg timestamp="20210127 01:52:57.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:52:57.804" starttime="20210127 01:52:27.505"></status>
</kw>
<msg timestamp="20210127 01:52:57.805" level="INFO">${output} = 2021-01-27 01:52:29 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-01-27 01:52:29 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210127 01:52:57.805" starttime="20210127 01:52:27.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210127 01:52:57.805" starttime="20210127 01:52:57.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 01:52:57.806" starttime="20210127 01:52:57.805"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 01:52:57.806" critical="yes" starttime="20210127 01:52:27.480"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210127 01:52:57.807" starttime="20210127 01:51:51.978"></status>
</suite>
<status status="PASS" elapsedtime="163213" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:14.869" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:16.972" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 01:55:16.972" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 01:55:16.972" starttime="20210127 01:55:14.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:16.976" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 01:55:16.976" starttime="20210127 01:55:16.973"></status>
</kw>
<msg timestamp="20210127 01:55:16.982" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 01:55:16.982" starttime="20210127 01:55:14.865"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:16.987" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:19.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:55:19.023" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:55:19.023" starttime="20210127 01:55:16.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:19.024" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:55:19.024" starttime="20210127 01:55:19.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:55:19.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:55:19.025" starttime="20210127 01:55:19.024"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:19.025" starttime="20210127 01:55:16.984"></status>
</kw>
<msg timestamp="20210127 01:55:19.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:55:19.025" starttime="20210127 01:55:16.983"></status>
</kw>
<msg timestamp="20210127 01:55:19.025" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210127 01:55:19.025" starttime="20210127 01:55:16.983"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210127 01:55:19.026" starttime="20210127 01:55:19.025"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:19.026" starttime="20210127 01:55:16.983"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:19.026" starttime="20210127 01:55:16.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:19.033" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:20.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:55:20.798" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:55:20.798" starttime="20210127 01:55:19.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:20.799" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:55:20.799" starttime="20210127 01:55:20.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:55:20.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:55:20.799" starttime="20210127 01:55:20.799"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:20.800" starttime="20210127 01:55:19.029"></status>
</kw>
<msg timestamp="20210127 01:55:20.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:55:20.800" starttime="20210127 01:55:19.029"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:20.800" starttime="20210127 01:55:19.029"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:20.800" starttime="20210127 01:55:19.028"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:20.800" starttime="20210127 01:55:19.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210127 01:55:20.801" starttime="20210127 01:55:20.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:20.804" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:22.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:55:22.669" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T01:55...</msg>
<status status="PASS" endtime="20210127 01:55:22.669" starttime="20210127 01:55:20.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:22.670" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T01:55:20.765Z",
  "modificationTime" : "2021-01-27T01:55:20.765Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210127 01:55:22.670" starttime="20210127 01:55:22.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:55:22.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:55:22.670" starttime="20210127 01:55:22.670"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:22.671" starttime="20210127 01:55:20.802"></status>
</kw>
<msg timestamp="20210127 01:55:22.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:55:22.671" starttime="20210127 01:55:20.801"></status>
</kw>
<msg timestamp="20210127 01:55:22.671" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T01:55...</msg>
<status status="PASS" endtime="20210127 01:55:22.671" starttime="20210127 01:55:20.801"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210127 01:55:22.672" starttime="20210127 01:55:22.671"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:55:22.675" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:55:22.675" starttime="20210127 01:55:22.675"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:55:22.676" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:55:22.676" starttime="20210127 01:55:22.675"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:22.676" starttime="20210127 01:55:22.674"></status>
</kw>
<msg timestamp="20210127 01:55:22.676" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:55:22.676" starttime="20210127 01:55:22.674"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:22.676" starttime="20210127 01:55:22.673"></status>
</kw>
<msg timestamp="20210127 01:55:22.676" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210127 01:55:22.676" starttime="20210127 01:55:22.672"></status>
</kw>
<msg timestamp="20210127 01:55:22.676" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210127 01:55:22.676" starttime="20210127 01:55:22.672"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:22.679" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:24.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:55:24.577" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:55:24.577" starttime="20210127 01:55:22.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:24.578" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:55:24.578" starttime="20210127 01:55:24.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:55:24.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:55:24.578" starttime="20210127 01:55:24.578"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:24.579" starttime="20210127 01:55:22.677"></status>
</kw>
<msg timestamp="20210127 01:55:24.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:55:24.579" starttime="20210127 01:55:22.677"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:24.579" starttime="20210127 01:55:22.677"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:24.582" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:28.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:55:28.978" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:55:28.978" starttime="20210127 01:55:24.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:28.979" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:55:28.980" starttime="20210127 01:55:28.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:55:28.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:55:28.980" starttime="20210127 01:55:28.980"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:28.980" starttime="20210127 01:55:24.580"></status>
</kw>
<msg timestamp="20210127 01:55:28.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:55:28.981" starttime="20210127 01:55:24.580"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:28.981" starttime="20210127 01:55:24.579"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:28.984" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:32.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:55:32.462" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:55:32.462" starttime="20210127 01:55:28.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:32.463" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:55:32.463" starttime="20210127 01:55:32.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:55:32.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:55:32.463" starttime="20210127 01:55:32.463"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:32.464" starttime="20210127 01:55:28.982"></status>
</kw>
<msg timestamp="20210127 01:55:32.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:55:32.464" starttime="20210127 01:55:28.981"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:32.464" starttime="20210127 01:55:28.981"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:32.467" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:35.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:55:35.665" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:55:35.665" starttime="20210127 01:55:32.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:35.666" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:55:35.666" starttime="20210127 01:55:35.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:55:35.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:55:35.667" starttime="20210127 01:55:35.666"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:35.667" starttime="20210127 01:55:32.465"></status>
</kw>
<msg timestamp="20210127 01:55:35.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:55:35.667" starttime="20210127 01:55:32.465"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:35.667" starttime="20210127 01:55:32.464"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 01:55:35.667" critical="yes" starttime="20210127 01:55:14.865"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:55:35.672" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:55:35.672" starttime="20210127 01:55:35.671"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:55:35.672" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:55:35.672" starttime="20210127 01:55:35.672"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:35.672" starttime="20210127 01:55:35.671"></status>
</kw>
<msg timestamp="20210127 01:55:35.672" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:55:35.672" starttime="20210127 01:55:35.670"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:35.673" starttime="20210127 01:55:35.670"></status>
</kw>
<msg timestamp="20210127 01:55:35.673" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 01:55:35.673" starttime="20210127 01:55:35.669"></status>
</kw>
<msg timestamp="20210127 01:55:35.673" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 01:55:35.673" starttime="20210127 01:55:35.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:35.676" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:37.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:55:37.582" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:55:37.582" starttime="20210127 01:55:35.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:37.583" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:55:37.583" starttime="20210127 01:55:37.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:55:37.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:55:37.584" starttime="20210127 01:55:37.584"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:37.584" starttime="20210127 01:55:35.674"></status>
</kw>
<msg timestamp="20210127 01:55:37.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:55:37.585" starttime="20210127 01:55:35.673"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:37.585" starttime="20210127 01:55:35.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:37.588" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:39.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:55:39.562" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:55:39.562" starttime="20210127 01:55:37.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:39.563" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:55:39.563" starttime="20210127 01:55:39.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:55:39.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:55:39.564" starttime="20210127 01:55:39.563"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:39.564" starttime="20210127 01:55:37.586"></status>
</kw>
<msg timestamp="20210127 01:55:39.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:55:39.564" starttime="20210127 01:55:37.585"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:39.565" starttime="20210127 01:55:37.585"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 01:55:39.565" critical="yes" starttime="20210127 01:55:35.668"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210127 01:55:39.566" starttime="20210127 01:55:14.817"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 01:57:14.458" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 01:57:14.458" starttime="20210127 01:57:14.458"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:57:14.459" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 01:57:14.459" starttime="20210127 01:57:14.458"></status>
</kw>
<status status="PASS" endtime="20210127 01:57:14.459" starttime="20210127 01:57:14.457"></status>
</kw>
<msg timestamp="20210127 01:57:14.459" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 01:57:14.459" starttime="20210127 01:57:14.457"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 01:57:14.460" starttime="20210127 01:57:14.459"></status>
</kw>
<msg timestamp="20210127 01:57:14.460" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 01:57:14.460" starttime="20210127 01:57:14.459"></status>
</kw>
<status status="PASS" endtime="20210127 01:57:14.460" starttime="20210127 01:57:14.456"></status>
</kw>
<msg timestamp="20210127 01:57:14.460" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 01:57:14.460" starttime="20210127 01:57:14.456"></status>
</kw>
<msg timestamp="20210127 01:57:14.460" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 01:57:14.461" starttime="20210127 01:57:14.455"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 01:57:14.461" level="INFO">${random} = 15517</msg>
<status status="PASS" endtime="20210127 01:57:14.461" starttime="20210127 01:57:14.461"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:57:14.466" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-15517 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:57:17.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:57:17.564" level="INFO">${output} = 2021-01-27 01:57:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210127 01:57:17.564" starttime="20210127 01:57:14.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:57:17.565" level="INFO">2021-01-27 01:57:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:16 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-27 01:57:16 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:57:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 01:57:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 01:57:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 01:57:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-75915D8FD29A-&gt;d95a3188-01f7-4612-8208-2c8d80264ea0
2021-01-27 01:57:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 01:57:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210127 01:57:17.565" starttime="20210127 01:57:17.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:57:17.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:57:17.566" starttime="20210127 01:57:17.565"></status>
</kw>
<status status="PASS" endtime="20210127 01:57:17.566" starttime="20210127 01:57:14.462"></status>
</kw>
<msg timestamp="20210127 01:57:17.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:57:17.566" starttime="20210127 01:57:14.462"></status>
</kw>
<msg timestamp="20210127 01:57:17.566" level="INFO">${result} = 2021-01-27 01:57:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210127 01:57:17.566" starttime="20210127 01:57:14.461"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:57:17.569" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:57:19.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:57:19.211" level="INFO">${output} = 2021-01-27 01:57:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:18 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210127 01:57:19.211" starttime="20210127 01:57:17.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:57:19.212" level="INFO">2021-01-27 01:57:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:18 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-27 01:57 ofs://om/volume1/bucket1/ozone-15517
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-27 01:55 ofs://om/volume1/bucket1/ozone-87850
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:55 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:56 ofs://om/volume1/bucket1/wordcount-1SlRFB4G.txt
2021-01-27 01:57:19 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210127 01:57:19.212" starttime="20210127 01:57:19.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:57:19.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:57:19.213" starttime="20210127 01:57:19.212"></status>
</kw>
<status status="PASS" endtime="20210127 01:57:19.213" starttime="20210127 01:57:17.567"></status>
</kw>
<msg timestamp="20210127 01:57:19.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:57:19.213" starttime="20210127 01:57:17.567"></status>
</kw>
<msg timestamp="20210127 01:57:19.213" level="INFO">${result} = 2021-01-27 01:57:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:18 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210127 01:57:19.213" starttime="20210127 01:57:17.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210127 01:57:19.214" starttime="20210127 01:57:19.214"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 01:57:19.214" critical="yes" starttime="20210127 01:57:14.454"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210127 01:57:19.215" starttime="20210127 01:57:14.409"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:55:43.628" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:55:43.628" starttime="20210127 01:55:43.628"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:55:43.629" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:55:43.629" starttime="20210127 01:55:43.628"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:43.629" starttime="20210127 01:55:43.627"></status>
</kw>
<msg timestamp="20210127 01:55:43.629" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:55:43.629" starttime="20210127 01:55:43.627"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:43.629" starttime="20210127 01:55:43.627"></status>
</kw>
<msg timestamp="20210127 01:55:43.629" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 01:55:43.629" starttime="20210127 01:55:43.626"></status>
</kw>
<msg timestamp="20210127 01:55:43.630" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 01:55:43.630" starttime="20210127 01:55:43.625"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 01:55:43.630" level="INFO">${random} = 87850</msg>
<status status="PASS" endtime="20210127 01:55:43.630" starttime="20210127 01:55:43.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:43.634" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-87850 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:49.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:55:49.123" level="INFO">${output} = 2021-01-27 01:55:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210127 01:55:49.123" starttime="20210127 01:55:43.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:49.125" level="INFO">2021-01-27 01:55:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:45 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-27 01:55:45 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:55:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 01:55:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 01:55:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 01:55:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1B333AF2A399-&gt;d95a3188-01f7-4612-8208-2c8d80264ea0
2021-01-27 01:55:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 01:55:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210127 01:55:49.125" starttime="20210127 01:55:49.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:55:49.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:55:49.126" starttime="20210127 01:55:49.125"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:49.126" starttime="20210127 01:55:43.631"></status>
</kw>
<msg timestamp="20210127 01:55:49.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:55:49.126" starttime="20210127 01:55:43.631"></status>
</kw>
<msg timestamp="20210127 01:55:49.126" level="INFO">${result} = 2021-01-27 01:55:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210127 01:55:49.127" starttime="20210127 01:55:43.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:49.129" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:50.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:55:50.693" level="INFO">${output} = 2021-01-27 01:55:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210127 01:55:50.693" starttime="20210127 01:55:49.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:50.694" level="INFO">2021-01-27 01:55:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:50 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-01-27 01:55 o3fs://bucket1.volume1.om/ozone-87850
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:55 o3fs://bucket1.volume1.om/user
2021-01-27 01:55:50 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210127 01:55:50.694" starttime="20210127 01:55:50.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:55:50.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:55:50.695" starttime="20210127 01:55:50.694"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:50.695" starttime="20210127 01:55:49.127"></status>
</kw>
<msg timestamp="20210127 01:55:50.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:55:50.696" starttime="20210127 01:55:49.127"></status>
</kw>
<msg timestamp="20210127 01:55:50.696" level="INFO">${result} = 2021-01-27 01:55:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210127 01:55:50.696" starttime="20210127 01:55:49.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210127 01:55:50.696" starttime="20210127 01:55:50.696"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 01:55:50.697" critical="yes" starttime="20210127 01:55:43.624"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210127 01:55:50.698" starttime="20210127 01:55:43.580"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:57:23.297" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:57:23.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:57:23.302" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:57:23.303" starttime="20210127 01:57:23.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:57:23.303" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:57:23.303" starttime="20210127 01:57:23.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:57:23.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:57:23.304" starttime="20210127 01:57:23.304"></status>
</kw>
<status status="PASS" endtime="20210127 01:57:23.304" starttime="20210127 01:57:23.294"></status>
</kw>
<msg timestamp="20210127 01:57:23.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:57:23.304" starttime="20210127 01:57:23.294"></status>
</kw>
<msg timestamp="20210127 01:57:23.305" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:57:23.305" starttime="20210127 01:57:23.293"></status>
</kw>
<msg timestamp="20210127 01:57:23.305" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:57:23.305" starttime="20210127 01:57:23.293"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 01:57:23.309" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 01:57:23.309" starttime="20210127 01:57:23.309"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:57:23.310" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 01:57:23.310" starttime="20210127 01:57:23.309"></status>
</kw>
<status status="PASS" endtime="20210127 01:57:23.310" starttime="20210127 01:57:23.308"></status>
</kw>
<msg timestamp="20210127 01:57:23.310" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 01:57:23.310" starttime="20210127 01:57:23.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 01:57:23.311" starttime="20210127 01:57:23.310"></status>
</kw>
<msg timestamp="20210127 01:57:23.311" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 01:57:23.311" starttime="20210127 01:57:23.310"></status>
</kw>
<status status="PASS" endtime="20210127 01:57:23.311" starttime="20210127 01:57:23.307"></status>
</kw>
<msg timestamp="20210127 01:57:23.311" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 01:57:23.311" starttime="20210127 01:57:23.306"></status>
</kw>
<msg timestamp="20210127 01:57:23.311" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 01:57:23.311" starttime="20210127 01:57:23.305"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:57:23.314" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:58:02.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:58:02.621" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 01:57:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57...</msg>
<status status="PASS" endtime="20210127 01:58:02.621" starttime="20210127 01:57:23.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:58:02.622" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-27 01:57:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:24 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-27 01:57:25 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:57:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 01:57:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 01:57:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 01:57:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-07829803F6A9-&gt;d95a3188-01f7-4612-8208-2c8d80264ea0
2021-01-27 01:57:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-27 01:57:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2021-01-27 01:57:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:26 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 01:57:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EF425A235D88-&gt;7987e279-68c5-4bd2-aaaa-20bbd70666d7
2021-01-27 01:57:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 01:57:29 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 01:57:29 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 01:57:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611712491382_0003
2021-01-27 01:57:29 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-27 01:57:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:29 INFO  Configuration:2752 - resource-types.xml not found
2021-01-27 01:57:29 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-27 01:57:29 INFO  YarnClientImpl:324 - Submitted application application_1611712491382_0003
2021-01-27 01:57:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611712491382_0003/
2021-01-27 01:57:29 INFO  Job:1619 - Running job: job_1611712491382_0003
2021-01-27 01:57:36 INFO  Job:1640 - Job job_1611712491382_0003 running in uber mode : false
2021-01-27 01:57:36 INFO  Job:1647 -  map 0% reduce 0%
2021-01-27 01:57:42 INFO  Job:1647 -  map 33% reduce 0%
2021-01-27 01:57:46 INFO  Job:1647 -  map 67% reduce 0%
2021-01-27 01:57:51 INFO  Job:1647 -  map 100% reduce 0%
2021-01-27 01:57:56 INFO  Job:1647 -  map 100% reduce 100%
2021-01-27 01:58:01 INFO  Job:1658 - Job job_1611712491382_0003 completed successfully
2021-01-27 01:58:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016165
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34284
		Total time spent by all reduces in occupied slots (ms)=12676
		Total time spent by all map tasks (ms)=8571
		Total time spent by all reduce tasks (ms)=3169
		Total vcore-milliseconds taken by all map tasks=8571
		Total vcore-milliseconds taken by all reduce tasks=3169
		Total megabyte-milliseconds taken by all map tasks=35106816
		Total megabyte-milliseconds taken by all reduce tasks=12980224
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=560
		CPU time spent (ms)=5550
		Physical memory (bytes) snapshot=1248980992
		Virtual memory (bytes) snapshot=15802638336
		Total committed heap usage (bytes)=1061683200
		Peak Map Physical memory (bytes)=317198336
		Peak Map Virtual memory (bytes)=3944480768
		Peak Reduce Physical memory (bytes)=309014528
		Peak Reduce Virtual memory (bytes)=3970854912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.0 seconds
2021-01-27 01:58:02 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-27 01:58:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210127 01:58:02.622" starttime="20210127 01:58:02.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:58:02.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:58:02.623" starttime="20210127 01:58:02.622"></status>
</kw>
<status status="PASS" endtime="20210127 01:58:02.623" starttime="20210127 01:57:23.312"></status>
</kw>
<msg timestamp="20210127 01:58:02.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:58:02.623" starttime="20210127 01:57:23.312"></status>
</kw>
<msg timestamp="20210127 01:58:02.624" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 01:57:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57...</msg>
<status status="PASS" endtime="20210127 01:58:02.624" starttime="20210127 01:57:23.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 01:58:02.624" starttime="20210127 01:58:02.624"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 01:58:02.624" critical="yes" starttime="20210127 01:57:23.292"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:58:02.629" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:58:02.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:58:02.634" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:58:02.634" starttime="20210127 01:58:02.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:58:02.635" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:58:02.635" starttime="20210127 01:58:02.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:58:02.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:58:02.636" starttime="20210127 01:58:02.635"></status>
</kw>
<status status="PASS" endtime="20210127 01:58:02.636" starttime="20210127 01:58:02.627"></status>
</kw>
<msg timestamp="20210127 01:58:02.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:58:02.636" starttime="20210127 01:58:02.626"></status>
</kw>
<msg timestamp="20210127 01:58:02.636" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:58:02.636" starttime="20210127 01:58:02.626"></status>
</kw>
<msg timestamp="20210127 01:58:02.637" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:58:02.637" starttime="20210127 01:58:02.626"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 01:58:02.637" level="INFO">${random} = LiGFnQ0A</msg>
<status status="PASS" endtime="20210127 01:58:02.637" starttime="20210127 01:58:02.637"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 01:58:02.640" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 01:58:02.640" starttime="20210127 01:58:02.640"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:58:02.641" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 01:58:02.641" starttime="20210127 01:58:02.641"></status>
</kw>
<status status="PASS" endtime="20210127 01:58:02.641" starttime="20210127 01:58:02.640"></status>
</kw>
<msg timestamp="20210127 01:58:02.641" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 01:58:02.641" starttime="20210127 01:58:02.639"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 01:58:02.642" starttime="20210127 01:58:02.642"></status>
</kw>
<msg timestamp="20210127 01:58:02.642" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 01:58:02.642" starttime="20210127 01:58:02.641"></status>
</kw>
<status status="PASS" endtime="20210127 01:58:02.643" starttime="20210127 01:58:02.639"></status>
</kw>
<msg timestamp="20210127 01:58:02.643" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 01:58:02.643" starttime="20210127 01:58:02.638"></status>
</kw>
<msg timestamp="20210127 01:58:02.643" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 01:58:02.643" starttime="20210127 01:58:02.637"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 01:58:02.646" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 01:58:02.646" starttime="20210127 01:58:02.645"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:58:02.646" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 01:58:02.646" starttime="20210127 01:58:02.646"></status>
</kw>
<status status="PASS" endtime="20210127 01:58:02.646" starttime="20210127 01:58:02.645"></status>
</kw>
<msg timestamp="20210127 01:58:02.647" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 01:58:02.647" starttime="20210127 01:58:02.645"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:58:02.648" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210127 01:58:02.648" starttime="20210127 01:58:02.647"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:58:02.648" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210127 01:58:02.648" starttime="20210127 01:58:02.648"></status>
</kw>
<status status="PASS" endtime="20210127 01:58:02.649" starttime="20210127 01:58:02.647"></status>
</kw>
<msg timestamp="20210127 01:58:02.649" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210127 01:58:02.649" starttime="20210127 01:58:02.647"></status>
</kw>
<status status="PASS" endtime="20210127 01:58:02.649" starttime="20210127 01:58:02.644"></status>
</kw>
<msg timestamp="20210127 01:58:02.649" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210127 01:58:02.649" starttime="20210127 01:58:02.644"></status>
</kw>
<msg timestamp="20210127 01:58:02.649" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210127 01:58:02.649" starttime="20210127 01:58:02.643"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 01:58:02.652" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 01:58:02.652" starttime="20210127 01:58:02.652"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:58:02.653" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 01:58:02.653" starttime="20210127 01:58:02.652"></status>
</kw>
<status status="PASS" endtime="20210127 01:58:02.653" starttime="20210127 01:58:02.651"></status>
</kw>
<msg timestamp="20210127 01:58:02.653" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 01:58:02.653" starttime="20210127 01:58:02.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:58:02.654" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210127 01:58:02.654" starttime="20210127 01:58:02.654"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:58:02.655" level="INFO">${result} = /wordcount-LiGFnQ0A.txt</msg>
<status status="PASS" endtime="20210127 01:58:02.655" starttime="20210127 01:58:02.654"></status>
</kw>
<status status="PASS" endtime="20210127 01:58:02.655" starttime="20210127 01:58:02.654"></status>
</kw>
<msg timestamp="20210127 01:58:02.655" level="INFO">${path_with_leading} = /wordcount-LiGFnQ0A.txt</msg>
<status status="PASS" endtime="20210127 01:58:02.655" starttime="20210127 01:58:02.653"></status>
</kw>
<status status="PASS" endtime="20210127 01:58:02.656" starttime="20210127 01:58:02.651"></status>
</kw>
<msg timestamp="20210127 01:58:02.656" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-LiGFnQ0A.txt</msg>
<status status="PASS" endtime="20210127 01:58:02.656" starttime="20210127 01:58:02.650"></status>
</kw>
<msg timestamp="20210127 01:58:02.656" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-LiGFnQ0A.txt</msg>
<status status="PASS" endtime="20210127 01:58:02.656" starttime="20210127 01:58:02.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:58:02.659" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-LiGFnQ0A.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:58:36.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:58:36.533" level="INFO">${output} = 2021-01-27 01:58:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210127 01:58:36.533" starttime="20210127 01:58:02.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:58:36.534" level="INFO">2021-01-27 01:58:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2021-01-27 01:58:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 01:58:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:04 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-27 01:58:04 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:58:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 01:58:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 01:58:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 01:58:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C3B1C1C77881-&gt;d95a3188-01f7-4612-8208-2c8d80264ea0
2021-01-27 01:58:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 01:58:05 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 01:58:08 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 01:58:08 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611712491382_0004
2021-01-27 01:58:08 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-27 01:58:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:08 INFO  Configuration:2752 - resource-types.xml not found
2021-01-27 01:58:08 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-27 01:58:08 INFO  YarnClientImpl:324 - Submitted application application_1611712491382_0004
2021-01-27 01:58:08 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611712491382_0004/
2021-01-27 01:58:08 INFO  Job:1619 - Running job: job_1611712491382_0004
2021-01-27 01:58:14 INFO  Job:1640 - Job job_1611712491382_0004 running in uber mode : false
2021-01-27 01:58:14 INFO  Job:1647 -  map 0% reduce 0%
2021-01-27 01:58:22 INFO  Job:1647 -  map 33% reduce 0%
2021-01-27 01:58:26 INFO  Job:1647 -  map 67% reduce 0%
2021-01-27 01:58:31 INFO  Job:1647 -  map 100% reduce 0%
2021-01-27 01:58:35 INFO  Job:1647 -  map 100% reduce 100%
2021-01-27 01:58:36 INFO  Job:1658 - Job job_1611712491382_0004 completed successfully
2021-01-27 01:58:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078831
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35268
		Total time spent by all reduces in occupied slots (ms)=12468
		Total time spent by all map tasks (ms)=8817
		Total time spent by all reduce tasks (ms)=3117
		Total vcore-milliseconds taken by all map tasks=8817
		Total vcore-milliseconds taken by all reduce tasks=3117
		Total megabyte-milliseconds taken by all map tasks=36114432
		Total megabyte-milliseconds taken by all reduce tasks=12767232
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=516
		CPU time spent (ms)=6130
		Physical memory (bytes) snapshot=1248526336
		Virtual memory (bytes) snapshot=15809740800
		Total committed heap usage (bytes)=1066401792
		Peak Map Physical memory (bytes)=315760640
		Peak Map Virtual memory (bytes)=3946102784
		Peak Reduce Physical memory (bytes)=307281920
		Peak Reduce Virtual memory (bytes)=3973099520
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-27 01:58:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210127 01:58:36.534" starttime="20210127 01:58:36.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:58:36.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:58:36.535" starttime="20210127 01:58:36.535"></status>
</kw>
<status status="PASS" endtime="20210127 01:58:36.535" starttime="20210127 01:58:02.657"></status>
</kw>
<msg timestamp="20210127 01:58:36.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:58:36.536" starttime="20210127 01:58:02.657"></status>
</kw>
<msg timestamp="20210127 01:58:36.536" level="INFO">${output} = 2021-01-27 01:58:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:58:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210127 01:58:36.536" starttime="20210127 01:58:02.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210127 01:58:36.537" starttime="20210127 01:58:36.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 01:58:36.537" starttime="20210127 01:58:36.537"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 01:58:36.537" critical="yes" starttime="20210127 01:58:02.625"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210127 01:58:36.538" starttime="20210127 01:57:23.248"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:54.767" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:55:54.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:55:54.772" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:55:54.772" starttime="20210127 01:55:54.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:55:54.773" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:55:54.773" starttime="20210127 01:55:54.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:55:54.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:55:54.774" starttime="20210127 01:55:54.773"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:54.774" starttime="20210127 01:55:54.763"></status>
</kw>
<msg timestamp="20210127 01:55:54.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:55:54.774" starttime="20210127 01:55:54.763"></status>
</kw>
<msg timestamp="20210127 01:55:54.775" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:55:54.775" starttime="20210127 01:55:54.762"></status>
</kw>
<msg timestamp="20210127 01:55:54.775" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:55:54.775" starttime="20210127 01:55:54.762"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:55:54.779" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:55:54.779" starttime="20210127 01:55:54.779"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:55:54.779" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:55:54.779" starttime="20210127 01:55:54.779"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:54.780" starttime="20210127 01:55:54.778"></status>
</kw>
<msg timestamp="20210127 01:55:54.780" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:55:54.780" starttime="20210127 01:55:54.778"></status>
</kw>
<status status="PASS" endtime="20210127 01:55:54.780" starttime="20210127 01:55:54.777"></status>
</kw>
<msg timestamp="20210127 01:55:54.780" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 01:55:54.780" starttime="20210127 01:55:54.776"></status>
</kw>
<msg timestamp="20210127 01:55:54.780" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 01:55:54.780" starttime="20210127 01:55:54.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:55:54.783" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:56:37.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:56:37.777" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 01:55:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55...</msg>
<status status="PASS" endtime="20210127 01:56:37.777" starttime="20210127 01:55:54.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:56:37.778" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-27 01:55:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:56 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-27 01:55:56 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:55:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 01:55:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 01:55:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 01:55:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4085B74FE8EB-&gt;d95a3188-01f7-4612-8208-2c8d80264ea0
2021-01-27 01:55:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-27 01:55:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-872D641CD20E-&gt;7987e279-68c5-4bd2-aaaa-20bbd70666d7
2021-01-27 01:55:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-27 01:55:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2021-01-27 01:55:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:58 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 01:55:58 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 01:56:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611712491382_0001
2021-01-27 01:56:01 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-27 01:56:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:01 INFO  Configuration:2752 - resource-types.xml not found
2021-01-27 01:56:01 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-27 01:56:01 INFO  YarnClientImpl:324 - Submitted application application_1611712491382_0001
2021-01-27 01:56:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611712491382_0001/
2021-01-27 01:56:01 INFO  Job:1619 - Running job: job_1611712491382_0001
2021-01-27 01:56:10 INFO  Job:1640 - Job job_1611712491382_0001 running in uber mode : false
2021-01-27 01:56:10 INFO  Job:1647 -  map 0% reduce 0%
2021-01-27 01:56:17 INFO  Job:1647 -  map 33% reduce 0%
2021-01-27 01:56:22 INFO  Job:1647 -  map 67% reduce 0%
2021-01-27 01:56:27 INFO  Job:1647 -  map 100% reduce 0%
2021-01-27 01:56:34 INFO  Job:1647 -  map 100% reduce 100%
2021-01-27 01:56:37 INFO  Job:1658 - Job job_1611712491382_0001 completed successfully
2021-01-27 01:56:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:37 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016377
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34040
		Total time spent by all reduces in occupied slots (ms)=24228
		Total time spent by all map tasks (ms)=8510
		Total time spent by all reduce tasks (ms)=6057
		Total vcore-milliseconds taken by all map tasks=8510
		Total vcore-milliseconds taken by all reduce tasks=6057
		Total megabyte-milliseconds taken by all map tasks=34856960
		Total megabyte-milliseconds taken by all reduce tasks=24809472
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=621
		CPU time spent (ms)=5120
		Physical memory (bytes) snapshot=1239793664
		Virtual memory (bytes) snapshot=15766642688
		Total committed heap usage (bytes)=1067974656
		Peak Map Physical memory (bytes)=319983616
		Peak Map Virtual memory (bytes)=3946983424
		Peak Reduce Physical memory (bytes)=323313664
		Peak Reduce Virtual memory (bytes)=3969576960
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.484 seconds
2021-01-27 01:56:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:37 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-01-27 01:56:37 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210127 01:56:37.779" starttime="20210127 01:56:37.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:56:37.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:56:37.779" starttime="20210127 01:56:37.779"></status>
</kw>
<status status="PASS" endtime="20210127 01:56:37.779" starttime="20210127 01:55:54.781"></status>
</kw>
<msg timestamp="20210127 01:56:37.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:56:37.780" starttime="20210127 01:55:54.781"></status>
</kw>
<msg timestamp="20210127 01:56:37.780" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 01:55:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:55...</msg>
<status status="PASS" endtime="20210127 01:56:37.780" starttime="20210127 01:55:54.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 01:56:37.781" starttime="20210127 01:56:37.780"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 01:56:37.781" critical="yes" starttime="20210127 01:55:54.761"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:56:37.785" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:56:37.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:56:37.791" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:56:37.791" starttime="20210127 01:56:37.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:56:37.792" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:56:37.792" starttime="20210127 01:56:37.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:56:37.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:56:37.792" starttime="20210127 01:56:37.792"></status>
</kw>
<status status="PASS" endtime="20210127 01:56:37.792" starttime="20210127 01:56:37.783"></status>
</kw>
<msg timestamp="20210127 01:56:37.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:56:37.793" starttime="20210127 01:56:37.783"></status>
</kw>
<msg timestamp="20210127 01:56:37.793" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:56:37.793" starttime="20210127 01:56:37.782"></status>
</kw>
<msg timestamp="20210127 01:56:37.793" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210127 01:56:37.793" starttime="20210127 01:56:37.782"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 01:56:37.794" level="INFO">${random} = 1SlRFB4G</msg>
<status status="PASS" endtime="20210127 01:56:37.794" starttime="20210127 01:56:37.793"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:56:37.797" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:56:37.797" starttime="20210127 01:56:37.796"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:56:37.797" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:56:37.797" starttime="20210127 01:56:37.797"></status>
</kw>
<status status="PASS" endtime="20210127 01:56:37.798" starttime="20210127 01:56:37.796"></status>
</kw>
<msg timestamp="20210127 01:56:37.798" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:56:37.798" starttime="20210127 01:56:37.796"></status>
</kw>
<status status="PASS" endtime="20210127 01:56:37.798" starttime="20210127 01:56:37.795"></status>
</kw>
<msg timestamp="20210127 01:56:37.798" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 01:56:37.798" starttime="20210127 01:56:37.794"></status>
</kw>
<msg timestamp="20210127 01:56:37.798" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 01:56:37.798" starttime="20210127 01:56:37.794"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:56:37.801" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:56:37.801" starttime="20210127 01:56:37.801"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:56:37.802" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:56:37.802" starttime="20210127 01:56:37.801"></status>
</kw>
<status status="PASS" endtime="20210127 01:56:37.802" starttime="20210127 01:56:37.800"></status>
</kw>
<msg timestamp="20210127 01:56:37.802" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:56:37.802" starttime="20210127 01:56:37.800"></status>
</kw>
<status status="PASS" endtime="20210127 01:56:37.802" starttime="20210127 01:56:37.799"></status>
</kw>
<msg timestamp="20210127 01:56:37.802" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210127 01:56:37.802" starttime="20210127 01:56:37.799"></status>
</kw>
<msg timestamp="20210127 01:56:37.802" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210127 01:56:37.802" starttime="20210127 01:56:37.798"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:56:37.805" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:56:37.805" starttime="20210127 01:56:37.805"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:56:37.806" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:56:37.806" starttime="20210127 01:56:37.805"></status>
</kw>
<status status="PASS" endtime="20210127 01:56:37.806" starttime="20210127 01:56:37.804"></status>
</kw>
<msg timestamp="20210127 01:56:37.806" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:56:37.806" starttime="20210127 01:56:37.804"></status>
</kw>
<status status="PASS" endtime="20210127 01:56:37.806" starttime="20210127 01:56:37.804"></status>
</kw>
<msg timestamp="20210127 01:56:37.806" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-1SlRFB4G.txt</msg>
<status status="PASS" endtime="20210127 01:56:37.806" starttime="20210127 01:56:37.803"></status>
</kw>
<msg timestamp="20210127 01:56:37.807" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-1SlRFB4G.txt</msg>
<status status="PASS" endtime="20210127 01:56:37.807" starttime="20210127 01:56:37.803"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:56:37.809" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-1SlRFB4G.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:57:10.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:57:10.357" level="INFO">${output} = 2021-01-27 01:56:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210127 01:57:10.357" starttime="20210127 01:56:37.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:57:10.358" level="INFO">2021-01-27 01:56:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2021-01-27 01:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 01:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:39 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-01-27 01:56:39 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-01-27 01:56:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 01:56:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 01:56:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 01:56:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2A479A459E30-&gt;7987e279-68c5-4bd2-aaaa-20bbd70666d7
2021-01-27 01:56:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 01:56:40 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 01:56:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9F9E9CF54CB1-&gt;d95a3188-01f7-4612-8208-2c8d80264ea0
2021-01-27 01:56:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 01:56:41 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 01:56:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611712491382_0002
2021-01-27 01:56:41 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-27 01:56:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:41 INFO  Configuration:2752 - resource-types.xml not found
2021-01-27 01:56:41 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-01-27 01:56:41 INFO  YarnClientImpl:324 - Submitted application application_1611712491382_0002
2021-01-27 01:56:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1611712491382_0002/
2021-01-27 01:56:41 INFO  Job:1619 - Running job: job_1611712491382_0002
2021-01-27 01:56:48 INFO  Job:1640 - Job job_1611712491382_0002 running in uber mode : false
2021-01-27 01:56:48 INFO  Job:1647 -  map 0% reduce 0%
2021-01-27 01:56:55 INFO  Job:1647 -  map 33% reduce 0%
2021-01-27 01:56:59 INFO  Job:1647 -  map 67% reduce 0%
2021-01-27 01:57:04 INFO  Job:1647 -  map 100% reduce 0%
2021-01-27 01:57:09 INFO  Job:1647 -  map 100% reduce 100%
2021-01-27 01:57:09 INFO  Job:1658 - Job job_1611712491382_0002 completed successfully
2021-01-27 01:57:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:57:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078915
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34768
		Total time spent by all reduces in occupied slots (ms)=12864
		Total time spent by all map tasks (ms)=8692
		Total time spent by all reduce tasks (ms)=3216
		Total vcore-milliseconds taken by all map tasks=8692
		Total vcore-milliseconds taken by all reduce tasks=3216
		Total megabyte-milliseconds taken by all map tasks=35602432
		Total megabyte-milliseconds taken by all reduce tasks=13172736
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=535
		CPU time spent (ms)=6180
		Physical memory (bytes) snapshot=1266491392
		Virtual memory (bytes) snapshot=15807631360
		Total committed heap usage (bytes)=1074266112
		Peak Map Physical memory (bytes)=320839680
		Peak Map Virtual memory (bytes)=3947745280
		Peak Reduce Physical memory (bytes)=313630720
		Peak Reduce Virtual memory (bytes)=3969667072
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-01-27 01:57:10 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210127 01:57:10.358" starttime="20210127 01:57:10.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:57:10.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:57:10.359" starttime="20210127 01:57:10.358"></status>
</kw>
<status status="PASS" endtime="20210127 01:57:10.359" starttime="20210127 01:56:37.807"></status>
</kw>
<msg timestamp="20210127 01:57:10.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:57:10.359" starttime="20210127 01:56:37.807"></status>
</kw>
<msg timestamp="20210127 01:57:10.360" level="INFO">${output} = 2021-01-27 01:56:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-01-27 01:56:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210127 01:57:10.360" starttime="20210127 01:56:37.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210127 01:57:10.360" starttime="20210127 01:57:10.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 01:57:10.361" starttime="20210127 01:57:10.360"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 01:57:10.361" critical="yes" starttime="20210127 01:56:37.781"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210127 01:57:10.362" starttime="20210127 01:55:54.717"></status>
</suite>
<status status="PASS" elapsedtime="185608" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:59:43.164" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:59:46.556" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 01:59:46.556" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 01:59:46.556" starttime="20210127 01:59:43.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:59:46.557" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 01:59:46.557" starttime="20210127 01:59:46.556"></status>
</kw>
<msg timestamp="20210127 01:59:46.557" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 01:59:46.557" starttime="20210127 01:59:43.159"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:59:46.562" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:59:49.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:59:49.201" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:59:49.201" starttime="20210127 01:59:46.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:59:49.202" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:59:49.203" starttime="20210127 01:59:49.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:59:49.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:59:49.203" starttime="20210127 01:59:49.203"></status>
</kw>
<status status="PASS" endtime="20210127 01:59:49.203" starttime="20210127 01:59:46.559"></status>
</kw>
<msg timestamp="20210127 01:59:49.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:59:49.204" starttime="20210127 01:59:46.559"></status>
</kw>
<msg timestamp="20210127 01:59:49.204" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210127 01:59:49.204" starttime="20210127 01:59:46.558"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210127 01:59:49.204" starttime="20210127 01:59:49.204"></status>
</kw>
<status status="PASS" endtime="20210127 01:59:49.204" starttime="20210127 01:59:46.558"></status>
</kw>
<status status="PASS" endtime="20210127 01:59:49.205" starttime="20210127 01:59:46.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:59:49.209" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:59:51.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:59:51.787" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:59:51.787" starttime="20210127 01:59:49.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:59:51.788" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:59:51.789" starttime="20210127 01:59:51.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:59:51.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:59:51.789" starttime="20210127 01:59:51.789"></status>
</kw>
<status status="PASS" endtime="20210127 01:59:51.789" starttime="20210127 01:59:49.206"></status>
</kw>
<msg timestamp="20210127 01:59:51.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:59:51.790" starttime="20210127 01:59:49.206"></status>
</kw>
<status status="PASS" endtime="20210127 01:59:51.790" starttime="20210127 01:59:49.205"></status>
</kw>
<status status="PASS" endtime="20210127 01:59:51.790" starttime="20210127 01:59:49.205"></status>
</kw>
<status status="PASS" endtime="20210127 01:59:51.790" starttime="20210127 01:59:49.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210127 01:59:51.791" starttime="20210127 01:59:51.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:59:51.795" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:59:54.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:59:54.548" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T01:59...</msg>
<status status="PASS" endtime="20210127 01:59:54.548" starttime="20210127 01:59:51.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:59:54.549" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T01:59:51.691Z",
  "modificationTime" : "2021-01-27T01:59:51.691Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210127 01:59:54.549" starttime="20210127 01:59:54.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:59:54.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:59:54.550" starttime="20210127 01:59:54.549"></status>
</kw>
<status status="PASS" endtime="20210127 01:59:54.550" starttime="20210127 01:59:51.792"></status>
</kw>
<msg timestamp="20210127 01:59:54.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:59:54.550" starttime="20210127 01:59:51.791"></status>
</kw>
<msg timestamp="20210127 01:59:54.550" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T01:59...</msg>
<status status="PASS" endtime="20210127 01:59:54.550" starttime="20210127 01:59:51.791"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210127 01:59:54.551" starttime="20210127 01:59:54.550"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 01:59:54.555" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 01:59:54.555" starttime="20210127 01:59:54.554"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 01:59:54.555" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 01:59:54.555" starttime="20210127 01:59:54.555"></status>
</kw>
<status status="PASS" endtime="20210127 01:59:54.555" starttime="20210127 01:59:54.554"></status>
</kw>
<msg timestamp="20210127 01:59:54.555" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 01:59:54.555" starttime="20210127 01:59:54.553"></status>
</kw>
<status status="PASS" endtime="20210127 01:59:54.556" starttime="20210127 01:59:54.553"></status>
</kw>
<msg timestamp="20210127 01:59:54.556" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210127 01:59:54.556" starttime="20210127 01:59:54.552"></status>
</kw>
<msg timestamp="20210127 01:59:54.556" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210127 01:59:54.556" starttime="20210127 01:59:54.551"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:59:54.559" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 01:59:57.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 01:59:57.175" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 01:59:57.175" starttime="20210127 01:59:54.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 01:59:57.176" level="INFO"></msg>
<status status="PASS" endtime="20210127 01:59:57.176" starttime="20210127 01:59:57.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 01:59:57.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 01:59:57.176" starttime="20210127 01:59:57.176"></status>
</kw>
<status status="PASS" endtime="20210127 01:59:57.177" starttime="20210127 01:59:54.557"></status>
</kw>
<msg timestamp="20210127 01:59:57.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 01:59:57.177" starttime="20210127 01:59:54.557"></status>
</kw>
<status status="PASS" endtime="20210127 01:59:57.177" starttime="20210127 01:59:54.556"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 01:59:57.180" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:00:03.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:00:03.041" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:00:03.041" starttime="20210127 01:59:57.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:00:03.042" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:00:03.042" starttime="20210127 02:00:03.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:00:03.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:00:03.043" starttime="20210127 02:00:03.042"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:03.043" starttime="20210127 01:59:57.178"></status>
</kw>
<msg timestamp="20210127 02:00:03.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:00:03.043" starttime="20210127 01:59:57.178"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:03.043" starttime="20210127 01:59:57.177"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:00:03.047" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:00:07.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:00:07.575" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:00:07.575" starttime="20210127 02:00:03.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:00:07.576" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:00:07.576" starttime="20210127 02:00:07.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:00:07.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:00:07.576" starttime="20210127 02:00:07.576"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:07.577" starttime="20210127 02:00:03.044"></status>
</kw>
<msg timestamp="20210127 02:00:07.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:00:07.577" starttime="20210127 02:00:03.044"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:07.577" starttime="20210127 02:00:03.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:00:07.581" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:00:12.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:00:12.047" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:00:12.047" starttime="20210127 02:00:07.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:00:12.048" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:00:12.048" starttime="20210127 02:00:12.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:00:12.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:00:12.049" starttime="20210127 02:00:12.048"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:12.049" starttime="20210127 02:00:07.578"></status>
</kw>
<msg timestamp="20210127 02:00:12.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:00:12.049" starttime="20210127 02:00:07.578"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:12.049" starttime="20210127 02:00:07.577"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:00:12.050" critical="yes" starttime="20210127 01:59:43.159"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:00:12.057" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:00:12.057" starttime="20210127 02:00:12.057"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:00:12.058" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:00:12.058" starttime="20210127 02:00:12.057"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:12.058" starttime="20210127 02:00:12.056"></status>
</kw>
<msg timestamp="20210127 02:00:12.058" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:00:12.058" starttime="20210127 02:00:12.056"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:12.058" starttime="20210127 02:00:12.055"></status>
</kw>
<msg timestamp="20210127 02:00:12.059" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 02:00:12.059" starttime="20210127 02:00:12.055"></status>
</kw>
<msg timestamp="20210127 02:00:12.059" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 02:00:12.059" starttime="20210127 02:00:12.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:00:12.062" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:00:14.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:00:14.883" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:00:14.883" starttime="20210127 02:00:12.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:00:14.884" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:00:14.884" starttime="20210127 02:00:14.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:00:14.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:00:14.885" starttime="20210127 02:00:14.884"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:14.885" starttime="20210127 02:00:12.060"></status>
</kw>
<msg timestamp="20210127 02:00:14.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:00:14.885" starttime="20210127 02:00:12.059"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:14.885" starttime="20210127 02:00:12.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:00:14.888" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:00:17.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:00:17.353" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 02:00:17.353" starttime="20210127 02:00:14.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:00:17.354" level="INFO"></msg>
<status status="PASS" endtime="20210127 02:00:17.354" starttime="20210127 02:00:17.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:00:17.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:00:17.355" starttime="20210127 02:00:17.354"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:17.355" starttime="20210127 02:00:14.886"></status>
</kw>
<msg timestamp="20210127 02:00:17.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:00:17.355" starttime="20210127 02:00:14.886"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:17.355" starttime="20210127 02:00:14.886"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 02:00:17.355" critical="yes" starttime="20210127 02:00:12.050"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210127 02:00:17.357" starttime="20210127 01:59:43.110"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 02:01:50.158" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 02:01:50.158" starttime="20210127 02:01:50.158"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:01:50.159" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 02:01:50.159" starttime="20210127 02:01:50.159"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:50.159" starttime="20210127 02:01:50.158"></status>
</kw>
<msg timestamp="20210127 02:01:50.159" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 02:01:50.159" starttime="20210127 02:01:50.157"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:01:50.160" starttime="20210127 02:01:50.160"></status>
</kw>
<msg timestamp="20210127 02:01:50.160" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 02:01:50.160" starttime="20210127 02:01:50.159"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:50.160" starttime="20210127 02:01:50.157"></status>
</kw>
<msg timestamp="20210127 02:01:50.161" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 02:01:50.161" starttime="20210127 02:01:50.156"></status>
</kw>
<msg timestamp="20210127 02:01:50.161" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 02:01:50.161" starttime="20210127 02:01:50.155"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 02:01:50.161" level="INFO">${random} = 44484</msg>
<status status="PASS" endtime="20210127 02:01:50.161" starttime="20210127 02:01:50.161"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:01:50.166" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-44484 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:01:53.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:01:53.250" level="INFO">${output} = 2021-01-27 02:01:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:01:51 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210127 02:01:53.250" starttime="20210127 02:01:50.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:01:53.251" level="INFO">2021-01-27 02:01:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:01:51 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:01:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 02:01:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:01:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F538CA8A28E2-&gt;7c36bfc8-b372-4951-987f-0a3e7d7bace6
2021-01-27 02:01:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210127 02:01:53.251" starttime="20210127 02:01:53.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:01:53.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:01:53.252" starttime="20210127 02:01:53.252"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:53.252" starttime="20210127 02:01:50.162"></status>
</kw>
<msg timestamp="20210127 02:01:53.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:01:53.253" starttime="20210127 02:01:50.162"></status>
</kw>
<msg timestamp="20210127 02:01:53.253" level="INFO">${result} = 2021-01-27 02:01:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:01:51 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210127 02:01:53.253" starttime="20210127 02:01:50.161"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:01:53.256" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:01:54.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:01:54.933" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:01 ofs://om/volume1/bucket1/ozone-44484
-rw-...</msg>
<status status="PASS" endtime="20210127 02:01:54.933" starttime="20210127 02:01:53.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:01:54.934" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:01 ofs://om/volume1/bucket1/ozone-44484
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:00 ofs://om/volume1/bucket1/ozone-88373
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 02:00 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 02:01 ofs://om/volume1/bucket1/wordcount-bNlT6m2k.txt</msg>
<status status="PASS" endtime="20210127 02:01:54.935" starttime="20210127 02:01:54.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:01:54.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:01:54.935" starttime="20210127 02:01:54.935"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:54.935" starttime="20210127 02:01:53.254"></status>
</kw>
<msg timestamp="20210127 02:01:54.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:01:54.936" starttime="20210127 02:01:53.254"></status>
</kw>
<msg timestamp="20210127 02:01:54.936" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:01 ofs://om/volume1/bucket1/ozone-44484
-rw-...</msg>
<status status="PASS" endtime="20210127 02:01:54.936" starttime="20210127 02:01:53.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:01:54.936" starttime="20210127 02:01:54.936"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:01:54.937" critical="yes" starttime="20210127 02:01:50.155"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210127 02:01:54.938" starttime="20210127 02:01:50.110"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:00:21.483" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:00:21.483" starttime="20210127 02:00:21.482"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:00:21.483" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:00:21.483" starttime="20210127 02:00:21.483"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:21.483" starttime="20210127 02:00:21.482"></status>
</kw>
<msg timestamp="20210127 02:00:21.484" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:00:21.484" starttime="20210127 02:00:21.482"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:21.484" starttime="20210127 02:00:21.481"></status>
</kw>
<msg timestamp="20210127 02:00:21.484" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 02:00:21.484" starttime="20210127 02:00:21.480"></status>
</kw>
<msg timestamp="20210127 02:00:21.484" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 02:00:21.484" starttime="20210127 02:00:21.480"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 02:00:21.485" level="INFO">${random} = 88373</msg>
<status status="PASS" endtime="20210127 02:00:21.485" starttime="20210127 02:00:21.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:00:21.489" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-88373 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:00:24.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:00:24.706" level="INFO">${output} = 2021-01-27 02:00:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:00:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210127 02:00:24.706" starttime="20210127 02:00:21.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:00:24.708" level="INFO">2021-01-27 02:00:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:00:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:00:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 02:00:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:00:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B50F1A0E6918-&gt;a9adfbd3-a583-4750-8a59-761ef1ae649c
2021-01-27 02:00:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210127 02:00:24.708" starttime="20210127 02:00:24.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:00:24.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:00:24.709" starttime="20210127 02:00:24.708"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:24.709" starttime="20210127 02:00:21.485"></status>
</kw>
<msg timestamp="20210127 02:00:24.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:00:24.709" starttime="20210127 02:00:21.485"></status>
</kw>
<msg timestamp="20210127 02:00:24.709" level="INFO">${result} = 2021-01-27 02:00:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:00:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210127 02:00:24.710" starttime="20210127 02:00:21.485"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:00:24.713" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:00:26.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:00:26.264" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:00 o3fs://bucket1.volume1.om/ozone-88373
dr...</msg>
<status status="PASS" endtime="20210127 02:00:26.264" starttime="20210127 02:00:24.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:00:26.265" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:00 o3fs://bucket1.volume1.om/ozone-88373
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 02:00 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 02:00:26.265" starttime="20210127 02:00:26.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:00:26.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:00:26.266" starttime="20210127 02:00:26.265"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:26.266" starttime="20210127 02:00:24.710"></status>
</kw>
<msg timestamp="20210127 02:00:26.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:00:26.266" starttime="20210127 02:00:24.710"></status>
</kw>
<msg timestamp="20210127 02:00:26.266" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 01:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 02:00 o3fs://bucket1.volume1.om/ozone-88373
dr...</msg>
<status status="PASS" endtime="20210127 02:00:26.266" starttime="20210127 02:00:24.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:00:26.267" starttime="20210127 02:00:26.266"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 02:00:26.267" critical="yes" starttime="20210127 02:00:21.479"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210127 02:00:26.268" starttime="20210127 02:00:21.434"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:01:58.988" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:01:58.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:01:58.993" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:01:58.993" starttime="20210127 02:01:58.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:01:58.994" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:01:58.994" starttime="20210127 02:01:58.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:01:58.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:01:58.995" starttime="20210127 02:01:58.994"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:58.995" starttime="20210127 02:01:58.984"></status>
</kw>
<msg timestamp="20210127 02:01:58.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:01:58.995" starttime="20210127 02:01:58.984"></status>
</kw>
<msg timestamp="20210127 02:01:58.995" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:01:58.996" starttime="20210127 02:01:58.983"></status>
</kw>
<msg timestamp="20210127 02:01:58.996" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:01:58.996" starttime="20210127 02:01:58.983"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 02:01:59.000" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 02:01:59.000" starttime="20210127 02:01:58.999"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:01:59.000" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 02:01:59.000" starttime="20210127 02:01:59.000"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:59.001" starttime="20210127 02:01:58.999"></status>
</kw>
<msg timestamp="20210127 02:01:59.001" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 02:01:59.001" starttime="20210127 02:01:58.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:01:59.001" starttime="20210127 02:01:59.001"></status>
</kw>
<msg timestamp="20210127 02:01:59.002" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 02:01:59.002" starttime="20210127 02:01:59.001"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:59.002" starttime="20210127 02:01:58.998"></status>
</kw>
<msg timestamp="20210127 02:01:59.002" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 02:01:59.002" starttime="20210127 02:01:58.997"></status>
</kw>
<msg timestamp="20210127 02:01:59.002" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 02:01:59.002" starttime="20210127 02:01:58.996"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:01:59.005" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:02:36.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:02:36.205" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 02:02:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:02:00 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210127 02:02:36.206" starttime="20210127 02:01:59.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:02:36.207" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-27 02:02:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:02:00 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:02:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 02:02:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:02:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2395EACB9374-&gt;a9adfbd3-a583-4750-8a59-761ef1ae649c
2021-01-27 02:02:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-27 02:02:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-512D380B8D69-&gt;7c36bfc8-b372-4951-987f-0a3e7d7bace6
2021-01-27 02:02:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-27 02:02:04 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-01-27 02:02:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 02:02:04 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 02:02:04 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 02:02:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611712753821_0003
2021-01-27 02:02:05 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-27 02:02:05 INFO  Configuration:2795 - resource-types.xml not found
2021-01-27 02:02:05 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-27 02:02:05 INFO  YarnClientImpl:329 - Submitted application application_1611712753821_0003
2021-01-27 02:02:05 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611712753821_0003/
2021-01-27 02:02:05 INFO  Job:1614 - Running job: job_1611712753821_0003
2021-01-27 02:02:12 INFO  Job:1635 - Job job_1611712753821_0003 running in uber mode : false
2021-01-27 02:02:12 INFO  Job:1642 -  map 0% reduce 0%
2021-01-27 02:02:18 INFO  Job:1642 -  map 33% reduce 0%
2021-01-27 02:02:23 INFO  Job:1642 -  map 67% reduce 0%
2021-01-27 02:02:28 INFO  Job:1642 -  map 100% reduce 0%
2021-01-27 02:02:32 INFO  Job:1642 -  map 100% reduce 100%
2021-01-27 02:02:35 INFO  Job:1653 - Job job_1611712753821_0003 completed successfully
2021-01-27 02:02:35 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091541
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35768
		Total time spent by all reduces in occupied slots (ms)=12872
		Total time spent by all map tasks (ms)=8942
		Total time spent by all reduce tasks (ms)=3218
		Total vcore-milliseconds taken by all map tasks=8942
		Total vcore-milliseconds taken by all reduce tasks=3218
		Total megabyte-milliseconds taken by all map tasks=36626432
		Total megabyte-milliseconds taken by all reduce tasks=13180928
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=557
		CPU time spent (ms)=6270
		Physical memory (bytes) snapshot=1530724352
		Virtual memory (bytes) snapshot=15809253376
		Total committed heap usage (bytes)=1832386560
		Peak Map Physical memory (bytes)=380223488
		Peak Map Virtual memory (bytes)=3947577344
		Peak Reduce Physical memory (bytes)=399933440
		Peak Reduce Virtual memory (bytes)=3970527232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.449 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210127 02:02:36.207" starttime="20210127 02:02:36.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:02:36.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:02:36.207" starttime="20210127 02:02:36.207"></status>
</kw>
<status status="PASS" endtime="20210127 02:02:36.208" starttime="20210127 02:01:59.003"></status>
</kw>
<msg timestamp="20210127 02:02:36.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:02:36.208" starttime="20210127 02:01:59.003"></status>
</kw>
<msg timestamp="20210127 02:02:36.208" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 02:02:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:02:00 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210127 02:02:36.208" starttime="20210127 02:01:59.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 02:02:36.209" starttime="20210127 02:02:36.208"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 02:02:36.209" critical="yes" starttime="20210127 02:01:58.982"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:02:36.215" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:02:36.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:02:36.219" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:02:36.219" starttime="20210127 02:02:36.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:02:36.221" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:02:36.221" starttime="20210127 02:02:36.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:02:36.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:02:36.221" starttime="20210127 02:02:36.221"></status>
</kw>
<status status="PASS" endtime="20210127 02:02:36.221" starttime="20210127 02:02:36.213"></status>
</kw>
<msg timestamp="20210127 02:02:36.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:02:36.222" starttime="20210127 02:02:36.212"></status>
</kw>
<msg timestamp="20210127 02:02:36.222" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:02:36.222" starttime="20210127 02:02:36.212"></status>
</kw>
<msg timestamp="20210127 02:02:36.222" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:02:36.222" starttime="20210127 02:02:36.212"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 02:02:36.222" level="INFO">${random} = OyYPwqQ9</msg>
<status status="PASS" endtime="20210127 02:02:36.222" starttime="20210127 02:02:36.222"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 02:02:36.226" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 02:02:36.226" starttime="20210127 02:02:36.225"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:02:36.226" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 02:02:36.226" starttime="20210127 02:02:36.226"></status>
</kw>
<status status="PASS" endtime="20210127 02:02:36.226" starttime="20210127 02:02:36.225"></status>
</kw>
<msg timestamp="20210127 02:02:36.226" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 02:02:36.227" starttime="20210127 02:02:36.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 02:02:36.227" starttime="20210127 02:02:36.227"></status>
</kw>
<msg timestamp="20210127 02:02:36.227" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 02:02:36.227" starttime="20210127 02:02:36.227"></status>
</kw>
<status status="PASS" endtime="20210127 02:02:36.228" starttime="20210127 02:02:36.224"></status>
</kw>
<msg timestamp="20210127 02:02:36.228" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 02:02:36.228" starttime="20210127 02:02:36.223"></status>
</kw>
<msg timestamp="20210127 02:02:36.228" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 02:02:36.228" starttime="20210127 02:02:36.223"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 02:02:36.231" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 02:02:36.231" starttime="20210127 02:02:36.230"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:02:36.231" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 02:02:36.231" starttime="20210127 02:02:36.231"></status>
</kw>
<status status="PASS" endtime="20210127 02:02:36.232" starttime="20210127 02:02:36.230"></status>
</kw>
<msg timestamp="20210127 02:02:36.232" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 02:02:36.232" starttime="20210127 02:02:36.230"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:02:36.233" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210127 02:02:36.233" starttime="20210127 02:02:36.233"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:02:36.233" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210127 02:02:36.234" starttime="20210127 02:02:36.233"></status>
</kw>
<status status="PASS" endtime="20210127 02:02:36.234" starttime="20210127 02:02:36.232"></status>
</kw>
<msg timestamp="20210127 02:02:36.234" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210127 02:02:36.234" starttime="20210127 02:02:36.232"></status>
</kw>
<status status="PASS" endtime="20210127 02:02:36.234" starttime="20210127 02:02:36.229"></status>
</kw>
<msg timestamp="20210127 02:02:36.234" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210127 02:02:36.234" starttime="20210127 02:02:36.229"></status>
</kw>
<msg timestamp="20210127 02:02:36.234" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210127 02:02:36.234" starttime="20210127 02:02:36.228"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 02:02:36.237" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 02:02:36.237" starttime="20210127 02:02:36.237"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:02:36.238" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 02:02:36.238" starttime="20210127 02:02:36.237"></status>
</kw>
<status status="PASS" endtime="20210127 02:02:36.238" starttime="20210127 02:02:36.236"></status>
</kw>
<msg timestamp="20210127 02:02:36.238" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 02:02:36.238" starttime="20210127 02:02:36.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:02:36.239" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210127 02:02:36.239" starttime="20210127 02:02:36.239"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:02:36.240" level="INFO">${result} = /wordcount-OyYPwqQ9.txt</msg>
<status status="PASS" endtime="20210127 02:02:36.240" starttime="20210127 02:02:36.239"></status>
</kw>
<status status="PASS" endtime="20210127 02:02:36.240" starttime="20210127 02:02:36.238"></status>
</kw>
<msg timestamp="20210127 02:02:36.240" level="INFO">${path_with_leading} = /wordcount-OyYPwqQ9.txt</msg>
<status status="PASS" endtime="20210127 02:02:36.240" starttime="20210127 02:02:36.238"></status>
</kw>
<status status="PASS" endtime="20210127 02:02:36.240" starttime="20210127 02:02:36.235"></status>
</kw>
<msg timestamp="20210127 02:02:36.240" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-OyYPwqQ9.txt</msg>
<status status="PASS" endtime="20210127 02:02:36.240" starttime="20210127 02:02:36.235"></status>
</kw>
<msg timestamp="20210127 02:02:36.241" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-OyYPwqQ9.txt</msg>
<status status="PASS" endtime="20210127 02:02:36.241" starttime="20210127 02:02:36.234"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:02:36.244" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-OyYPwqQ9.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:03:11.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:03:11.757" level="INFO">${output} = 2021-01-27 02:02:37 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-01-27 02:02:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210127 02:03:11.757" starttime="20210127 02:02:36.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:03:11.758" level="INFO">2021-01-27 02:02:37 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-01-27 02:02:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 02:02:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:02:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:02:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 02:02:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:02:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9DBFE43D506F-&gt;7c36bfc8-b372-4951-987f-0a3e7d7bace6
2021-01-27 02:02:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:02:39 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 02:02:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-32C74DA1AFD9-&gt;a9adfbd3-a583-4750-8a59-761ef1ae649c
2021-01-27 02:02:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:02:39 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 02:02:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611712753821_0004
2021-01-27 02:02:39 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-27 02:02:39 INFO  Configuration:2795 - resource-types.xml not found
2021-01-27 02:02:39 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-27 02:02:40 INFO  YarnClientImpl:329 - Submitted application application_1611712753821_0004
2021-01-27 02:02:40 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611712753821_0004/
2021-01-27 02:02:40 INFO  Job:1614 - Running job: job_1611712753821_0004
2021-01-27 02:02:48 INFO  Job:1635 - Job job_1611712753821_0004 running in uber mode : false
2021-01-27 02:02:48 INFO  Job:1642 -  map 0% reduce 0%
2021-01-27 02:02:54 INFO  Job:1642 -  map 33% reduce 0%
2021-01-27 02:02:59 INFO  Job:1642 -  map 67% reduce 0%
2021-01-27 02:03:03 INFO  Job:1642 -  map 100% reduce 0%
2021-01-27 02:03:08 INFO  Job:1642 -  map 100% reduce 100%
2021-01-27 02:03:11 INFO  Job:1653 - Job job_1611712753821_0004 completed successfully
2021-01-27 02:03:11 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154231
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34388
		Total time spent by all reduces in occupied slots (ms)=12840
		Total time spent by all map tasks (ms)=8597
		Total time spent by all reduce tasks (ms)=3210
		Total vcore-milliseconds taken by all map tasks=8597
		Total vcore-milliseconds taken by all reduce tasks=3210
		Total megabyte-milliseconds taken by all map tasks=35213312
		Total megabyte-milliseconds taken by all reduce tasks=13148160
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=608
		CPU time spent (ms)=6520
		Physical memory (bytes) snapshot=1524117504
		Virtual memory (bytes) snapshot=15816773632
		Total committed heap usage (bytes)=1809317888
		Peak Map Physical memory (bytes)=377790464
		Peak Map Virtual memory (bytes)=3954393088
		Peak Reduce Physical memory (bytes)=396636160
		Peak Reduce Virtual memory (bytes)=3970977792
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210127 02:03:11.758" starttime="20210127 02:03:11.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:03:11.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:03:11.759" starttime="20210127 02:03:11.758"></status>
</kw>
<status status="PASS" endtime="20210127 02:03:11.759" starttime="20210127 02:02:36.241"></status>
</kw>
<msg timestamp="20210127 02:03:11.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:03:11.759" starttime="20210127 02:02:36.241"></status>
</kw>
<msg timestamp="20210127 02:03:11.760" level="INFO">${output} = 2021-01-27 02:02:37 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-01-27 02:02:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210127 02:03:11.760" starttime="20210127 02:02:36.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210127 02:03:11.760" starttime="20210127 02:03:11.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 02:03:11.760" starttime="20210127 02:03:11.760"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 02:03:11.761" critical="yes" starttime="20210127 02:02:36.211"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210127 02:03:11.761" starttime="20210127 02:01:58.937"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:00:30.386" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:00:30.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:00:30.391" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:00:30.391" starttime="20210127 02:00:30.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:00:30.392" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:00:30.392" starttime="20210127 02:00:30.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:00:30.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:00:30.393" starttime="20210127 02:00:30.393"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:30.393" starttime="20210127 02:00:30.383"></status>
</kw>
<msg timestamp="20210127 02:00:30.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:00:30.393" starttime="20210127 02:00:30.382"></status>
</kw>
<msg timestamp="20210127 02:00:30.394" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:00:30.394" starttime="20210127 02:00:30.382"></status>
</kw>
<msg timestamp="20210127 02:00:30.394" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:00:30.394" starttime="20210127 02:00:30.381"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:00:30.398" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:00:30.398" starttime="20210127 02:00:30.398"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:00:30.399" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:00:30.399" starttime="20210127 02:00:30.398"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:30.399" starttime="20210127 02:00:30.397"></status>
</kw>
<msg timestamp="20210127 02:00:30.399" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:00:30.399" starttime="20210127 02:00:30.397"></status>
</kw>
<status status="PASS" endtime="20210127 02:00:30.399" starttime="20210127 02:00:30.396"></status>
</kw>
<msg timestamp="20210127 02:00:30.399" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 02:00:30.399" starttime="20210127 02:00:30.395"></status>
</kw>
<msg timestamp="20210127 02:00:30.399" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 02:00:30.399" starttime="20210127 02:00:30.394"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:00:30.402" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:01:13.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:01:13.640" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 02:00:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:00:32 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210127 02:01:13.640" starttime="20210127 02:00:30.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:01:13.641" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-27 02:00:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:00:32 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:00:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 02:00:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:00:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-95129D085EC9-&gt;7c36bfc8-b372-4951-987f-0a3e7d7bace6
2021-01-27 02:00:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-27 02:00:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-854519074A2D-&gt;a9adfbd3-a583-4750-8a59-761ef1ae649c
2021-01-27 02:00:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-27 02:00:35 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-01-27 02:00:36 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 02:00:38 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 02:00:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611712753821_0001
2021-01-27 02:00:39 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-27 02:00:39 INFO  Configuration:2795 - resource-types.xml not found
2021-01-27 02:00:39 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-27 02:00:39 INFO  YarnClientImpl:329 - Submitted application application_1611712753821_0001
2021-01-27 02:00:39 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611712753821_0001/
2021-01-27 02:00:39 INFO  Job:1614 - Running job: job_1611712753821_0001
2021-01-27 02:00:48 INFO  Job:1635 - Job job_1611712753821_0001 running in uber mode : false
2021-01-27 02:00:48 INFO  Job:1642 -  map 0% reduce 0%
2021-01-27 02:00:54 INFO  Job:1642 -  map 33% reduce 0%
2021-01-27 02:00:59 INFO  Job:1642 -  map 67% reduce 0%
2021-01-27 02:01:04 INFO  Job:1642 -  map 100% reduce 0%
2021-01-27 02:01:11 INFO  Job:1642 -  map 100% reduce 100%
2021-01-27 02:01:12 INFO  Job:1653 - Job job_1611712753821_0001 completed successfully
2021-01-27 02:01:13 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091761
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35040
		Total time spent by all reduces in occupied slots (ms)=22772
		Total time spent by all map tasks (ms)=8760
		Total time spent by all reduce tasks (ms)=5693
		Total vcore-milliseconds taken by all map tasks=8760
		Total vcore-milliseconds taken by all reduce tasks=5693
		Total megabyte-milliseconds taken by all map tasks=35880960
		Total megabyte-milliseconds taken by all reduce tasks=23318528
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=534
		CPU time spent (ms)=6270
		Physical memory (bytes) snapshot=1523335168
		Virtual memory (bytes) snapshot=15819042816
		Total committed heap usage (bytes)=1794637824
		Peak Map Physical memory (bytes)=373719040
		Peak Map Virtual memory (bytes)=3948363776
		Peak Reduce Physical memory (bytes)=403103744
		Peak Reduce Virtual memory (bytes)=3974586368
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.441 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210127 02:01:13.641" starttime="20210127 02:01:13.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:01:13.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:01:13.642" starttime="20210127 02:01:13.641"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:13.642" starttime="20210127 02:00:30.400"></status>
</kw>
<msg timestamp="20210127 02:01:13.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:01:13.642" starttime="20210127 02:00:30.400"></status>
</kw>
<msg timestamp="20210127 02:01:13.644" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 02:00:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:00:32 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210127 02:01:13.645" starttime="20210127 02:00:30.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 02:01:13.645" starttime="20210127 02:01:13.645"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 02:01:13.646" critical="yes" starttime="20210127 02:00:30.381"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:01:13.654" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:01:13.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:01:13.660" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:01:13.660" starttime="20210127 02:01:13.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:01:13.661" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:01:13.661" starttime="20210127 02:01:13.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:01:13.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:01:13.661" starttime="20210127 02:01:13.661"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:13.662" starttime="20210127 02:01:13.648"></status>
</kw>
<msg timestamp="20210127 02:01:13.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:01:13.662" starttime="20210127 02:01:13.648"></status>
</kw>
<msg timestamp="20210127 02:01:13.662" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:01:13.662" starttime="20210127 02:01:13.648"></status>
</kw>
<msg timestamp="20210127 02:01:13.662" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 02:01:13.662" starttime="20210127 02:01:13.647"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 02:01:13.663" level="INFO">${random} = bNlT6m2k</msg>
<status status="PASS" endtime="20210127 02:01:13.663" starttime="20210127 02:01:13.662"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:01:13.666" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:01:13.666" starttime="20210127 02:01:13.666"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:01:13.667" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:01:13.667" starttime="20210127 02:01:13.666"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:13.667" starttime="20210127 02:01:13.665"></status>
</kw>
<msg timestamp="20210127 02:01:13.667" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:01:13.667" starttime="20210127 02:01:13.665"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:13.667" starttime="20210127 02:01:13.664"></status>
</kw>
<msg timestamp="20210127 02:01:13.667" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 02:01:13.667" starttime="20210127 02:01:13.663"></status>
</kw>
<msg timestamp="20210127 02:01:13.667" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 02:01:13.667" starttime="20210127 02:01:13.663"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:01:13.670" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:01:13.670" starttime="20210127 02:01:13.670"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:01:13.671" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:01:13.671" starttime="20210127 02:01:13.671"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:13.671" starttime="20210127 02:01:13.670"></status>
</kw>
<msg timestamp="20210127 02:01:13.671" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:01:13.671" starttime="20210127 02:01:13.669"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:13.671" starttime="20210127 02:01:13.669"></status>
</kw>
<msg timestamp="20210127 02:01:13.672" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210127 02:01:13.672" starttime="20210127 02:01:13.668"></status>
</kw>
<msg timestamp="20210127 02:01:13.672" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210127 02:01:13.672" starttime="20210127 02:01:13.668"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 02:01:13.675" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 02:01:13.675" starttime="20210127 02:01:13.674"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 02:01:13.675" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 02:01:13.675" starttime="20210127 02:01:13.675"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:13.675" starttime="20210127 02:01:13.674"></status>
</kw>
<msg timestamp="20210127 02:01:13.675" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 02:01:13.675" starttime="20210127 02:01:13.673"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:13.676" starttime="20210127 02:01:13.673"></status>
</kw>
<msg timestamp="20210127 02:01:13.676" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-bNlT6m2k.txt</msg>
<status status="PASS" endtime="20210127 02:01:13.676" starttime="20210127 02:01:13.672"></status>
</kw>
<msg timestamp="20210127 02:01:13.676" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-bNlT6m2k.txt</msg>
<status status="PASS" endtime="20210127 02:01:13.676" starttime="20210127 02:01:13.672"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 02:01:13.679" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-bNlT6m2k.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 02:01:46.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 02:01:46.126" level="INFO">${output} = 2021-01-27 02:01:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-01-27 02:01:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210127 02:01:46.126" starttime="20210127 02:01:13.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 02:01:46.127" level="INFO">2021-01-27 02:01:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-01-27 02:01:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 02:01:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 02:01:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 02:01:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 02:01:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 02:01:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3A90CED36E20-&gt;7c36bfc8-b372-4951-987f-0a3e7d7bace6
2021-01-27 02:01:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:01:16 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 02:01:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8C7A466AF559-&gt;a9adfbd3-a583-4750-8a59-761ef1ae649c
2021-01-27 02:01:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 02:01:16 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 02:01:17 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611712753821_0002
2021-01-27 02:01:17 INFO  JobSubmitter:299 - Executing with tokens: []
2021-01-27 02:01:17 INFO  Configuration:2795 - resource-types.xml not found
2021-01-27 02:01:17 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-27 02:01:17 INFO  YarnClientImpl:329 - Submitted application application_1611712753821_0002
2021-01-27 02:01:17 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611712753821_0002/
2021-01-27 02:01:17 INFO  Job:1614 - Running job: job_1611712753821_0002
2021-01-27 02:01:24 INFO  Job:1635 - Job job_1611712753821_0002 running in uber mode : false
2021-01-27 02:01:24 INFO  Job:1642 -  map 0% reduce 0%
2021-01-27 02:01:30 INFO  Job:1642 -  map 33% reduce 0%
2021-01-27 02:01:35 INFO  Job:1642 -  map 67% reduce 0%
2021-01-27 02:01:40 INFO  Job:1642 -  map 100% reduce 0%
2021-01-27 02:01:45 INFO  Job:1642 -  map 100% reduce 100%
2021-01-27 02:01:45 INFO  Job:1653 - Job job_1611712753821_0002 completed successfully
2021-01-27 02:01:45 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154315
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35552
		Total time spent by all reduces in occupied slots (ms)=13168
		Total time spent by all map tasks (ms)=8888
		Total time spent by all reduce tasks (ms)=3292
		Total vcore-milliseconds taken by all map tasks=8888
		Total vcore-milliseconds taken by all reduce tasks=3292
		Total megabyte-milliseconds taken by all map tasks=36405248
		Total megabyte-milliseconds taken by all reduce tasks=13484032
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=556
		CPU time spent (ms)=6080
		Physical memory (bytes) snapshot=1511456768
		Virtual memory (bytes) snapshot=15793504256
		Total committed heap usage (bytes)=1789919232
		Peak Map Physical memory (bytes)=380755968
		Peak Map Virtual memory (bytes)=3952955392
		Peak Reduce Physical memory (bytes)=405667840
		Peak Reduce Virtual memory (bytes)=3973255168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210127 02:01:46.127" starttime="20210127 02:01:46.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 02:01:46.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 02:01:46.128" starttime="20210127 02:01:46.128"></status>
</kw>
<status status="PASS" endtime="20210127 02:01:46.128" starttime="20210127 02:01:13.677"></status>
</kw>
<msg timestamp="20210127 02:01:46.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 02:01:46.128" starttime="20210127 02:01:13.677"></status>
</kw>
<msg timestamp="20210127 02:01:46.129" level="INFO">${output} = 2021-01-27 02:01:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-01-27 02:01:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210127 02:01:46.129" starttime="20210127 02:01:13.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210127 02:01:46.129" starttime="20210127 02:01:46.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 02:01:46.130" starttime="20210127 02:01:46.129"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 02:01:46.130" critical="yes" starttime="20210127 02:01:13.646"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210127 02:01:46.131" starttime="20210127 02:00:30.337"></status>
</suite>
<status status="PASS" elapsedtime="192527" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="541348" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
