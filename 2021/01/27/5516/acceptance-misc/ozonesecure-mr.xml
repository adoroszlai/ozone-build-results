<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210127 08:51:58.560" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:47:46.455" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:47:51.000" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 08:47:51.000" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 08:47:51.000" starttime="20210127 08:47:46.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:47:51.001" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 08:47:51.001" starttime="20210127 08:47:51.000"></status>
</kw>
<msg timestamp="20210127 08:47:51.001" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210127 08:47:51.001" starttime="20210127 08:47:46.450"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:47:51.007" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:47:54.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:47:54.639" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:47:54.639" starttime="20210127 08:47:51.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:47:54.640" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:47:54.640" starttime="20210127 08:47:54.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:47:54.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:47:54.641" starttime="20210127 08:47:54.641"></status>
</kw>
<status status="PASS" endtime="20210127 08:47:54.641" starttime="20210127 08:47:51.003"></status>
</kw>
<msg timestamp="20210127 08:47:54.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:47:54.642" starttime="20210127 08:47:51.003"></status>
</kw>
<msg timestamp="20210127 08:47:54.642" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210127 08:47:54.642" starttime="20210127 08:47:51.003"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210127 08:47:54.643" starttime="20210127 08:47:54.642"></status>
</kw>
<status status="PASS" endtime="20210127 08:47:54.643" starttime="20210127 08:47:51.002"></status>
</kw>
<status status="PASS" endtime="20210127 08:47:54.643" starttime="20210127 08:47:51.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:47:54.648" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:47:58.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:47:58.427" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:47:58.427" starttime="20210127 08:47:54.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:47:58.428" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:47:58.428" starttime="20210127 08:47:58.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:47:58.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:47:58.429" starttime="20210127 08:47:58.428"></status>
</kw>
<status status="PASS" endtime="20210127 08:47:58.429" starttime="20210127 08:47:54.646"></status>
</kw>
<msg timestamp="20210127 08:47:58.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:47:58.429" starttime="20210127 08:47:54.645"></status>
</kw>
<status status="PASS" endtime="20210127 08:47:58.430" starttime="20210127 08:47:54.644"></status>
</kw>
<status status="PASS" endtime="20210127 08:47:58.430" starttime="20210127 08:47:54.644"></status>
</kw>
<status status="PASS" endtime="20210127 08:47:58.430" starttime="20210127 08:47:54.643"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210127 08:47:58.430" starttime="20210127 08:47:58.430"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:47:58.434" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:48:02.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:48:02.481" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:47...</msg>
<status status="PASS" endtime="20210127 08:48:02.481" starttime="20210127 08:47:58.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:48:02.482" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:47:58.223Z",
  "modificationTime" : "2021-01-27T08:47:58.223Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210127 08:48:02.482" starttime="20210127 08:48:02.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:48:02.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:48:02.483" starttime="20210127 08:48:02.482"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:02.483" starttime="20210127 08:47:58.432"></status>
</kw>
<msg timestamp="20210127 08:48:02.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:48:02.483" starttime="20210127 08:47:58.431"></status>
</kw>
<msg timestamp="20210127 08:48:02.483" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:47...</msg>
<status status="PASS" endtime="20210127 08:48:02.483" starttime="20210127 08:47:58.431"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210127 08:48:02.484" starttime="20210127 08:48:02.483"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 08:48:02.488" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 08:48:02.488" starttime="20210127 08:48:02.487"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:48:02.488" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 08:48:02.488" starttime="20210127 08:48:02.488"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:02.489" starttime="20210127 08:48:02.487"></status>
</kw>
<msg timestamp="20210127 08:48:02.489" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 08:48:02.489" starttime="20210127 08:48:02.486"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:02.489" starttime="20210127 08:48:02.486"></status>
</kw>
<msg timestamp="20210127 08:48:02.489" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210127 08:48:02.489" starttime="20210127 08:48:02.485"></status>
</kw>
<msg timestamp="20210127 08:48:02.489" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210127 08:48:02.489" starttime="20210127 08:48:02.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:48:02.493" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:48:06.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:48:06.108" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:48:06.109" starttime="20210127 08:48:02.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:48:06.110" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:48:06.110" starttime="20210127 08:48:06.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:48:06.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:48:06.110" starttime="20210127 08:48:06.110"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:06.111" starttime="20210127 08:48:02.490"></status>
</kw>
<msg timestamp="20210127 08:48:06.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:48:06.111" starttime="20210127 08:48:02.490"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:06.111" starttime="20210127 08:48:02.489"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:48:06.115" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:48:14.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:48:14.657" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:48:14.657" starttime="20210127 08:48:06.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:48:14.658" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:48:14.658" starttime="20210127 08:48:14.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:48:14.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:48:14.659" starttime="20210127 08:48:14.658"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:14.659" starttime="20210127 08:48:06.112"></status>
</kw>
<msg timestamp="20210127 08:48:14.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:48:14.659" starttime="20210127 08:48:06.112"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:14.659" starttime="20210127 08:48:06.111"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:48:14.663" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:48:20.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:48:20.392" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:48:20.393" starttime="20210127 08:48:14.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:48:20.394" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:48:20.394" starttime="20210127 08:48:20.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:48:20.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:48:20.394" starttime="20210127 08:48:20.394"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:20.395" starttime="20210127 08:48:14.661"></status>
</kw>
<msg timestamp="20210127 08:48:20.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:48:20.395" starttime="20210127 08:48:14.660"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:20.395" starttime="20210127 08:48:14.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:48:20.399" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:48:26.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:48:26.146" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:48:26.146" starttime="20210127 08:48:20.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:48:26.147" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:48:26.147" starttime="20210127 08:48:26.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:48:26.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:48:26.148" starttime="20210127 08:48:26.147"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:26.148" starttime="20210127 08:48:20.396"></status>
</kw>
<msg timestamp="20210127 08:48:26.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:48:26.148" starttime="20210127 08:48:20.396"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:26.149" starttime="20210127 08:48:20.395"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:48:26.149" critical="yes" starttime="20210127 08:47:46.449"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 08:48:26.154" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 08:48:26.154" starttime="20210127 08:48:26.154"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:48:26.155" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 08:48:26.155" starttime="20210127 08:48:26.154"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:26.155" starttime="20210127 08:48:26.153"></status>
</kw>
<msg timestamp="20210127 08:48:26.155" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 08:48:26.155" starttime="20210127 08:48:26.152"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:26.155" starttime="20210127 08:48:26.152"></status>
</kw>
<msg timestamp="20210127 08:48:26.155" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 08:48:26.156" starttime="20210127 08:48:26.151"></status>
</kw>
<msg timestamp="20210127 08:48:26.156" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 08:48:26.156" starttime="20210127 08:48:26.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:48:26.159" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:48:29.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:48:29.724" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:48:29.724" starttime="20210127 08:48:26.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:48:29.725" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:48:29.725" starttime="20210127 08:48:29.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:48:29.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:48:29.726" starttime="20210127 08:48:29.725"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:29.726" starttime="20210127 08:48:26.157"></status>
</kw>
<msg timestamp="20210127 08:48:29.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:48:29.726" starttime="20210127 08:48:26.156"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:29.726" starttime="20210127 08:48:26.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:48:29.730" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:48:33.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:48:33.071" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:48:33.071" starttime="20210127 08:48:29.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:48:33.072" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:48:33.072" starttime="20210127 08:48:33.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:48:33.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:48:33.073" starttime="20210127 08:48:33.072"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:33.073" starttime="20210127 08:48:29.727"></status>
</kw>
<msg timestamp="20210127 08:48:33.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:48:33.073" starttime="20210127 08:48:29.727"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:33.074" starttime="20210127 08:48:29.726"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:48:33.074" critical="yes" starttime="20210127 08:48:26.150"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210127 08:48:33.075" starttime="20210127 08:47:46.391"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 08:50:33.978" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 08:50:33.979" starttime="20210127 08:50:33.978"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:50:33.979" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 08:50:33.979" starttime="20210127 08:50:33.979"></status>
</kw>
<status status="PASS" endtime="20210127 08:50:33.979" starttime="20210127 08:50:33.978"></status>
</kw>
<msg timestamp="20210127 08:50:33.979" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 08:50:33.980" starttime="20210127 08:50:33.977"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:50:33.980" starttime="20210127 08:50:33.980"></status>
</kw>
<msg timestamp="20210127 08:50:33.981" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 08:50:33.981" starttime="20210127 08:50:33.980"></status>
</kw>
<status status="PASS" endtime="20210127 08:50:33.981" starttime="20210127 08:50:33.976"></status>
</kw>
<msg timestamp="20210127 08:50:33.981" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 08:50:33.981" starttime="20210127 08:50:33.976"></status>
</kw>
<msg timestamp="20210127 08:50:33.981" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 08:50:33.981" starttime="20210127 08:50:33.975"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 08:50:33.982" level="INFO">${random} = 31635</msg>
<status status="PASS" endtime="20210127 08:50:33.982" starttime="20210127 08:50:33.981"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:50:33.987" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-31635 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:50:37.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:50:37.852" level="INFO">${output} = 2021-01-27 08:50:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:50:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210127 08:50:37.852" starttime="20210127 08:50:33.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:50:37.853" level="INFO">2021-01-27 08:50:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:50:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 08:50:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 08:50:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 08:50:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AE8B62729DAD-&gt;2a292234-df21-470c-9493-bc8c53b3efe4
2021-01-27 08:50:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210127 08:50:37.853" starttime="20210127 08:50:37.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:50:37.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:50:37.854" starttime="20210127 08:50:37.853"></status>
</kw>
<status status="PASS" endtime="20210127 08:50:37.854" starttime="20210127 08:50:33.983"></status>
</kw>
<msg timestamp="20210127 08:50:37.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:50:37.854" starttime="20210127 08:50:33.982"></status>
</kw>
<msg timestamp="20210127 08:50:37.855" level="INFO">${result} = 2021-01-27 08:50:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:50:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210127 08:50:37.855" starttime="20210127 08:50:33.982"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:50:37.858" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:50:39.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:50:39.946" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 08:48 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 08:50 ofs://om/volume1/bucket1/ozone-31635
-rw-...</msg>
<status status="PASS" endtime="20210127 08:50:39.946" starttime="20210127 08:50:37.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:50:39.948" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 08:48 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 08:50 ofs://om/volume1/bucket1/ozone-31635
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 08:49 ofs://om/volume1/bucket1/ozone-52714
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 08:48 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 08:50 ofs://om/volume1/bucket1/wordcount-xfUfVpVQ.txt</msg>
<status status="PASS" endtime="20210127 08:50:39.948" starttime="20210127 08:50:39.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:50:39.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:50:39.948" starttime="20210127 08:50:39.948"></status>
</kw>
<status status="PASS" endtime="20210127 08:50:39.949" starttime="20210127 08:50:37.856"></status>
</kw>
<msg timestamp="20210127 08:50:39.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:50:39.949" starttime="20210127 08:50:37.855"></status>
</kw>
<msg timestamp="20210127 08:50:39.949" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 08:48 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 08:50 ofs://om/volume1/bucket1/ozone-31635
-rw-...</msg>
<status status="PASS" endtime="20210127 08:50:39.949" starttime="20210127 08:50:37.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:50:39.950" starttime="20210127 08:50:39.949"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 08:50:39.950" critical="yes" starttime="20210127 08:50:33.974"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210127 08:50:39.951" starttime="20210127 08:50:33.922"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 08:49:00.152" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 08:49:00.152" starttime="20210127 08:49:00.151"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:49:00.152" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 08:49:00.152" starttime="20210127 08:49:00.152"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:00.152" starttime="20210127 08:49:00.151"></status>
</kw>
<msg timestamp="20210127 08:49:00.153" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 08:49:00.153" starttime="20210127 08:49:00.150"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:00.153" starttime="20210127 08:49:00.150"></status>
</kw>
<msg timestamp="20210127 08:49:00.153" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 08:49:00.153" starttime="20210127 08:49:00.149"></status>
</kw>
<msg timestamp="20210127 08:49:00.153" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 08:49:00.153" starttime="20210127 08:49:00.148"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 08:49:00.154" level="INFO">${random} = 52714</msg>
<status status="PASS" endtime="20210127 08:49:00.154" starttime="20210127 08:49:00.153"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:49:00.159" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-52714 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:49:04.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:49:04.967" level="INFO">${output} = 2021-01-27 08:49:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:49:02 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210127 08:49:04.967" starttime="20210127 08:49:00.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:49:04.970" level="INFO">2021-01-27 08:49:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:49:02 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 08:49:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 08:49:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 08:49:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-04D4B6B62C83-&gt;adb143a7-fa72-4257-984d-85d51aad8e31
2021-01-27 08:49:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210127 08:49:04.974" starttime="20210127 08:49:04.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:49:04.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:49:04.976" starttime="20210127 08:49:04.975"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:04.976" starttime="20210127 08:49:00.155"></status>
</kw>
<msg timestamp="20210127 08:49:04.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:49:04.976" starttime="20210127 08:49:00.154"></status>
</kw>
<msg timestamp="20210127 08:49:04.977" level="INFO">${result} = 2021-01-27 08:49:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:49:02 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210127 08:49:04.977" starttime="20210127 08:49:00.154"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:49:04.982" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:49:07.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:49:07.094" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 08:48 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 08:49 o3fs://bucket1.volume1.om/ozone-52714
dr...</msg>
<status status="PASS" endtime="20210127 08:49:07.095" starttime="20210127 08:49:04.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:49:07.096" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 08:48 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 08:49 o3fs://bucket1.volume1.om/ozone-52714
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 08:48 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210127 08:49:07.096" starttime="20210127 08:49:07.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:49:07.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:49:07.097" starttime="20210127 08:49:07.096"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:07.097" starttime="20210127 08:49:04.978"></status>
</kw>
<msg timestamp="20210127 08:49:07.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:49:07.097" starttime="20210127 08:49:04.978"></status>
</kw>
<msg timestamp="20210127 08:49:07.098" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-01-27 08:48 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-01-27 08:49 o3fs://bucket1.volume1.om/ozone-52714
dr...</msg>
<status status="PASS" endtime="20210127 08:49:07.098" starttime="20210127 08:49:04.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:49:07.098" starttime="20210127 08:49:07.098"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 08:49:07.098" critical="yes" starttime="20210127 08:49:00.147"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210127 08:49:07.100" starttime="20210127 08:49:00.095"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:48:54.652" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:48:54.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:48:54.655" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210127 08:48:54.655" starttime="20210127 08:48:54.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:48:54.656" level="INFO">rm</msg>
<status status="PASS" endtime="20210127 08:48:54.656" starttime="20210127 08:48:54.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:48:54.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:48:54.657" starttime="20210127 08:48:54.656"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:54.658" starttime="20210127 08:48:54.647"></status>
</kw>
<msg timestamp="20210127 08:48:54.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:48:54.658" starttime="20210127 08:48:54.647"></status>
</kw>
<msg timestamp="20210127 08:48:54.658" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210127 08:48:54.658" starttime="20210127 08:48:54.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:48:54.659" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:48:54.659" starttime="20210127 08:48:54.658"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:48:54.668" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:48:54.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:48:54.684" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:48:54.684" starttime="20210127 08:48:54.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:48:54.685" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:48:54.685" starttime="20210127 08:48:54.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:48:54.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:48:54.686" starttime="20210127 08:48:54.685"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:54.687" starttime="20210127 08:48:54.661"></status>
</kw>
<msg timestamp="20210127 08:48:54.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:48:54.687" starttime="20210127 08:48:54.660"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:54.687" starttime="20210127 08:48:54.660"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:54.687" starttime="20210127 08:48:54.660"></status>
</kw>
<status status="PASS" endtime="20210127 08:48:54.688" starttime="20210127 08:48:54.645"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:48:54.689" critical="yes" starttime="20210127 08:48:54.645"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210127 08:48:54.690" starttime="20210127 08:48:54.597"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:47:41.081" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:47:41.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:47:41.083" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210127 08:47:41.083" starttime="20210127 08:47:41.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:47:41.084" level="INFO">om</msg>
<status status="PASS" endtime="20210127 08:47:41.084" starttime="20210127 08:47:41.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:47:41.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:47:41.085" starttime="20210127 08:47:41.085"></status>
</kw>
<status status="PASS" endtime="20210127 08:47:41.085" starttime="20210127 08:47:41.076"></status>
</kw>
<msg timestamp="20210127 08:47:41.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:47:41.086" starttime="20210127 08:47:41.076"></status>
</kw>
<msg timestamp="20210127 08:47:41.086" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210127 08:47:41.086" starttime="20210127 08:47:41.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:47:41.087" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:47:41.087" starttime="20210127 08:47:41.086"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:47:41.091" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:47:41.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:47:41.108" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:47:41.108" starttime="20210127 08:47:41.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:47:41.109" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:47:41.109" starttime="20210127 08:47:41.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:47:41.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:47:41.110" starttime="20210127 08:47:41.109"></status>
</kw>
<status status="PASS" endtime="20210127 08:47:41.110" starttime="20210127 08:47:41.088"></status>
</kw>
<msg timestamp="20210127 08:47:41.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:47:41.110" starttime="20210127 08:47:41.088"></status>
</kw>
<status status="PASS" endtime="20210127 08:47:41.110" starttime="20210127 08:47:41.087"></status>
</kw>
<status status="PASS" endtime="20210127 08:47:41.111" starttime="20210127 08:47:41.087"></status>
</kw>
<status status="PASS" endtime="20210127 08:47:41.111" starttime="20210127 08:47:41.075"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:47:41.111" critical="yes" starttime="20210127 08:47:41.074"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210127 08:47:41.112" starttime="20210127 08:47:41.021"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:50:45.396" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:50:45.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:50:45.402" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:50:45.402" starttime="20210127 08:50:45.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:50:45.403" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:50:45.403" starttime="20210127 08:50:45.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:50:45.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:50:45.404" starttime="20210127 08:50:45.403"></status>
</kw>
<status status="PASS" endtime="20210127 08:50:45.404" starttime="20210127 08:50:45.391"></status>
</kw>
<msg timestamp="20210127 08:50:45.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:50:45.404" starttime="20210127 08:50:45.391"></status>
</kw>
<msg timestamp="20210127 08:50:45.405" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:50:45.405" starttime="20210127 08:50:45.390"></status>
</kw>
<msg timestamp="20210127 08:50:45.405" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:50:45.405" starttime="20210127 08:50:45.390"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 08:50:45.410" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 08:50:45.410" starttime="20210127 08:50:45.410"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:50:45.411" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 08:50:45.411" starttime="20210127 08:50:45.411"></status>
</kw>
<status status="PASS" endtime="20210127 08:50:45.412" starttime="20210127 08:50:45.409"></status>
</kw>
<msg timestamp="20210127 08:50:45.412" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 08:50:45.412" starttime="20210127 08:50:45.409"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:50:45.413" starttime="20210127 08:50:45.412"></status>
</kw>
<msg timestamp="20210127 08:50:45.413" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 08:50:45.413" starttime="20210127 08:50:45.412"></status>
</kw>
<status status="PASS" endtime="20210127 08:50:45.413" starttime="20210127 08:50:45.408"></status>
</kw>
<msg timestamp="20210127 08:50:45.413" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 08:50:45.413" starttime="20210127 08:50:45.406"></status>
</kw>
<msg timestamp="20210127 08:50:45.413" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 08:50:45.413" starttime="20210127 08:50:45.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:50:45.417" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:51:18.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:51:18.353" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 08:50:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:50:47 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210127 08:51:18.353" starttime="20210127 08:50:45.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:51:18.354" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-27 08:50:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:50:47 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 08:50:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 08:50:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 08:50:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-184136AAFEAD-&gt;2a292234-df21-470c-9493-bc8c53b3efe4
2021-01-27 08:50:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-01-27 08:50:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8BB23289909A-&gt;adb143a7-fa72-4257-984d-85d51aad8e31
2021-01-27 08:50:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-01-27 08:50:49 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-27 08:50:49 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
2021-01-27 08:50:49 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611737449679, maxDate=1612342249679, sequenceNumber=3, masterKeyId=2))
2021-01-27 08:50:49 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c0 88 a7 98 f4 2e 38 c0 90 d9 b8 f6 2e 40 03 48 01 5a 0d 32 32 37 37 33 36 30 32 33 36 34 35 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-27 08:50:49 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611737449679, maxDate=1612342249679, sequenceNumber=3, masterKeyId=2)
2021-01-27 08:50:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 08:50:50 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 08:50:50 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 08:50:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611737212056_0003
2021-01-27 08:50:50 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611737449679, maxDate=1612342249679, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c0 88 a7 98 f4 2e 38 c0 90 d9 b8 f6 2e 40 03 48 01 5a 0d 32 32 37 37 33 36 30 32 33 36 34 35 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-27 08:50:50 INFO  Configuration:2795 - resource-types.xml not found
2021-01-27 08:50:50 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-27 08:50:50 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-27 08:50:51 INFO  YarnClientImpl:329 - Submitted application application_1611737212056_0003
2021-01-27 08:50:51 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611737212056_0003/
2021-01-27 08:50:51 INFO  Job:1614 - Running job: job_1611737212056_0003
2021-01-27 08:50:59 INFO  Job:1635 - Job job_1611737212056_0003 running in uber mode : false
2021-01-27 08:50:59 INFO  Job:1642 -  map 0% reduce 0%
2021-01-27 08:51:09 INFO  Job:1642 -  map 33% reduce 0%
2021-01-27 08:51:11 INFO  Job:1642 -  map 67% reduce 0%
2021-01-27 08:51:12 INFO  Job:1642 -  map 100% reduce 0%
2021-01-27 08:51:16 INFO  Job:1642 -  map 100% reduce 100%
2021-01-27 08:51:17 INFO  Job:1653 - Job job_1611737212056_0003 completed successfully
2021-01-27 08:51:17 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101065
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48768
		Total time spent by all reduces in occupied slots (ms)=8242
		Total time spent by all map tasks (ms)=24384
		Total time spent by all reduce tasks (ms)=4121
		Total vcore-milliseconds taken by all map tasks=24384
		Total vcore-milliseconds taken by all reduce tasks=4121
		Total megabyte-milliseconds taken by all map tasks=49938432
		Total megabyte-milliseconds taken by all reduce tasks=8439808
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1130
		CPU time spent (ms)=8340
		Physical memory (bytes) snapshot=1494740992
		Virtual memory (bytes) snapshot=14060773376
		Total committed heap usage (bytes)=1282932736
		Peak Map Physical memory (bytes)=401358848
		Peak Map Virtual memory (bytes)=3514396672
		Peak Reduce Physical memory (bytes)=322162688
		Peak Reduce Virtual memory (bytes)=3529187328
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.702 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210127 08:51:18.354" starttime="20210127 08:51:18.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:51:18.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:51:18.355" starttime="20210127 08:51:18.354"></status>
</kw>
<status status="PASS" endtime="20210127 08:51:18.355" starttime="20210127 08:50:45.414"></status>
</kw>
<msg timestamp="20210127 08:51:18.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:51:18.355" starttime="20210127 08:50:45.414"></status>
</kw>
<msg timestamp="20210127 08:51:18.356" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 08:50:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:50:47 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210127 08:51:18.356" starttime="20210127 08:50:45.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 08:51:18.357" starttime="20210127 08:51:18.356"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 08:51:18.357" critical="yes" starttime="20210127 08:50:45.389"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:51:18.362" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:51:18.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:51:18.368" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:51:18.368" starttime="20210127 08:51:18.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:51:18.369" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:51:18.369" starttime="20210127 08:51:18.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:51:18.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:51:18.370" starttime="20210127 08:51:18.370"></status>
</kw>
<status status="PASS" endtime="20210127 08:51:18.370" starttime="20210127 08:51:18.359"></status>
</kw>
<msg timestamp="20210127 08:51:18.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:51:18.370" starttime="20210127 08:51:18.359"></status>
</kw>
<msg timestamp="20210127 08:51:18.371" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:51:18.371" starttime="20210127 08:51:18.359"></status>
</kw>
<msg timestamp="20210127 08:51:18.371" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:51:18.371" starttime="20210127 08:51:18.358"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 08:51:18.372" level="INFO">${random} = LUBm5VQz</msg>
<status status="PASS" endtime="20210127 08:51:18.372" starttime="20210127 08:51:18.371"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 08:51:18.376" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 08:51:18.376" starttime="20210127 08:51:18.375"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:51:18.376" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 08:51:18.376" starttime="20210127 08:51:18.376"></status>
</kw>
<status status="PASS" endtime="20210127 08:51:18.376" starttime="20210127 08:51:18.375"></status>
</kw>
<msg timestamp="20210127 08:51:18.376" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 08:51:18.377" starttime="20210127 08:51:18.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:51:18.377" starttime="20210127 08:51:18.377"></status>
</kw>
<msg timestamp="20210127 08:51:18.378" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210127 08:51:18.378" starttime="20210127 08:51:18.377"></status>
</kw>
<status status="PASS" endtime="20210127 08:51:18.378" starttime="20210127 08:51:18.374"></status>
</kw>
<msg timestamp="20210127 08:51:18.378" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 08:51:18.378" starttime="20210127 08:51:18.373"></status>
</kw>
<msg timestamp="20210127 08:51:18.378" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210127 08:51:18.378" starttime="20210127 08:51:18.372"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 08:51:18.382" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 08:51:18.382" starttime="20210127 08:51:18.381"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:51:18.382" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 08:51:18.382" starttime="20210127 08:51:18.382"></status>
</kw>
<status status="PASS" endtime="20210127 08:51:18.383" starttime="20210127 08:51:18.381"></status>
</kw>
<msg timestamp="20210127 08:51:18.383" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 08:51:18.383" starttime="20210127 08:51:18.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 08:51:18.384" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210127 08:51:18.384" starttime="20210127 08:51:18.384"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:51:18.385" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210127 08:51:18.385" starttime="20210127 08:51:18.384"></status>
</kw>
<status status="PASS" endtime="20210127 08:51:18.385" starttime="20210127 08:51:18.383"></status>
</kw>
<msg timestamp="20210127 08:51:18.385" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210127 08:51:18.385" starttime="20210127 08:51:18.383"></status>
</kw>
<status status="PASS" endtime="20210127 08:51:18.385" starttime="20210127 08:51:18.380"></status>
</kw>
<msg timestamp="20210127 08:51:18.386" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210127 08:51:18.386" starttime="20210127 08:51:18.379"></status>
</kw>
<msg timestamp="20210127 08:51:18.386" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210127 08:51:18.386" starttime="20210127 08:51:18.378"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210127 08:51:18.389" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210127 08:51:18.389" starttime="20210127 08:51:18.389"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:51:18.390" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210127 08:51:18.390" starttime="20210127 08:51:18.389"></status>
</kw>
<status status="PASS" endtime="20210127 08:51:18.390" starttime="20210127 08:51:18.388"></status>
</kw>
<msg timestamp="20210127 08:51:18.390" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210127 08:51:18.390" starttime="20210127 08:51:18.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 08:51:18.392" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210127 08:51:18.392" starttime="20210127 08:51:18.391"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:51:18.392" level="INFO">${result} = /wordcount-LUBm5VQz.txt</msg>
<status status="PASS" endtime="20210127 08:51:18.392" starttime="20210127 08:51:18.392"></status>
</kw>
<status status="PASS" endtime="20210127 08:51:18.392" starttime="20210127 08:51:18.391"></status>
</kw>
<msg timestamp="20210127 08:51:18.392" level="INFO">${path_with_leading} = /wordcount-LUBm5VQz.txt</msg>
<status status="PASS" endtime="20210127 08:51:18.393" starttime="20210127 08:51:18.390"></status>
</kw>
<status status="PASS" endtime="20210127 08:51:18.393" starttime="20210127 08:51:18.387"></status>
</kw>
<msg timestamp="20210127 08:51:18.393" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-LUBm5VQz.txt</msg>
<status status="PASS" endtime="20210127 08:51:18.393" starttime="20210127 08:51:18.387"></status>
</kw>
<msg timestamp="20210127 08:51:18.393" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-LUBm5VQz.txt</msg>
<status status="PASS" endtime="20210127 08:51:18.393" starttime="20210127 08:51:18.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:51:18.398" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-LUBm5VQz.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:51:50.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:51:50.103" level="INFO">${output} = 2021-01-27 08:51:20 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-27 08:51:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
202...</msg>
<status status="PASS" endtime="20210127 08:51:50.103" starttime="20210127 08:51:18.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:51:50.104" level="INFO">2021-01-27 08:51:20 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-27 08:51:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
2021-01-27 08:51:20 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611737480896, maxDate=1612342280896, sequenceNumber=4, masterKeyId=2))
2021-01-27 08:51:20 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e2 fc a8 98 f4 2e 38 e2 84 db b8 f6 2e 40 04 48 01 5a 0d 32 32 37 37 33 36 30 32 33 36 34 35 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-27 08:51:20 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611737480896, maxDate=1612342280896, sequenceNumber=4, masterKeyId=2)
2021-01-27 08:51:21 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 08:51:21 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:51:21 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 08:51:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 08:51:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 08:51:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E1DF9C2D12DE-&gt;2a292234-df21-470c-9493-bc8c53b3efe4
2021-01-27 08:51:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 08:51:22 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 08:51:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-79FF2BD98D80-&gt;adb143a7-fa72-4257-984d-85d51aad8e31
2021-01-27 08:51:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 08:51:22 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 08:51:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611737212056_0004
2021-01-27 08:51:23 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611737480896, maxDate=1612342280896, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e2 fc a8 98 f4 2e 38 e2 84 db b8 f6 2e 40 04 48 01 5a 0d 32 32 37 37 33 36 30 32 33 36 34 35 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-27 08:51:23 INFO  Configuration:2795 - resource-types.xml not found
2021-01-27 08:51:23 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-27 08:51:23 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-27 08:51:24 INFO  YarnClientImpl:329 - Submitted application application_1611737212056_0004
2021-01-27 08:51:24 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611737212056_0004/
2021-01-27 08:51:24 INFO  Job:1614 - Running job: job_1611737212056_0004
2021-01-27 08:51:31 INFO  Job:1635 - Job job_1611737212056_0004 running in uber mode : false
2021-01-27 08:51:31 INFO  Job:1642 -  map 0% reduce 0%
2021-01-27 08:51:42 INFO  Job:1642 -  map 33% reduce 0%
2021-01-27 08:51:44 INFO  Job:1642 -  map 100% reduce 0%
2021-01-27 08:51:48 INFO  Job:1642 -  map 100% reduce 100%
2021-01-27 08:51:49 INFO  Job:1653 - Job job_1611737212056_0004 completed successfully
2021-01-27 08:51:49 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163731
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48376
		Total time spent by all reduces in occupied slots (ms)=7644
		Total time spent by all map tasks (ms)=24188
		Total time spent by all reduce tasks (ms)=3822
		Total vcore-milliseconds taken by all map tasks=24188
		Total vcore-milliseconds taken by all reduce tasks=3822
		Total megabyte-milliseconds taken by all map tasks=49537024
		Total megabyte-milliseconds taken by all reduce tasks=7827456
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1221
		CPU time spent (ms)=7760
		Physical memory (bytes) snapshot=1463214080
		Virtual memory (bytes) snapshot=14028496896
		Total committed heap usage (bytes)=1289748480
		Peak Map Physical memory (bytes)=388521984
		Peak Map Virtual memory (bytes)=3508236288
		Peak Reduce Physical memory (bytes)=317865984
		Peak Reduce Virtual memory (bytes)=3525513216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210127 08:51:50.104" starttime="20210127 08:51:50.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:51:50.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:51:50.105" starttime="20210127 08:51:50.105"></status>
</kw>
<status status="PASS" endtime="20210127 08:51:50.105" starttime="20210127 08:51:18.394"></status>
</kw>
<msg timestamp="20210127 08:51:50.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:51:50.106" starttime="20210127 08:51:18.394"></status>
</kw>
<msg timestamp="20210127 08:51:50.106" level="INFO">${output} = 2021-01-27 08:51:20 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-27 08:51:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
202...</msg>
<status status="PASS" endtime="20210127 08:51:50.106" starttime="20210127 08:51:18.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210127 08:51:50.107" starttime="20210127 08:51:50.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 08:51:50.107" starttime="20210127 08:51:50.107"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 08:51:50.108" critical="yes" starttime="20210127 08:51:18.358"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210127 08:51:50.109" starttime="20210127 08:50:45.334"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:49:12.507" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:49:12.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:49:12.519" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:49:12.519" starttime="20210127 08:49:12.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:49:12.520" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:49:12.520" starttime="20210127 08:49:12.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:49:12.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:49:12.521" starttime="20210127 08:49:12.521"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:12.521" starttime="20210127 08:49:12.502"></status>
</kw>
<msg timestamp="20210127 08:49:12.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:49:12.522" starttime="20210127 08:49:12.502"></status>
</kw>
<msg timestamp="20210127 08:49:12.522" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:49:12.522" starttime="20210127 08:49:12.502"></status>
</kw>
<msg timestamp="20210127 08:49:12.522" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:49:12.522" starttime="20210127 08:49:12.501"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 08:49:12.527" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 08:49:12.528" starttime="20210127 08:49:12.527"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:49:12.528" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 08:49:12.528" starttime="20210127 08:49:12.528"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:12.528" starttime="20210127 08:49:12.526"></status>
</kw>
<msg timestamp="20210127 08:49:12.528" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 08:49:12.529" starttime="20210127 08:49:12.526"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:12.529" starttime="20210127 08:49:12.525"></status>
</kw>
<msg timestamp="20210127 08:49:12.529" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 08:49:12.529" starttime="20210127 08:49:12.523"></status>
</kw>
<msg timestamp="20210127 08:49:12.529" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 08:49:12.529" starttime="20210127 08:49:12.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:49:12.533" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:49:54.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:49:54.412" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 08:49:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:49:14 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210127 08:49:54.412" starttime="20210127 08:49:12.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:49:54.414" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-01-27 08:49:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:49:14 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 08:49:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 08:49:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 08:49:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BDC61AAD2757-&gt;2a292234-df21-470c-9493-bc8c53b3efe4
2021-01-27 08:49:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-01-27 08:49:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B7A136CA9A2A-&gt;adb143a7-fa72-4257-984d-85d51aad8e31
2021-01-27 08:49:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-01-27 08:49:16 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-27 08:49:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
2021-01-27 08:49:17 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611737357232, maxDate=1612342157232, sequenceNumber=1, masterKeyId=2))
2021-01-27 08:49:17 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a8 b4 a1 98 f4 2e 38 a8 bc d3 b8 f6 2e 40 01 48 01 5a 0d 32 32 37 37 33 36 30 32 33 36 34 35 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-27 08:49:17 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611737357232, maxDate=1612342157232, sequenceNumber=1, masterKeyId=2)
2021-01-27 08:49:20 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 08:49:20 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 08:49:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611737212056_0001
2021-01-27 08:49:20 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611737357232, maxDate=1612342157232, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a8 b4 a1 98 f4 2e 38 a8 bc d3 b8 f6 2e 40 01 48 01 5a 0d 32 32 37 37 33 36 30 32 33 36 34 35 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-27 08:49:21 INFO  Configuration:2795 - resource-types.xml not found
2021-01-27 08:49:21 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-27 08:49:21 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-27 08:49:22 INFO  YarnClientImpl:329 - Submitted application application_1611737212056_0001
2021-01-27 08:49:23 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611737212056_0001/
2021-01-27 08:49:23 INFO  Job:1614 - Running job: job_1611737212056_0001
2021-01-27 08:49:34 INFO  Job:1635 - Job job_1611737212056_0001 running in uber mode : false
2021-01-27 08:49:34 INFO  Job:1642 -  map 0% reduce 0%
2021-01-27 08:49:45 INFO  Job:1642 -  map 33% reduce 0%
2021-01-27 08:49:47 INFO  Job:1642 -  map 100% reduce 0%
2021-01-27 08:49:52 INFO  Job:1642 -  map 100% reduce 100%
2021-01-27 08:49:53 INFO  Job:1653 - Job job_1611737212056_0001 completed successfully
2021-01-27 08:49:53 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101277
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52872
		Total time spent by all reduces in occupied slots (ms)=8482
		Total time spent by all map tasks (ms)=26436
		Total time spent by all reduce tasks (ms)=4241
		Total vcore-milliseconds taken by all map tasks=26436
		Total vcore-milliseconds taken by all reduce tasks=4241
		Total megabyte-milliseconds taken by all map tasks=54140928
		Total megabyte-milliseconds taken by all reduce tasks=8685568
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1118
		CPU time spent (ms)=7840
		Physical memory (bytes) snapshot=1496838144
		Virtual memory (bytes) snapshot=14060732416
		Total committed heap usage (bytes)=1293942784
		Peak Map Physical memory (bytes)=399372288
		Peak Map Virtual memory (bytes)=3511832576
		Peak Reduce Physical memory (bytes)=321454080
		Peak Reduce Virtual memory (bytes)=3532144640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.347 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210127 08:49:54.414" starttime="20210127 08:49:54.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:49:54.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:49:54.415" starttime="20210127 08:49:54.414"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:54.415" starttime="20210127 08:49:12.530"></status>
</kw>
<msg timestamp="20210127 08:49:54.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:49:54.416" starttime="20210127 08:49:12.530"></status>
</kw>
<msg timestamp="20210127 08:49:54.416" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-01-27 08:49:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:49:14 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210127 08:49:54.416" starttime="20210127 08:49:12.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 08:49:54.417" starttime="20210127 08:49:54.416"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 08:49:54.417" critical="yes" starttime="20210127 08:49:12.501"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:49:54.423" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:49:54.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:49:54.431" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:49:54.431" starttime="20210127 08:49:54.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:49:54.432" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:49:54.432" starttime="20210127 08:49:54.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:49:54.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:49:54.432" starttime="20210127 08:49:54.432"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:54.433" starttime="20210127 08:49:54.420"></status>
</kw>
<msg timestamp="20210127 08:49:54.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:49:54.433" starttime="20210127 08:49:54.420"></status>
</kw>
<msg timestamp="20210127 08:49:54.433" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:49:54.433" starttime="20210127 08:49:54.419"></status>
</kw>
<msg timestamp="20210127 08:49:54.433" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210127 08:49:54.433" starttime="20210127 08:49:54.419"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 08:49:54.434" level="INFO">${random} = xfUfVpVQ</msg>
<status status="PASS" endtime="20210127 08:49:54.434" starttime="20210127 08:49:54.434"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 08:49:54.438" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 08:49:54.438" starttime="20210127 08:49:54.438"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:49:54.439" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 08:49:54.439" starttime="20210127 08:49:54.438"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:54.439" starttime="20210127 08:49:54.437"></status>
</kw>
<msg timestamp="20210127 08:49:54.439" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 08:49:54.439" starttime="20210127 08:49:54.437"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:54.439" starttime="20210127 08:49:54.435"></status>
</kw>
<msg timestamp="20210127 08:49:54.439" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 08:49:54.439" starttime="20210127 08:49:54.435"></status>
</kw>
<msg timestamp="20210127 08:49:54.440" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210127 08:49:54.440" starttime="20210127 08:49:54.434"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 08:49:54.443" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 08:49:54.443" starttime="20210127 08:49:54.442"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:49:54.444" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 08:49:54.444" starttime="20210127 08:49:54.443"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:54.444" starttime="20210127 08:49:54.442"></status>
</kw>
<msg timestamp="20210127 08:49:54.444" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 08:49:54.444" starttime="20210127 08:49:54.442"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:54.444" starttime="20210127 08:49:54.441"></status>
</kw>
<msg timestamp="20210127 08:49:54.444" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210127 08:49:54.444" starttime="20210127 08:49:54.440"></status>
</kw>
<msg timestamp="20210127 08:49:54.444" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210127 08:49:54.445" starttime="20210127 08:49:54.440"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210127 08:49:54.448" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210127 08:49:54.448" starttime="20210127 08:49:54.447"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:49:54.448" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210127 08:49:54.448" starttime="20210127 08:49:54.448"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:54.449" starttime="20210127 08:49:54.447"></status>
</kw>
<msg timestamp="20210127 08:49:54.449" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210127 08:49:54.449" starttime="20210127 08:49:54.446"></status>
</kw>
<status status="PASS" endtime="20210127 08:49:54.449" starttime="20210127 08:49:54.446"></status>
</kw>
<msg timestamp="20210127 08:49:54.449" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-xfUfVpVQ.txt</msg>
<status status="PASS" endtime="20210127 08:49:54.449" starttime="20210127 08:49:54.445"></status>
</kw>
<msg timestamp="20210127 08:49:54.449" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-xfUfVpVQ.txt</msg>
<status status="PASS" endtime="20210127 08:49:54.449" starttime="20210127 08:49:54.445"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:49:54.453" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-xfUfVpVQ.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:50:27.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:50:27.672" level="INFO">${output} = 2021-01-27 08:49:56 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-27 08:49:56 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
202...</msg>
<status status="PASS" endtime="20210127 08:50:27.672" starttime="20210127 08:49:54.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:50:27.673" level="INFO">2021-01-27 08:49:56 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-27 08:49:56 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
2021-01-27 08:49:57 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611737396981, maxDate=1612342196981, sequenceNumber=2, masterKeyId=2))
2021-01-27 08:49:57 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f1 ec a3 98 f4 2e 38 f1 f4 d5 b8 f6 2e 40 02 48 01 5a 0d 32 32 37 37 33 36 30 32 33 36 34 35 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-01-27 08:49:57 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611737396981, maxDate=1612342196981, sequenceNumber=2, masterKeyId=2)
2021-01-27 08:49:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-01-27 08:49:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-01-27 08:49:57 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-01-27 08:49:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-01-27 08:49:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 08:49:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1276BC456A66-&gt;adb143a7-fa72-4257-984d-85d51aad8e31
2021-01-27 08:49:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 08:49:58 INFO  FileInputFormat:292 - Total input files to process : 3
2021-01-27 08:49:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E99F4F556CDE-&gt;2a292234-df21-470c-9493-bc8c53b3efe4
2021-01-27 08:49:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 08:49:59 INFO  JobSubmitter:202 - number of splits:3
2021-01-27 08:49:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1611737212056_0002
2021-01-27 08:49:59 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1611737396981, maxDate=1612342196981, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f1 ec a3 98 f4 2e 38 f1 f4 d5 b8 f6 2e 40 02 48 01 5a 0d 32 32 37 37 33 36 30 32 33 36 34 35 33 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-01-27 08:49:59 INFO  Configuration:2795 - resource-types.xml not found
2021-01-27 08:49:59 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-01-27 08:49:59 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-01-27 08:50:00 INFO  YarnClientImpl:329 - Submitted application application_1611737212056_0002
2021-01-27 08:50:00 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1611737212056_0002/
2021-01-27 08:50:00 INFO  Job:1614 - Running job: job_1611737212056_0002
2021-01-27 08:50:09 INFO  Job:1635 - Job job_1611737212056_0002 running in uber mode : false
2021-01-27 08:50:09 INFO  Job:1642 -  map 0% reduce 0%
2021-01-27 08:50:20 INFO  Job:1642 -  map 33% reduce 0%
2021-01-27 08:50:22 INFO  Job:1642 -  map 100% reduce 0%
2021-01-27 08:50:27 INFO  Job:1642 -  map 100% reduce 100%
2021-01-27 08:50:27 INFO  Job:1653 - Job job_1611737212056_0002 completed successfully
2021-01-27 08:50:27 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163815
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52442
		Total time spent by all reduces in occupied slots (ms)=7954
		Total time spent by all map tasks (ms)=26221
		Total time spent by all reduce tasks (ms)=3977
		Total vcore-milliseconds taken by all map tasks=26221
		Total vcore-milliseconds taken by all reduce tasks=3977
		Total megabyte-milliseconds taken by all map tasks=53700608
		Total megabyte-milliseconds taken by all reduce tasks=8144896
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1778
		CPU time spent (ms)=8820
		Physical memory (bytes) snapshot=1642577920
		Virtual memory (bytes) snapshot=14061383680
		Total committed heap usage (bytes)=1474297856
		Peak Map Physical memory (bytes)=554598400
		Peak Map Virtual memory (bytes)=3513253888
		Peak Reduce Physical memory (bytes)=319860736
		Peak Reduce Virtual memory (bytes)=3528781824
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210127 08:50:27.674" starttime="20210127 08:50:27.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:50:27.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:50:27.675" starttime="20210127 08:50:27.674"></status>
</kw>
<status status="PASS" endtime="20210127 08:50:27.675" starttime="20210127 08:49:54.451"></status>
</kw>
<msg timestamp="20210127 08:50:27.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:50:27.675" starttime="20210127 08:49:54.450"></status>
</kw>
<msg timestamp="20210127 08:50:27.676" level="INFO">${output} = 2021-01-27 08:49:56 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-01-27 08:49:56 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.3:10200
202...</msg>
<status status="PASS" endtime="20210127 08:50:27.676" starttime="20210127 08:49:54.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210127 08:50:27.676" starttime="20210127 08:50:27.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210127 08:50:27.677" starttime="20210127 08:50:27.677"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210127 08:50:27.677" critical="yes" starttime="20210127 08:49:54.418"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210127 08:50:27.678" starttime="20210127 08:49:12.448"></status>
</suite>
<status status="PASS" elapsedtime="199907" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
