<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210127 08:58:41.207" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:54:30.497" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:54:45.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:54:45.105" level="INFO">${output} = 2021-01-27 08:54:32,281 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 08:54:32,442 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 08:54:45.106" starttime="20210127 08:54:30.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:54:45.107" level="INFO">2021-01-27 08:54:32,281 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 08:54:32,442 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-27 08:54:32,442 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-27 08:54:32,616 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-27 08:54:32,638 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:33,644 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:34,644 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:34,999 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-27 08:54:35,645 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:36,345 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-01-27 08:54:36,645 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:36,871 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-01-27 08:54:37,646 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:38,651 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:39,317 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-27 08:54:39,651 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:39,840 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-01-27 08:54:39,840 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-7F9EFD15C1F6-&gt;01a48d57-5629-40bc-9b2f-d69ef5d18c06
2021-01-27 08:54:39,842 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-01-27 08:54:40,653 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:41,653 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:42,654 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:43,657 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:44,657 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-27 08:54:44,710 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=6723.029725, max=6723.029725, mean=6723.029725, stddev=0.0, median=6723.029725, p75=6723.029725, p95=6723.029725, p98=6723.029725, p99=6723.029725, p999=6723.029725, mean_rate=0.13235370026776194, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-27 08:54:44,712 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 12
2021-01-27 08:54:44,713 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-27 08:54:44,713 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210127 08:54:45.107" starttime="20210127 08:54:45.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:54:45.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:54:45.108" starttime="20210127 08:54:45.107"></status>
</kw>
<status status="PASS" endtime="20210127 08:54:45.108" starttime="20210127 08:54:30.493"></status>
</kw>
<msg timestamp="20210127 08:54:45.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:54:45.108" starttime="20210127 08:54:30.492"></status>
</kw>
<msg timestamp="20210127 08:54:45.109" level="INFO">${result} = 2021-01-27 08:54:32,281 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 08:54:32,442 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 08:54:45.109" starttime="20210127 08:54:30.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210127 08:54:45.109" starttime="20210127 08:54:45.109"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 08:54:45.109" critical="yes" starttime="20210127 08:54:30.491"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:54:45.115" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:54:50.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:54:50.472" level="INFO">${output} = 2021-01-27 08:54:47,026 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 08:54:47,206 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 08:54:50.472" starttime="20210127 08:54:45.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:54:50.473" level="INFO">2021-01-27 08:54:47,026 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 08:54:47,206 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-27 08:54:47,206 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-27 08:54:47,362 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-01-27 08:54:47,385 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:48,390 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:48,613 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-27 08:54:49,160 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-27 08:54:49,391 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:50,403 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-27 08:54:50,441 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=336.844945, max=336.844945, mean=336.844945, stddev=0.0, median=336.844945, p75=336.844945, p95=336.844945, p98=336.844945, p99=336.844945, p999=336.844945, mean_rate=0.7044830946945929, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-27 08:54:50,452 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-01-27 08:54:50,452 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-27 08:54:50,452 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210127 08:54:50.473" starttime="20210127 08:54:50.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:54:50.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:54:50.474" starttime="20210127 08:54:50.473"></status>
</kw>
<status status="PASS" endtime="20210127 08:54:50.474" starttime="20210127 08:54:45.112"></status>
</kw>
<msg timestamp="20210127 08:54:50.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:54:50.474" starttime="20210127 08:54:45.112"></status>
</kw>
<msg timestamp="20210127 08:54:50.475" level="INFO">${result} = 2021-01-27 08:54:47,026 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 08:54:47,206 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 08:54:50.475" starttime="20210127 08:54:45.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210127 08:54:50.475" starttime="20210127 08:54:50.475"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 08:54:50.476" critical="yes" starttime="20210127 08:54:45.110"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:54:50.481" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:54:55.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:54:55.194" level="INFO">${output} = 2021-01-27 08:54:52,172 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 08:54:52,271 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 08:54:55.194" starttime="20210127 08:54:50.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:54:55.196" level="INFO">2021-01-27 08:54:52,172 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 08:54:52,271 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-27 08:54:52,271 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-27 08:54:52,410 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-01-27 08:54:52,427 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:53,432 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:53,615 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-27 08:54:54,214 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-27 08:54:54,433 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-27 08:54:55,169 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=135.693665, max=135.693665, mean=135.693665, stddev=0.0, median=135.693665, p75=135.693665, p95=135.693665, p98=135.693665, p99=135.693665, p999=135.693665, mean_rate=0.9512393790615632, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-27 08:54:55,174 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-01-27 08:54:55,175 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-27 08:54:55,175 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210127 08:54:55.196" starttime="20210127 08:54:55.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:54:55.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:54:55.196" starttime="20210127 08:54:55.196"></status>
</kw>
<status status="PASS" endtime="20210127 08:54:55.197" starttime="20210127 08:54:50.479"></status>
</kw>
<msg timestamp="20210127 08:54:55.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:54:55.197" starttime="20210127 08:54:50.478"></status>
</kw>
<msg timestamp="20210127 08:54:55.197" level="INFO">${result} = 2021-01-27 08:54:52,172 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 08:54:52,271 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 08:54:55.197" starttime="20210127 08:54:50.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210127 08:54:55.198" starttime="20210127 08:54:55.198"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 08:54:55.198" critical="yes" starttime="20210127 08:54:50.477"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210127 08:54:55.199" starttime="20210127 08:54:30.475"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:54:55.210" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:02.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:02.961" level="INFO">${output} = 2021-01-27 08:54:56,954 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 08:54:57,047 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 08:55:02.961" starttime="20210127 08:54:55.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:02.962" level="INFO">2021-01-27 08:54:56,954 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 08:54:57,047 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-01-27 08:54:57,047 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-01-27 08:54:57,204 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-01-27 08:54:57,217 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:58,233 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-01-27 08:54:58,235 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:59,242 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:54:59,941 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-01-27 08:55:00,245 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:55:01,251 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-01-27 08:55:02,252 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-01-27 08:55:02,635 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=86.673137, max=86.673137, mean=86.673137, stddev=0.0, median=86.673137, p75=86.673137, p95=86.673137, p98=86.673137, p99=86.673137, p999=86.673137, mean_rate=0.9540565209605789, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-01-27 08:55:02,635 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-01-27 08:55:02,636 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-01-27 08:55:02,636 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210127 08:55:02.962" starttime="20210127 08:55:02.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:02.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:02.964" starttime="20210127 08:55:02.962"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:02.964" starttime="20210127 08:54:55.208"></status>
</kw>
<msg timestamp="20210127 08:55:02.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:02.965" starttime="20210127 08:54:55.207"></status>
</kw>
<msg timestamp="20210127 08:55:02.965" level="INFO">${result} = 2021-01-27 08:54:56,954 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-01-27 08:54:57,047 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210127 08:55:02.965" starttime="20210127 08:54:55.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210127 08:55:02.966" starttime="20210127 08:55:02.965"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210127 08:55:02.966" critical="yes" starttime="20210127 08:54:55.206"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210127 08:55:02.967" starttime="20210127 08:54:55.202"></status>
</suite>
<status status="PASS" endtime="20210127 08:55:02.969" starttime="20210127 08:54:30.448"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:54:24.712" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:54:24.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:54:24.715" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:54:24.715" starttime="20210127 08:54:24.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:54:24.716" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:54:24.716" starttime="20210127 08:54:24.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:54:24.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:54:24.717" starttime="20210127 08:54:24.716"></status>
</kw>
<status status="PASS" endtime="20210127 08:54:24.717" starttime="20210127 08:54:24.708"></status>
</kw>
<msg timestamp="20210127 08:54:24.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:54:24.718" starttime="20210127 08:54:24.707"></status>
</kw>
<msg timestamp="20210127 08:54:24.718" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:54:24.718" starttime="20210127 08:54:24.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:54:24.719" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:54:24.719" starttime="20210127 08:54:24.718"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:54:24.723" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:54:24.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:54:24.735" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:54:24.735" starttime="20210127 08:54:24.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:54:24.736" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:54:24.736" starttime="20210127 08:54:24.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:54:24.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:54:24.737" starttime="20210127 08:54:24.736"></status>
</kw>
<status status="PASS" endtime="20210127 08:54:24.737" starttime="20210127 08:54:24.721"></status>
</kw>
<msg timestamp="20210127 08:54:24.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:54:24.737" starttime="20210127 08:54:24.720"></status>
</kw>
<status status="PASS" endtime="20210127 08:54:24.738" starttime="20210127 08:54:24.719"></status>
</kw>
<status status="PASS" endtime="20210127 08:54:24.738" starttime="20210127 08:54:24.719"></status>
</kw>
<status status="PASS" endtime="20210127 08:54:24.738" starttime="20210127 08:54:24.706"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:54:24.738" critical="yes" starttime="20210127 08:54:24.705"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210127 08:54:24.740" starttime="20210127 08:54:24.645"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210127 08:55:08.564" level="INFO">${random} = 53829</msg>
<status status="PASS" endtime="20210127 08:55:08.564" starttime="20210127 08:55:08.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210127 08:55:08.565" level="INFO">${source} = 53829-source</msg>
<status status="PASS" endtime="20210127 08:55:08.565" starttime="20210127 08:55:08.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210127 08:55:08.566" level="INFO">${target} = 53829-target</msg>
<status status="PASS" endtime="20210127 08:55:08.566" starttime="20210127 08:55:08.565"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:08.571" level="INFO">Running command 'ozone sh volume create 53829-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:12.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:12.278" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:55:12.278" starttime="20210127 08:55:08.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:12.279" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:55:12.279" starttime="20210127 08:55:12.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:12.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:12.280" starttime="20210127 08:55:12.280"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:12.280" starttime="20210127 08:55:08.567"></status>
</kw>
<msg timestamp="20210127 08:55:12.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:12.281" starttime="20210127 08:55:08.567"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:12.281" starttime="20210127 08:55:08.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:12.284" level="INFO">Running command 'ozone sh volume create 53829-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:15.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:15.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:55:15.877" starttime="20210127 08:55:12.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:15.878" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:55:15.878" starttime="20210127 08:55:15.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:15.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:15.879" starttime="20210127 08:55:15.878"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:15.879" starttime="20210127 08:55:12.282"></status>
</kw>
<msg timestamp="20210127 08:55:15.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:15.879" starttime="20210127 08:55:12.281"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:15.879" starttime="20210127 08:55:12.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:15.883" level="INFO">Running command 'ozone sh bucket create 53829-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:19.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:19.479" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:55:19.479" starttime="20210127 08:55:15.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:19.480" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:55:19.481" starttime="20210127 08:55:19.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:19.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:19.481" starttime="20210127 08:55:19.481"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:19.481" starttime="20210127 08:55:15.881"></status>
</kw>
<msg timestamp="20210127 08:55:19.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:19.482" starttime="20210127 08:55:15.881"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:19.482" starttime="20210127 08:55:15.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:19.485" level="INFO">Running command 'ozone sh key put 53829-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:25.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:25.659" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:55:25.659" starttime="20210127 08:55:19.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:25.660" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:55:25.660" starttime="20210127 08:55:25.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:25.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:25.661" starttime="20210127 08:55:25.660"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:25.661" starttime="20210127 08:55:19.483"></status>
</kw>
<msg timestamp="20210127 08:55:25.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:25.661" starttime="20210127 08:55:19.483"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:25.661" starttime="20210127 08:55:19.482"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:25.665" level="INFO">Running command 'ozone sh bucket create 53829-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:29.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:29.441" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:55:29.442" starttime="20210127 08:55:25.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:29.443" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:55:29.443" starttime="20210127 08:55:29.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:29.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:29.443" starttime="20210127 08:55:29.443"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:29.444" starttime="20210127 08:55:25.662"></status>
</kw>
<msg timestamp="20210127 08:55:29.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:29.444" starttime="20210127 08:55:25.662"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:29.444" starttime="20210127 08:55:25.661"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:29.448" level="INFO">Running command 'ozone sh bucket link 53829-source/readable-bucket 53829-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:33.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:33.220" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:55:33.220" starttime="20210127 08:55:29.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:33.221" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:55:33.221" starttime="20210127 08:55:33.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:33.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:33.222" starttime="20210127 08:55:33.221"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:33.222" starttime="20210127 08:55:29.445"></status>
</kw>
<msg timestamp="20210127 08:55:33.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:33.222" starttime="20210127 08:55:29.445"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:33.222" starttime="20210127 08:55:29.444"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:33.226" level="INFO">Running command 'ozone sh bucket link 53829-source/readable-bucket 53829-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:36.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:36.799" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:55:36.799" starttime="20210127 08:55:33.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:36.800" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:55:36.800" starttime="20210127 08:55:36.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:36.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:36.801" starttime="20210127 08:55:36.801"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:36.801" starttime="20210127 08:55:33.223"></status>
</kw>
<msg timestamp="20210127 08:55:36.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:36.802" starttime="20210127 08:55:33.223"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:36.802" starttime="20210127 08:55:33.222"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:36.805" level="INFO">Running command 'ozone sh bucket link 53829-source/unreadable-bucket 53829-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:40.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:40.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:55:40.524" starttime="20210127 08:55:36.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:40.525" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:55:40.525" starttime="20210127 08:55:40.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:40.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:40.526" starttime="20210127 08:55:40.525"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:40.526" starttime="20210127 08:55:36.803"></status>
</kw>
<msg timestamp="20210127 08:55:40.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:40.526" starttime="20210127 08:55:36.802"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:40.526" starttime="20210127 08:55:36.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:40.530" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 53829-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:44.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:44.085" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:55:44.085" starttime="20210127 08:55:40.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:44.086" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:55:44.086" starttime="20210127 08:55:44.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:44.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:44.087" starttime="20210127 08:55:44.086"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:44.087" starttime="20210127 08:55:40.527"></status>
</kw>
<msg timestamp="20210127 08:55:44.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:44.088" starttime="20210127 08:55:40.527"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:44.088" starttime="20210127 08:55:40.526"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:44.092" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 53829-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:48.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:48.079" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:55:48.079" starttime="20210127 08:55:44.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:48.080" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:55:48.080" starttime="20210127 08:55:48.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:48.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:48.081" starttime="20210127 08:55:48.080"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:48.081" starttime="20210127 08:55:44.089"></status>
</kw>
<msg timestamp="20210127 08:55:48.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:48.081" starttime="20210127 08:55:44.088"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:48.081" starttime="20210127 08:55:44.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:48.085" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 53829-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:51.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:51.684" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:55:51.684" starttime="20210127 08:55:48.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:51.685" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:55:51.685" starttime="20210127 08:55:51.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:51.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:51.686" starttime="20210127 08:55:51.686"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:51.686" starttime="20210127 08:55:48.082"></status>
</kw>
<msg timestamp="20210127 08:55:51.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:51.686" starttime="20210127 08:55:48.082"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:51.687" starttime="20210127 08:55:48.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:51.690" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 53829-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:55.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:55.380" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:55:55.380" starttime="20210127 08:55:51.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:55.381" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:55:55.381" starttime="20210127 08:55:55.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:55.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:55.382" starttime="20210127 08:55:55.381"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:55.382" starttime="20210127 08:55:51.688"></status>
</kw>
<msg timestamp="20210127 08:55:55.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:55.382" starttime="20210127 08:55:51.687"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:55.382" starttime="20210127 08:55:51.687"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:55.386" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 53829-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:59.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:59.003" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:55:59.003" starttime="20210127 08:55:55.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:59.004" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:55:59.004" starttime="20210127 08:55:59.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:59.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:59.004" starttime="20210127 08:55:59.004"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:59.005" starttime="20210127 08:55:55.383"></status>
</kw>
<msg timestamp="20210127 08:55:59.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:59.005" starttime="20210127 08:55:55.383"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:59.005" starttime="20210127 08:55:55.382"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:59.005" starttime="20210127 08:55:15.880"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:59.005" starttime="20210127 08:55:15.879"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:59.006" starttime="20210127 08:55:08.563"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:59.011" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:59.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:59.014" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:55:59.014" starttime="20210127 08:55:59.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:59.015" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:55:59.016" starttime="20210127 08:55:59.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:59.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:59.016" starttime="20210127 08:55:59.016"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:59.016" starttime="20210127 08:55:59.009"></status>
</kw>
<msg timestamp="20210127 08:55:59.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:59.017" starttime="20210127 08:55:59.008"></status>
</kw>
<msg timestamp="20210127 08:55:59.017" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:55:59.017" starttime="20210127 08:55:59.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:55:59.018" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:55:59.018" starttime="20210127 08:55:59.017"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:59.022" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:55:59.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:55:59.049" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:55:59.049" starttime="20210127 08:55:59.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:55:59.050" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:55:59.050" starttime="20210127 08:55:59.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:55:59.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:55:59.051" starttime="20210127 08:55:59.051"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:59.051" starttime="20210127 08:55:59.020"></status>
</kw>
<msg timestamp="20210127 08:55:59.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:55:59.052" starttime="20210127 08:55:59.019"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:59.052" starttime="20210127 08:55:59.019"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:59.052" starttime="20210127 08:55:59.018"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:59.052" starttime="20210127 08:55:59.007"></status>
</kw>
<status status="PASS" endtime="20210127 08:55:59.052" starttime="20210127 08:55:59.007"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:55:59.056" level="INFO">Running command 'ozone sh bucket link 53829-source/no-such-bucket 53829-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:02.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:02.913" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:02.913" starttime="20210127 08:55:59.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:02.914" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:02.914" starttime="20210127 08:56:02.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:02.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:02.915" starttime="20210127 08:56:02.914"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:02.915" starttime="20210127 08:55:59.053"></status>
</kw>
<msg timestamp="20210127 08:56:02.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:02.915" starttime="20210127 08:55:59.053"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:02.915" starttime="20210127 08:55:59.052"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:02.918" level="INFO">Running command 'ozone sh key list 53829-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:06.564" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 08:56:06.564" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210127 08:56:06.565" starttime="20210127 08:56:02.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:06.566" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210127 08:56:06.566" starttime="20210127 08:56:06.565"></status>
</kw>
<msg timestamp="20210127 08:56:06.566" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210127 08:56:06.566" starttime="20210127 08:56:02.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210127 08:56:06.567" starttime="20210127 08:56:06.566"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:56:06.567" critical="yes" starttime="20210127 08:55:59.006"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:06.573" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:06.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:06.576" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:56:06.576" starttime="20210127 08:56:06.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:06.577" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:56:06.577" starttime="20210127 08:56:06.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:06.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:06.577" starttime="20210127 08:56:06.577"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:06.578" starttime="20210127 08:56:06.571"></status>
</kw>
<msg timestamp="20210127 08:56:06.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:06.578" starttime="20210127 08:56:06.570"></status>
</kw>
<msg timestamp="20210127 08:56:06.578" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:56:06.578" starttime="20210127 08:56:06.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:56:06.579" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:56:06.579" starttime="20210127 08:56:06.578"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:06.583" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:06.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:06.601" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:06.601" starttime="20210127 08:56:06.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:06.602" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:06.602" starttime="20210127 08:56:06.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:06.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:06.602" starttime="20210127 08:56:06.602"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:06.603" starttime="20210127 08:56:06.580"></status>
</kw>
<msg timestamp="20210127 08:56:06.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:06.603" starttime="20210127 08:56:06.580"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:06.603" starttime="20210127 08:56:06.580"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:06.603" starttime="20210127 08:56:06.579"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:06.603" starttime="20210127 08:56:06.569"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:06.603" starttime="20210127 08:56:06.569"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:06.607" level="INFO">Running command 'ozone sh bucket link 53829-source/bucket1 53829-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:09.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:09.968" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:09.968" starttime="20210127 08:56:06.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:09.969" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:09.969" starttime="20210127 08:56:09.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:09.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:09.970" starttime="20210127 08:56:09.969"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:09.970" starttime="20210127 08:56:06.604"></status>
</kw>
<msg timestamp="20210127 08:56:09.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:09.970" starttime="20210127 08:56:06.604"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:09.970" starttime="20210127 08:56:06.604"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:09.974" level="INFO">Running command 'ozone sh bucket create 53829-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:13.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:13.622" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:13.622" starttime="20210127 08:56:09.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:13.623" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:13.623" starttime="20210127 08:56:13.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:13.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:13.624" starttime="20210127 08:56:13.624"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:13.624" starttime="20210127 08:56:09.972"></status>
</kw>
<msg timestamp="20210127 08:56:13.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:13.625" starttime="20210127 08:56:09.971"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:13.625" starttime="20210127 08:56:09.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:13.628" level="INFO">Running command 'ozone sh key put 53829-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:19.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:19.764" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:19.764" starttime="20210127 08:56:13.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:19.765" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:19.766" starttime="20210127 08:56:19.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:19.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:19.766" starttime="20210127 08:56:19.766"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:19.767" starttime="20210127 08:56:13.626"></status>
</kw>
<msg timestamp="20210127 08:56:19.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:19.767" starttime="20210127 08:56:13.625"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:19.767" starttime="20210127 08:56:13.625"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210127 08:56:19.769" level="INFO">${postfix} = 09932</msg>
<status status="PASS" endtime="20210127 08:56:19.769" starttime="20210127 08:56:19.768"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210127 08:56:19.769" level="INFO">${tmpfile} = /tmp/tempkey-09932</msg>
<status status="PASS" endtime="20210127 08:56:19.769" starttime="20210127 08:56:19.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:19.773" level="INFO">Running command 'ozone sh key get -f 53829-target/link1/key1 /tmp/tempkey-09932 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:25.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:25.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:25.420" starttime="20210127 08:56:19.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:25.421" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:25.421" starttime="20210127 08:56:25.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:25.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:25.422" starttime="20210127 08:56:25.421"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:25.422" starttime="20210127 08:56:19.770"></status>
</kw>
<msg timestamp="20210127 08:56:25.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:25.422" starttime="20210127 08:56:19.770"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:25.422" starttime="20210127 08:56:19.769"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210127 08:56:25.425" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-09932 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:25.428" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210127 08:56:25.428" starttime="20210127 08:56:25.423"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:25.432" level="INFO">Running command 'rm -f /tmp/tempkey-09932 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:25.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:25.435" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:25.435" starttime="20210127 08:56:25.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:25.436" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:25.436" starttime="20210127 08:56:25.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:25.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:25.437" starttime="20210127 08:56:25.436"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:25.437" starttime="20210127 08:56:25.429"></status>
</kw>
<msg timestamp="20210127 08:56:25.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:25.437" starttime="20210127 08:56:25.429"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:25.437" starttime="20210127 08:56:25.428"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:56:25.438" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210127 08:56:25.438" starttime="20210127 08:56:25.438"></status>
</kw>
<msg timestamp="20210127 08:56:25.438" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210127 08:56:25.438" starttime="20210127 08:56:19.768"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:56:25.439" starttime="20210127 08:56:25.438"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:25.439" starttime="20210127 08:56:19.767"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:56:25.439" critical="yes" starttime="20210127 08:56:06.568"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:25.445" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:25.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:25.447" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:56:25.447" starttime="20210127 08:56:25.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:25.448" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:56:25.448" starttime="20210127 08:56:25.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:25.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:25.449" starttime="20210127 08:56:25.448"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:25.449" starttime="20210127 08:56:25.442"></status>
</kw>
<msg timestamp="20210127 08:56:25.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:25.449" starttime="20210127 08:56:25.442"></status>
</kw>
<msg timestamp="20210127 08:56:25.450" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:56:25.450" starttime="20210127 08:56:25.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:56:25.450" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:56:25.450" starttime="20210127 08:56:25.450"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:25.454" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:25.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:25.473" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:25.473" starttime="20210127 08:56:25.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:25.474" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:25.474" starttime="20210127 08:56:25.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:25.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:25.474" starttime="20210127 08:56:25.474"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:25.475" starttime="20210127 08:56:25.452"></status>
</kw>
<msg timestamp="20210127 08:56:25.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:25.475" starttime="20210127 08:56:25.452"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:25.475" starttime="20210127 08:56:25.451"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:25.475" starttime="20210127 08:56:25.451"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:25.475" starttime="20210127 08:56:25.441"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:25.475" starttime="20210127 08:56:25.441"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:25.480" level="INFO">Running command 'ozone sh key put 53829-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:31.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:31.322" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:31.322" starttime="20210127 08:56:25.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:31.323" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:31.323" starttime="20210127 08:56:31.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:31.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:31.324" starttime="20210127 08:56:31.323"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:31.324" starttime="20210127 08:56:25.477"></status>
</kw>
<msg timestamp="20210127 08:56:31.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:31.324" starttime="20210127 08:56:25.476"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:31.325" starttime="20210127 08:56:25.476"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210127 08:56:31.326" level="INFO">${postfix} = 30374</msg>
<status status="PASS" endtime="20210127 08:56:31.326" starttime="20210127 08:56:31.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210127 08:56:31.327" level="INFO">${tmpfile} = /tmp/tempkey-30374</msg>
<status status="PASS" endtime="20210127 08:56:31.327" starttime="20210127 08:56:31.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:31.331" level="INFO">Running command 'ozone sh key get -f 53829-source/bucket1/key2 /tmp/tempkey-30374 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:36.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:36.487" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:36.487" starttime="20210127 08:56:31.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:36.488" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:36.488" starttime="20210127 08:56:36.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:36.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:36.489" starttime="20210127 08:56:36.489"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:36.489" starttime="20210127 08:56:31.328"></status>
</kw>
<msg timestamp="20210127 08:56:36.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:36.490" starttime="20210127 08:56:31.328"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:36.490" starttime="20210127 08:56:31.327"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210127 08:56:36.492" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-30374 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:36.495" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210127 08:56:36.495" starttime="20210127 08:56:36.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:36.499" level="INFO">Running command 'rm -f /tmp/tempkey-30374 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:36.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:36.502" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:36.502" starttime="20210127 08:56:36.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:36.503" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:36.503" starttime="20210127 08:56:36.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:36.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:36.504" starttime="20210127 08:56:36.503"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:36.504" starttime="20210127 08:56:36.496"></status>
</kw>
<msg timestamp="20210127 08:56:36.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:36.504" starttime="20210127 08:56:36.496"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:36.504" starttime="20210127 08:56:36.495"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:56:36.505" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210127 08:56:36.505" starttime="20210127 08:56:36.505"></status>
</kw>
<msg timestamp="20210127 08:56:36.505" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210127 08:56:36.505" starttime="20210127 08:56:31.325"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:56:36.506" starttime="20210127 08:56:36.505"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:36.506" starttime="20210127 08:56:31.325"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:56:36.506" critical="yes" starttime="20210127 08:56:25.440"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:36.512" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:36.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:36.516" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:56:36.516" starttime="20210127 08:56:36.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:36.517" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:56:36.517" starttime="20210127 08:56:36.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:36.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:36.518" starttime="20210127 08:56:36.517"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:36.518" starttime="20210127 08:56:36.509"></status>
</kw>
<msg timestamp="20210127 08:56:36.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:36.518" starttime="20210127 08:56:36.509"></status>
</kw>
<msg timestamp="20210127 08:56:36.518" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:56:36.519" starttime="20210127 08:56:36.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:56:36.519" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:56:36.519" starttime="20210127 08:56:36.519"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:36.523" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:36.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:36.546" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:36.546" starttime="20210127 08:56:36.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:36.547" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:36.547" starttime="20210127 08:56:36.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:36.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:36.548" starttime="20210127 08:56:36.547"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:36.548" starttime="20210127 08:56:36.521"></status>
</kw>
<msg timestamp="20210127 08:56:36.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:36.548" starttime="20210127 08:56:36.520"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:36.549" starttime="20210127 08:56:36.520"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:36.549" starttime="20210127 08:56:36.519"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:36.549" starttime="20210127 08:56:36.508"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:36.549" starttime="20210127 08:56:36.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:36.553" level="INFO">Running command 'ozone sh key list 53829-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:40.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:40.177" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210127 08:56:40.177" starttime="20210127 08:56:36.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:40.179" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210127 08:56:40.179" starttime="20210127 08:56:40.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:40.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:40.180" starttime="20210127 08:56:40.179"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:40.181" starttime="20210127 08:56:36.550"></status>
</kw>
<msg timestamp="20210127 08:56:40.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:40.181" starttime="20210127 08:56:36.550"></status>
</kw>
<msg timestamp="20210127 08:56:40.181" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210127 08:56:40.181" starttime="20210127 08:56:36.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:40.186" level="INFO">Running command 'ozone sh key list 53829-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:43.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:43.965" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210127 08:56:43.966" starttime="20210127 08:56:40.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:43.967" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210127 08:56:43.967" starttime="20210127 08:56:43.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:43.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:43.968" starttime="20210127 08:56:43.967"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:43.968" starttime="20210127 08:56:40.183"></status>
</kw>
<msg timestamp="20210127 08:56:43.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:43.968" starttime="20210127 08:56:40.182"></status>
</kw>
<msg timestamp="20210127 08:56:43.968" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210127 08:56:43.968" starttime="20210127 08:56:40.182"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:56:43.969" starttime="20210127 08:56:43.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210127 08:56:43.969" starttime="20210127 08:56:43.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210127 08:56:43.970" starttime="20210127 08:56:43.970"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:56:43.970" critical="yes" starttime="20210127 08:56:36.507"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:43.976" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:43.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:43.979" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:56:43.979" starttime="20210127 08:56:43.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:43.980" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:56:43.980" starttime="20210127 08:56:43.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:43.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:43.981" starttime="20210127 08:56:43.980"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:43.981" starttime="20210127 08:56:43.974"></status>
</kw>
<msg timestamp="20210127 08:56:43.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:43.981" starttime="20210127 08:56:43.973"></status>
</kw>
<msg timestamp="20210127 08:56:43.982" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:56:43.982" starttime="20210127 08:56:43.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:56:43.982" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:56:43.982" starttime="20210127 08:56:43.982"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:43.986" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:44.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:44.005" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:44.005" starttime="20210127 08:56:43.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:44.006" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:44.006" starttime="20210127 08:56:44.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:44.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:44.007" starttime="20210127 08:56:44.007"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:44.007" starttime="20210127 08:56:43.984"></status>
</kw>
<msg timestamp="20210127 08:56:44.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:44.008" starttime="20210127 08:56:43.984"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:44.008" starttime="20210127 08:56:43.983"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:44.008" starttime="20210127 08:56:43.982"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:44.008" starttime="20210127 08:56:43.972"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:44.008" starttime="20210127 08:56:43.972"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:44.013" level="INFO">Running command 'ozone sh key delete 53829-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:47.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:47.704" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:47.704" starttime="20210127 08:56:44.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:47.705" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:47.705" starttime="20210127 08:56:47.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:47.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:47.706" starttime="20210127 08:56:47.706"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:47.707" starttime="20210127 08:56:44.009"></status>
</kw>
<msg timestamp="20210127 08:56:47.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:47.707" starttime="20210127 08:56:44.009"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:47.707" starttime="20210127 08:56:44.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:47.711" level="INFO">Running command 'ozone sh key list 53829-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:51.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:51.361" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210127 08:56:51.361" starttime="20210127 08:56:47.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:51.363" level="INFO">key1</msg>
<status status="PASS" endtime="20210127 08:56:51.363" starttime="20210127 08:56:51.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:51.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:51.364" starttime="20210127 08:56:51.363"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:51.364" starttime="20210127 08:56:47.708"></status>
</kw>
<msg timestamp="20210127 08:56:51.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:51.364" starttime="20210127 08:56:47.708"></status>
</kw>
<msg timestamp="20210127 08:56:51.364" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210127 08:56:51.364" starttime="20210127 08:56:47.707"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210127 08:56:51.365" starttime="20210127 08:56:51.365"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:56:51.365" critical="yes" starttime="20210127 08:56:43.971"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:51.371" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:51.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:51.373" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:56:51.374" starttime="20210127 08:56:51.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:51.374" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:56:51.375" starttime="20210127 08:56:51.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:51.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:51.375" starttime="20210127 08:56:51.375"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:51.376" starttime="20210127 08:56:51.368"></status>
</kw>
<msg timestamp="20210127 08:56:51.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:51.376" starttime="20210127 08:56:51.368"></status>
</kw>
<msg timestamp="20210127 08:56:51.376" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:56:51.376" starttime="20210127 08:56:51.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:56:51.377" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:56:51.377" starttime="20210127 08:56:51.376"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:51.381" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:51.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:51.400" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:51.400" starttime="20210127 08:56:51.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:51.401" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:51.401" starttime="20210127 08:56:51.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:51.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:51.402" starttime="20210127 08:56:51.401"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:51.402" starttime="20210127 08:56:51.378"></status>
</kw>
<msg timestamp="20210127 08:56:51.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:51.402" starttime="20210127 08:56:51.378"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:51.403" starttime="20210127 08:56:51.377"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:51.403" starttime="20210127 08:56:51.377"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:51.403" starttime="20210127 08:56:51.367"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:51.403" starttime="20210127 08:56:51.367"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:51.407" level="INFO">Running command 'ozone sh bucket list 53829-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:55.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:55.494" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210127 08:56:55.494" starttime="20210127 08:56:51.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:55.495" level="INFO">{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:56:02.760Z",
  "modificationTime" : "2021-01-27T08:56:02.760Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:55:40.342Z",
  "modificationTime" : "2021-01-27T08:55:58.803Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:56:09.816Z",
  "modificationTime" : "2021-01-27T08:56:09.816Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:55:33.116Z",
  "modificationTime" : "2021-01-27T08:55:55.259Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:55:36.693Z",
  "modificationTime" : "2021-01-27T08:55:36.693Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210127 08:56:55.495" starttime="20210127 08:56:55.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:55.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:55.496" starttime="20210127 08:56:55.496"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:55.497" starttime="20210127 08:56:51.404"></status>
</kw>
<msg timestamp="20210127 08:56:55.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:55.497" starttime="20210127 08:56:51.404"></status>
</kw>
<msg timestamp="20210127 08:56:55.497" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210127 08:56:55.497" starttime="20210127 08:56:51.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210127 08:56:55.498" starttime="20210127 08:56:55.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210127 08:56:55.498" starttime="20210127 08:56:55.498"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:56:55.498" critical="yes" starttime="20210127 08:56:51.366"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:55.505" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:55.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:55.507" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:56:55.507" starttime="20210127 08:56:55.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:55.508" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:56:55.508" starttime="20210127 08:56:55.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:55.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:55.509" starttime="20210127 08:56:55.509"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:55.509" starttime="20210127 08:56:55.502"></status>
</kw>
<msg timestamp="20210127 08:56:55.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:55.510" starttime="20210127 08:56:55.502"></status>
</kw>
<msg timestamp="20210127 08:56:55.510" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:56:55.510" starttime="20210127 08:56:55.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:56:55.511" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:56:55.511" starttime="20210127 08:56:55.510"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:55.515" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:55.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:55.527" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:55.527" starttime="20210127 08:56:55.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:55.528" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:55.528" starttime="20210127 08:56:55.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:55.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:55.529" starttime="20210127 08:56:55.528"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:55.529" starttime="20210127 08:56:55.512"></status>
</kw>
<msg timestamp="20210127 08:56:55.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:55.529" starttime="20210127 08:56:55.512"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:55.530" starttime="20210127 08:56:55.511"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:55.530" starttime="20210127 08:56:55.511"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:55.530" starttime="20210127 08:56:55.501"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:55.530" starttime="20210127 08:56:55.500"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:55.534" level="INFO">Running command 'ozone sh bucket info 53829-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:59.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:59.313" level="INFO">${output} = 53829-source bucket1</msg>
<status status="PASS" endtime="20210127 08:56:59.313" starttime="20210127 08:56:55.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:59.314" level="INFO">53829-source bucket1</msg>
<status status="PASS" endtime="20210127 08:56:59.314" starttime="20210127 08:56:59.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:59.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:59.315" starttime="20210127 08:56:59.315"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:59.316" starttime="20210127 08:56:55.531"></status>
</kw>
<msg timestamp="20210127 08:56:59.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:59.316" starttime="20210127 08:56:55.531"></status>
</kw>
<msg timestamp="20210127 08:56:59.316" level="INFO">${result} = 53829-source bucket1</msg>
<status status="PASS" endtime="20210127 08:56:59.316" starttime="20210127 08:56:55.530"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210127 08:56:59.317" starttime="20210127 08:56:59.316"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:56:59.317" critical="yes" starttime="20210127 08:56:55.499"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:59.323" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:59.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:59.326" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:56:59.326" starttime="20210127 08:56:59.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:59.327" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:56:59.327" starttime="20210127 08:56:59.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:59.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:59.328" starttime="20210127 08:56:59.327"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:59.328" starttime="20210127 08:56:59.320"></status>
</kw>
<msg timestamp="20210127 08:56:59.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:59.329" starttime="20210127 08:56:59.320"></status>
</kw>
<msg timestamp="20210127 08:56:59.329" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:56:59.329" starttime="20210127 08:56:59.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:56:59.329" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:56:59.330" starttime="20210127 08:56:59.329"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:59.334" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:56:59.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:56:59.345" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:56:59.345" starttime="20210127 08:56:59.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:56:59.347" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:56:59.347" starttime="20210127 08:56:59.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:56:59.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:56:59.348" starttime="20210127 08:56:59.347"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:59.348" starttime="20210127 08:56:59.331"></status>
</kw>
<msg timestamp="20210127 08:56:59.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:56:59.348" starttime="20210127 08:56:59.331"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:59.348" starttime="20210127 08:56:59.330"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:59.348" starttime="20210127 08:56:59.330"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:59.348" starttime="20210127 08:56:59.319"></status>
</kw>
<status status="PASS" endtime="20210127 08:56:59.348" starttime="20210127 08:56:59.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:56:59.352" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 53829-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:03.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:03.035" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:57:03.035" starttime="20210127 08:56:59.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:03.036" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:57:03.036" starttime="20210127 08:57:03.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:03.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:03.037" starttime="20210127 08:57:03.036"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:03.037" starttime="20210127 08:56:59.350"></status>
</kw>
<msg timestamp="20210127 08:57:03.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:03.037" starttime="20210127 08:56:59.349"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:03.038" starttime="20210127 08:56:59.349"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:03.043" level="INFO">Running command 'ozone sh bucket getacl 53829-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:06.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:06.989" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210127 08:57:06.989" starttime="20210127 08:57:03.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:06.990" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210127 08:57:06.990" starttime="20210127 08:57:06.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:06.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:06.991" starttime="20210127 08:57:06.991"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:06.992" starttime="20210127 08:57:03.040"></status>
</kw>
<msg timestamp="20210127 08:57:06.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:06.992" starttime="20210127 08:57:03.039"></status>
</kw>
<msg timestamp="20210127 08:57:06.992" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210127 08:57:06.992" starttime="20210127 08:57:03.039"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:57:06.993" starttime="20210127 08:57:06.992"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:06.993" starttime="20210127 08:57:03.038"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:06.998" level="INFO">Running command 'ozone sh bucket getacl 53829-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:10.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:10.433" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:10.433" starttime="20210127 08:57:06.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:10.434" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:10.434" starttime="20210127 08:57:10.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:10.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:10.435" starttime="20210127 08:57:10.434"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:10.435" starttime="20210127 08:57:06.995"></status>
</kw>
<msg timestamp="20210127 08:57:10.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:10.435" starttime="20210127 08:57:06.995"></status>
</kw>
<msg timestamp="20210127 08:57:10.435" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210127 08:57:10.435" starttime="20210127 08:57:06.994"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:57:10.436" starttime="20210127 08:57:10.436"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:10.436" starttime="20210127 08:57:06.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:10.440" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 53829-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:14.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:14.731" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:57:14.732" starttime="20210127 08:57:10.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:14.733" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210127 08:57:14.733" starttime="20210127 08:57:14.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:14.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:14.734" starttime="20210127 08:57:14.733"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:14.734" starttime="20210127 08:57:10.438"></status>
</kw>
<msg timestamp="20210127 08:57:14.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:14.734" starttime="20210127 08:57:10.437"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:14.734" starttime="20210127 08:57:10.436"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:14.739" level="INFO">Running command 'ozone sh bucket getacl 53829-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:18.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:18.397" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:18.397" starttime="20210127 08:57:14.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:18.399" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:18.399" starttime="20210127 08:57:18.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:18.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:18.400" starttime="20210127 08:57:18.399"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:18.400" starttime="20210127 08:57:14.736"></status>
</kw>
<msg timestamp="20210127 08:57:18.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:18.400" starttime="20210127 08:57:14.736"></status>
</kw>
<msg timestamp="20210127 08:57:18.400" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210127 08:57:18.400" starttime="20210127 08:57:14.735"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:57:18.401" starttime="20210127 08:57:18.400"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:18.401" starttime="20210127 08:57:14.734"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:18.406" level="INFO">Running command 'ozone sh bucket getacl 53829-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:21.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:21.968" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210127 08:57:21.968" starttime="20210127 08:57:18.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:21.969" level="INFO">READ</msg>
<status status="PASS" endtime="20210127 08:57:21.969" starttime="20210127 08:57:21.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:21.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:21.970" starttime="20210127 08:57:21.969"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:21.970" starttime="20210127 08:57:18.403"></status>
</kw>
<msg timestamp="20210127 08:57:21.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:21.970" starttime="20210127 08:57:18.403"></status>
</kw>
<msg timestamp="20210127 08:57:21.970" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210127 08:57:21.970" starttime="20210127 08:57:18.402"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:57:21.971" starttime="20210127 08:57:21.971"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:21.971" starttime="20210127 08:57:18.401"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:57:21.971" critical="yes" starttime="20210127 08:56:59.318"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:21.982" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:21.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:21.984" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:57:21.984" starttime="20210127 08:57:21.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:21.985" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:57:21.985" starttime="20210127 08:57:21.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:21.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:21.986" starttime="20210127 08:57:21.986"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:21.986" starttime="20210127 08:57:21.979"></status>
</kw>
<msg timestamp="20210127 08:57:21.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:21.987" starttime="20210127 08:57:21.978"></status>
</kw>
<msg timestamp="20210127 08:57:21.987" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:57:21.987" starttime="20210127 08:57:21.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:57:21.987" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:57:21.988" starttime="20210127 08:57:21.987"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:21.991" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:22.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:22.011" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:22.011" starttime="20210127 08:57:21.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:22.012" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:22.012" starttime="20210127 08:57:22.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:22.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:22.013" starttime="20210127 08:57:22.012"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:22.013" starttime="20210127 08:57:21.989"></status>
</kw>
<msg timestamp="20210127 08:57:22.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:22.013" starttime="20210127 08:57:21.989"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:22.014" starttime="20210127 08:57:21.988"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:22.014" starttime="20210127 08:57:21.988"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:22.014" starttime="20210127 08:57:21.974"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:22.014" starttime="20210127 08:57:21.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:22.018" level="INFO">Running command 'ozone sh bucket link 53829-source/bucket2 53829-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:25.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:25.775" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:25.775" starttime="20210127 08:57:22.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:25.777" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:25.777" starttime="20210127 08:57:25.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:25.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:25.778" starttime="20210127 08:57:25.777"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:25.784" starttime="20210127 08:57:22.015"></status>
</kw>
<msg timestamp="20210127 08:57:25.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:25.784" starttime="20210127 08:57:22.015"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:25.784" starttime="20210127 08:57:22.014"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:25.788" level="INFO">Running command 'ozone sh bucket create 53829-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:29.355" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 08:57:29.355" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210127 08:57:29.355" starttime="20210127 08:57:25.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:29.356" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210127 08:57:29.356" starttime="20210127 08:57:29.355"></status>
</kw>
<msg timestamp="20210127 08:57:29.356" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210127 08:57:29.356" starttime="20210127 08:57:25.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210127 08:57:29.357" starttime="20210127 08:57:29.357"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:29.361" level="INFO">Running command 'ozone sh bucket create 53829-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:33.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:33.133" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:33.133" starttime="20210127 08:57:29.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:33.134" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:33.134" starttime="20210127 08:57:33.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:33.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:33.135" starttime="20210127 08:57:33.135"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:33.136" starttime="20210127 08:57:29.358"></status>
</kw>
<msg timestamp="20210127 08:57:33.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:33.136" starttime="20210127 08:57:29.358"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:33.136" starttime="20210127 08:57:29.357"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:33.139" level="INFO">Running command 'ozone sh bucket link 53829-source/bucket1 53829-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:36.642" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 08:57:36.642" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210127 08:57:36.642" starttime="20210127 08:57:33.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:36.643" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210127 08:57:36.643" starttime="20210127 08:57:36.643"></status>
</kw>
<msg timestamp="20210127 08:57:36.644" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210127 08:57:36.644" starttime="20210127 08:57:33.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210127 08:57:36.644" starttime="20210127 08:57:36.644"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:57:36.645" critical="yes" starttime="20210127 08:57:21.972"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:36.654" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:36.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:36.657" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:57:36.657" starttime="20210127 08:57:36.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:36.658" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:57:36.658" starttime="20210127 08:57:36.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:36.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:36.659" starttime="20210127 08:57:36.658"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.659" starttime="20210127 08:57:36.649"></status>
</kw>
<msg timestamp="20210127 08:57:36.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:36.659" starttime="20210127 08:57:36.649"></status>
</kw>
<msg timestamp="20210127 08:57:36.659" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:57:36.659" starttime="20210127 08:57:36.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:57:36.660" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:57:36.660" starttime="20210127 08:57:36.660"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:36.664" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:36.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:36.677" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:36.677" starttime="20210127 08:57:36.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:36.678" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:36.678" starttime="20210127 08:57:36.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:36.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:36.678" starttime="20210127 08:57:36.678"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.679" starttime="20210127 08:57:36.662"></status>
</kw>
<msg timestamp="20210127 08:57:36.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:36.679" starttime="20210127 08:57:36.661"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.679" starttime="20210127 08:57:36.661"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.679" starttime="20210127 08:57:36.660"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.679" starttime="20210127 08:57:36.647"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.680" starttime="20210127 08:57:36.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:36.684" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:36.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:36.688" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:36.688" starttime="20210127 08:57:36.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:36.689" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:36.689" starttime="20210127 08:57:36.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:36.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:36.690" starttime="20210127 08:57:36.689"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.690" starttime="20210127 08:57:36.682"></status>
</kw>
<msg timestamp="20210127 08:57:36.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:36.691" starttime="20210127 08:57:36.682"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.691" starttime="20210127 08:57:36.681"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:36.695" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:36.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:36.697" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:57:36.698" starttime="20210127 08:57:36.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:36.698" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:57:36.699" starttime="20210127 08:57:36.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:36.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:36.699" starttime="20210127 08:57:36.699"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.700" starttime="20210127 08:57:36.693"></status>
</kw>
<msg timestamp="20210127 08:57:36.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:36.700" starttime="20210127 08:57:36.692"></status>
</kw>
<msg timestamp="20210127 08:57:36.700" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:57:36.700" starttime="20210127 08:57:36.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:57:36.701" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:57:36.701" starttime="20210127 08:57:36.700"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:36.705" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:36.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:36.715" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:36.715" starttime="20210127 08:57:36.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:36.716" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:36.716" starttime="20210127 08:57:36.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:36.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:36.718" starttime="20210127 08:57:36.717"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.718" starttime="20210127 08:57:36.703"></status>
</kw>
<msg timestamp="20210127 08:57:36.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:36.718" starttime="20210127 08:57:36.702"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.718" starttime="20210127 08:57:36.702"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.718" starttime="20210127 08:57:36.701"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.718" starttime="20210127 08:57:36.691"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:36.718" starttime="20210127 08:57:36.691"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:36.721" level="INFO">Running command 'ozone sh key list 53829-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:40.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:40.339" level="INFO">${output} = {
  "volumeName" : "53829-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-27T08:55:23.077Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210127 08:57:40.339" starttime="20210127 08:57:36.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:40.340" level="INFO">{
  "volumeName" : "53829-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-27T08:55:23.077Z",
  "modificationTime" : "2021-01-27T08:55:25.104Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210127 08:57:40.341" starttime="20210127 08:57:40.340"></status>
</kw>
<msg timestamp="20210127 08:57:40.341" level="INFO">${result} = {
  "volumeName" : "53829-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-01-27T08:55:23.077Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210127 08:57:40.341" starttime="20210127 08:57:36.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210127 08:57:40.341" starttime="20210127 08:57:40.341"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.342" starttime="20210127 08:57:36.680"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.342" starttime="20210127 08:57:36.680"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:57:40.342" critical="yes" starttime="20210127 08:57:36.645"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:40.348" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:40.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:40.351" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:57:40.351" starttime="20210127 08:57:40.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:40.352" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:57:40.352" starttime="20210127 08:57:40.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:40.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:40.353" starttime="20210127 08:57:40.352"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.353" starttime="20210127 08:57:40.345"></status>
</kw>
<msg timestamp="20210127 08:57:40.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:40.353" starttime="20210127 08:57:40.345"></status>
</kw>
<msg timestamp="20210127 08:57:40.353" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:57:40.353" starttime="20210127 08:57:40.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:57:40.354" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:57:40.354" starttime="20210127 08:57:40.353"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:40.358" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:40.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:40.376" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:40.376" starttime="20210127 08:57:40.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:40.377" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:40.377" starttime="20210127 08:57:40.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:40.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:40.378" starttime="20210127 08:57:40.377"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.378" starttime="20210127 08:57:40.356"></status>
</kw>
<msg timestamp="20210127 08:57:40.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:40.378" starttime="20210127 08:57:40.355"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.378" starttime="20210127 08:57:40.355"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.379" starttime="20210127 08:57:40.354"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.379" starttime="20210127 08:57:40.344"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.379" starttime="20210127 08:57:40.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:40.384" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:40.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:40.387" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:40.387" starttime="20210127 08:57:40.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:40.388" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:40.389" starttime="20210127 08:57:40.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:40.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:40.389" starttime="20210127 08:57:40.389"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.389" starttime="20210127 08:57:40.381"></status>
</kw>
<msg timestamp="20210127 08:57:40.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:40.390" starttime="20210127 08:57:40.381"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.390" starttime="20210127 08:57:40.380"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:40.394" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:40.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:40.397" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:57:40.397" starttime="20210127 08:57:40.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:40.398" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:57:40.398" starttime="20210127 08:57:40.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:40.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:40.398" starttime="20210127 08:57:40.398"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.399" starttime="20210127 08:57:40.392"></status>
</kw>
<msg timestamp="20210127 08:57:40.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:40.399" starttime="20210127 08:57:40.391"></status>
</kw>
<msg timestamp="20210127 08:57:40.399" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:57:40.399" starttime="20210127 08:57:40.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:57:40.400" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:57:40.400" starttime="20210127 08:57:40.399"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:40.404" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:40.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:40.435" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:40.435" starttime="20210127 08:57:40.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:40.437" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:40.437" starttime="20210127 08:57:40.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:40.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:40.437" starttime="20210127 08:57:40.437"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.438" starttime="20210127 08:57:40.401"></status>
</kw>
<msg timestamp="20210127 08:57:40.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:40.438" starttime="20210127 08:57:40.401"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.438" starttime="20210127 08:57:40.400"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.438" starttime="20210127 08:57:40.400"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.438" starttime="20210127 08:57:40.390"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:40.438" starttime="20210127 08:57:40.390"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:40.442" level="INFO">Running command 'ozone sh key list 53829-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:43.948" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 08:57:43.948" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 53829-target unreadable-link null</msg>
<status status="PASS" endtime="20210127 08:57:43.948" starttime="20210127 08:57:40.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:43.949" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 53829-target unreadable-link null</msg>
<status status="PASS" endtime="20210127 08:57:43.949" starttime="20210127 08:57:43.948"></status>
</kw>
<msg timestamp="20210127 08:57:43.949" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 53829-target unreadable-link null</msg>
<status status="PASS" endtime="20210127 08:57:43.949" starttime="20210127 08:57:40.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210127 08:57:43.950" starttime="20210127 08:57:43.950"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:43.950" starttime="20210127 08:57:40.379"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:43.950" starttime="20210127 08:57:40.379"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:57:43.951" critical="yes" starttime="20210127 08:57:40.343"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:43.957" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:43.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:43.960" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:57:43.960" starttime="20210127 08:57:43.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:43.961" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:57:43.961" starttime="20210127 08:57:43.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:43.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:43.962" starttime="20210127 08:57:43.961"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:43.962" starttime="20210127 08:57:43.954"></status>
</kw>
<msg timestamp="20210127 08:57:43.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:43.962" starttime="20210127 08:57:43.954"></status>
</kw>
<msg timestamp="20210127 08:57:43.963" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:57:43.963" starttime="20210127 08:57:43.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:57:43.963" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:57:43.963" starttime="20210127 08:57:43.963"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:43.967" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:43.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:43.993" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:43.993" starttime="20210127 08:57:43.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:43.994" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:43.994" starttime="20210127 08:57:43.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:43.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:43.995" starttime="20210127 08:57:43.995"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:43.996" starttime="20210127 08:57:43.965"></status>
</kw>
<msg timestamp="20210127 08:57:43.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:43.996" starttime="20210127 08:57:43.965"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:43.996" starttime="20210127 08:57:43.964"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:43.996" starttime="20210127 08:57:43.964"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:43.996" starttime="20210127 08:57:43.953"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:43.996" starttime="20210127 08:57:43.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:44.002" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:44.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:44.005" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:44.005" starttime="20210127 08:57:43.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:44.006" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:44.006" starttime="20210127 08:57:44.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:44.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:44.007" starttime="20210127 08:57:44.006"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:44.007" starttime="20210127 08:57:43.998"></status>
</kw>
<msg timestamp="20210127 08:57:44.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:44.008" starttime="20210127 08:57:43.998"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:44.008" starttime="20210127 08:57:43.998"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:44.012" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:44.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:44.014" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:57:44.014" starttime="20210127 08:57:44.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:44.015" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:57:44.015" starttime="20210127 08:57:44.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:44.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:44.016" starttime="20210127 08:57:44.016"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:44.016" starttime="20210127 08:57:44.009"></status>
</kw>
<msg timestamp="20210127 08:57:44.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:44.017" starttime="20210127 08:57:44.009"></status>
</kw>
<msg timestamp="20210127 08:57:44.017" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:57:44.017" starttime="20210127 08:57:44.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:57:44.018" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:57:44.018" starttime="20210127 08:57:44.017"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:44.021" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:44.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:44.044" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:44.045" starttime="20210127 08:57:44.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:44.046" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:44.046" starttime="20210127 08:57:44.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:44.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:44.047" starttime="20210127 08:57:44.046"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:44.047" starttime="20210127 08:57:44.019"></status>
</kw>
<msg timestamp="20210127 08:57:44.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:44.047" starttime="20210127 08:57:44.019"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:44.047" starttime="20210127 08:57:44.018"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:44.047" starttime="20210127 08:57:44.018"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:44.048" starttime="20210127 08:57:44.008"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:44.048" starttime="20210127 08:57:44.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:44.052" level="INFO">Running command 'ozone sh bucket info 53829-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:47.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:47.667" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210127 08:57:47.667" starttime="20210127 08:57:44.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:47.668" level="INFO">{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:55:40.342Z",
  "modificationTime" : "2021-01-27T08:55:58.803Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210127 08:57:47.668" starttime="20210127 08:57:47.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:47.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:47.669" starttime="20210127 08:57:47.668"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:47.669" starttime="20210127 08:57:44.049"></status>
</kw>
<msg timestamp="20210127 08:57:47.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:47.669" starttime="20210127 08:57:44.048"></status>
</kw>
<msg timestamp="20210127 08:57:47.670" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210127 08:57:47.670" starttime="20210127 08:57:44.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210127 08:57:47.670" starttime="20210127 08:57:47.670"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210127 08:57:47.671" starttime="20210127 08:57:47.670"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:47.674" level="INFO">Running command 'ozone sh key list 53829-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:51.258" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 08:57:51.258" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 53829-source unreadable-bucket </msg>
<status status="PASS" endtime="20210127 08:57:51.258" starttime="20210127 08:57:47.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:51.259" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 53829-source unreadable-bucket </msg>
<status status="PASS" endtime="20210127 08:57:51.259" starttime="20210127 08:57:51.258"></status>
</kw>
<msg timestamp="20210127 08:57:51.259" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 53829-source unreadable-bucket </msg>
<status status="PASS" endtime="20210127 08:57:51.259" starttime="20210127 08:57:47.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210127 08:57:51.260" starttime="20210127 08:57:51.259"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:51.260" starttime="20210127 08:57:43.997"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:51.260" starttime="20210127 08:57:43.997"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:57:51.260" critical="yes" starttime="20210127 08:57:43.952"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:51.267" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:51.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:51.269" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:57:51.269" starttime="20210127 08:57:51.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:51.270" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:57:51.270" starttime="20210127 08:57:51.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:51.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:51.271" starttime="20210127 08:57:51.271"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:51.272" starttime="20210127 08:57:51.264"></status>
</kw>
<msg timestamp="20210127 08:57:51.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:51.272" starttime="20210127 08:57:51.264"></status>
</kw>
<msg timestamp="20210127 08:57:51.272" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:57:51.272" starttime="20210127 08:57:51.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:57:51.273" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:57:51.273" starttime="20210127 08:57:51.272"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:51.277" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:51.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:51.309" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:51.309" starttime="20210127 08:57:51.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:51.310" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:51.311" starttime="20210127 08:57:51.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:51.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:51.311" starttime="20210127 08:57:51.311"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:51.312" starttime="20210127 08:57:51.274"></status>
</kw>
<msg timestamp="20210127 08:57:51.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:51.312" starttime="20210127 08:57:51.274"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:51.312" starttime="20210127 08:57:51.273"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:51.312" starttime="20210127 08:57:51.273"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:51.312" starttime="20210127 08:57:51.263"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:51.312" starttime="20210127 08:57:51.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:51.316" level="INFO">Running command 'ozone sh bucket link 53829-target/loop1 53829-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:55.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:55.085" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:55.086" starttime="20210127 08:57:51.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:55.087" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:55.087" starttime="20210127 08:57:55.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:55.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:55.088" starttime="20210127 08:57:55.087"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:55.088" starttime="20210127 08:57:51.314"></status>
</kw>
<msg timestamp="20210127 08:57:55.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:55.088" starttime="20210127 08:57:51.313"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:55.088" starttime="20210127 08:57:51.312"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:55.092" level="INFO">Running command 'ozone sh bucket link 53829-target/loop2 53829-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:57:58.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:57:58.651" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:57:58.651" starttime="20210127 08:57:55.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:57:58.652" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:57:58.652" starttime="20210127 08:57:58.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:57:58.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:57:58.653" starttime="20210127 08:57:58.653"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:58.653" starttime="20210127 08:57:55.089"></status>
</kw>
<msg timestamp="20210127 08:57:58.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:57:58.654" starttime="20210127 08:57:55.089"></status>
</kw>
<status status="PASS" endtime="20210127 08:57:58.654" starttime="20210127 08:57:55.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:57:58.658" level="INFO">Running command 'ozone sh bucket link 53829-target/loop3 53829-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:02.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:58:02.376" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:58:02.376" starttime="20210127 08:57:58.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:02.377" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:58:02.377" starttime="20210127 08:58:02.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:58:02.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:58:02.378" starttime="20210127 08:58:02.377"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:02.378" starttime="20210127 08:57:58.655"></status>
</kw>
<msg timestamp="20210127 08:58:02.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:58:02.378" starttime="20210127 08:57:58.655"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:02.379" starttime="20210127 08:57:58.654"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:58:02.382" level="INFO">Running command 'ozone sh key list 53829-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:05.801" level="INFO">${rc} = 255</msg>
<msg timestamp="20210127 08:58:05.801" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210127 08:58:05.801" starttime="20210127 08:58:02.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:05.802" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210127 08:58:05.802" starttime="20210127 08:58:05.801"></status>
</kw>
<msg timestamp="20210127 08:58:05.803" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210127 08:58:05.803" starttime="20210127 08:58:02.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210127 08:58:05.803" starttime="20210127 08:58:05.803"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:58:05.804" critical="yes" starttime="20210127 08:57:51.261"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:58:05.810" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:05.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:58:05.813" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:58:05.813" starttime="20210127 08:58:05.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:05.814" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:58:05.814" starttime="20210127 08:58:05.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:58:05.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:58:05.815" starttime="20210127 08:58:05.814"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:05.815" starttime="20210127 08:58:05.807"></status>
</kw>
<msg timestamp="20210127 08:58:05.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:58:05.815" starttime="20210127 08:58:05.807"></status>
</kw>
<msg timestamp="20210127 08:58:05.816" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:58:05.816" starttime="20210127 08:58:05.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:58:05.817" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:58:05.817" starttime="20210127 08:58:05.816"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:58:05.820" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:05.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:58:05.845" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:58:05.845" starttime="20210127 08:58:05.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:05.846" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:58:05.846" starttime="20210127 08:58:05.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:58:05.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:58:05.847" starttime="20210127 08:58:05.846"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:05.847" starttime="20210127 08:58:05.818"></status>
</kw>
<msg timestamp="20210127 08:58:05.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:58:05.847" starttime="20210127 08:58:05.818"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:05.847" starttime="20210127 08:58:05.817"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:05.848" starttime="20210127 08:58:05.817"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:05.848" starttime="20210127 08:58:05.806"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:05.848" starttime="20210127 08:58:05.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:58:05.852" level="INFO">Running command 'ozone sh bucket link 53829-source/bucket1 53829-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:09.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:58:09.088" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:58:09.088" starttime="20210127 08:58:05.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:09.090" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:58:09.090" starttime="20210127 08:58:09.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:58:09.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:58:09.090" starttime="20210127 08:58:09.090"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:09.091" starttime="20210127 08:58:05.849"></status>
</kw>
<msg timestamp="20210127 08:58:09.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:58:09.091" starttime="20210127 08:58:05.849"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:09.091" starttime="20210127 08:58:05.848"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:58:09.095" level="INFO">Running command 'ozone sh key put 53829-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:15.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:58:15.026" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:58:15.026" starttime="20210127 08:58:09.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:15.027" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:58:15.027" starttime="20210127 08:58:15.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:58:15.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:58:15.028" starttime="20210127 08:58:15.027"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:15.028" starttime="20210127 08:58:09.092"></status>
</kw>
<msg timestamp="20210127 08:58:15.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:58:15.028" starttime="20210127 08:58:09.092"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:15.029" starttime="20210127 08:58:09.091"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210127 08:58:15.031" level="INFO">${postfix} = 57721</msg>
<status status="PASS" endtime="20210127 08:58:15.031" starttime="20210127 08:58:15.030"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210127 08:58:15.032" level="INFO">${tmpfile} = /tmp/tempkey-57721</msg>
<status status="PASS" endtime="20210127 08:58:15.032" starttime="20210127 08:58:15.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:58:15.035" level="INFO">Running command 'ozone sh key get -f 53829-target/link1/key3 /tmp/tempkey-57721 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:20.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:58:20.830" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:58:20.830" starttime="20210127 08:58:15.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:20.832" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:58:20.832" starttime="20210127 08:58:20.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:58:20.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:58:20.833" starttime="20210127 08:58:20.833"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:20.834" starttime="20210127 08:58:15.033"></status>
</kw>
<msg timestamp="20210127 08:58:20.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:58:20.834" starttime="20210127 08:58:15.032"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:20.834" starttime="20210127 08:58:15.032"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210127 08:58:20.837" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-57721 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:20.839" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210127 08:58:20.840" starttime="20210127 08:58:20.834"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:58:20.843" level="INFO">Running command 'rm -f /tmp/tempkey-57721 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:20.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:58:20.846" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:58:20.846" starttime="20210127 08:58:20.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:20.847" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:58:20.847" starttime="20210127 08:58:20.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:58:20.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:58:20.848" starttime="20210127 08:58:20.847"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:20.848" starttime="20210127 08:58:20.841"></status>
</kw>
<msg timestamp="20210127 08:58:20.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:58:20.848" starttime="20210127 08:58:20.841"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:20.849" starttime="20210127 08:58:20.840"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210127 08:58:20.849" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210127 08:58:20.849" starttime="20210127 08:58:20.849"></status>
</kw>
<msg timestamp="20210127 08:58:20.850" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210127 08:58:20.850" starttime="20210127 08:58:15.029"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210127 08:58:20.850" starttime="20210127 08:58:20.850"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:20.851" starttime="20210127 08:58:15.029"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:58:20.851" critical="yes" starttime="20210127 08:58:05.804"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:58:20.857" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:20.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:58:20.859" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210127 08:58:20.859" starttime="20210127 08:58:20.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:20.860" level="INFO">scm</msg>
<status status="PASS" endtime="20210127 08:58:20.861" starttime="20210127 08:58:20.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:58:20.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:58:20.862" starttime="20210127 08:58:20.861"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:20.862" starttime="20210127 08:58:20.854"></status>
</kw>
<msg timestamp="20210127 08:58:20.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:58:20.862" starttime="20210127 08:58:20.854"></status>
</kw>
<msg timestamp="20210127 08:58:20.862" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210127 08:58:20.862" starttime="20210127 08:58:20.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210127 08:58:20.863" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210127 08:58:20.863" starttime="20210127 08:58:20.862"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:58:20.867" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:20.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:58:20.898" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:58:20.898" starttime="20210127 08:58:20.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:20.899" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:58:20.899" starttime="20210127 08:58:20.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:58:20.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:58:20.900" starttime="20210127 08:58:20.900"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:20.901" starttime="20210127 08:58:20.864"></status>
</kw>
<msg timestamp="20210127 08:58:20.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:58:20.901" starttime="20210127 08:58:20.864"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:20.901" starttime="20210127 08:58:20.863"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:20.901" starttime="20210127 08:58:20.863"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:20.901" starttime="20210127 08:58:20.853"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:20.901" starttime="20210127 08:58:20.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:58:20.905" level="INFO">Running command 'ozone sh bucket delete 53829-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:24.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:58:24.365" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210127 08:58:24.365" starttime="20210127 08:58:20.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:24.367" level="INFO"></msg>
<status status="PASS" endtime="20210127 08:58:24.367" starttime="20210127 08:58:24.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:58:24.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:58:24.368" starttime="20210127 08:58:24.367"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:24.368" starttime="20210127 08:58:20.902"></status>
</kw>
<msg timestamp="20210127 08:58:24.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:58:24.368" starttime="20210127 08:58:20.902"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:24.368" starttime="20210127 08:58:20.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:58:24.372" level="INFO">Running command 'ozone sh bucket list 53829-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:28.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:58:28.233" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T...</msg>
<status status="PASS" endtime="20210127 08:58:28.233" starttime="20210127 08:58:24.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:28.234" level="INFO">{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:57:32.895Z",
  "modificationTime" : "2021-01-27T08:57:32.895Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:56:02.760Z",
  "modificationTime" : "2021-01-27T08:56:02.760Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:55:40.342Z",
  "modificationTime" : "2021-01-27T08:55:58.803Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:57:25.564Z",
  "modificationTime" : "2021-01-27T08:57:25.564Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:58:08.921Z",
  "modificationTime" : "2021-01-27T08:58:08.921Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:58:02.212Z",
  "modificationTime" : "2021-01-27T08:58:02.212Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:57:54.905Z",
  "modificationTime" : "2021-01-27T08:57:54.905Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:57:58.561Z",
  "modificationTime" : "2021-01-27T08:57:58.561Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:55:33.116Z",
  "modificationTime" : "2021-01-27T08:55:55.259Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T08:55:36.693Z",
  "modificationTime" : "2021-01-27T08:55:36.693Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53829-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210127 08:58:28.234" starttime="20210127 08:58:28.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:58:28.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:58:28.235" starttime="20210127 08:58:28.235"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:28.235" starttime="20210127 08:58:24.369"></status>
</kw>
<msg timestamp="20210127 08:58:28.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:58:28.236" starttime="20210127 08:58:24.369"></status>
</kw>
<msg timestamp="20210127 08:58:28.236" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "53829-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-01-27T...</msg>
<status status="PASS" endtime="20210127 08:58:28.236" starttime="20210127 08:58:24.368"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210127 08:58:28.237" starttime="20210127 08:58:28.236"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210127 08:58:28.240" level="INFO">Running command 'ozone sh key list 53829-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210127 08:58:31.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210127 08:58:31.984" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210127 08:58:31.984" starttime="20210127 08:58:28.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210127 08:58:31.985" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210127 08:58:31.985" starttime="20210127 08:58:31.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210127 08:58:31.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210127 08:58:31.986" starttime="20210127 08:58:31.985"></status>
</kw>
<status status="PASS" endtime="20210127 08:58:31.986" starttime="20210127 08:58:28.238"></status>
</kw>
<msg timestamp="20210127 08:58:31.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210127 08:58:31.986" starttime="20210127 08:58:28.237"></status>
</kw>
<msg timestamp="20210127 08:58:31.987" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210127 08:58:31.987" starttime="20210127 08:58:28.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210127 08:58:31.987" starttime="20210127 08:58:31.987"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210127 08:58:31.987" critical="yes" starttime="20210127 08:58:20.851"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210127 08:58:31.990" starttime="20210127 08:55:08.506"></status>
</suite>
<status status="PASS" elapsedtime="236100" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
